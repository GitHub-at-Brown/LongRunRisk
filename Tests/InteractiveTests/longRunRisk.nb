(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    386466,       8475]
NotebookOptionsPosition[    326223,       7425]
NotebookOutlinePosition[    372694,       8283]
CellTagsIndexPosition[    372651,       8280]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"Quit", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.890497521412341*^9, 3.890497523049814*^9}, {
   3.890504943896141*^9, 3.8905049500189657`*^9}, 3.89050587359697*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"a594d500-6732-49d5-a292-97f7f92537a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quiet", "[", 
   RowBox[{
   "PacletUninstall", "[", "\"\<FernandoDuarte/LongRunRisk\>\"", "]"}], "]"}],
   ";"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"e8709f8b-5d0a-453b-8ca3-f069bdd72a68"],

Cell[BoxData[{
 RowBox[{"testFileName", "=", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DirectoryName", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "1"}], "]"}], ",", 
     RowBox[{
      RowBox[{"FileBaseName", "[", 
       RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", 
      "\"\<.wlt\>\""}]}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"pacletDir", "=", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{"testFileName", ",", "2"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FileNames", "[", "testFileName", "]"}], "===", 
    RowBox[{"{", "}"}]}], ",", "Nothing", ",", 
   RowBox[{"DeleteFile", "[", "testFileName", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8890661685133457`*^9, 3.889066220685074*^9}, {
   3.8890662555512333`*^9, 3.889066299901951*^9}, {3.889066581166473*^9, 
   3.8890665847967653`*^9}, {3.889066731765956*^9, 3.889066745674687*^9}, {
   3.889431410824514*^9, 3.88943144002302*^9}, 3.889502968269744*^9, {
   3.889998928469849*^9, 3.889998928670561*^9}, {3.890676553021196*^9, 
   3.890676564028514*^9}, 3.890676636594749*^9, {3.890679618620262*^9, 
   3.89067961902995*^9}, {3.8908254134370813`*^9, 3.890825413876319*^9}, {
   3.890825459205497*^9, 3.890825473041605*^9}, {3.890825503118348*^9, 
   3.8908255374530487`*^9}, {3.891021675325671*^9, 3.891021675545487*^9}, {
   3.8911588731924877`*^9, 3.891158877904397*^9}, {3.8911592499395514`*^9, 
   3.8911592502376633`*^9}, {3.891244978572403*^9, 3.8912449817448387`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"0c7accec-d8a0-48e0-a9a8-3514c663c5f4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<PacletTools`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"built", "=", 
  RowBox[{"PacletBuild", "[", "pacletDir", "]"}]}]}], "Input",
 CellChangeTimes->{
  3.890551821031066*^9, {3.890551900596265*^9, 3.890551947889617*^9}, {
   3.890552042268401*^9, 3.8905520508788013`*^9}, {3.8905522165629272`*^9, 
   3.890552248376504*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"b51e613a-8e54-4b2c-9cf9-656754c31877"],

Cell[BoxData["$ContextPath"], "Input",
 CellChangeTimes->{{3.8947875954425163`*^9, 3.894787600726342*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"2747c74e-d130-47ad-b04b-d321d55ac743"],

Cell[CellGroupData[{

Cell["CI Tests", "Subsection",
 CellChangeTimes->{{3.8895791922306013`*^9, 3.889579196409403*^9}, {
  3.889905620469079*^9, 3.8899056207707977`*^9}, {3.889967624152501*^9, 
  3.889967626012704*^9}},ExpressionUUID->"a85393fb-271e-4f16-88bb-\
af662714305d"],

Cell[, "Input",ExpressionUUID->"029c83ff-6711-427f-822e-1435729b5a57"],

Cell[, "Input",ExpressionUUID->"2e930d4f-e2a8-48ca-b0b5-1d584d8c6290"],

Cell[, "Input",ExpressionUUID->"add2b32b-4945-4b31-9ea0-9e361d381e02"]
}, Closed]],

Cell[CellGroupData[{

Cell["Interactive Tests", "Subsection",
 CellChangeTimes->{{3.889905622471089*^9, 3.889905629759961*^9}, {
  3.889972063478182*^9, 
  3.889972065236586*^9}},ExpressionUUID->"6430e8db-a2e6-4116-803b-\
d1b396c6416e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "when", " ", "no", " ", "paclet", " ", "dependencies", " ", "are", " ", 
    "installed"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Quiet", "[", 
     RowBox[{"PacletUninstall", "[", 
      RowBox[{
      "\"\<PacletizedResourceFunctions\>\"", "\[Rule]", "\"\<1.0\>\""}], 
      "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Quiet", "[", 
     RowBox[{"PacletUninstall", "[", 
      RowBox[{"\"\<MaTeX\>\"", "\[Rule]", "\"\<1.7.9\>\""}], "]"}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8905514540580378`*^9, 3.890551474973082*^9}, {
   3.890551507910462*^9, 3.8905516378898897`*^9}, {3.890551780104455*^9, 
   3.8905517805507593`*^9}, {3.890552391149941*^9, 3.890552425675847*^9}, {
   3.8905547195950537`*^9, 3.8905547197978563`*^9}, {3.890556494721118*^9, 
   3.890556494961019*^9}, 3.8905568029552517`*^9, {3.895831066152227*^9, 
   3.895831078089184*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"52fe5eb2-34a2-4133-9c1d-254984a84356"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quiet", "[", 
   RowBox[{
   "PacletUninstall", "[", "\"\<FernandoDuarte/LongRunRisk\>\"", "]"}], "]"}],
   ";"}]], "Input",
 CellChangeTimes->{{3.8905514540580378`*^9, 3.890551474973082*^9}, {
   3.890551507910462*^9, 3.8905516378898897`*^9}, {3.890551780104455*^9, 
   3.8905517805507593`*^9}, {3.890552391149941*^9, 3.890552425675847*^9}, {
   3.8905547195950537`*^9, 3.8905547197978563`*^9}, {3.890556494721118*^9, 
   3.890556494961019*^9}, 3.8905568029552517`*^9, {3.895831066152227*^9, 
   3.895831078089184*^9}, 3.895831262391428*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"56a40a92-467d-425a-8930-38e6b9e56ea5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"installed", "=", 
   RowBox[{"PacletInstall", "[", 
    RowBox[{"built", "[", "\"\<PacletArchive\>\"", "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8905514540580378`*^9, 3.890551474973082*^9}, {
   3.890551507910462*^9, 3.8905516378898897`*^9}, {3.890551780104455*^9, 
   3.8905517805507593`*^9}, {3.890552391149941*^9, 3.890552425675847*^9}, {
   3.8905547195950537`*^9, 3.8905547197978563`*^9}, {3.890556494721118*^9, 
   3.890556494961019*^9}, 3.8905568029552517`*^9, {3.895831066152227*^9, 
   3.895831078089184*^9}, 3.895831262391428*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"4bae88dd-29c4-4e6b-9b91-40b82b4b6ec9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<FernandoDuarte`LongRunRisk`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"MemberQ", "[", 
      RowBox[{"$ContextPath", ",", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "\"\<FernandoDuarte`LongRunRisk`\>\"", ",", "\"\<MaTeX`\>\"", ",", 
      "\"\<PacletizedResourceFunctions`\>\""}], "}"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"Names", "[", "\"\<FernandoDuarte`LongRunRisk`*\>\"", "]"}], 
       ",", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"\"\<Growth\>\"", ",", "\"\<Models\>\""}], "}"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"Names", "[", "\"\<PacletizedResourceFunctions`*\>\"", "]"}], 
       ",", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"\"\<NeedsDefinitions\>\"", ",", "\"\<SetSymbolsContext\>\""}], 
     "}"}]}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"Names", "[", "\"\<MaTeX`*\>\"", "]"}], ",", "#"}], "]"}], 
     "&"}], "/@", 
    RowBox[{"{", "\"\<MaTeX\>\"", "}"}]}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Models", "[", "\"\<BKY\>\"", "]"}], "[", "\"\<shortname\>\"", 
   "]"}], "==", "\"\<BKY\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Head", "@", 
   RowBox[{"MaTeX", "[", "\"\<x^2\>\"", "]"}]}], "===", 
  "Graphics"}], "\[IndentingNewLine]", 
 RowBox[{"Not", "[", 
  RowBox[{
   RowBox[{"Information", "[", 
    RowBox[{"SetSymbolsContext", ",", "\"\<Definitions\>\""}], "]"}], "===", 
   "None"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Not", "[", 
  RowBox[{
   RowBox[{"Information", "[", 
    RowBox[{"NeedsDefinitions", ",", "\"\<Definitions\>\""}], "]"}], "===", 
   "None"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8905514540580378`*^9, 3.890551474973082*^9}, {
   3.890551507910462*^9, 3.8905516378898897`*^9}, {3.890551780104455*^9, 
   3.8905517805507593`*^9}, {3.890552391149941*^9, 3.890552425675847*^9}, {
   3.8905547195950537`*^9, 3.8905547197978563`*^9}, {3.890556494721118*^9, 
   3.890556494961019*^9}, 3.8905568029552517`*^9, 3.895831066152227*^9, {
   3.90818151498253*^9, 
   3.908181516762385*^9}},ExpressionUUID->"061042e2-834a-4a50-9339-\
40bb9898a8ff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "when", " ", "paclet", " ", "dependencies", " ", "are", " ", "already", 
    " ", "installed"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Quiet", "@", 
     RowBox[{
     "PacletUninstall", "[", "\"\<FernandoDuarte/LongRunRisk\>\"", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"installed", "=", 
     RowBox[{"PacletInstall", "[", 
      RowBox[{"built", "[", "\"\<PacletArchive\>\"", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Needs", "[", "\"\<FernandoDuarte`LongRunRisk`\>\"", "]"}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"$ContextPath", ",", "#"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<FernandoDuarte`LongRunRisk`\>\"", ",", "\"\<MaTeX`\>\"", ",", 
        "\"\<PacletizedResourceFunctions`\>\""}], "}"}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"Names", "[", "\"\<FernandoDuarte`LongRunRisk`*\>\"", "]"}], 
         ",", "#"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<Growth\>\"", ",", "\"\<Models\>\""}], "}"}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"Names", "[", "\"\<PacletizedResourceFunctions`*\>\"", "]"}],
          ",", "#"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<NeedsDefinitions\>\"", ",", "\"\<SetSymbolsContext\>\""}],
        "}"}]}], ")"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"Names", "[", "\"\<MaTeX`*\>\"", "]"}], ",", "#"}], "]"}], 
       "&"}], "/@", 
      RowBox[{"{", "\"\<MaTeX\>\"", "}"}]}], ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Models", "[", "\"\<BKY\>\"", "]"}], "[", "\"\<shortname\>\"", 
     "]"}], "==", "\"\<BKY\>\""}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Head", "@", 
     RowBox[{"MaTeX", "[", "\"\<x^2\>\"", "]"}]}], "===", "Graphics"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Not", "[", 
    RowBox[{
     RowBox[{"Information", "[", 
      RowBox[{"SetSymbolsContext", ",", "\"\<Definitions\>\""}], "]"}], "===",
      "None"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Not", "[", 
    RowBox[{
     RowBox[{"Information", "[", 
      RowBox[{"NeedsDefinitions", ",", "\"\<Definitions\>\""}], "]"}], "===", 
     "None"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.890551478521497*^9, 3.890551478817877*^9}, {
  3.8905516493931704`*^9, 3.8905516651534433`*^9}, {3.89055178248217*^9, 
  3.8905517827974577`*^9}, {3.890552399832224*^9, 3.8905524180860987`*^9}, {
  3.89055471773151*^9, 3.890554718053688*^9}, {3.8905564905460653`*^9, 
  3.890556490784897*^9}, {3.890556794880351*^9, 3.890556810247841*^9}, {
  3.908181539047967*^9, 
  3.908181542264236*^9}},ExpressionUUID->"0a19708d-8f36-4e5b-a488-\
0df1e51dc178"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "when", " ", "everything", " ", "is", " ", "already", " ", "installed"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Quiet", "@", 
     RowBox[{
     "PacletUninstall", "[", "\"\<FernandoDuarte/LongRunRisk\>\"", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"installed", "=", 
     RowBox[{"PacletInstall", "[", 
      RowBox[{"built", "[", "\"\<PacletArchive\>\"", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Needs", "[", "\"\<FernandoDuarte`LongRunRisk`\>\"", "]"}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"$ContextPath", ",", "#"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<FernandoDuarte`LongRunRisk`\>\"", ",", "\"\<MaTeX`\>\"", ",", 
        "\"\<PacletizedResourceFunctions`\>\""}], "}"}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"Names", "[", "\"\<FernandoDuarte`LongRunRisk`*\>\"", "]"}], 
         ",", "#"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<Growth\>\"", ",", "\"\<Models\>\""}], "}"}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"Names", "[", "\"\<PacletizedResourceFunctions`*\>\"", "]"}],
          ",", "#"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<NeedsDefinitions\>\"", ",", "\"\<SetSymbolsContext\>\""}],
        "}"}]}], ")"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"Names", "[", "\"\<MaTeX`*\>\"", "]"}], ",", "#"}], "]"}], 
       "&"}], "/@", 
      RowBox[{"{", "\"\<MaTeX\>\"", "}"}]}], ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Models", "[", "\"\<BKY\>\"", "]"}], "[", "\"\<shortname\>\"", 
     "]"}], "==", "\"\<BKY\>\""}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Head", "@", 
     RowBox[{"MaTeX", "[", "\"\<x^2\>\"", "]"}]}], "===", "Graphics"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Not", "[", 
    RowBox[{
     RowBox[{"Information", "[", 
      RowBox[{"SetSymbolsContext", ",", "\"\<Definitions\>\""}], "]"}], "===",
      "None"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Not", "[", 
    RowBox[{
     RowBox[{"Information", "[", 
      RowBox[{"NeedsDefinitions", ",", "\"\<Definitions\>\""}], "]"}], "===", 
     "None"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.890551673650092*^9, 3.8905516877694397`*^9}, {
   3.890551785585765*^9, 3.890551785958749*^9}, {3.890552402339553*^9, 
   3.890552517650592*^9}, 3.890554426301773*^9, {3.890556479530114*^9, 
   3.890556484429839*^9}, {3.8905567796662283`*^9, 3.890556789384465*^9}, {
   3.908181552825903*^9, 
   3.908181553814002*^9}},ExpressionUUID->"143236ef-b8a5-4dd3-8d3d-\
a7ff943e0559"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<FernandoDuarte`LongRunRisk`\>\"", "]"}]], "Input",\

 CellChangeTimes->{{3.889431746063068*^9, 3.889431752653256*^9}, {
   3.889498746279821*^9, 3.88949874835758*^9}, {3.8900382319831257`*^9, 
   3.890038266150962*^9}, {3.89175224907029*^9, 3.891752256553832*^9}, 
   3.894787830754168*^9, {3.894803465120302*^9, 3.8948034654061823`*^9}, {
   3.894803797350793*^9, 
   3.89480379799263*^9}},ExpressionUUID->"8ca679c3-2d1e-4627-911a-\
271e99f7202f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"testFileName", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DirectoryName", "[", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "1"}], "]"}], ",", 
      RowBox[{
       RowBox[{"FileBaseName", "[", 
        RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", 
       "\"\<.wlt\>\""}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"pacletDir", "=", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{"testFileName", ",", "2"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", "pacletDir", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testContextBase", "=", 
   RowBox[{"FileBaseName", "[", "testFileName", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$ContextPath", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"$ContextPath", ",", 
     RowBox[{"Except", "[", "\"\<PacletizedResourceFunctions`\>\"", "]"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.895827028005066*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"9cd34830-46fc-4249-b5db-83675c1660e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Yield Curve", "Section",
 CellChangeTimes->{{3.894880477741781*^9, 
  3.89488048559941*^9}},ExpressionUUID->"02a5e353-41ba-49c0-8d60-\
d6e3e905d84d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"Reduce", "::", "ratnz"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8949623660959797`*^9, 3.894962373614925*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"a8aa6ca5-45ea-4595-a0bb-b32ab9107b1b"],

Cell[CellGroupData[{

Cell["BY", "Subsection",
 CellChangeTimes->{{3.894961075812955*^9, 3.8949610785786743`*^9}, 
   3.894961272272238*^9},ExpressionUUID->"1871b2bc-619f-4a13-8cef-\
daf1ec73aeac"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"myModel", " ", "=", " ", 
    RowBox[{"Models", "[", "\"\<BY\>\"", "]"}]}], ";"}], " "}]], "Input",
 CellChangeTimes->{{3.8948805036022377`*^9, 3.894880510964974*^9}, {
   3.8948806118605833`*^9, 3.894880612087715*^9}, {3.8949229333014812`*^9, 
   3.894922942614452*^9}, {3.894923868666265*^9, 3.8949238690785646`*^9}, {
   3.89492401012253*^9, 3.894924011908758*^9}, {3.8949273189743032`*^9, 
   3.894927336652417*^9}, 3.894930040652605*^9, {3.8949305903825197`*^9, 
   3.8949305906212273`*^9}, {3.8949307259503183`*^9, 3.894930726212351*^9}, {
   3.894953661938447*^9, 3.8949536622113743`*^9}, 3.894961095633893*^9, 
   3.894961262482503*^9, 3.89507185724804*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"ab37a0e7-b999-4c42-8283-fd2f208b8cd0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"yc", "=", 
   RowBox[{"YieldCurve", "[", 
    RowBox[{"myModel", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", "yc", "]"}]}], "Input",
 CellChangeTimes->{{3.8949555850630217`*^9, 3.894955602596402*^9}, {
   3.894955683615633*^9, 3.894955696364376*^9}, {3.894957789025557*^9, 
   3.894957791377014*^9}, 3.894961095634197*^9, 3.894961262482884*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"d1ff415f-0785-4673-9fb1-3bf31baceaed"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"yc", "=", 
   RowBox[{"YieldCurve", "[", 
    RowBox[{"myModel", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}], ",", "\"\<nombond\>\"", ",", 
     RowBox[{"\"\<MaxMaturity\>\"", "\[Rule]", "60"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", "yc", "]"}]}], "Input",
 CellChangeTimes->{{3.89495668769803*^9, 3.894956693194852*^9}, {
   3.89495687854888*^9, 3.894956900640725*^9}, {3.8949574596936083`*^9, 
   3.8949574985505953`*^9}, {3.894957597726975*^9, 3.8949575989069557`*^9}, {
   3.894957642047153*^9, 3.894957670659217*^9}, 3.8949577397829*^9, {
   3.894957796527067*^9, 3.894957827596941*^9}, 3.894961095635228*^9, 
   3.894961262483603*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"3f8c0238-f234-4f3c-8b1f-00a0a0c0fe26"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"yc", "=", 
   RowBox[{"YieldCurve", "[", 
    RowBox[{"myModel", ",", 
     RowBox[{"{", 
      RowBox[{"psi", "->", "2.1"}], "}"}], ",", 
     RowBox[{"{", "}"}], ",", "\"\<nombond\>\"", ",", 
     RowBox[{"\"\<MaxMaturity\>\"", "\[Rule]", "60"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", "yc", "]"}]}], "Input",
 CellChangeTimes->{{3.89495783584608*^9, 3.894957840496646*^9}, 
   3.8949610956361847`*^9, 3.8949612624842777`*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"151593b3-3ee9-4faf-a17d-10f5dde0c3d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"YieldCurve", "[", 
      RowBox[{"myModel", ",", 
       RowBox[{"{", 
        RowBox[{"psi", "->", "psiM"}], "}"}], ",", 
       RowBox[{"{", "}"}], ",", "\"\<nombond\>\"", ",", 
       RowBox[{"\"\<MaxMaturity\>\"", "\[Rule]", "60"}]}], "]"}], "]"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"psiM", ",", "2"}], "}"}], ",", "0.5", ",", "3"}], "}"}]}], 
   "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.894930781829294*^9, 3.894930883067937*^9}, {
   3.894930917422399*^9, 3.894930924805366*^9}, {3.894957859205823*^9, 
   3.894957864910015*^9}, 3.894961095637123*^9, 3.894961262484989*^9, {
   3.894961393007435*^9, 3.894961394806136*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"60b7f10a-9458-4b21-825e-c9388ef5be1f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["NRC", "Subsection",
 CellChangeTimes->{{3.894961109184333*^9, 3.894961110182529*^9}, 
   3.894961262485674*^9},ExpressionUUID->"3c3f5f07-79f8-4455-84ff-\
4f6fc0638560"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myModel", " ", "=", " ", 
   RowBox[{"Models", "[", "\"\<NRC\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8948805036022377`*^9, 3.894880510964974*^9}, {
   3.8948806118605833`*^9, 3.894880612087715*^9}, {3.8949229333014812`*^9, 
   3.894922942614452*^9}, {3.894923868666265*^9, 3.8949238690785646`*^9}, {
   3.89492401012253*^9, 3.894924011908758*^9}, {3.8949273189743032`*^9, 
   3.894927336652417*^9}, 3.894930040652605*^9, {3.8949305903825197`*^9, 
   3.8949305906212273`*^9}, {3.8949307259503183`*^9, 3.894930726212351*^9}, {
   3.894953661938447*^9, 3.8949536622113743`*^9}, {3.894961095633893*^9, 
   3.894961125440378*^9}, 3.894961262485878*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"dc1ea911-d78e-4b74-9837-c0d5ce5a20eb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"yc", "=", 
   RowBox[{"YieldCurve", "[", 
    RowBox[{"myModel", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", "yc", "]"}]}], "Input",
 CellChangeTimes->{{3.8949555850630217`*^9, 3.894955602596402*^9}, {
   3.894955683615633*^9, 3.894955696364376*^9}, {3.894957789025557*^9, 
   3.894957791377014*^9}, 3.894961095634197*^9, 3.894961262486071*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"4bbb5fe1-89c2-4c9a-bffb-1597512a1cf4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"yc", "=", 
   RowBox[{"YieldCurve", "[", 
    RowBox[{"myModel", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}], ",", "\"\<nombond\>\"", ",", 
     RowBox[{"\"\<MaxMaturity\>\"", "\[Rule]", "60"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", "yc", "]"}]}], "Input",
 CellChangeTimes->{{3.89495668769803*^9, 3.894956693194852*^9}, {
   3.89495687854888*^9, 3.894956900640725*^9}, {3.8949574596936083`*^9, 
   3.8949574985505953`*^9}, {3.894957597726975*^9, 3.8949575989069557`*^9}, {
   3.894957642047153*^9, 3.894957670659217*^9}, 3.8949577397829*^9, {
   3.894957796527067*^9, 3.894957827596941*^9}, 3.894961095635228*^9, 
   3.894961262487301*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"d066c836-8620-432a-bb60-aac96a5758b8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"yc", "=", 
   RowBox[{"YieldCurve", "[", 
    RowBox[{"myModel", ",", 
     RowBox[{"{", 
      RowBox[{"psi", "->", "1.8"}], "}"}], ",", 
     RowBox[{"{", "}"}], ",", "\"\<nombond\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", "yc", "]"}]}], "Input",
 CellChangeTimes->{{3.89495783584608*^9, 3.894957840496646*^9}, 
   3.8949610956361847`*^9, 3.89496126248825*^9, {3.894961462236339*^9, 
   3.89496149558132*^9}, {3.894962435918561*^9, 3.894962439428657*^9}, {
   3.894962619513266*^9, 3.8949626293276463`*^9}, 3.894962943625808*^9, {
   3.894964178402288*^9, 3.8949641940695257`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"82a5eb4a-ee99-46d5-8686-8b0851682b93"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"yc", "=", 
      RowBox[{"YieldCurve", "[", 
       RowBox[{"myModel", ",", 
        RowBox[{"{", 
         RowBox[{"psi", "->", "psiM"}], "}"}], ",", 
        RowBox[{"{", "}"}], ",", "\"\<nombond\>\"", ",", 
        RowBox[{"\"\<MaxMaturity\>\"", "\[Rule]", "60"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", "yc", "]"}]}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"psiM", ",", "2"}], "}"}], ",", "0.5", ",", "3"}], "}"}]}], 
   "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.894930781829294*^9, 3.894930883067937*^9}, {
   3.894930917422399*^9, 3.894930924805366*^9}, {3.894957859205823*^9, 
   3.894957864910015*^9}, 3.894961095637123*^9, 3.894961262489357*^9, {
   3.8949614039057713`*^9, 3.8949614056461563`*^9}, {3.8949624539566307`*^9, 
   3.894962467464903*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"35735838-568a-42ca-9e75-037663e6cb7c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["DES", "Subsection",
 CellChangeTimes->{{3.894961075812955*^9, 3.8949610785786743`*^9}, {
  3.894961204823449*^9, 
  3.894961205170418*^9}},ExpressionUUID->"51a92175-b32d-4fec-8580-\
a87db9fb35bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"myModel", " ", "=", " ", 
   RowBox[{"Models", "[", "\"\<DES\>\"", "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8948805036022377`*^9, 3.894880510964974*^9}, {
   3.8948806118605833`*^9, 3.894880612087715*^9}, {3.8949229333014812`*^9, 
   3.894922942614452*^9}, {3.894923868666265*^9, 3.8949238690785646`*^9}, {
   3.89492401012253*^9, 3.894924011908758*^9}, {3.8949273189743032`*^9, 
   3.894927336652417*^9}, 3.894930040652605*^9, {3.8949305903825197`*^9, 
   3.8949305906212273`*^9}, {3.8949307259503183`*^9, 3.894930726212351*^9}, {
   3.894953661938447*^9, 3.8949536622113743`*^9}, 3.894961095633893*^9, {
   3.89496120834474*^9, 3.894961208653458*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"3ef0b61c-8703-4665-93b5-c3f895075a56"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"yc", "=", 
   RowBox[{"YieldCurve", "[", 
    RowBox[{"myModel", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", "yc", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8949555850630217`*^9, 3.894955602596402*^9}, {
   3.894955683615633*^9, 3.894955696364376*^9}, {3.894957789025557*^9, 
   3.894957791377014*^9}, 3.894961095634197*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"f25e9de2-00d6-4338-b0a2-a7bab8862c03"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"yc", "=", 
   RowBox[{"YieldCurve", "[", 
    RowBox[{"myModel", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}], ",", "\"\<nombond\>\"", ",", 
     RowBox[{"\"\<MaxMaturity\>\"", "\[Rule]", "60"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", "yc", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.89495668769803*^9, 3.894956693194852*^9}, {
   3.89495687854888*^9, 3.894956900640725*^9}, {3.8949574596936083`*^9, 
   3.8949574985505953`*^9}, {3.894957597726975*^9, 3.8949575989069557`*^9}, {
   3.894957642047153*^9, 3.894957670659217*^9}, 3.8949577397829*^9, {
   3.894957796527067*^9, 3.894957827596941*^9}, 3.894961095635228*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"090c4433-93b3-4636-95e8-8b4e6611de41"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"yc", "=", 
   RowBox[{"YieldCurve", "[", 
    RowBox[{"myModel", ",", 
     RowBox[{"{", 
      RowBox[{"psi", "->", "2.1"}], "}"}], ",", 
     RowBox[{"{", "}"}], ",", "\"\<nombond\>\"", ",", 
     RowBox[{"\"\<MaxMaturity\>\"", "\[Rule]", "60"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", "yc", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.89495783584608*^9, 3.894957840496646*^9}, 
   3.8949610956361847`*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"788c307e-ccf0-48c2-b0c0-c147cb3fba54"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"Quiet", "[", 
      RowBox[{
       RowBox[{"YieldCurve", "[", 
        RowBox[{"myModel", ",", 
         RowBox[{"{", 
          RowBox[{"psi", "->", "psiM"}], "}"}], ",", 
         RowBox[{"{", "}"}], ",", "\"\<nombond\>\"", ",", 
         RowBox[{"\"\<MaxMaturity\>\"", "\[Rule]", "60"}]}], "]"}], ",", 
       RowBox[{"Reduce", "::", "ratnz"}]}], "]"}], "]"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"psiM", ",", "2"}], "}"}], ",", "0.5", ",", "3"}], "}"}]}], 
   "]"}], "\[IndentingNewLine]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.894930781829294*^9, 3.894930883067937*^9}, {
   3.894930917422399*^9, 3.894930924805366*^9}, {3.894957859205823*^9, 
   3.894957864910015*^9}, 3.894961095637123*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"0d2cf01d-5658-413b-9f6d-d6f7095e75eb"],

Cell["NRC", "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.894961109184333*^9, 
  3.894961110182529*^9}},ExpressionUUID->"ac3a0a9e-b1e7-476c-ad6f-\
a9675e1c4dd6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myModel", " ", "=", " ", 
   RowBox[{"Models", "[", "\"\<NRC\>\"", "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8948805036022377`*^9, 3.894880510964974*^9}, {
   3.8948806118605833`*^9, 3.894880612087715*^9}, {3.8949229333014812`*^9, 
   3.894922942614452*^9}, {3.894923868666265*^9, 3.8949238690785646`*^9}, {
   3.89492401012253*^9, 3.894924011908758*^9}, {3.8949273189743032`*^9, 
   3.894927336652417*^9}, 3.894930040652605*^9, {3.8949305903825197`*^9, 
   3.8949305906212273`*^9}, {3.8949307259503183`*^9, 3.894930726212351*^9}, {
   3.894953661938447*^9, 3.8949536622113743`*^9}, {3.894961095633893*^9, 
   3.894961125440378*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"839e1017-f22c-4e55-be10-1a5187d12886"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"yc", "=", 
   RowBox[{"YieldCurve", "[", 
    RowBox[{"myModel", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", "yc", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8949555850630217`*^9, 3.894955602596402*^9}, {
   3.894955683615633*^9, 3.894955696364376*^9}, {3.894957789025557*^9, 
   3.894957791377014*^9}, 3.894961095634197*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"e303cb82-d1eb-465a-b3a4-7b10be2a9a76"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"yc", "=", 
   RowBox[{"YieldCurve", "[", 
    RowBox[{"myModel", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}], ",", "\"\<nombond\>\"", ",", 
     RowBox[{"\"\<MaxMaturity\>\"", "\[Rule]", "60"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", "yc", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.89495668769803*^9, 3.894956693194852*^9}, {
   3.89495687854888*^9, 3.894956900640725*^9}, {3.8949574596936083`*^9, 
   3.8949574985505953`*^9}, {3.894957597726975*^9, 3.8949575989069557`*^9}, {
   3.894957642047153*^9, 3.894957670659217*^9}, 3.8949577397829*^9, {
   3.894957796527067*^9, 3.894957827596941*^9}, 3.894961095635228*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"e1899e07-7be3-4a7c-81a6-4063cb7423bf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"yc", "=", 
   RowBox[{"YieldCurve", "[", 
    RowBox[{"myModel", ",", 
     RowBox[{"{", 
      RowBox[{"psi", "->", "2.1"}], "}"}], ",", 
     RowBox[{"{", "}"}], ",", "\"\<nombond\>\"", ",", 
     RowBox[{"\"\<MaxMaturity\>\"", "\[Rule]", "60"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", "yc", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.89495783584608*^9, 3.894957840496646*^9}, 
   3.8949610956361847`*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"bcac7799-54f7-4f01-a799-5cd85648df88"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"YieldCurve", "[", 
      RowBox[{"myModel", ",", 
       RowBox[{"{", 
        RowBox[{"psi", "->", "psiM"}], "}"}], ",", 
       RowBox[{"{", "}"}], ",", "\"\<nombond\>\"", ",", 
       RowBox[{"\"\<MaxMaturity\>\"", "\[Rule]", "60"}]}], "]"}], "]"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"psiM", ",", "2"}], "}"}], ",", "0.5", ",", "3"}], "}"}]}], 
   "]"}], "\[IndentingNewLine]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.894930781829294*^9, 3.894930883067937*^9}, {
   3.894930917422399*^9, 3.894930924805366*^9}, {3.894957859205823*^9, 
   3.894957864910015*^9}, 3.894961095637123*^9, {3.894961375873848*^9, 
   3.894961378252728*^9}},ExpressionUUID->"2d24c772-120c-42b6-8e81-\
4f42ac13f1e0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\n", "\n"}]], "Input",
 CellChangeTimes->{{3.8949820619249687`*^9, 3.894982080984742*^9}, {
  3.894982116335477*^9, 3.894982138486269*^9}, {3.89498253053973*^9, 
  3.894982556753851*^9}},ExpressionUUID->"169b1da2-cc03-4b45-bc29-\
318a8ebbe511"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.894982672029386*^9, 3.8949826745795527`*^9}, {
  3.894982716377365*^9, 
  3.894982738074936*^9}},ExpressionUUID->"027d55d4-32c8-45f2-a632-\
1b6a9d226986"],

Cell["Install from Github", "Section",
 CellChangeTimes->{{3.8957867459148273`*^9, 
  3.895786751001422*^9}},ExpressionUUID->"3324f4e4-72db-4f2d-a8e3-\
55f924327a8d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<PacletTools`\>\"", "]"}], ";"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"c22cb105-6a78-4ecd-b11f-f4ac587aca1f"],

Cell[BoxData[
 RowBox[{"PacletFind", "[", "\"\<FernandoDuarte/LongRunRisk\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.895786784408914*^9, 3.895786790648164*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b77feda0-9831-42d8-924e-418712c4b975"],

Cell[BoxData[
 RowBox[{"Quiet", "@", 
  RowBox[{
  "PacletUninstall", "[", "\"\<FernandoDuarte/LongRunRisk\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.895786753578414*^9, 3.8957867535906277`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"f5edb761-8f66-4841-8382-861ca17e8655"],

Cell[BoxData[
 RowBox[{"PacletInstall", "[", 
  RowBox[{
   RowBox[{
   "URL", "[", 
    "\"\<https://github.com/GitHub-at-Brown/LongRunRisk/releases/download/pre-\
release-1.0.0/FernandoDuarte__LongRunRisk-1.0.0.paclet\>\"", "]"}], ",", 
   RowBox[{"ForceVersionInstall", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.895786801015046*^9, 3.8957868363222523`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"e0ec710f-50c9-498f-bd3a-dbb81e832628"],

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<FernandoDuarte`LongRunRisk`*\>\"", "]"}]], "Input",\

 CellChangeTimes->{{3.895786987040152*^9, 3.895787006964961*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"f86b9b30-af42-4274-a033-12f2ffeaf97e"],

Cell[BoxData[
 RowBox[{"Information", "[", "\"\<Models\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.895787010788005*^9, 3.895787015413656*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"b371bfe6-7609-4216-bfdc-a9dd8b03cdad"],

Cell["Plot A[0]", "Subsection",
 CellChangeTimes->{{3.895862748019788*^9, 
  3.895862752258586*^9}},ExpressionUUID->"76644789-100c-40cc-b0dd-\
54e78276dc79"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"model", " ", "=", " ", 
   RowBox[{"Models", "[", "\"\<NRC\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ratio", " ", "=", " ", "\"\<wc\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"params", " ", "=", " ", 
   RowBox[{"model", "[", "\"\<params\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.895862756811637*^9, 3.895862780158928*^9}, {
  3.895862827387501*^9, 3.895862830778501*^9}, {3.895862940723619*^9, 
  3.895862947794442*^9}, {3.895863076211741*^9, 3.895863076554742*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"51e0ab7e-438f-4918-88dc-0cdca4a5ef09"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sys", " ", "=", " ", 
   RowBox[{
    RowBox[{"model", "[", "\"\<coeffsSystem\>\"", "]"}], "[", "ratio", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.895862756811637*^9, 3.8958628347145233`*^9}, 
   3.8958628832429037`*^9},
 CellLabel->"In[34]:=",ExpressionUUID->"89b86636-c7a5-4f01-834e-d4d7b0df4992"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "Get", "[", 
   "\"\<FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\>\"", 
   "]"}], ";"}]], "Input",
 CellLabel->"In[36]:=",ExpressionUUID->"80d69bde-e034-4277-951c-75f9ae5e74ed"],

Cell[BoxData[
 RowBox[{"solWc", "=", 
  RowBox[{"updateCoeffsWc", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"model", "[", "\"\<coeffsSolution\>\"", "]"}], "[", "\"\<wc\>\"",
      "]"}], ",", 
    RowBox[{"model", "[", "\"\<params\>\"", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"psi", "->", "2.2"}], "}"}], ",", 
    RowBox[{"\"\<Ewc0\>\"", "->", "4.3"}], ",", " ", 
    RowBox[{"\"\<MaxIterations\>\"", "->", "100"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8958628854042797`*^9, 3.895862990123177*^9}, {
  3.895863073588984*^9, 3.895863092211595*^9}, {3.89586372371047*^9, 
  3.895863723854363*^9}, {3.895863921230443*^9, 3.8958639217341547`*^9}, {
  3.895864002174732*^9, 3.895864219277961*^9}, {3.895864252949973*^9, 
  3.895864337885948*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"406843cf-54e5-449e-a90f-790601859d2c"],

Cell[BoxData[
 RowBox[{"solPd", "=", 
  RowBox[{"updateCoeffsPd", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"model", "[", "\"\<coeffsSolution\>\"", "]"}], "[", "\"\<pd\>\"",
      "]"}], ",", 
    RowBox[{"model", "[", "\"\<params\>\"", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"psi", "->", "2.2"}], "}"}], ",", "solWc", ",", 
    RowBox[{"\"\<Epd0[1]\>\"", "->", 
     RowBox[{"Sequence", "[", 
      RowBox[{"0", ",", "15"}], "]"}]}], ",", 
    RowBox[{"\"\<Epd0[2]\>\"", "->", 
     RowBox[{"Sequence", "[", "6", "]"}]}], ",", 
    RowBox[{"\"\<Epd0[3]\>\"", "->", 
     RowBox[{"Sequence", "[", "7", "]"}]}], ",", 
    RowBox[{"MaxIterations", "->", "1000"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.895863859951187*^9, 3.89586388731949*^9}, {
  3.895863945726397*^9, 3.8958639803020906`*^9}, {3.8958642401950808`*^9, 
  3.895864264198065*^9}, {3.8958643437987833`*^9, 3.8958643796134167`*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"05a8fc15-4856-4a61-aa40-58ccab615aa9"],

Cell[BoxData[
 RowBox[{"solWc0", "=", 
  RowBox[{"FilterRules", "[", 
   RowBox[{"solWc", ",", 
    RowBox[{"Except", "[", 
     RowBox[{"A", "[", "0", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8958631259321012`*^9, 3.895863135562542*^9}, {
  3.8958631946182413`*^9, 3.895863196634663*^9}, {3.89586449622266*^9, 
  3.895864501813291*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"bcfd9824-82be-4968-b7ae-c4d3d23fa2c6"],

Cell[BoxData[
 RowBox[{"eq0", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Subtract", "@@", 
     RowBox[{"First", "@", 
      RowBox[{"First", "@", 
       RowBox[{
        RowBox[{"model", "[", "\"\<coeffsSystem\>\"", "]"}], "[", "ratio", 
        "]"}]}]}]}], " ", "/.", "solWc0"}], " ", "//.", " ", 
   "params"}]}]], "Input",
 CellChangeTimes->{{3.895863157234778*^9, 3.89586321734661*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"40209fe3-a3f5-42c7-9e17-d46dee97ee68"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"minA0", " ", "=", " ", 
   RowBox[{
    RowBox[{"0.5", "*", 
     RowBox[{"A", "[", "0", "]"}]}], "/.", "solWc"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxA0", "=", " ", 
   RowBox[{
    RowBox[{"1.5", "*", 
     RowBox[{"A", "[", "0", "]"}]}], "/.", "solWc"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8958632575245533`*^9, 3.89586328839466*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"1943c9e8-9b58-447e-858e-15f75d62de5c"],

Cell[BoxData[
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"min", " ", "=", " ", "minA0"}], ",", " ", 
     RowBox[{"max", " ", "=", " ", "maxA0"}]}], "}"}], ",", "\n", "  ", 
   RowBox[{"Manipulate", "[", "\n", "    ", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{"eq0", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"A", "[", "0", "]"}], ",", " ", "min", ",", " ", "max"}], 
        "}"}], ",", " ", 
       RowBox[{"AxesLabel", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"A", "[", "0", "]"}], ",", " ", "\"\<Residual\>\""}], 
         "}"}]}]}], "]"}], ",", "\n", "    ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"min", ",", " ", "minA0"}], "}"}], ",", " ", "0", ",", " ", 
       "15"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"max", ",", " ", "maxA0"}], "}"}], ",", " ", "0", ",", " ", 
       "15"}], "}"}], ",", "\n", "    ", 
     RowBox[{"TrackedSymbols", " ", ":>", " ", 
      RowBox[{"{", 
       RowBox[{"min", ",", " ", "max"}], "}"}]}]}], "\n", "  ", "]"}]}], "\n",
   "]"}]], "Input",
 CellLabel->"In[62]:=",ExpressionUUID->"c0447984-64a6-4b32-9974-e7c38d0c94dc"],

Cell["New Tests", "Section",
 CellChangeTimes->{{3.907591304560747*^9, 
  3.907591307939831*^9}},ExpressionUUID->"9be51e12-456c-48bb-bb40-\
aecaf24a3f74"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quit", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.890497521412341*^9, 3.890497523049814*^9}, {
   3.890504943896141*^9, 3.8905049500189657`*^9}, 3.89050587359697*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"7d15d176-941d-40cd-aefa-66cdc6428bd5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Quiet", "[", 
   RowBox[{
   "PacletUninstall", "[", "\"\<FernandoDuarte/LongRunRisk\>\"", "]"}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testFileName", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DirectoryName", "[", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "1"}], "]"}], ",", 
      RowBox[{
       RowBox[{"FileBaseName", "[", 
        RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", 
       "\"\<.wlt\>\""}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pacletDir", "=", 
   RowBox[{"DirectoryName", "[", 
    RowBox[{"testFileName", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FileNames", "[", "testFileName", "]"}], "===", 
     RowBox[{"{", "}"}]}], ",", "Nothing", ",", 
    RowBox[{"DeleteFile", "[", "testFileName", "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<PacletTools`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"built", "=", 
  RowBox[{"PacletBuild", "[", "pacletDir", "]"}]}], "\n", 
 RowBox[{"Names", "[", "\"\<Global`*\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"installed", "=", 
   RowBox[{"PacletInstall", "[", 
    RowBox[{"built", "[", "\"\<PacletArchive\>\"", "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<FernandoDuarte`LongRunRisk`\>\"", "]"}], 
  ";"}], "\n", "$ContextPath", "\n", 
 RowBox[{"Sort", "@", 
  RowBox[{"Names", "[", "\"\<Global`*\>\"", "]"}]}], "\n", 
 RowBox[{"model", "=", 
  RowBox[{"Models", "[", "\"\<NRC\>\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Info", "[", "Models", "]"}], "\n", 
    RowBox[{"Info", "[", 
     RowBox[{"<|", 
      RowBox[{"\"\<MyModelodels\>\"", "->", "model"}], "|>"}], "]"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8890661685133457`*^9, 3.889066220685074*^9}, {
   3.8890662555512333`*^9, 3.889066299901951*^9}, {3.889066581166473*^9, 
   3.8890665847967653`*^9}, {3.889066731765956*^9, 3.889066745674687*^9}, {
   3.889431410824514*^9, 3.88943144002302*^9}, 3.889502968269744*^9, {
   3.889998928469849*^9, 3.889998928670561*^9}, {3.890676553021196*^9, 
   3.890676564028514*^9}, 3.890676636594749*^9, {3.890679618620262*^9, 
   3.89067961902995*^9}, {3.8908254134370813`*^9, 3.890825413876319*^9}, {
   3.890825459205497*^9, 3.890825473041605*^9}, {3.890825503118348*^9, 
   3.8908255374530487`*^9}, {3.891021675325671*^9, 3.891021675545487*^9}, {
   3.8911588731924877`*^9, 3.891158877904397*^9}, {3.8911592499395514`*^9, 
   3.8911592502376633`*^9}, {3.891244978572403*^9, 3.8912449817448387`*^9}, {
   3.907591577040633*^9, 3.907591615430798*^9}, {3.907591660310848*^9, 
   3.907591667773634*^9}, 3.907592011014104*^9, {3.908115849165574*^9, 
   3.908115855443553*^9}, 3.908116509415756*^9, {3.908116663622065*^9, 
   3.908116668682459*^9}, 3.908158453839057*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"d0cfef5b-9213-49b6-afee-cada17223066"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Success",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"PacletArchive\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/build/FernandoDuarte__LongRunRisk-1.0.0.\
paclet\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "6.758344`", "\"s\"", "seconds", "\"Seconds\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"PacletArchive\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/build/FernandoDuarte__LongRunRisk-1.0.0.\
paclet\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "6.758344`", "\"s\"", "seconds", "\"Seconds\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  
                  TemplateBox[{"\"BuildPacletDirectory\"", "\": \""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"File", "[", 
                    TemplateBox[{
                    "\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/build/FernandoDuarte__LongRunRisk\""}, 
                    "FileArgument"], "]"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"PacletManifest\"", "\": \""}, "RowDefault"],
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|
                    "Files" -> {<|
                    "File" -> File[
                    "Kernel/ComputationalEngine/\
ComputeConditionalExpectations.wl"], "Hash" -> 
                    "bc0d10757c555bc2d052d727df004b21f7f0bc31e6b4721abf89beb6f\
de4ded4"|>, <|"File" -> 
                    File["Kernel/ComputationalEngine/\
ComputeUnconditionalExpectations.wl"], "Hash" -> 
                    "a6dadca3b8260270648b23b0cc80ebf6555b29bded8d9cb2e92bfd2b9\
6a295b5"|>, <|"File" -> File["Kernel/ComputationalEngine/CreateEulerEq.wl"], 
                    "Hash" -> 
                    "dd25f45cd5a827accecb3338126e8be9a926a5702b38f4b0af2674da2\
effd0a1"|>, <|"File" -> 
                    File["Kernel/ComputationalEngine/CreateMomentsDatabase.\
wl"], "Hash" -> 
                    "d44a4bda5770408cd1f5cfaa9ffbe928c46affceb12585eb147396e72\
2bcf2ea"|>, <|"File" -> File["Kernel/ComputationalEngine/.DS_Store"], "Hash" -> 
                    "8744ff4938a966e59820afd572fd4296d5f5fee24b1a8e0aeb0de9441\
ab724b5"|>, <|"File" -> File["Kernel/ComputationalEngine/SolveEulerEq.wl"], 
                    "Hash" -> 
                    "6ee130957fe318bea4ff69e0ebaf174aec40780ef262fb13026976223\
f22c546"|>, <|"File" -> File["Kernel/.DS_Store"], "Hash" -> 
                    "0ab2909a589e8a288489fdaceeaf16d5f0080634819eefe4b255cc271\
78925bf"|>, <|"File" -> File["Kernel/LongRunRisk.wl"], "Hash" -> 
                    "df7044646bff2edbc2ce1fa0b7caa749f52f7bf140b96fc3d14ec51cf\
37c32dd"|>, <|"File" -> File["Kernel/Model/Catalog.wl"], "Hash" -> 
                    "d5fd68611effca9a293cdb9fd3828db75590152dfda686a508bd74838\
08e2b75"|>, <|"File" -> File["Kernel/Model/.DS_Store"], "Hash" -> 
                    "d65165279105ca6773180500688df4bdc69a2c7b771752f0a46ef120b\
7fd8ec3"|>, <|"File" -> File["Kernel/Model/EndogenousEq.wl"], "Hash" -> 
                    "c452832d78f721574b85b9a05377045380651424388b412dff6c9c153\
96b880f"|>, <|"File" -> File["Kernel/Model/ExogenousEq.wl"], "Hash" -> 
                    "0091c1317d7ad172fc5b2ffaba29ae7dfaf031cd5cfefe17323e91e48\
095170a"|>, <|"File" -> File["Kernel/Model/Parameters.wl"], "Hash" -> 
                    "1b1a917c55254f2c6d1963f4cdb09e5dcafbeee429af9d30bacba256b\
2aafd7b"|>, <|"File" -> File["Kernel/Model/ProcessModels.wl"], "Hash" -> 
                    "f1adf3809eb4908bde1d4ec935b9b8942956c11aee5585571f4cf3ed3\
de71e6c"|>, <|"File" -> File["Kernel/Model/Shocks.wl"], "Hash" -> 
                    "a15c11fa8d5f931cc73644c63c7f085ed73ecccdd2cf1718f4cf4be64\
424a258"|>, <|"File" -> File["Kernel/Tools/NiceOutput.wl"], "Hash" -> 
                    "32f2773cf8284729e4bdb068fbf788d7e29862ec64ff007177bd16096\
f8e4094"|>, <|"File" -> File["Kernel/Tools/NicePlots.wl"], "Hash" -> 
                    "92b0058814f4ca82dc82770a6cf7b3932e00dac2b6d32632fa221572c\
63c7c75"|>, <|"File" -> File["Kernel/Tools/NiceTables.wl"], "Hash" -> 
                    "aa6f956164e5470259ba3d73675e067db6094574723d3d9b4c1206eaa\
7620162"|>, <|"File" -> File["Kernel/Tools/TimeAggregation.wl"], "Hash" -> 
                    "df412ba966602f8b7d0af650afc05e17ad92297a6cc3821814b270142\
4a3012f"|>, <|"File" -> File["Kernel/Tools/ToNumber.wl"], "Hash" -> 
                    "0457ef8dbba1a8d01790fa212589c33b723cfefef15b6fa0c7fa8e418\
7669c5d"|>, <|"File" -> File["Kernel/Tools/WriteToMatlab.wl"], "Hash" -> 
                    "cb831c348f53c47fc7f37d6fd34ea1c5262c79c5b5f4d3ecedf8f591a\
29b666a"|>, <|"File" -> File["LICENSE"], "Hash" -> 
                    "ac3d4b00240f1fc053c4afcd4016e41d54011b9cd7c4a29ac3a3c3b3c\
ae5206f"|>, <|"File" -> File["Resources/BibTeX/references.bib"], "Hash" -> 
                    "bd2b44b10a829617cbfb942d5b60521e00c16d3fd9b3f005d6745d86e\
89a81b8"|>, <|"File" -> File["Resources/.DS_Store"], "Hash" -> 
                    "88ce876ac99ec117004af6858c850e987fd0006083f54c9c0a25ddae6\
e19fbbb"|>, <|"File" -> File["Resources/MaTeX-1.7.9.paclet"], "Hash" -> 
                    "6959e3418749d2b48002568e07fd4926af23b1614dda61ec0632b44b0\
7c078a6"|>, <|"File" -> File["Resources/ModelsStochInf.wl"], "Hash" -> 
                    "d8c2056e4e5d0a35d84f09d009986163b07841f1e304260abdfe392a8\
afb816a"|>, <|"File" -> File["Resources/Models.wl"], "Hash" -> 
                    "449033d421fea2440892f971a706194a8ca99c34996f5e3316dece0f6\
2c0a1ee"|>, <|"File" -> File["Resources/MomentsLookupTables/covLongBKY.wl"], 
                    "Hash" -> 
                    "6b9ff72c25ce61ed5f61bcfca96f61bb2a6f40044cd215da52e178900\
17da1bf"|>, <|"File" -> File["Resources/MomentsLookupTables/covLongDES.wl"], 
                    "Hash" -> 
                    "023f07757f0bf3da8f7b4e47f2ad11f8b783022359aab316b3f184e6c\
1f126c2"|>, <|"File" -> 
                    File["Resources/MomentsLookupTables/covLongNRCStochVol_\
small.wl"], "Hash" -> 
                    "bd89ac46e110d29e4cd66985f8bebd1a3d44a662e4f2735d06bd7333d\
11c2acd"|>, <|"File" -> 
                    File["Resources/MomentsLookupTables/covLongNRCStochVol.\
wl"], "Hash" -> 
                    "a3e7ec353010d718880cb2b4d6408e1eac5d63c221277c688a472019c\
b2151a7"|>, <|"File" -> File["Resources/MomentsLookupTables/covLongNRC.wl"], 
                    "Hash" -> 
                    "49c950aeebbc7ac6ed7c6b5648a497a53be749f9e4061a47f2ad80524\
95d83c6"|>, <|"File" -> File["Resources/MomentsLookupTables/.DS_Store"], 
                    "Hash" -> 
                    "d65165279105ca6773180500688df4bdc69a2c7b771752f0a46ef120b\
7fd8ec3"|>, <|"File" -> File["Resources/PacletizedResourceFunctions.paclet"], 
                    "Hash" -> 
                    "9775527577d2fa213b146d5f38c51bf6c18613ae65b291687864df64f\
14193bd"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 34], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 34], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Kernel/ComputationalEngine/\
ComputeConditionalExpectations.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "bc0d10757c555bc2d052d727df004b21f7f0bc31e6b4721abf89beb6f\
de4ded4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Kernel/ComputationalEngine/\
ComputeUnconditionalExpectations.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a6dadca3b8260270648b23b0cc80ebf6555b29bded8d9cb2e92bfd2b9\
6a295b5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/ComputationalEngine/CreateEulerEq.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "dd25f45cd5a827accecb3338126e8be9a926a5702b38f4b0af2674da2\
effd0a1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Kernel/ComputationalEngine/CreateMomentsDatabase.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d44a4bda5770408cd1f5cfaa9ffbe928c46affceb12585eb147396e72\
2bcf2ea", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/ComputationalEngine/.DS_Store"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "8744ff4938a966e59820afd572fd4296d5f5fee24b1a8e0aeb0de9441\
ab724b5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/ComputationalEngine/SolveEulerEq.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "6ee130957fe318bea4ff69e0ebaf174aec40780ef262fb13026976223\
f22c546", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/.DS_Store"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "0ab2909a589e8a288489fdaceeaf16d5f0080634819eefe4b255cc271\
78925bf", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/LongRunRisk.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "df7044646bff2edbc2ce1fa0b7caa749f52f7bf140b96fc3d14ec51cf\
37c32dd", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Model/Catalog.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d5fd68611effca9a293cdb9fd3828db75590152dfda686a508bd74838\
08e2b75", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Model/.DS_Store"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d65165279105ca6773180500688df4bdc69a2c7b771752f0a46ef120b\
7fd8ec3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Model/EndogenousEq.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "c452832d78f721574b85b9a05377045380651424388b412dff6c9c153\
96b880f", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Model/ExogenousEq.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "0091c1317d7ad172fc5b2ffaba29ae7dfaf031cd5cfefe17323e91e48\
095170a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Model/Parameters.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "1b1a917c55254f2c6d1963f4cdb09e5dcafbeee429af9d30bacba256b\
2aafd7b", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Model/ProcessModels.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "f1adf3809eb4908bde1d4ec935b9b8942956c11aee5585571f4cf3ed3\
de71e6c", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Model/Shocks.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a15c11fa8d5f931cc73644c63c7f085ed73ecccdd2cf1718f4cf4be64\
424a258", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Tools/NiceOutput.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "32f2773cf8284729e4bdb068fbf788d7e29862ec64ff007177bd16096\
f8e4094", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Tools/NicePlots.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "92b0058814f4ca82dc82770a6cf7b3932e00dac2b6d32632fa221572c\
63c7c75", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Tools/NiceTables.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "aa6f956164e5470259ba3d73675e067db6094574723d3d9b4c1206eaa\
7620162", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Tools/TimeAggregation.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "df412ba966602f8b7d0af650afc05e17ad92297a6cc3821814b270142\
4a3012f", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Tools/ToNumber.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "0457ef8dbba1a8d01790fa212589c33b723cfefef15b6fa0c7fa8e418\
7669c5d", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["34 total \:203a ", ""], 
                    Style[
                    Superscript["34 total \:203a ", ""], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 2]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "Item", False], "Mouse"], 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                    Background -> GrayLevel[0.98]], SpanFromLeft}}, 
                    BaseStyle -> {
                    ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, 
                    BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], 
                    Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                   Dataset`InterpretDataset[1], Selectable -> False, Editable -> 
                   False, SelectWithContents -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  
                  TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    InterpretationBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.002205`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.002205`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"Indeterminate", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"TargetWolframVersionNumber\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["13.1`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Success[
                    "DocumentationBuild", <|
                    "TotalTime" -> Quantity[0.002205, "Seconds"], 
                    "MaximumFileTime" -> <||>, "ProcessedFiles" -> <||>, 
                    "FailedFilesCount" -> 0, "PercentSucceeded" -> 
                    Quantity[Indeterminate, "Percent"], "ProcessedFilesCount" -> 
                    0, "SuccessfulFilesCount" -> 0, "SkippedFilesCount" -> 0, 
                    "MessageTemplate" -> 
                    "Documentation build completed successfully.", 
                    "TargetWolframVersionNumber" -> 13.1|>], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                    "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Success[
  "PacletBuild", <|
   "PacletArchive" -> 
    "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/build/FernandoDuarte__LongRunRisk-1.0.0.\
paclet", "TotalTime" -> Quantity[6.758344, "Seconds"], "BuildPacletDirectory" -> 
    File["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/build/FernandoDuarte__LongRunRisk"], 
    "PacletManifest" -> 
    Dataset[<|"Files" -> {<|
         "File" -> File[
           "Kernel/ComputationalEngine/ComputeConditionalExpectations.wl"], 
          "Hash" -> 
          "bc0d10757c555bc2d052d727df004b21f7f0bc31e6b4721abf89beb6fde4ded4"|>\
, <|"File" -> 
          File["Kernel/ComputationalEngine/ComputeUnconditionalExpectations.\
wl"], "Hash" -> 
          "a6dadca3b8260270648b23b0cc80ebf6555b29bded8d9cb2e92bfd2b96a295b5"|>\
, <|"File" -> File["Kernel/ComputationalEngine/CreateEulerEq.wl"], "Hash" -> 
          "dd25f45cd5a827accecb3338126e8be9a926a5702b38f4b0af2674da2effd0a1"|>\
, <|"File" -> File["Kernel/ComputationalEngine/CreateMomentsDatabase.wl"], 
          "Hash" -> 
          "d44a4bda5770408cd1f5cfaa9ffbe928c46affceb12585eb147396e722bcf2ea"|>\
, <|"File" -> File["Kernel/ComputationalEngine/.DS_Store"], "Hash" -> 
          "8744ff4938a966e59820afd572fd4296d5f5fee24b1a8e0aeb0de9441ab724b5"|>\
, <|"File" -> File["Kernel/ComputationalEngine/SolveEulerEq.wl"], "Hash" -> 
          "6ee130957fe318bea4ff69e0ebaf174aec40780ef262fb13026976223f22c546"|>\
, <|"File" -> File["Kernel/.DS_Store"], "Hash" -> 
          "0ab2909a589e8a288489fdaceeaf16d5f0080634819eefe4b255cc27178925bf"|>\
, <|"File" -> File["Kernel/LongRunRisk.wl"], "Hash" -> 
          "df7044646bff2edbc2ce1fa0b7caa749f52f7bf140b96fc3d14ec51cf37c32dd"|>\
, <|"File" -> File["Kernel/Model/Catalog.wl"], "Hash" -> 
          "d5fd68611effca9a293cdb9fd3828db75590152dfda686a508bd7483808e2b75"|>\
, <|"File" -> File["Kernel/Model/.DS_Store"], "Hash" -> 
          "d65165279105ca6773180500688df4bdc69a2c7b771752f0a46ef120b7fd8ec3"|>\
, <|"File" -> File["Kernel/Model/EndogenousEq.wl"], "Hash" -> 
          "c452832d78f721574b85b9a05377045380651424388b412dff6c9c15396b880f"|>\
, <|"File" -> File["Kernel/Model/ExogenousEq.wl"], "Hash" -> 
          "0091c1317d7ad172fc5b2ffaba29ae7dfaf031cd5cfefe17323e91e48095170a"|>\
, <|"File" -> File["Kernel/Model/Parameters.wl"], "Hash" -> 
          "1b1a917c55254f2c6d1963f4cdb09e5dcafbeee429af9d30bacba256b2aafd7b"|>\
, <|"File" -> File["Kernel/Model/ProcessModels.wl"], "Hash" -> 
          "f1adf3809eb4908bde1d4ec935b9b8942956c11aee5585571f4cf3ed3de71e6c"|>\
, <|"File" -> File["Kernel/Model/Shocks.wl"], "Hash" -> 
          "a15c11fa8d5f931cc73644c63c7f085ed73ecccdd2cf1718f4cf4be64424a258"|>\
, <|"File" -> File["Kernel/Tools/NiceOutput.wl"], "Hash" -> 
          
          "32f2773cf8284729e4bdb068fbf788d7e29862ec64ff007177bd16096f8e4094"|>\
, <|"File" -> File["Kernel/Tools/NicePlots.wl"], "Hash" -> 
          "92b0058814f4ca82dc82770a6cf7b3932e00dac2b6d32632fa221572c63c7c75"|>\
, <|"File" -> File["Kernel/Tools/NiceTables.wl"], "Hash" -> 
          "aa6f956164e5470259ba3d73675e067db6094574723d3d9b4c1206eaa7620162"|>\
, <|"File" -> File["Kernel/Tools/TimeAggregation.wl"], "Hash" -> 
          "df412ba966602f8b7d0af650afc05e17ad92297a6cc3821814b2701424a3012f"|>\
, <|"File" -> File["Kernel/Tools/ToNumber.wl"], "Hash" -> 
          "0457ef8dbba1a8d01790fa212589c33b723cfefef15b6fa0c7fa8e4187669c5d"|>\
, <|"File" -> File["Kernel/Tools/WriteToMatlab.wl"], "Hash" -> 
          "cb831c348f53c47fc7f37d6fd34ea1c5262c79c5b5f4d3ecedf8f591a29b666a"|>\
, <|"File" -> File["LICENSE"], "Hash" -> 
          "ac3d4b00240f1fc053c4afcd4016e41d54011b9cd7c4a29ac3a3c3b3cae5206f"|>\
, <|"File" -> File["Resources/BibTeX/references.bib"], "Hash" -> 
          "bd2b44b10a829617cbfb942d5b60521e00c16d3fd9b3f005d6745d86e89a81b8"|>\
, <|"File" -> File["Resources/.DS_Store"], "Hash" -> 
          "88ce876ac99ec117004af6858c850e987fd0006083f54c9c0a25ddae6e19fbbb"|>\
, <|"File" -> File["Resources/MaTeX-1.7.9.paclet"], "Hash" -> 
          "6959e3418749d2b48002568e07fd4926af23b1614dda61ec0632b44b07c078a6"|>\
, <|"File" -> File["Resources/ModelsStochInf.wl"], "Hash" -> 
          "d8c2056e4e5d0a35d84f09d009986163b07841f1e304260abdfe392a8afb816a"|>\
, <|"File" -> File["Resources/Models.wl"], "Hash" -> 
          "449033d421fea2440892f971a706194a8ca99c34996f5e3316dece0f62c0a1ee"|>\
, <|"File" -> File["Resources/MomentsLookupTables/covLongBKY.wl"], "Hash" -> 
          "6b9ff72c25ce61ed5f61bcfca96f61bb2a6f40044cd215da52e17890017da1bf"|>\
, <|"File" -> File["Resources/MomentsLookupTables/covLongDES.wl"], "Hash" -> 
          "023f07757f0bf3da8f7b4e47f2ad11f8b783022359aab316b3f184e6c1f126c2"|>\
, <|"File" -> 
          File["Resources/MomentsLookupTables/covLongNRCStochVol_small.wl"], 
          "Hash" -> 
          "bd89ac46e110d29e4cd66985f8bebd1a3d44a662e4f2735d06bd7333d11c2acd"|>\
, <|"File" -> File["Resources/MomentsLookupTables/covLongNRCStochVol.wl"], 
          "Hash" -> 
          "a3e7ec353010d718880cb2b4d6408e1eac5d63c221277c688a472019cb2151a7"|>\
, <|"File" -> File["Resources/MomentsLookupTables/covLongNRC.wl"], "Hash" -> 
          "49c950aeebbc7ac6ed7c6b5648a497a53be749f9e4061a47f2ad8052495d83c6"|>\
, <|"File" -> File["Resources/MomentsLookupTables/.DS_Store"], "Hash" -> 
          "d65165279105ca6773180500688df4bdc69a2c7b771752f0a46ef120b7fd8ec3"|>\
, <|"File" -> File["Resources/PacletizedResourceFunctions.paclet"], "Hash" -> 
          "9775527577d2fa213b146d5f38c51bf6c18613ae65b291687864df64f14193bd"|>\
}|>, 
      TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Vector[
        TypeSystem`Struct[{"File", "Hash"}, {
          TypeSystem`Atom[File], 
          TypeSystem`Atom[String]}], 34], 1], <||>], 
    "DocumentationBuildResults" -> {
      Success[
      "DocumentationBuild", <|
       "TotalTime" -> Quantity[0.002205, "Seconds"], 
        "MaximumFileTime" -> <||>, "ProcessedFiles" -> <||>, 
        "FailedFilesCount" -> 0, "PercentSucceeded" -> 
        Quantity[Indeterminate, "Percent"], "ProcessedFilesCount" -> 0, 
        "SuccessfulFilesCount" -> 0, "SkippedFilesCount" -> 0, 
        "MessageTemplate" -> "Documentation build completed successfully.", 
        "TargetWolframVersionNumber" -> 13.1|>]}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.90811652136654*^9, 3.908116607406789*^9, 
  3.9081176337047577`*^9, 3.9081177339792843`*^9, 3.908117911109948*^9, 
  3.908118008815618*^9, 3.90811814018618*^9, 3.908118656962941*^9, 
  3.9081187384881144`*^9, 3.908118919986556*^9, 3.908149837707925*^9, 
  3.908149983559585*^9, 3.908150161270667*^9, 3.908150326760685*^9, 
  3.908151094722744*^9, 3.908158468837083*^9, 3.908158756162046*^9, 
  3.908158830295713*^9, 3.908158916749485*^9, 3.9081592381222277`*^9, 
  3.9081627110749187`*^9, 3.908162904172393*^9, 3.908163101024517*^9, 
  3.908186114487225*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"4242cd21-2e8c-4012-8d38-1ad11c80591f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"AntLog\"\>", ",", "\<\"built\"\>", ",", "\<\"next\"\>", 
   ",", "\<\"options\"\>", ",", "\<\"pacletDir\"\>", 
   ",", "\<\"PageTitleForCreateInputForm\"\>", ",", "\<\"placeholder\"\>", 
   ",", "\<\"rule\"\>", ",", "\<\"testFileName\"\>", 
   ",", "\<\"$AntBuildQ\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.90811652136654*^9, 3.908116607406789*^9, 
  3.9081176337047577`*^9, 3.9081177339792843`*^9, 3.908117911109948*^9, 
  3.908118008815618*^9, 3.90811814018618*^9, 3.908118656962941*^9, 
  3.9081187384881144`*^9, 3.908118919986556*^9, 3.908149837707925*^9, 
  3.908149983559585*^9, 3.908150161270667*^9, 3.908150326760685*^9, 
  3.908151094722744*^9, 3.908158468837083*^9, 3.908158756162046*^9, 
  3.908158830295713*^9, 3.908158916749485*^9, 3.9081592381222277`*^9, 
  3.9081627110749187`*^9, 3.908162904172393*^9, 3.908163101024517*^9, 
  3.90818611455335*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"29532b9c-cd8f-4393-a869-893180cd34ad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"FernandoDuarte`LongRunRisk`\"\>", 
   ",", "\<\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"\>", 
   ",", "\<\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\>", 
   ",", "\<\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`\"\>", 
   ",", "\<\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`\"\>", 
   ",", "\<\"FernandoDuarte`LongRunRisk`Model`Shocks`\"\>", 
   ",", "\<\"FernandoDuarte`LongRunRisk`Model`Parameters`\"\>", 
   ",", "\<\"MaTeX`\"\>", ",", "\<\"PacletizedResourceFunctions`\"\>", 
   ",", "\<\"JLink`\"\>", ",", "\<\"CompiledLibrary`\"\>", 
   ",", "\<\"PacletTools`\"\>", ",", "\<\"DocumentationSearch`\"\>", 
   ",", "\<\"ResourceLocator`\"\>", ",", "\<\"Wolfram`Chatbook`\"\>", 
   ",", "\<\"System`\"\>", ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.90811652136654*^9, 3.908116607406789*^9, 
  3.9081176337047577`*^9, 3.9081177339792843`*^9, 3.908117911109948*^9, 
  3.908118008815618*^9, 3.90811814018618*^9, 3.908118656962941*^9, 
  3.9081187384881144`*^9, 3.908118919986556*^9, 3.908149837707925*^9, 
  3.908149983559585*^9, 3.908150161270667*^9, 3.908150326760685*^9, 
  3.908151094722744*^9, 3.908158468837083*^9, 3.908158756162046*^9, 
  3.908158830295713*^9, 3.908158916749485*^9, 3.9081592381222277`*^9, 
  3.9081627110749187`*^9, 3.908162904172393*^9, 3.908163101024517*^9, 
  3.908186129708362*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"cf95a07e-71a2-4714-8681-994011c73d45"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"AntLog\"\>", ",", "\<\"built\"\>", ",", "\<\"installed\"\>", 
   ",", "\<\"next\"\>", ",", "\<\"options\"\>", ",", "\<\"pacletDir\"\>", 
   ",", "\<\"PageTitleForCreateInputForm\"\>", ",", "\<\"placeholder\"\>", 
   ",", "\<\"rule\"\>", ",", "\<\"testFileName\"\>", 
   ",", "\<\"$AntBuildQ\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.90811652136654*^9, 3.908116607406789*^9, 
  3.9081176337047577`*^9, 3.9081177339792843`*^9, 3.908117911109948*^9, 
  3.908118008815618*^9, 3.90811814018618*^9, 3.908118656962941*^9, 
  3.9081187384881144`*^9, 3.908118919986556*^9, 3.908149837707925*^9, 
  3.908149983559585*^9, 3.908150161270667*^9, 3.908150326760685*^9, 
  3.908151094722744*^9, 3.908158468837083*^9, 3.908158756162046*^9, 
  3.908158830295713*^9, 3.908158916749485*^9, 3.9081592381222277`*^9, 
  3.9081627110749187`*^9, 3.908162904172393*^9, 3.908163101024517*^9, 
  3.908186129719136*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"9158c8b5-b0dd-4b90-a844-9bfe3810e904"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"\[LeftAssociation]", 
       RowBox[{
         RowBox[{
          "\"name\"", "\[Rule]", 
           "\"Model with a nominal real \
covariance\\t\\t\\t\\t\\n\\t\\t\\t(NRC)\""}], ",", 
         RowBox[{"\"shortname\"", "\[Rule]", "\"NRC\""}], ",", 
         TemplateBox[{"21"}, "OutputSizeLimit`Skeleton"], ",", 
         TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"\"Properties\"", "\[Rule]", 
           RowBox[{"{", 
             
             RowBox[{"\"name\"", ",", "\"shortname\"", ",", "\"bibRef\"", ",",
                "\"desc\"", ",", "\"parameters\"", ",", "\"stateVars\"", ",", 
               "\"numStocks\"", ",", "\"assignParam\"", ",", 
               "\"assignParamStocks\"", ",", "\"params\"", ",", 
               TemplateBox[{"4"}, "OutputSizeLimit`Skeleton"], ",", 
               "\"endogenousEq\"", ",", "\"exogenousVarNames\"", ",", 
               "\"endogenousVarNames\"", ",", "\"toStateVars\"", ",", 
               "\"uncondMomOfStateVars\"", ",", "\"ratioUncondE\"", ",", 
               "\"coeffsSystem\"", ",", "\"extraInfo\"", ",", 
               "\"coeffsSolution\"", ",", "\"coeffsSolutionN\""}], "}"}]}]}], 
       "\[RightAssociation]"}], Short[#, 8]& ], "line" -> 12, "sessionID" -> 
   24986536649987094103, "byteCount" -> 5940792, "size" -> 8, "stored" -> 
   False, "expr" -> Missing["NotStored"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.90811652136654*^9, 3.908116607406789*^9, 
  3.9081176337047577`*^9, 3.9081177339792843`*^9, 3.908117911109948*^9, 
  3.908118008815618*^9, 3.90811814018618*^9, 3.908118656962941*^9, 
  3.9081187384881144`*^9, 3.908118919986556*^9, 3.908149837707925*^9, 
  3.908149983559585*^9, 3.908150161270667*^9, 3.908150326760685*^9, 
  3.908151094722744*^9, 3.908158468837083*^9, 3.908158756162046*^9, 
  3.908158830295713*^9, 3.908158916749485*^9, 3.9081592381222277`*^9, 
  3.9081627110749187`*^9, 3.908162904172393*^9, 3.908163101024517*^9, 
  3.908186129860779*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"8fd265ef-9984-442d-a66c-0fabcb9dd7b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<FernandoDuarte`LongRunRisk`*\>\"", "]"}]], "Input",\

 CellChangeTimes->{{3.9081180480820103`*^9, 3.9081180586214657`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"b79489b5-cafc-41a2-a572-e23ca211a95a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Corr\"\>", ",", "\<\"Cov\"\>", ",", "\<\"covLongBKY\"\>", 
   ",", "\<\"covLongDES\"\>", ",", "\<\"covLongNRC\"\>", 
   ",", "\<\"covLongNRCStochVol\"\>", ",", "\<\"Epd0\"\>", ",", "\<\"Ev\"\>", 
   ",", "\<\"Ewc0\"\>", ",", "\<\"FindRootOptions\"\>", ",", "\<\"Growth\"\>",
    ",", "\<\"Info\"\>", ",", "\<\"Models\"\>", 
   ",", "\<\"ProcessNewParameters\"\>", ",", "\<\"RecurrenceTableOptions\"\>",
    ",", "\<\"ToEquation\"\>", ",", "\<\"ToExogenousVars\"\>", 
   ",", "\<\"ToNum\"\>", ",", "\<\"ToStateVars\"\>", 
   ",", "\<\"UncondCorr\"\>", ",", "\<\"UncondCov\"\>", 
   ",", "\<\"UncondE\"\>", ",", "\<\"UncondVar\"\>", ",", "\<\"Var\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.908118059104507*^9, 3.9081181490071287`*^9, 
  3.908118753000237*^9, 3.908150005178938*^9, 3.9081501811520844`*^9, 
  3.908150372097562*^9, 3.908150978096024*^9, 3.908151116629527*^9, 
  3.908158531258494*^9, 3.9081587909212313`*^9, 3.908158848019792*^9, 
  3.908158949279437*^9, 3.9081627305924253`*^9, 3.908162928105521*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"52807785-e45c-487e-96bd-c9db80103488"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "Ev"}], "\[IndentingNewLine]", 
 RowBox[{"?", "Var"}], "\[IndentingNewLine]", 
 RowBox[{"?", "Cov"}]}], "Input",
 CellChangeTimes->{{3.908118083541586*^9, 3.908118091360112*^9}, {
  3.908118151412923*^9, 3.908118151760919*^9}, {3.908118181804871*^9, 
  3.908118186444993*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"0b8d11c7-14d3-486d-b898-5f66cc898a85"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:FernandoDuarte/LongRunRisk/ref/Ev",
              ButtonNote->"paclet:FernandoDuarte/LongRunRisk/ref/Ev"],
             "\"paclet:FernandoDuarte/LongRunRisk/ref/Ev\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Ev[x, s, model] gives the expected value of x \
conditional on time s for model.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"Ev", "[", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`expr_", ",", 
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`conditionalTime_", ",", 
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`model_"}], "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`assignParam", "=", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`model", "[", "\"assignParam\"", 
                    "]"}]}], ",", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`assignParamStocks", "=", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`model", "[", "\"assignParamStocks\"", 
                    "]"}]}], ",", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`rulesEfun", "=", 
                    RowBox[{"Function", "[", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`t", ",", 
                    RowBox[{"rulesE", "[", 
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`t", "]"}]}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "rulesE", "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"rulesE", "[", 
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`t_", "]"}], ":=", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`rulesEfun", "[", 
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`t", "]"}], "//.", "\[VeryThinSpace]", 
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`assignParam"}], "//.", 
                    "\[VeryThinSpace]", 
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`assignParamStocks"}]}], ";", 
                    RowBox[{
                    RowBox[{"ExpandAll", "[", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst", "[", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`expr", ",", 
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`conditionalTime", ",", 
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`model"}], "]"}], "]"}], "//.", 
                    "\[VeryThinSpace]", 
                    RowBox[{"rulesE", "[", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`t_", "/;", 
                    RowBox[{"Refine", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`t", ">", 
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`conditionalTime"}], ",", 
                    RowBox[{
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`t", "\[GreaterEqual]", "0"}], "&&", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`conditionalTime", "\[GreaterEqual]", 
                    "0"}]}]}], "]"}]}], "]"}]}]}]}], "]"}]}], "]"}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:FernandoDuarte/LongRunRisk/ref/Ev", 
                    "paclet:FernandoDuarte/LongRunRisk/ref/Ev", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "HoldFirst", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"FernandoDuarte`LongRunRisk`Ev\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{20., {6., 14.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{20., {6., 14.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:FernandoDuarte/LongRunRisk/ref/Ev",
              ButtonNote->"paclet:FernandoDuarte/LongRunRisk/ref/Ev"],
             "\"paclet:FernandoDuarte/LongRunRisk/ref/Ev\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Ev[x, s, model] gives the expected value of x \
conditional on time s for model.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Ev[x, s, model] gives the expected value of x conditional on time s for \
model.", "Documentation" -> <|
     "Local" -> "paclet:FernandoDuarte/LongRunRisk/ref/Ev"|>, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, FernandoDuarte`LongRunRisk`Ev, {FernandoDuarte`LongRunRisk`Ev[
         Pattern[
         FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`expr, 
          Blank[]], 
         Pattern[
         FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`conditionalTime, 
          Blank[]], 
         Pattern[
         FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`model, 
          Blank[]]] :> 
       With[{FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`assignParam = 
          FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`model["assignParam"], 
          FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`assignParamStocks = 
          FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`model["assignParamStocks"], 
          FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`rulesEfun = 
          Function[
           FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`t, 
            FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
            FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`t]]}, 
         Module[{FernandoDuarte`LongRunRisk`Model`Shocks`rulesE}, 
          FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
             Pattern[
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`t, 
              Blank[]]] := ReplaceRepeated[
             ReplaceRepeated[
              
              FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`rulesEfun[
              FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`t], 
              FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`assignParam], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`assignParamStocks]; ReplaceRepeated[
            ExpandAll[
             
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`expr, 
              FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`conditionalTime, 
              FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`model]], 
            FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
             Condition[
              Pattern[
              FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`t, 
               Blank[]], 
              Refine[
              FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`t > 
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`conditionalTime, 
               And[
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`t >= 0, 
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`conditionalTime >= 0]]]]]]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {HoldFirst}, 
    "FullName" -> "FernandoDuarte`LongRunRisk`Ev"|>, False]]], "Output",
 CellChangeTimes->{{3.908118084864764*^9, 3.908118092073256*^9}, 
   3.908118152406377*^9, 3.9081181869914923`*^9, 3.908118754625087*^9, 
   3.908150016703573*^9, 3.908150185949609*^9, 3.90815037296109*^9, 
   3.908151122024383*^9, 3.908158533948756*^9, 3.908158792434243*^9, 
   3.908158852475987*^9, 3.90815896583455*^9, 3.908162732679891*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"a61046cd-11da-4a4c-9496-46461bfa3565"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:FernandoDuarte/LongRunRisk/ref/Var",
              ButtonNote->"paclet:FernandoDuarte/LongRunRisk/ref/Var"],
             "\"paclet:FernandoDuarte/LongRunRisk/ref/Var\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Var[x, s, model] gives the Variance of x \
conditional on time s for model.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"Var", "[", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`expr_", ",", 
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`conditionalTime_", ",", 
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`model_"}], "]"}], ":=", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev", "[", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`expr", "-", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev", "[", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`expr", ",", 
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`conditionalTime", ",", 
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`model"}], "]"}]}], ")"}], "2"], ",", 
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`conditionalTime", ",", 
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`model"}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:FernandoDuarte/LongRunRisk/ref/Var", 
                    "paclet:FernandoDuarte/LongRunRisk/ref/Var", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "HoldFirst", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"FernandoDuarte`LongRunRisk`Var\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{20., {6., 14.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{20., {6., 14.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:FernandoDuarte/LongRunRisk/ref/Var",
              ButtonNote->"paclet:FernandoDuarte/LongRunRisk/ref/Var"],
             "\"paclet:FernandoDuarte/LongRunRisk/ref/Var\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Var[x, s, model] gives the Variance of x \
conditional on time s for model.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Var[x, s, model] gives the Variance of x conditional on time s for \
model.", "Documentation" -> <|
     "Local" -> "paclet:FernandoDuarte/LongRunRisk/ref/Var"|>, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, FernandoDuarte`LongRunRisk`Var, {
      FernandoDuarte`LongRunRisk`Var[
         Pattern[
         FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`expr, 
          Blank[]], 
         Pattern[
         FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`conditionalTime, 
          Blank[]], 
         Pattern[
         FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`model, 
          Blank[]]] :> 
       FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[(
          FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`expr - 
          FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
          FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`expr, 
           FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`conditionalTime, 
           FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`model])^2, 
         FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`conditionalTime, 
         FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`model]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {HoldFirst}, "FullName" -> 
    "FernandoDuarte`LongRunRisk`Var"|>, False]]], "Output",
 CellChangeTimes->{{3.908118084864764*^9, 3.908118092073256*^9}, 
   3.908118152406377*^9, 3.9081181869914923`*^9, 3.908118754625087*^9, 
   3.908150016703573*^9, 3.908150185949609*^9, 3.90815037296109*^9, 
   3.908151122024383*^9, 3.908158533948756*^9, 3.908158792434243*^9, 
   3.908158852475987*^9, 3.90815896583455*^9, 3.908162732710855*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"936b8461-0deb-4fb3-9c49-fd9a349ba5fe"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:FernandoDuarte/LongRunRisk/ref/Cov",
              ButtonNote->"paclet:FernandoDuarte/LongRunRisk/ref/Cov"],
             "\"paclet:FernandoDuarte/LongRunRisk/ref/Cov\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Cov[x, y, s, model] gives the Covariance of x and y \
conditional on time s for model.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"Cov", "[", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`expr1_", ",", 
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`expr2_", ",", 
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`conditionalTime_", ",", 
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`model_"}], "]"}], ":=", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`expr1", "-", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev", "[", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`expr1", ",", 
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`conditionalTime", ",", 
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`model"}], "]"}]}], ")"}], " ", 
                    RowBox[{"(", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`expr2", "-", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev", "[", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`expr2", ",", 
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`conditionalTime", ",", 
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`model"}], "]"}]}], ")"}]}], ",", 
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`conditionalTime", ",", 
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`model"}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:FernandoDuarte/LongRunRisk/ref/Cov", 
                    "paclet:FernandoDuarte/LongRunRisk/ref/Cov", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "HoldFirst", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"FernandoDuarte`LongRunRisk`Cov\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{20., {6., 14.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{20., {6., 14.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:FernandoDuarte/LongRunRisk/ref/Cov",
              ButtonNote->"paclet:FernandoDuarte/LongRunRisk/ref/Cov"],
             "\"paclet:FernandoDuarte/LongRunRisk/ref/Cov\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Cov[x, y, s, model] gives the Covariance of x and y \
conditional on time s for model.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Cov[x, y, s, model] gives the Covariance of x and y conditional on time \
s for model.", 
    "Documentation" -> <|
     "Local" -> "paclet:FernandoDuarte/LongRunRisk/ref/Cov"|>, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, FernandoDuarte`LongRunRisk`Cov, {
      FernandoDuarte`LongRunRisk`Cov[
         Pattern[
         FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`expr1, 
          Blank[]], 
         Pattern[
         FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`expr2, 
          Blank[]], 
         Pattern[
         FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`conditionalTime, 
          Blank[]], 
         Pattern[
         FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`model, 
          Blank[]]] :> 
       FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[(
          FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`expr1 - 
          FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
          FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`expr1, 
           FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`conditionalTime, 
           FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`model]) (
          FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`expr2 - 
          FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
          FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`expr2, 
           FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`conditionalTime, 
           FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`model]), 
         FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`conditionalTime, 
         FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`model]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {HoldFirst}, "FullName" -> 
    "FernandoDuarte`LongRunRisk`Cov"|>, False]]], "Output",
 CellChangeTimes->{{3.908118084864764*^9, 3.908118092073256*^9}, 
   3.908118152406377*^9, 3.9081181869914923`*^9, 3.908118754625087*^9, 
   3.908150016703573*^9, 3.908150185949609*^9, 3.90815037296109*^9, 
   3.908151122024383*^9, 3.908158533948756*^9, 3.908158792434243*^9, 
   3.908158852475987*^9, 3.90815896583455*^9, 3.908162732740779*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"282e9f3a-363d-40e2-b704-212176ef6d6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Ev", "[", 
  RowBox[{
   RowBox[{"dc", "[", "t", "]"}], ",", 
   RowBox[{"t", "-", "1"}], ",", "model"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Var", "[", 
  RowBox[{
   RowBox[{"dc", "[", "t", "]"}], ",", 
   RowBox[{"t", "-", "1"}], ",", "model"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Cov", "[", 
  RowBox[{
   RowBox[{"dc", "[", "t", "]"}], ",", 
   RowBox[{"retc", "[", "t", "]"}], ",", 
   RowBox[{"t", "-", "1"}], ",", "model"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Corr", "[", 
  RowBox[{
   RowBox[{"dc", "[", "t", "]"}], ",", 
   RowBox[{"retc", "[", "t", "]"}], ",", 
   RowBox[{"t", "-", "1"}], ",", "model"}], "]"}]}], "Input",
 CellChangeTimes->{{3.908118061082693*^9, 3.908118069718511*^9}, {
  3.908118168873934*^9, 3.90811820315336*^9}, {3.9081590501312513`*^9, 
  3.9081590520069313`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"de8a889c-cc3d-4300-a849-e51681f265e2"],

Cell[BoxData[
 RowBox[{"muc", "-", 
  RowBox[{"mup", " ", "rhocp"}], "+", 
  RowBox[{"rhocp", " ", 
   RowBox[{"pi", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "t"}], "]"}]}], "+", 
  RowBox[{"xic", " ", 
   RowBox[{"sg", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "t"}], "]"}], " ", 
   RowBox[{
    RowBox[{"eps", "[", "\<\"pi\"\>", "]"}], "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "t"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.908118064602139*^9, 3.9081180706698933`*^9}, {
   3.908118153977936*^9, 3.908118169419433*^9}, 3.908118203658761*^9, 
   3.9081187561395597`*^9, 3.908150019777631*^9, 3.908150186960311*^9, 
   3.908150374585902*^9, 3.908151124436614*^9, 3.9081585351502047`*^9, 
   3.908158793523178*^9, 3.9081588564998837`*^9, 3.908158968900783*^9, 
   3.908159065355197*^9, 3.908160225671977*^9, 3.908162746540427*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"f00f7564-857b-4ccb-8d50-f352c16e60cf"],

Cell[BoxData[
 SuperscriptBox["phic", "2"]], "Output",
 CellChangeTimes->{{3.908118064602139*^9, 3.9081180706698933`*^9}, {
   3.908118153977936*^9, 3.908118169419433*^9}, 3.908118203658761*^9, 
   3.9081187561395597`*^9, 3.908150019777631*^9, 3.908150186960311*^9, 
   3.908150374585902*^9, 3.908151124436614*^9, 3.9081585351502047`*^9, 
   3.908158793523178*^9, 3.9081588564998837`*^9, 3.908158968900783*^9, 
   3.908159065355197*^9, 3.908160225671977*^9, 3.908162746563349*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"6acfe773-924b-40e0-be43-cbcde0a2b58e"],

Cell[BoxData[
 SuperscriptBox["phic", "2"]], "Output",
 CellChangeTimes->{{3.908118064602139*^9, 3.9081180706698933`*^9}, {
   3.908118153977936*^9, 3.908118169419433*^9}, 3.908118203658761*^9, 
   3.9081187561395597`*^9, 3.908150019777631*^9, 3.908150186960311*^9, 
   3.908150374585902*^9, 3.908151124436614*^9, 3.9081585351502047`*^9, 
   3.908158793523178*^9, 3.9081588564998837`*^9, 3.908158968900783*^9, 
   3.908159065355197*^9, 3.908160225671977*^9, 3.908162746614533*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"a457118d-bbe3-4e3a-9591-80906a6aeebf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   SqrtBox[
    SuperscriptBox["phic", "2"]], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["phic", "2"], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "Ewc"}]], " ", 
        SuperscriptBox["phip", "2"], " ", 
        SuperscriptBox[
         RowBox[{"A", "[", "1", "]"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", "Ewc"]}], ")"}], "2"]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "Ewc"}]], " ", "phip", " ", 
        RowBox[{"A", "[", "1", "]"}], " ", 
        RowBox[{"A", "[", "3", "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", "Ewc"]}], ")"}], "2"]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "Ewc"}]], " ", 
        SuperscriptBox[
         RowBox[{"A", "[", "3", "]"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", "Ewc"]}], ")"}], "2"]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "Ewc"}]], " ", 
        SuperscriptBox["phig", "2"], " ", 
        SuperscriptBox[
         RowBox[{"A", "[", "4", "]"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", "Ewc"]}], ")"}], "2"]], "+", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "Ewc"}]], " ", "Esg", " ", 
        SuperscriptBox["phig", "2"], " ", 
        RowBox[{"A", "[", "4", "]"}], " ", 
        RowBox[{"A", "[", "5", "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", "Ewc"]}], ")"}], "2"]], "-", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "Ewc"}]], " ", "Esg", " ", 
        SuperscriptBox["phig", "2"], " ", "rhog", " ", 
        RowBox[{"A", "[", "4", "]"}], " ", 
        RowBox[{"A", "[", "5", "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", "Ewc"]}], ")"}], "2"]], "+", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "Ewc"}]], " ", 
        SuperscriptBox["Esg", "2"], " ", 
        SuperscriptBox["phig", "2"], " ", 
        SuperscriptBox[
         RowBox[{"A", "[", "5", "]"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", "Ewc"]}], ")"}], "2"]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "Ewc"}]], " ", 
        SuperscriptBox["phig", "4"], " ", 
        SuperscriptBox[
         RowBox[{"A", "[", "5", "]"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", "Ewc"]}], ")"}], "2"]], "-", 
      FractionBox[
       RowBox[{"8", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "Ewc"}]], " ", 
        SuperscriptBox["Esg", "2"], " ", 
        SuperscriptBox["phig", "2"], " ", "rhog", " ", 
        SuperscriptBox[
         RowBox[{"A", "[", "5", "]"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", "Ewc"]}], ")"}], "2"]], "+", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "Ewc"}]], " ", 
        SuperscriptBox["Esg", "2"], " ", 
        SuperscriptBox["phig", "2"], " ", 
        SuperscriptBox["rhog", "2"], " ", 
        SuperscriptBox[
         RowBox[{"A", "[", "5", "]"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", "Ewc"]}], ")"}], "2"]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "Ewc"}]], " ", 
        SuperscriptBox["phig", "4"], " ", 
        SuperscriptBox[
         RowBox[{"A", "[", "5", "]"}], "2"]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", "Ewc"]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["rhog", "2"]}], ")"}], "2"]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "Ewc"}]], " ", 
        SuperscriptBox["phig", "4"], " ", 
        SuperscriptBox[
         RowBox[{"A", "[", "5", "]"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", "Ewc"], "-", 
          SuperscriptBox["rhog", "2"], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "Ewc"], " ", 
           SuperscriptBox["rhog", "2"]}]}], ")"}], "2"]], "-", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "Ewc"}]], " ", 
        SuperscriptBox["phig", "4"], " ", 
        SuperscriptBox[
         RowBox[{"A", "[", "5", "]"}], "2"]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", "Ewc"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["rhog", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", "Ewc"], "-", 
          SuperscriptBox["rhog", "2"], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "Ewc"], " ", 
           SuperscriptBox["rhog", "2"]}]}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "Ewc"}]], " ", "phip", " ", 
        RowBox[{"A", "[", "1", "]"}], " ", 
        RowBox[{"A", "[", "2", "]"}], " ", 
        RowBox[{"sg", "[", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "t"}], "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", "Ewc"]}], ")"}], "2"]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "Ewc"}]], " ", 
        RowBox[{"A", "[", "2", "]"}], " ", 
        RowBox[{"A", "[", "3", "]"}], " ", 
        RowBox[{"sg", "[", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "t"}], "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", "Ewc"]}], ")"}], "2"]], "+", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "Ewc"}]], " ", 
        SuperscriptBox["phig", "2"], " ", "rhog", " ", 
        RowBox[{"A", "[", "4", "]"}], " ", 
        RowBox[{"A", "[", "5", "]"}], " ", 
        RowBox[{"sg", "[", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "t"}], "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", "Ewc"]}], ")"}], "2"]], "+", 
      FractionBox[
       RowBox[{"8", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "Ewc"}]], " ", "Esg", " ", 
        SuperscriptBox["phig", "2"], " ", "rhog", " ", 
        SuperscriptBox[
         RowBox[{"A", "[", "5", "]"}], "2"], " ", 
        RowBox[{"sg", "[", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "t"}], "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", "Ewc"]}], ")"}], "2"]], "-", 
      FractionBox[
       RowBox[{"8", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "Ewc"}]], " ", "Esg", " ", 
        SuperscriptBox["phig", "2"], " ", 
        SuperscriptBox["rhog", "2"], " ", 
        SuperscriptBox[
         RowBox[{"A", "[", "5", "]"}], "2"], " ", 
        RowBox[{"sg", "[", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "t"}], "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", "Ewc"]}], ")"}], "2"]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "Ewc"}]], " ", 
        SuperscriptBox[
         RowBox[{"A", "[", "2", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"sg", "[", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "t"}], "]"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", "Ewc"]}], ")"}], "2"]], "+", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "Ewc"}]], " ", 
        SuperscriptBox["phig", "2"], " ", 
        SuperscriptBox["rhog", "2"], " ", 
        SuperscriptBox[
         RowBox[{"A", "[", "5", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"sg", "[", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "t"}], "]"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", "Ewc"]}], ")"}], "2"]]}], ")"}]}],
    ")"}]}]], "Output",
 CellChangeTimes->{{3.908118064602139*^9, 3.9081180706698933`*^9}, {
   3.908118153977936*^9, 3.908118169419433*^9}, 3.908118203658761*^9, 
   3.9081187561395597`*^9, 3.908150019777631*^9, 3.908150186960311*^9, 
   3.908150374585902*^9, 3.908151124436614*^9, 3.9081585351502047`*^9, 
   3.908158793523178*^9, 3.9081588564998837`*^9, 3.908158968900783*^9, 
   3.908159065355197*^9, 3.908160225671977*^9, 3.908162746731904*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"b1f5b4a6-f1ba-4545-bf45-0bc37ee66154"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ToNum", "[", 
  RowBox[{"Ewc", ",", "model"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ToNum", "[", 
  RowBox[{
   RowBox[{"A", "[", "0", "]"}], ",", "model"}], "]"}]}], "Input",
 CellChangeTimes->{{3.908159085561532*^9, 3.908159094913065*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"5fd4e743-0fa3-49df-b06b-c243232ba2eb"],

Cell[BoxData["4.21745451385297`"], "Output",
 CellChangeTimes->{{3.9081590877666607`*^9, 3.9081590960391273`*^9}, 
   3.9081627482840853`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"945b98f5-095a-4508-9937-6a1d45f9277d"],

Cell[BoxData["4.21745451385297`"], "Output",
 CellChangeTimes->{{3.9081590877666607`*^9, 3.9081590960391273`*^9}, 
   3.9081627486962967`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"0cf581ca-0743-4a83-861c-c13797199eec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ToNum", "[", 
  RowBox[{
   RowBox[{"Ev", "[", 
    RowBox[{
     RowBox[{"dc", "[", "t", "]"}], ",", 
     RowBox[{"t", "-", "1"}]}], "]"}], ",", "model"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ToNum", "[", 
  RowBox[{
   RowBox[{"Var", "[", 
    RowBox[{
     RowBox[{"dc", "[", "t", "]"}], ",", 
     RowBox[{"t", "-", "1"}]}], "]"}], ",", "model"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ToNum", "[", 
  RowBox[{
   RowBox[{"Cov", "[", 
    RowBox[{
     RowBox[{"dc", "[", "t", "]"}], ",", 
     RowBox[{"retc", "[", "t", "]"}], ",", 
     RowBox[{"t", "-", "1"}]}], "]"}], ",", "model"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ToNum", "[", 
  RowBox[{
   RowBox[{"Corr", "[", 
    RowBox[{
     RowBox[{"dc", "[", "t", "]"}], ",", 
     RowBox[{"retc", "[", "t", "]"}], ",", 
     RowBox[{"t", "-", "1"}]}], "]"}], ",", "model"}], "]"}]}], "Input",
 CellChangeTimes->{{3.908159040969318*^9, 3.90815906209935*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"aa61c210-a3da-47b1-9a59-66028dc4a973"],

Cell[BoxData[
 RowBox[{"0.001813265789112`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.0521066`", " ", 
   RowBox[{"(", 
    RowBox[{"0.00327532`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.79917`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.00327532`"}], "+", 
        RowBox[{"pi", "[", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "t"}], "]"}]}], ")"}]}], "+", 
     RowBox[{"0.00073007`", " ", 
      RowBox[{
       RowBox[{"eps", "[", "\<\"pi\"\>", "]"}], "[", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "t"}], "]"}]}], "-", 
     RowBox[{"0.0024624`", " ", 
      RowBox[{
       RowBox[{"eps", "[", "\<\"pi\"\>", "]"}], "[", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "t"}], "]"}]}]}], ")"}]}], "-", 
  RowBox[{"0.198287`", " ", 
   RowBox[{
    RowBox[{"eps", "[", "\<\"pi\"\>", "]"}], "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "t"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "0.00624`"}], "+", 
     RowBox[{"0.996289`", " ", 
      RowBox[{"(", 
       RowBox[{"0.00624`", "\[VeryThinSpace]", "+", 
        RowBox[{"sg", "[", 
         RowBox[{
          RowBox[{"-", "3"}], "+", "t"}], "]"}]}], ")"}]}], "+", 
     RowBox[{"0.002927236529485`", " ", 
      RowBox[{
       RowBox[{"eps", "[", "\<\"sg\"\>", "]"}], "[", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "t"}], "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.908159069223682*^9, 3.90816274990659*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"da4f8ada-26ff-413c-ab6e-3d1de2bda5ab"],

Cell[BoxData["4.1883259716`*^-6"], "Output",
 CellChangeTimes->{3.908159069223682*^9, 3.908162750322846*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"8ca5f6cd-dacf-4e77-85f6-5e7549feef08"],

Cell[BoxData["4.1883259716`*^-6"], "Output",
 CellChangeTimes->{3.908159069223682*^9, 3.908162750800976*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"b647f9c8-ef79-490e-a2c0-ef1c3b101f1a"],

Cell[BoxData[
 RowBox[{"0.00204654`", "/", 
  RowBox[{"(", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{"0.00036882014037158296`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.008724408250077524`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.00624`"}], "+", 
         RowBox[{"0.996289`", " ", 
          RowBox[{"(", 
           RowBox[{"0.00624`", "\[VeryThinSpace]", "+", 
            RowBox[{"sg", "[", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "t"}], "]"}]}], ")"}]}], "+", 
         RowBox[{"0.002927236529485`", " ", 
          RowBox[{
           RowBox[{"eps", "[", "\<\"sg\"\>", "]"}], "[", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "t"}], "]"}]}]}], ")"}]}], "+", 
      RowBox[{"0.0622653467826061`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.00624`"}], "+", 
          RowBox[{"0.996289`", " ", 
           RowBox[{"(", 
            RowBox[{"0.00624`", "\[VeryThinSpace]", "+", 
             RowBox[{"sg", "[", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "t"}], "]"}]}], ")"}]}], "+", 
          RowBox[{"0.002927236529485`", " ", 
           RowBox[{
            RowBox[{"eps", "[", "\<\"sg\"\>", "]"}], "[", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "t"}], "]"}]}]}], ")"}], "2"]}]}], 
     ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.908159069223682*^9, 3.9081627513704453`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"0f2b4b1c-eafc-4573-8a60-7c8060d319e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"UncondE", "[", 
  RowBox[{
   RowBox[{"dc", "[", "t", "]"}], ",", "model"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"UncondVar", "[", 
  RowBox[{
   RowBox[{"dc", "[", "t", "]"}], ",", "model"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"UncondCov", "[", 
  RowBox[{
   RowBox[{"dc", "[", "t", "]"}], ",", 
   RowBox[{"dc", "[", 
    RowBox[{"t", "-", "1"}], "]"}], ",", "model"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"UncondCorr", "[", 
  RowBox[{
   RowBox[{"dc", "[", "t", "]"}], ",", 
   RowBox[{"dc", "[", 
    RowBox[{"t", "-", "1"}], "]"}], ",", "model"}], "]"}]}], "Input",
 CellLabel->"In[29]:=",ExpressionUUID->"59942f2f-6925-4f7e-b68c-e371ed538f0a"],

Cell[BoxData["muc"], "Output",
 CellChangeTimes->{3.9081591010990763`*^9, 3.908162752100964*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"ded7acb0-d370-4ad0-b0a7-3f3802f3f386"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["phic", "2"], "-", 
  RowBox[{
   SuperscriptBox["mup", "2"], " ", 
   SuperscriptBox["rhocp", "2"]}], "+", 
  RowBox[{"2", " ", "Esg", " ", "phip", " ", "rhocp", " ", "xic"}], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["Esg", "2"], "+", 
      SuperscriptBox["phig", "2"], "-", 
      RowBox[{
       SuperscriptBox["Esg", "2"], " ", 
       SuperscriptBox["rhog", "2"]}]}], ")"}], " ", 
    SuperscriptBox["xic", "2"]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "rhog"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "rhog"}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["rhocp", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["mup", "2"], "+", 
      SuperscriptBox["phip", "2"], "-", 
      RowBox[{
       SuperscriptBox["mup", "2"], " ", 
       SuperscriptBox["rhop", "2"]}], "+", 
      RowBox[{"2", " ", "phip", " ", "rhop", " ", "xip"}], "+", 
      SuperscriptBox["xip", "2"]}], ")"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "rhop"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "rhop"}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.9081591010990763`*^9, 3.908162752103355*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"53c36cbf-7c38-4ea3-a539-6f730905b544"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["mup", "2"]}], " ", 
   SuperscriptBox["rhocp", "2"], " ", "rhop"}], "+", 
  RowBox[{"Esg", " ", "phip", " ", "rhocp", " ", "rhop", " ", "xic"}], "+", 
  RowBox[{"phip", " ", 
   SuperscriptBox["rhocp", "2"], " ", "xip"}], "+", 
  RowBox[{"Esg", " ", "rhocp", " ", "xic", " ", "xip"}], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["rhocp", "2"], " ", "rhop", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["mup", "2"], "+", 
      SuperscriptBox["phip", "2"], "-", 
      RowBox[{
       SuperscriptBox["mup", "2"], " ", 
       SuperscriptBox["rhop", "2"]}], "+", 
      RowBox[{"2", " ", "phip", " ", "rhop", " ", "xip"}], "+", 
      SuperscriptBox["xip", "2"]}], ")"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "rhop"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "rhop"}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.9081591010990763`*^9, 3.90816275210489*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"9e7945b0-9bfa-427d-80c1-2be48fa0188f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["mup", "2"]}], " ", 
     SuperscriptBox["rhocp", "2"], " ", "rhop"}], "+", 
    RowBox[{"Esg", " ", "phip", " ", "rhocp", " ", "rhop", " ", "xic"}], "+", 
    
    RowBox[{"phip", " ", 
     SuperscriptBox["rhocp", "2"], " ", "xip"}], "+", 
    RowBox[{"Esg", " ", "rhocp", " ", "xic", " ", "xip"}], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["rhocp", "2"], " ", "rhop", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["mup", "2"], "+", 
        SuperscriptBox["phip", "2"], "-", 
        RowBox[{
         SuperscriptBox["mup", "2"], " ", 
         SuperscriptBox["rhop", "2"]}], "+", 
        RowBox[{"2", " ", "phip", " ", "rhop", " ", "xip"}], "+", 
        SuperscriptBox["xip", "2"]}], ")"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "rhop"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "rhop"}], ")"}]}]]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["phic", "2"], "-", 
    RowBox[{
     SuperscriptBox["mup", "2"], " ", 
     SuperscriptBox["rhocp", "2"]}], "+", 
    RowBox[{"2", " ", "Esg", " ", "phip", " ", "rhocp", " ", "xic"}], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["Esg", "2"], "+", 
        SuperscriptBox["phig", "2"], "-", 
        RowBox[{
         SuperscriptBox["Esg", "2"], " ", 
         SuperscriptBox["rhog", "2"]}]}], ")"}], " ", 
      SuperscriptBox["xic", "2"]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "rhog"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "rhog"}], ")"}]}]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["rhocp", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["mup", "2"], "+", 
        SuperscriptBox["phip", "2"], "-", 
        RowBox[{
         SuperscriptBox["mup", "2"], " ", 
         SuperscriptBox["rhop", "2"]}], "+", 
        RowBox[{"2", " ", "phip", " ", "rhop", " ", "xip"}], "+", 
        SuperscriptBox["xip", "2"]}], ")"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "rhop"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "rhop"}], ")"}]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.9081591010990763`*^9, 3.908162752106471*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"9458d7d4-8054-41a3-9a45-d7a55aa640a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ToNum", "[", 
  RowBox[{
   RowBox[{"UncondE", "[", 
    RowBox[{"dc", "[", "t", "]"}], "]"}], ",", "model"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ToNum", "[", 
  RowBox[{
   RowBox[{"UncondVar", "[", 
    RowBox[{"dc", "[", "t", "]"}], "]"}], ",", "model"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ToNum", "[", 
  RowBox[{
   RowBox[{"UncondCov", "[", 
    RowBox[{
     RowBox[{"dc", "[", 
      RowBox[{"t", "-", "1"}], "]"}], ",", 
     RowBox[{"dc", "[", "t", "]"}]}], "]"}], ",", "model"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ToNum", "[", 
  RowBox[{
   RowBox[{"UncondCorr", "[", 
    RowBox[{
     RowBox[{"dc", "[", "t", "]"}], ",", 
     RowBox[{"dc", "[", 
      RowBox[{"t", "-", "1"}], "]"}]}], "]"}], ",", "model"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.908118233206419*^9, 3.908118309164023*^9}, 
   3.908118368898361*^9, {3.9081186849418993`*^9, 3.908118694989153*^9}, {
   3.908118770780959*^9, 3.9081187807312317`*^9}, {3.908118935024186*^9, 
   3.9081189540617237`*^9}, {3.9081589767957563`*^9, 3.908159017475974*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"4ae57fd9-5796-42b7-91ad-8d0c649cb582"],

Cell[BoxData["0.0016426`"], "Output",
 CellChangeTimes->{{3.908118681317379*^9, 3.908118695807638*^9}, {
   3.908118758901249*^9, 3.9081187817155857`*^9}, {3.90811893127052*^9, 
   3.9081189550442343`*^9}, 3.908150024344162*^9, 3.908150088169004*^9, 
   3.908150188892393*^9, 3.908150376022059*^9, 3.9081511270965443`*^9, 
   3.908158537609828*^9, 3.908158797862873*^9, 3.9081588607274027`*^9, 
   3.9081589940158854`*^9, 3.9081591028708076`*^9, 3.90816275379557*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"5c5e00cf-d343-4c9f-96fa-a907bfc35e0e"],

Cell[BoxData["0.00005154153637506193`"], "Output",
 CellChangeTimes->{{3.908118681317379*^9, 3.908118695807638*^9}, {
   3.908118758901249*^9, 3.9081187817155857`*^9}, {3.90811893127052*^9, 
   3.9081189550442343`*^9}, 3.908150024344162*^9, 3.908150088169004*^9, 
   3.908150188892393*^9, 3.908150376022059*^9, 3.9081511270965443`*^9, 
   3.908158537609828*^9, 3.908158797862873*^9, 3.9081588607274027`*^9, 
   3.9081589940158854`*^9, 3.9081591028708076`*^9, 3.9081627542114*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"078e05b7-7449-4025-bda0-711e924f2a75"],

Cell[BoxData["9.728034315760473`*^-8"], "Output",
 CellChangeTimes->{{3.908118681317379*^9, 3.908118695807638*^9}, {
   3.908118758901249*^9, 3.9081187817155857`*^9}, {3.90811893127052*^9, 
   3.9081189550442343`*^9}, 3.908150024344162*^9, 3.908150088169004*^9, 
   3.908150188892393*^9, 3.908150376022059*^9, 3.9081511270965443`*^9, 
   3.908158537609828*^9, 3.908158797862873*^9, 3.9081588607274027`*^9, 
   3.9081589940158854`*^9, 3.9081591028708076`*^9, 3.908162754625551*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"7fe7dc69-6afa-42d4-9ae6-221ba094973c"],

Cell[BoxData["0.0018874164411729344`"], "Output",
 CellChangeTimes->{{3.908118681317379*^9, 3.908118695807638*^9}, {
   3.908118758901249*^9, 3.9081187817155857`*^9}, {3.90811893127052*^9, 
   3.9081189550442343`*^9}, 3.908150024344162*^9, 3.908150088169004*^9, 
   3.908150188892393*^9, 3.908150376022059*^9, 3.9081511270965443`*^9, 
   3.908158537609828*^9, 3.908158797862873*^9, 3.9081588607274027`*^9, 
   3.9081589940158854`*^9, 3.9081591028708076`*^9, 3.908162755038535*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"4e94610d-9087-48c4-826e-44a9f7c39ff1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "UncondE"}]], "Input",
 CellChangeTimes->{{3.90815010285946*^9, 3.908150112164407*^9}, {
  3.9081501937148323`*^9, 3.908150194378418*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"51a3d1b4-e32f-47c1-9b19-f95e1be2f7ac"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:FernandoDuarte/LongRunRisk/ref/UncondE",
              ButtonNote->"paclet:FernandoDuarte/LongRunRisk/ref/UncondE"],
             "\"paclet:FernandoDuarte/LongRunRisk/ref/UncondE\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"UncondE[expr, model] gives the unconditional \
expectation of expr for model.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"UncondE", "[", 
                    
                    RowBox[{
                    "x_", ",", 
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`model_"}], "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`uncondMomOfStateVars", "=", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`model", "[", 
                    "\"uncondMomOfStateVars\"", "]"}]}], "}"}], ",", 
                    RowBox[{
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`uncondEStep", "[", 
                    
                    RowBox[{"x", ",", 
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`model"}], "]"}], "//.", 
                    "\[VeryThinSpace]", 
                    "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`uncondMomOfStateVars"}]}], 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:FernandoDuarte/LongRunRisk/ref/UncondE", 
                    "paclet:FernandoDuarte/LongRunRisk/ref/UncondE", "Link", {
                    
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"FernandoDuarte`LongRunRisk`UncondE\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{20., {6., 14.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{20., {6., 14.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:FernandoDuarte/LongRunRisk/ref/UncondE",
              ButtonNote->"paclet:FernandoDuarte/LongRunRisk/ref/UncondE"],
             "\"paclet:FernandoDuarte/LongRunRisk/ref/UncondE\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"UncondE[expr, model] gives the unconditional \
expectation of expr for model.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "UncondE[expr, model] gives the unconditional expectation of expr for \
model.", "Documentation" -> <|
     "Local" -> "paclet:FernandoDuarte/LongRunRisk/ref/UncondE"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, FernandoDuarte`LongRunRisk`UncondE, {
      FernandoDuarte`LongRunRisk`UncondE[
         Pattern[FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x, 
          Blank[]], 
         Pattern[
         FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`model, 
          Blank[]]] :> 
       With[{FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`uncondMomOfStateVars = 
          FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`model["uncondMomOfStateVars"]}, 
         ReplaceRepeated[
          
          FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`uncondEStep[
          FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x, 
           FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`model], 
          FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`uncondMomOfStateVars]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "FernandoDuarte`LongRunRisk`UncondE"|>, False]]], "Output",
 CellChangeTimes->{{3.9081501035959797`*^9, 3.908150112837387*^9}, {
   3.9081501907386*^9, 3.9081501948349953`*^9}, 3.908150379885317*^9, 
   3.908151139425572*^9, 3.908158548683194*^9, 3.9081591093673067`*^9, 
   3.908162755880548*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"b3207b13-8a54-4c0d-ba59-70c91b3c726b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", "dc", "]"}]], "Input",
 CellChangeTimes->{{3.9078925162448807`*^9, 3.9078925248205013`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"1a4d8a48-ddfe-40ac-a474-6616719b7aa7"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"dc[t] represents  real consumption growth.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"dc[t] represents  real consumption growth.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "dc[t] represents  real consumption growth.", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc"|>, 
   True]]], "Output",
 CellChangeTimes->{3.908150029378007*^9, 3.908150380752619*^9, 
  3.90815114132312*^9, 3.908158551211233*^9, 3.908159110320977*^9, 
  3.908162756915813*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"b7ce68c2-3c9f-4b7e-b703-610dd320708a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.9081161407834682`*^9, 3.9081161432515917`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"24bc3c8d-a6ec-494c-8446-a4e9df3540f0"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"t denotes time.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"t denotes time.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "t denotes time.", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t"|>, 
   True]]], "Output",
 CellChangeTimes->{3.9081500354934998`*^9, 3.908150381534734*^9, 
  3.908151143704707*^9, 3.908158553301919*^9, 3.9081591113799467`*^9, 
  3.90816275765946*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"b2cda1fe-eb9e-435a-8ac8-831d0790e03a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dc", "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.908116154707263*^9, 3.90811615593151*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"31ffa36b-df55-4783-bb62-4e79b36e1d53"],

Cell[BoxData[
 RowBox[{"dc", "[", "t", "]"}]], "Output",
 CellChangeTimes->{
  3.908150037213686*^9, 3.908150382608988*^9, 3.9081511445191593`*^9, 
   3.908158554414258*^9, 3.908159112640749*^9, 3.908162758389903*^9, {
   3.908163231710045*^9, 3.9081632343044357`*^9}},
 CellLabel->"Out[16]=",ExpressionUUID->"0831062e-c7e7-4d54-a7e1-f0dfdde9b42f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToNum", "[", 
  RowBox[{
   RowBox[{"dc", "[", "t", "]"}], ",", "model"}], "]"}]], "Input",
 CellChangeTimes->{{3.908116175205838*^9, 3.908116182671973*^9}, {
   3.908116220784664*^9, 3.908116222941882*^9}, 3.908116538915723*^9},
 CellLabel->"In[41]:=",ExpressionUUID->"e1cf44a3-f202-4344-9b1e-8b06b99ab9d8"],

Cell[BoxData[
 RowBox[{"0.0016426`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.0521066`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "0.00327532`"}], "+", 
     RowBox[{"pi", "[", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "t"}], "]"}]}], ")"}]}], "+", 
  RowBox[{"0.00204654`", " ", 
   RowBox[{
    RowBox[{"eps", "[", "\<\"dc\"\>", "]"}], "[", "t", "]"}]}], "-", 
  RowBox[{"0.198287`", " ", 
   RowBox[{"sg", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "t"}], "]"}], " ", 
   RowBox[{
    RowBox[{"eps", "[", "\<\"pi\"\>", "]"}], "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "t"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.9081165322307568`*^9, 3.90811653964257*^9}, {
   3.908116622505725*^9, 3.908116627369347*^9}, {3.908117648597302*^9, 
   3.908117651750669*^9}, {3.908117755619824*^9, 3.9081177609921637`*^9}, 
   3.908117920764284*^9, 3.908150038654834*^9, 3.908150383911718*^9, 
   3.908151145918434*^9, 3.9081585555632353`*^9, 3.908159113853134*^9, 
   3.908162759588758*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"ec005aa1-402c-4f40-95af-1305685bd76d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToEquation", "[", 
  RowBox[{
   RowBox[{"dc", "[", "t", "]"}], ",", "model"}], "]"}]], "Input",
 CellChangeTimes->{{3.908116201216226*^9, 3.90811624772558*^9}, {
  3.9081162882884197`*^9, 3.908116293693666*^9}, {3.908117825412651*^9, 
  3.908117829262995*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"c039af7f-ae49-421c-852b-b0cd4be85222"],

Cell[BoxData[
 RowBox[{"muc", "+", 
  RowBox[{"rhocp", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "mup"}], "+", 
     RowBox[{"pi", "[", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "t"}], "]"}]}], ")"}]}], "+", 
  RowBox[{"phic", " ", 
   RowBox[{
    RowBox[{"eps", "[", "\<\"dc\"\>", "]"}], "[", "t", "]"}]}], "+", 
  RowBox[{"xic", " ", 
   RowBox[{"sg", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "t"}], "]"}], " ", 
   RowBox[{
    RowBox[{"eps", "[", "\<\"pi\"\>", "]"}], "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "t"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.908117653673799*^9, 3.9081178437159023`*^9, 
  3.908117922053493*^9, 3.90815004062751*^9, 3.908150384802544*^9, 
  3.908151146980225*^9, 3.908158559496372*^9, 3.908159114855217*^9, 
  3.9081627604721613`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"73217d23-1502-40bf-ac2a-8c1b56ec882d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToExogenousVars", "[", 
  RowBox[{
   RowBox[{"dc", "[", "t", "]"}], ",", "model"}], "]"}]], "Input",
 CellChangeTimes->{{3.908117660105748*^9, 3.908117678107532*^9}, {
  3.908117747507395*^9, 3.908117747855459*^9}, {3.908117826506631*^9, 
  3.908117832581216*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"38d57731-2637-406f-9d97-7098902551e4"],

Cell[BoxData[
 RowBox[{"dc", "[", "t", "]"}]], "Output",
 CellChangeTimes->{{3.9081176645171003`*^9, 3.908117673744113*^9}, {
   3.9081177483816957`*^9, 3.908117763626458*^9}, 3.908117845242337*^9, 
   3.908117923458316*^9, 3.908150041651937*^9, 3.908150386023883*^9, 
   3.908151148075437*^9, 3.9081585607533417`*^9, 3.9081591158924303`*^9, 
   3.908162761339316*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"5a41fec9-b91a-4d1d-a1ee-efafddf5a34b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToStateVars", "[", 
  RowBox[{
   RowBox[{"dc", "[", "t", "]"}], ",", "model"}], "]"}]], "Input",
 CellChangeTimes->{{3.9081176934081593`*^9, 3.908117700426065*^9}, {
  3.908117835569458*^9, 3.908117839365262*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"76d3897e-a8a1-4105-afa1-f240a3fe3678"],

Cell[BoxData[
 RowBox[{"muc", "+", 
  RowBox[{"rhocp", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "mup"}], "+", 
     RowBox[{"pi", "[", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "t"}], "]"}]}], ")"}]}], "+", 
  RowBox[{"phic", " ", 
   RowBox[{
    RowBox[{"eps", "[", "\<\"dc\"\>", "]"}], "[", "t", "]"}]}], "+", 
  RowBox[{"xic", " ", 
   RowBox[{"sg", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "t"}], "]"}], " ", 
   RowBox[{
    RowBox[{"eps", "[", "\<\"pi\"\>", "]"}], "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "t"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.9081177009963427`*^9, 3.908117846636237*^9, 
  3.908117924816532*^9, 3.908150043628427*^9, 3.908150386726719*^9, 
  3.908151149029889*^9, 3.9081585615353527`*^9, 3.9081591168166924`*^9, 
  3.908162762257559*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"406a1aef-23e3-4598-822c-35f88900cb55"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ToStateVars"}]], "Input",
 CellChangeTimes->{{3.908117942220209*^9, 3.908117946001595*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"6092edbf-fa29-45a8-8aae-6d2ab8f6553f"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:FernandoDuarte/LongRunRisk/ref/ToStateVars",
              
              ButtonNote->"paclet:FernandoDuarte/LongRunRisk/ref/ToStateVars"],
             "\"paclet:FernandoDuarte/LongRunRisk/ref/ToStateVars\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ToStateVars[model] gives a pure (or \\\"anonymous\\\
\") function that re-writes its argument in terms of the state variables of \
model.\\nToStateVars[expr, model] re-writes expr in terms of the state \
variables of model.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"ToStateVars", "[", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`expr_",
                     ",", "FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
model_Association"}], "]"}], ":=", 
                    RowBox[{
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
modelEval", "[", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`expr", 
                    ",", "FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
model"}], "]"}], "/.", "\[VeryThinSpace]", 
                    RowBox[{"Normal", "[", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model",
                     "[", "\"toStateVars\"", "]"}], "]"}]}]}]}, {" "}, {
                    RowBox[{
                    
                    RowBox[{
                    "ToStateVars", "[", 
                    "FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model_\
Association", "]"}], ":=", 
                    RowBox[{"Function", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "{", "FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
expr", "}"}], ",", 
                    RowBox[{"ToStateVars", "[", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`expr", 
                    ",", "FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
model"}], "]"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:FernandoDuarte/LongRunRisk/ref/ToStateVars", 
                    "paclet:FernandoDuarte/LongRunRisk/ref/ToStateVars", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"FernandoDuarte`LongRunRisk`ToStateVars\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{20., {6., 14.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{20., {6., 14.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:FernandoDuarte/LongRunRisk/ref/ToStateVars",
              
              ButtonNote->"paclet:FernandoDuarte/LongRunRisk/ref/ToStateVars"],
             "\"paclet:FernandoDuarte/LongRunRisk/ref/ToStateVars\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ToStateVars[model] gives a pure (or \\\"anonymous\\\
\") function that re-writes its argument in terms of the state variables of \
model.\\nToStateVars[expr, model] re-writes expr in terms of the state \
variables of model.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "ToStateVars[model] gives a pure (or \"anonymous\") function that \
re-writes its argument in terms of the state variables of model.\n\
ToStateVars[expr, model] re-writes expr in terms of the state variables of \
model.", "Documentation" -> <|
     "Local" -> "paclet:FernandoDuarte/LongRunRisk/ref/ToStateVars"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, FernandoDuarte`LongRunRisk`ToStateVars, {
      FernandoDuarte`LongRunRisk`ToStateVars[
         Pattern[FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`expr, 
          Blank[]], 
         Pattern[FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
          Blank[Association]]] :> ReplaceAll[
         FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`modelEval[
         FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`expr, 
          FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
         Normal[
          FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model[
          "toStateVars"]]], FernandoDuarte`LongRunRisk`ToStateVars[
         Pattern[FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
          Blank[Association]]] :> 
       Function[{FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`expr}, 
         FernandoDuarte`LongRunRisk`ToStateVars[
         FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`expr, 
          FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "FernandoDuarte`LongRunRisk`ToStateVars"|>, False]]], "Output",
 CellChangeTimes->{3.908117946550009*^9, 3.908150044938249*^9, 
  3.90815038752838*^9, 3.908151149991*^9, 3.908158562502334*^9, 
  3.908159117722146*^9, 3.908162763418599*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"57dbbc71-b269-489e-b21a-60c49f5465b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Growth"}]], "Input",
 CellChangeTimes->{{3.9081500490768223`*^9, 3.9081500500756197`*^9}, {
  3.9081503892797832`*^9, 3.90815040053836*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"34246483-92af-4b1d-86bb-bed1c2dd8bc6"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:FernandoDuarte/LongRunRisk/ref/Growth",
              ButtonNote->"paclet:FernandoDuarte/LongRunRisk/ref/Growth"],
             "\"paclet:FernandoDuarte/LongRunRisk/ref/Growth\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Growth[variable, t] gives the Growth rate at time t \
of variable.\\nGrowth[variable, t, i] specify the stock identifier i when \
variable is a stock-related variable such as dividends.\\nGrowth[variable, t, \
m] specify the maturity m in months when variable is a bond-related variable \
such as bond yields.\\nGrowth[variable, t, Options] allows options to specify \
time aggregation periods in months and number of time-aggregated periods over \
which approximate Growth rates are calculated.\\nExamples:\\nGrowth[dc, t, \\\
\"TimeAggregation\\\"->3] gives the Growth rate of time-aggregated \
consumption, with time aggregation done over 3 months.\\nGrowth[dd, t, 1, \
\\\"TimeAggregation\\\"->3] gives the Growth rate of time-aggregated \
dividends for stock 1, with time aggregation done over 3 months.\\nGrowth[dc, \
t, \\\"TimeAggregation\\\"->12, \\\"numPeriods\\\"->2] gives the Growth rate \
over 2 years of time-aggregated consumption, with time aggregation done over \
12 months.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"Growth", "[", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
v_Symbol", ",", "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`t_",
                     ",", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
im", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"_Rule", "|", "_List"}], "]"}], ":", 
                    RowBox[{"Hold", "[", "]"}]}], ",", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
opts", ":", 
                    RowBox[{"OptionsPattern", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{"Growth", ",", 
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
timeSeriesVector", ",", 
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
g"}], "}"}], "]"}]}]}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
h", "=", 
                    RowBox[{
                    "OptionValue", "[", "\"TimeAggregation\"", "]"}]}], ",", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
k", "=", 
                    RowBox[{"OptionValue", "[", "\"numPeriods\"", "]"}]}], 
                    ",", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
n", "=", 
                    RowBox[{"OptionValue", "[", "\"Order\"", "]"}]}], ",", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
v0", "=", 
                    RowBox[{"OptionValue", "[", "\"v0\"", "]"}]}], ",", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
optsgt", "=", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    
                    RowBox[{"{", 
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
opts", "}"}], ",", 
                    RowBox[{"Except", "[", 
                    RowBox[{"Options", "[", "Growth", "]"}], "]"}]}], "]"}]}],
                     ",", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
imR", "=", 
                    RowBox[{
                    "ReleaseHold", "[", 
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
im", "]"}]}], ",", 
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
tau", ",", "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`d", ",", 
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
j", ",", "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`v0args", 
                    ",", "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`\
Private`v0eval"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
v0args", "[", "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`j_", 
                    "]"}], ":=", 
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"Null", ",", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
v0", "[", "##1", "]"}], ",", "Listable"}], "]"}], "@@", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
t", ",", "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`j", ",", 
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
h", ",", "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`k", ",", 
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
v", ",", "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`im"}], 
                    "}"}]}]}], ";", 
                    RowBox[{
                    RowBox[{"Normal", "[", 
                    RowBox[{"ReleaseHold", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
gt", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
v", ",", "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`t", ",", 
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
im", ",", "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`optsgt"}],
                     "]"}], "/.", "\[VeryThinSpace]", 
                    RowBox[{
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
v", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
t", "+", 
                    RowBox[{"(", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
tau_Integer", ":", "0"}], ")"}]}], ",", 
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
imR"}], "]"}], "\[RuleDelayed]", 
                    RowBox[{
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
v", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
t", "+", "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`tau"}], 
                    ",", "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`\
Private`imR"}], "]"}], "-", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
v0args", "[", 
                    RowBox[{"-", 
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
tau"}], "]"}]}], ")"}]}], "+", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
v0args", "[", 
                    RowBox[{"-", 
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
tau"}], "]"}]}]}]}], ")"}], "+", 
                    SuperscriptBox[
                    
                    RowBox[{"O", "[", 
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
d", "]"}], 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
n", "+", "1"}]]}], "]"}], "]"}], "/.", "\[VeryThinSpace]", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
d", "\[Rule]", "1"}]}]}]}], "]"}], "/;", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "\"flowVariable\"", "]"}], 
                    "\[Equal]", "True"}]}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"Growth", "[", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
v_Symbol", ",", "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`t_",
                     ",", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
im", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"_Rule", "|", "_List"}], "]"}], ":", 
                    RowBox[{"Hold", "[", "]"}]}], ",", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
opts", ":", 
                    RowBox[{"OptionsPattern", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{"Growth", ",", 
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
timeSeriesVector", ",", 
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
g"}], "}"}], "]"}]}]}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
optsgt", "=", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    
                    RowBox[{"{", 
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
opts", "}"}], ",", 
                    RowBox[{"Except", "[", 
                    RowBox[{"Options", "[", "Growth", "]"}], "]"}]}], "]"}]}],
                     "}"}], ",", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
gt", "[", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
v", ",", "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`t", ",", 
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
im", ",", "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`optsgt"}],
                     "]"}]}], "]"}], "/;", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "\"flowVariable\"", "]"}], 
                    "\[Equal]", "False"}]}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:FernandoDuarte/LongRunRisk/ref/Growth", 
                    "paclet:FernandoDuarte/LongRunRisk/ref/Growth", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\<\"v0\"\>", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
t", ",", "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`j", ",", 
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
h", ",", "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`k", ",", 
                    "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
v", ",", "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`im"}], 
                    "}"}], ",", "0"}], "]"}]}], ",", 
                    RowBox[{"\<\"Order\"\>", "\[Rule]", "1"}]}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"FernandoDuarte`LongRunRisk`Growth\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{20., {6., 14.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{20., {6., 14.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:FernandoDuarte/LongRunRisk/ref/Growth",
              ButtonNote->"paclet:FernandoDuarte/LongRunRisk/ref/Growth"],
             "\"paclet:FernandoDuarte/LongRunRisk/ref/Growth\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Growth[variable, t] gives the Growth rate at time t \
of variable.\\nGrowth[variable, t, i] specify the stock identifier i when \
variable is a stock-related variable such as dividends.\\nGrowth[variable, t, \
m] specify the maturity m in months when variable is a bond-related variable \
such as bond yields.\\nGrowth[variable, t, Options] allows options to specify \
time aggregation periods in months and number of time-aggregated periods over \
which approximate Growth rates are calculated.\\nExamples:\\nGrowth[dc, t, \\\
\"TimeAggregation\\\"->3] gives the Growth rate of time-aggregated \
consumption, with time aggregation done over 3 months.\\nGrowth[dd, t, 1, \
\\\"TimeAggregation\\\"->3] gives the Growth rate of time-aggregated \
dividends for stock 1, with time aggregation done over 3 months.\\nGrowth[dc, \
t, \\\"TimeAggregation\\\"->12, \\\"numPeriods\\\"->2] gives the Growth rate \
over 2 years of time-aggregated consumption, with time aggregation done over \
12 months.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Growth[variable, t] gives the Growth rate at time t of variable.\n\
Growth[variable, t, i] specify the stock identifier i when variable is a \
stock-related variable such as dividends.\nGrowth[variable, t, m] specify the \
maturity m in months when variable is a bond-related variable such as bond \
yields.\nGrowth[variable, t, Options] allows options to specify time \
aggregation periods in months and number of time-aggregated periods over \
which approximate Growth rates are calculated.\nExamples:\nGrowth[dc, t, \
\"TimeAggregation\"->3] gives the Growth rate of time-aggregated consumption, \
with time aggregation done over 3 months.\nGrowth[dd, t, 1, \"TimeAggregation\
\"->3] gives the Growth rate of time-aggregated dividends for stock 1, with \
time aggregation done over 3 months.\nGrowth[dc, t, \"TimeAggregation\"->12, \
\"numPeriods\"->2] gives the Growth rate over 2 years of time-aggregated \
consumption, with time aggregation done over 12 months.", 
    "Documentation" -> <|
     "Local" -> "paclet:FernandoDuarte/LongRunRisk/ref/Growth"|>, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, FernandoDuarte`LongRunRisk`Growth, {
      FernandoDuarte`LongRunRisk`Growth[
         Pattern[FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`v, 
          Blank[Symbol]], 
         Pattern[FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`t, 
          Blank[]], 
         Optional[
          Pattern[FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`im, 
           Except[
            Alternatives[
             Blank[Rule], 
             Blank[List]]]], 
          Hold[]], 
         Pattern[
         FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`opts, 
          
          OptionsPattern[{
           FernandoDuarte`LongRunRisk`Growth, 
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
timeSeriesVector, 
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`g}]]] :> 
       Condition[
         Module[{
          FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`h = 
           OptionValue["TimeAggregation"], 
           FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`k = 
           OptionValue["numPeriods"], 
           FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`n = 
           OptionValue["Order"], 
           FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`v0 = 
           OptionValue["v0"], 
           FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`optsgt = 
           FilterRules[{
             FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`opts}, 
             Except[
              Options[FernandoDuarte`LongRunRisk`Growth]]], 
           FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`imR = 
           ReleaseHold[
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`im], 
           FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`tau, 
           FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`d, 
           FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`j, 
           FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`v0args, 
           FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`v0eval}, 
          FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`v0args[
             Pattern[
             FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`j, 
              Blank[]]] := Apply[
             Function[Null, 
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`v0[
               SlotSequence[1]], Listable], {
             FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`t, 
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`j, 
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`h, 
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`k, 
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`v, 
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`im}]; 
          ReplaceAll[
            Normal[
             ReleaseHold[ReplaceAll[
                FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`gt[
                FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`v, 
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`t, 
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`im, 
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
optsgt], FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`v[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`t + 
                  Optional[
                    Pattern[
                    FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
tau, 
                    Blank[Integer]], 0], 
                  FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
imR] :> FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`d (
                   FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`v[
                    FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
t + FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`tau, 
                    FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
imR] - FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`v0args[-
                    FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
tau]) + FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`v0args[-
                   FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
tau]] + O[FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`d]^(
                FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`n + 
                1)]], FernandoDuarte`LongRunRisk`Tools`TimeAggregation`\
Private`d -> 1]], OptionValue["flowVariable"] == True], 
       FernandoDuarte`LongRunRisk`Growth[
         Pattern[FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`v, 
          Blank[Symbol]], 
         Pattern[FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`t, 
          Blank[]], 
         Optional[
          Pattern[FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`im, 
           Except[
            Alternatives[
             Blank[Rule], 
             Blank[List]]]], 
          Hold[]], 
         Pattern[
         FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`opts, 
          
          OptionsPattern[{
           FernandoDuarte`LongRunRisk`Growth, 
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
timeSeriesVector, 
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`g}]]] :> 
       Condition[
         Module[{
          FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`optsgt = 
           FilterRules[{
             FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`opts}, 
             Except[
              Options[FernandoDuarte`LongRunRisk`Growth]]]}, 
          FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`gt[
          FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`v, 
           FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`t, 
           FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`im, 
           FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`optsgt]], 
         OptionValue["flowVariable"] == False]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     "v0" -> Function[{
        FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`t, 
         FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`j, 
         FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`h, 
         FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`k, 
         FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`v, 
         FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`im}, 0], 
      "Order" -> 1}, "Attributes" -> {}, "FullName" -> 
    "FernandoDuarte`LongRunRisk`Growth"|>, False]]], "Output",
 CellChangeTimes->{3.9081504009891376`*^9, 3.908151151081361*^9, 
  3.9081585636746473`*^9, 3.90815911864301*^9, 3.908162764963607*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"b00ec363-256a-46e5-a3cb-b69af9571adc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Growth", "[", 
  RowBox[{"dc", ",", "t", ",", 
   RowBox[{"\"\<TimeAggregation\>\"", "->", "3"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Growth", "[", 
  RowBox[{"dd", ",", " ", "t", ",", " ", "1", ",", " ", 
   RowBox[{"\"\<TimeAggregation\>\"", "->", "3"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Growth", "[", 
  RowBox[{"nombondyield", ",", " ", "t", ",", "2", ",", " ", 
   RowBox[{"\"\<TimeAggregation\>\"", "->", "3"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9081504119612017`*^9, 3.9081504289594593`*^9}, {
  3.9081504754907837`*^9, 3.908150519772739*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"cd5473e5-c6be-403e-8a7a-815d804783b0"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "3"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"dc", "[", 
     RowBox[{
      RowBox[{"-", "4"}], "+", "t"}], "]"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"dc", "[", 
      RowBox[{
       RowBox[{"-", "3"}], "+", "t"}], "]"}]}], "+", 
    RowBox[{"3", " ", 
     RowBox[{"dc", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "t"}], "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"dc", "[", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "t"}], "]"}]}], "+", 
    RowBox[{"dc", "[", "t", "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.9081504296440783`*^9, {3.9081504821469097`*^9, 3.9081505207989063`*^9}, 
   3.908151152146994*^9, 3.9081585648861837`*^9, 3.9081591195309*^9, 
   3.9081627659607897`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"023b9f44-9ac6-4afb-a9fc-f627d217c392"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "3"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"dd", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], "+", "t"}], ",", "1"}], "]"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"dd", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], "+", "t"}], ",", "1"}], "]"}]}], "+", 
    RowBox[{"3", " ", 
     RowBox[{"dd", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], "+", "t"}], ",", "1"}], "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"dd", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "+", "t"}], ",", "1"}], "]"}]}], "+", 
    RowBox[{"dd", "[", 
     RowBox[{"t", ",", "1"}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.9081504296440783`*^9, {3.9081504821469097`*^9, 3.9081505207989063`*^9}, 
   3.908151152146994*^9, 3.9081585648861837`*^9, 3.9081591195309*^9, 
   3.908162765962502*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"274b98a9-55c8-4e5a-b86b-f7e5c6c6ed83"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "3"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"nombondyield", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], "+", "t"}], ",", "2"}], "]"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"nombondyield", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], "+", "t"}], ",", "2"}], "]"}]}], "+", 
    RowBox[{"3", " ", 
     RowBox[{"nombondyield", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], "+", "t"}], ",", "2"}], "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"nombondyield", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "+", "t"}], ",", "2"}], "]"}]}], "+", 
    RowBox[{"nombondyield", "[", 
     RowBox[{"t", ",", "2"}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.9081504296440783`*^9, {3.9081504821469097`*^9, 3.9081505207989063`*^9}, 
   3.908151152146994*^9, 3.9081585648861837`*^9, 3.9081591195309*^9, 
   3.9081627659636927`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"13ef6c7e-11e5-49e2-9e63-71773f69352e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Growth", "[", 
    RowBox[{"nombondyield", ",", " ", "t", ",", "2", ",", " ", 
     RowBox[{"\"\<TimeAggregation\>\"", "->", "2"}]}], "]"}], "//", 
   RowBox[{"ToNum", "[", "model", "]"}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.90815053877501*^9, 3.9081505677169*^9}, {
  3.908151164872381*^9, 3.9081511743761673`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"90f5d5ea-180d-4470-8a1e-63714c4860d3"],

Cell[BoxData[
 RowBox[{"0.013799416442938382`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.27790504869037364`", " ", 
   RowBox[{"pi", "[", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "t"}], "]"}]}], "+", 
  RowBox[{"0.5558100973807473`", " ", 
   RowBox[{"pi", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "t"}], "]"}]}], "+", 
  RowBox[{"0.27790504869037364`", " ", 
   RowBox[{"pi", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "t"}], "]"}]}], "-", 
  RowBox[{"0.06847617200341222`", " ", 
   RowBox[{"sg", "[", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "t"}], "]"}]}], "-", 
  RowBox[{"0.5260522642915035`", " ", 
   SuperscriptBox[
    RowBox[{"sg", "[", 
     RowBox[{
      RowBox[{"-", "3"}], "+", "t"}], "]"}], "2"]}], "-", 
  RowBox[{"0.13695234400682443`", " ", 
   RowBox[{"sg", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "t"}], "]"}]}], "-", 
  RowBox[{"1.052104528583007`", " ", 
   SuperscriptBox[
    RowBox[{"sg", "[", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "t"}], "]"}], "2"]}], "-", 
  RowBox[{"0.06847617200341222`", " ", 
   RowBox[{"sg", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "t"}], "]"}]}], "-", 
  RowBox[{"0.5260522642915035`", " ", 
   SuperscriptBox[
    RowBox[{"sg", "[", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "t"}], "]"}], "2"]}], "+", 
  RowBox[{"0.0002538760700443974`", " ", 
   RowBox[{
    RowBox[{"eps", "[", "\<\"pi\"\>", "]"}], "[", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "t"}], "]"}]}], "-", 
  RowBox[{"0.00002432920553886329`", " ", 
   RowBox[{
    RowBox[{"eps", "[", "\<\"pi\"\>", "]"}], "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "t"}], "]"}]}], "-", 
  RowBox[{"0.024693894617875068`", " ", 
   RowBox[{"sg", "[", 
    RowBox[{
     RowBox[{"-", "4"}], "+", "t"}], "]"}], " ", 
   RowBox[{
    RowBox[{"eps", "[", "\<\"pi\"\>", "]"}], "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "t"}], "]"}]}], "-", 
  RowBox[{"0.0008102866212109188`", " ", 
   RowBox[{
    RowBox[{"eps", "[", "\<\"pi\"\>", "]"}], "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "t"}], "]"}]}], "-", 
  RowBox[{"0.049387789235750136`", " ", 
   RowBox[{"sg", "[", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "t"}], "]"}], " ", 
   RowBox[{
    RowBox[{"eps", "[", "\<\"pi\"\>", "]"}], "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "t"}], "]"}]}], "-", 
  RowBox[{"0.0005320813456276581`", " ", 
   RowBox[{
    RowBox[{"eps", "[", "\<\"pi\"\>", "]"}], "[", "t", "]"}]}], "-", 
  RowBox[{"0.024693894617875068`", " ", 
   RowBox[{"sg", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "t"}], "]"}], " ", 
   RowBox[{
    RowBox[{"eps", "[", "\<\"pi\"\>", "]"}], "[", "t", "]"}]}], "-", 
  RowBox[{"0.00007255411871524922`", " ", 
   RowBox[{
    RowBox[{"eps", "[", "\<\"pi\"\>", "]"}], "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "t"}], "]"}], " ", 
   RowBox[{
    RowBox[{"eps", "[", "\<\"sg\"\>", "]"}], "[", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "t"}], "]"}]}], "-", 
  RowBox[{"0.0002011925777436931`", " ", 
   RowBox[{
    RowBox[{"eps", "[", "\<\"sg\"\>", "]"}], "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "t"}], "]"}]}], "-", 
  RowBox[{"0.0030912303647885036`", " ", 
   RowBox[{"sg", "[", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "t"}], "]"}], " ", 
   RowBox[{
    RowBox[{"eps", "[", "\<\"sg\"\>", "]"}], "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "t"}], "]"}]}], "-", 
  RowBox[{"0.00014510823743049843`", " ", 
   RowBox[{
    RowBox[{"eps", "[", "\<\"pi\"\>", "]"}], "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "t"}], "]"}], " ", 
   RowBox[{
    RowBox[{"eps", "[", "\<\"sg\"\>", "]"}], "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "t"}], "]"}]}], "-", 
  RowBox[{"4.541233740843345`*^-6", " ", 
   SuperscriptBox[
    RowBox[{
     RowBox[{"eps", "[", "\<\"sg\"\>", "]"}], "[", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "t"}], "]"}], "2"]}], "-", 
  RowBox[{"0.0004023851554873862`", " ", 
   RowBox[{
    RowBox[{"eps", "[", "\<\"sg\"\>", "]"}], "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "t"}], "]"}]}], "-", 
  RowBox[{"0.006182460729577007`", " ", 
   RowBox[{"sg", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "t"}], "]"}], " ", 
   RowBox[{
    RowBox[{"eps", "[", "\<\"sg\"\>", "]"}], "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "t"}], "]"}]}], "-", 
  RowBox[{"0.00007255411871524922`", " ", 
   RowBox[{
    RowBox[{"eps", "[", "\<\"pi\"\>", "]"}], "[", "t", "]"}], " ", 
   RowBox[{
    RowBox[{"eps", "[", "\<\"sg\"\>", "]"}], "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "t"}], "]"}]}], "-", 
  RowBox[{"9.08246748168669`*^-6", " ", 
   SuperscriptBox[
    RowBox[{
     RowBox[{"eps", "[", "\<\"sg\"\>", "]"}], "[", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "t"}], "]"}], "2"]}], "-", 
  RowBox[{"0.0002011925777436931`", " ", 
   RowBox[{
    RowBox[{"eps", "[", "\<\"sg\"\>", "]"}], "[", "t", "]"}]}], "-", 
  RowBox[{"0.0030912303647885036`", " ", 
   RowBox[{"sg", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "t"}], "]"}], " ", 
   RowBox[{
    RowBox[{"eps", "[", "\<\"sg\"\>", "]"}], "[", "t", "]"}]}], "-", 
  RowBox[{"4.541233740843345`*^-6", " ", 
   SuperscriptBox[
    RowBox[{
     RowBox[{"eps", "[", "\<\"sg\"\>", "]"}], "[", "t", "]"}], 
    "2"]}]}]], "Output",
 CellChangeTimes->{{3.9081505423563643`*^9, 3.908150568782652*^9}, 
   3.9081511561633177`*^9, 3.908158567122407*^9, 3.908159121466702*^9, 
   3.908162767703895*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"875675ef-8bbd-4467-9732-a54ebe6e6d70"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UncondVar", "[", 
  RowBox[{
   RowBox[{"Growth", "[", 
    RowBox[{"dc", ",", "t", ",", 
     RowBox[{"\"\<TimeAggregation\>\"", "->", "2"}]}], "]"}], ",", "model"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9081512282967653`*^9, 3.9081512740730953`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"c72f7376-6b4a-4af3-a048-68c8737bc86c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], " ", 
   SuperscriptBox["mup", "2"], " ", 
   SuperscriptBox["rhocp", "2"], " ", "rhop"}], "+", 
  RowBox[{
  "2", " ", "Esg", " ", "phip", " ", "rhocp", " ", "rhop", " ", "xic"}], "+", 
  
  RowBox[{"2", " ", "phip", " ", 
   SuperscriptBox["rhocp", "2"], " ", "xip"}], "+", 
  RowBox[{"2", " ", "Esg", " ", "rhocp", " ", "xic", " ", "xip"}], "+", 
  FractionBox[
   RowBox[{"rhocp", " ", "rhop", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"phip", " ", "rhop"}], "+", "xip"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "phip"}], " ", "rhocp"}], "-", 
      RowBox[{"Esg", " ", "xic"}], "+", 
      RowBox[{"Esg", " ", 
       SuperscriptBox["rhop", "2"], " ", "xic"}], "-", 
      RowBox[{"rhocp", " ", "rhop", " ", "xip"}]}], ")"}]}], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "rhop"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "rhop"}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["rhocp", "2"], " ", "rhop", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["mup", "2"], "+", 
      SuperscriptBox["phip", "2"], "-", 
      RowBox[{
       SuperscriptBox["mup", "2"], " ", 
       SuperscriptBox["rhop", "2"]}], "+", 
      RowBox[{"2", " ", "phip", " ", "rhop", " ", "xip"}], "+", 
      SuperscriptBox["xip", "2"]}], ")"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "rhop"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "rhop"}], ")"}]}]], "+", 
  RowBox[{
   FractionBox["3", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["phic", "2"], "-", 
     RowBox[{
      SuperscriptBox["mup", "2"], " ", 
      SuperscriptBox["rhocp", "2"]}], "+", 
     RowBox[{"2", " ", "Esg", " ", "phip", " ", "rhocp", " ", "xic"}], "-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["Esg", "2"], "+", 
         SuperscriptBox["phig", "2"], "-", 
         RowBox[{
          SuperscriptBox["Esg", "2"], " ", 
          SuperscriptBox["rhog", "2"]}]}], ")"}], " ", 
       SuperscriptBox["xic", "2"]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "rhog"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "rhog"}], ")"}]}]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["rhocp", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["mup", "2"], "+", 
         SuperscriptBox["phip", "2"], "-", 
         RowBox[{
          SuperscriptBox["mup", "2"], " ", 
          SuperscriptBox["rhop", "2"]}], "+", 
         RowBox[{"2", " ", "phip", " ", "rhop", " ", "xip"}], "+", 
         SuperscriptBox["xip", "2"]}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "rhop"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "rhop"}], ")"}]}]]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.908151245073138*^9, 3.9081512748610897`*^9}, 
   3.908158578383395*^9, 3.908159123522849*^9, 3.908162769194262*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"42bf2925-9d16-40c7-a9c6-b58542643eaa"]
}, Open  ]]
},
CellGrouping->Manual,
WindowSize->{1414, 879},
WindowMargins->{{Automatic, 47}, {Automatic, 19}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
TaggingRules-><|
 "ChatNotebookSettings" -> <|
   "Assistance" -> False, "TemperatureSetting" -> 0.7, "Model" -> "gpt-4"|>, 
  "TryRealOnly" -> False|>,
Magnification:>1.5 Inherited,
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (July 24, 2023)",
StyleDefinitions->"Chatbook.nb",
ExpressionUUID->"f949c8c5-45ff-43cb-bc9d-21628a9a524a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 287, 5, 46, "Input",ExpressionUUID->"a594d500-6732-49d5-a292-97f7f92537a3"],
Cell[848, 27, 237, 6, 46, "Input",ExpressionUUID->"e8709f8b-5d0a-453b-8ca3-f069bdd72a68"],
Cell[1088, 35, 1655, 32, 140, "Input",ExpressionUUID->"0c7accec-d8a0-48e0-a9a8-3514c663c5f4"],
Cell[2746, 69, 473, 10, 78, "Input",ExpressionUUID->"b51e613a-8e54-4b2c-9cf9-656754c31877"],
Cell[3222, 81, 184, 2, 46, "Input",ExpressionUUID->"2747c74e-d130-47ad-b04b-d321d55ac743"],
Cell[CellGroupData[{
Cell[3431, 87, 255, 4, 81, "Subsection",ExpressionUUID->"a85393fb-271e-4f16-88bb-af662714305d"],
Cell[3689, 93, 70, 0, 44, "Input",ExpressionUUID->"029c83ff-6711-427f-822e-1435729b5a57"],
Cell[3762, 95, 70, 0, 232, "Input",ExpressionUUID->"2e930d4f-e2a8-48ca-b0b5-1d584d8c6290"],
Cell[3835, 97, 70, 0, 108, "Input",ExpressionUUID->"add2b32b-4945-4b31-9ea0-9e361d381e02"]
}, Closed]],
Cell[CellGroupData[{
Cell[3942, 102, 214, 4, 55, "Subsection",ExpressionUUID->"6430e8db-a2e6-4116-803b-d1b396c6416e"],
Cell[4159, 108, 1059, 24, 109, "Input",ExpressionUUID->"52fe5eb2-34a2-4133-9c1d-254984a84356"],
Cell[5221, 134, 656, 12, 46, "Input",ExpressionUUID->"56a40a92-467d-425a-8930-38e6b9e56ea5"],
Cell[5880, 148, 670, 12, 46, "Input",ExpressionUUID->"4bae88dd-29c4-4e6b-9b91-40b82b4b6ec9"],
Cell[6553, 162, 2601, 71, 326, "Input",ExpressionUUID->"061042e2-834a-4a50-9339-40bb9898a8ff"],
Cell[9157, 235, 3246, 87, 419, "Input",ExpressionUUID->"0a19708d-8f36-4e5b-a488-0df1e51dc178"],
Cell[12406, 324, 3155, 86, 419, "Input",ExpressionUUID->"143236ef-b8a5-4dd3-8d3d-a7ff943e0559"],
Cell[15564, 412, 490, 9, 46, "Input",ExpressionUUID->"8ca679c3-2d1e-4627-911a-271e99f7202f"],
Cell[16057, 423, 1138, 30, 202, "Input",ExpressionUUID->"9cd34830-46fc-4249-b5db-83675c1660e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17232, 458, 155, 3, 101, "Section",ExpressionUUID->"02a5e353-41ba-49c0-8d60-d6e3e905d84d"],
Cell[17390, 463, 255, 5, 46, "Input",ExpressionUUID->"a8aa6ca5-45ea-4595-a0bb-b32ab9107b1b"],
Cell[CellGroupData[{
Cell[17670, 472, 175, 3, 81, "Subsection",ExpressionUUID->"1871b2bc-619f-4a13-8cef-daf1ec73aeac"],
Cell[17848, 477, 791, 13, 46, "Input",ExpressionUUID->"ab37a0e7-b999-4c42-8283-fd2f208b8cd0"],
Cell[18642, 492, 549, 11, 78, "Input",ExpressionUUID->"d1ff415f-0785-4673-9fb1-3bf31baceaed"],
Cell[19194, 505, 809, 16, 78, "Input",ExpressionUUID->"3f8c0238-f234-4f3c-8b1f-00a0a0c0fe26"],
Cell[20006, 523, 579, 13, 78, "Input",ExpressionUUID->"151593b3-3ee9-4faf-a17d-10f5dde0c3d1"],
Cell[20588, 538, 935, 21, 140, "Input",ExpressionUUID->"60b7f10a-9458-4b21-825e-c9388ef5be1f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21560, 564, 174, 3, 81, "Subsection",ExpressionUUID->"3c3f5f07-79f8-4455-84ff-4f6fc0638560"],
Cell[21737, 569, 775, 12, 46, "Input",ExpressionUUID->"dc1ea911-d78e-4b74-9837-c0d5ce5a20eb"],
Cell[22515, 583, 549, 11, 78, "Input",ExpressionUUID->"4bbb5fe1-89c2-4c9a-bffb-1597512a1cf4"],
Cell[23067, 596, 809, 16, 78, "Input",ExpressionUUID->"d066c836-8620-432a-bb60-aac96a5758b8"],
Cell[23879, 614, 736, 15, 78, "Input",ExpressionUUID->"82a5eb4a-ee99-46d5-8686-8b0851682b93"],
Cell[24618, 631, 1075, 24, 171, "Input",ExpressionUUID->"35735838-568a-42ca-9e75-037663e6cb7c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25730, 660, 202, 4, 81, "Subsection",ExpressionUUID->"51a92175-b32d-4fec-8580-a87db9fb35bb"],
Cell[CellGroupData[{
Cell[25957, 668, 829, 13, 46, "Input",ExpressionUUID->"3ef0b61c-8703-4665-93b5-c3f895075a56",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[26789, 683, 582, 12, 78, "Input",ExpressionUUID->"f25e9de2-00d6-4338-b0a2-a7bab8862c03",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[27374, 697, 838, 16, 78, "Input",ExpressionUUID->"090c4433-93b3-4636-95e8-8b4e6611de41",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[28215, 715, 610, 14, 78, "Input",ExpressionUUID->"788c307e-ccf0-48c2-b0c0-c147cb3fba54",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[28828, 731, 1030, 24, 140, "Input",ExpressionUUID->"0d2cf01d-5658-413b-9f6d-d6f7095e75eb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[29861, 757, 206, 4, 81, "Subsection",ExpressionUUID->"ac3a0a9e-b1e7-476c-ad6f-a9675e1c4dd6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[30070, 763, 808, 13, 46, "Input",ExpressionUUID->"839e1017-f22c-4e55-be10-1a5187d12886",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[30881, 778, 582, 12, 78, "Input",ExpressionUUID->"e303cb82-d1eb-465a-b3a4-7b10be2a9a76",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[31466, 792, 838, 16, 78, "Input",ExpressionUUID->"e1899e07-7be3-4a7c-81a6-4063cb7423bf",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[32307, 810, 610, 14, 78, "Input",ExpressionUUID->"bcac7799-54f7-4f01-a799-5cd85648df88",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[32920, 826, 946, 22, 140, "Input",ExpressionUUID->"2d24c772-120c-42b6-8e81-4f42ac13f1e0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[33905, 853, 268, 5, 109, "Input",ExpressionUUID->"169b1da2-cc03-4b45-bc29-318a8ebbe511"],
Cell[34176, 860, 203, 4, 46, "Input",ExpressionUUID->"027d55d4-32c8-45f2-a632-1b6a9d226986"],
Cell[34382, 866, 166, 3, 101, "Section",ExpressionUUID->"3324f4e4-72db-4f2d-a8e3-55f924327a8d"],
Cell[34551, 871, 173, 3, 38, "Input",ExpressionUUID->"c22cb105-6a78-4ecd-b11f-f4ac587aca1f"],
Cell[34727, 876, 243, 4, 46, "Input",ExpressionUUID->"b77feda0-9831-42d8-924e-418712c4b975"],
Cell[34973, 882, 281, 6, 46, "Input",ExpressionUUID->"f5edb761-8f66-4841-8382-861ca17e8655"],
Cell[35257, 890, 453, 9, 78, "Input",ExpressionUUID->"e0ec710f-50c9-498f-bd3a-dbb81e832628"],
Cell[35713, 901, 239, 4, 46, "Input",ExpressionUUID->"f86b9b30-af42-4274-a033-12f2ffeaf97e"],
Cell[35955, 907, 221, 3, 46, "Input",ExpressionUUID->"b371bfe6-7609-4216-bfdc-a9dd8b03cdad"],
Cell[36179, 912, 157, 3, 81, "Subsection",ExpressionUUID->"76644789-100c-40cc-b0dd-54e78276dc79"],
Cell[36339, 917, 642, 14, 101, "Input",ExpressionUUID->"51e0ab7e-438f-4918-88dc-0cdca4a5ef09"],
Cell[36984, 933, 345, 8, 46, "Input",ExpressionUUID->"89b86636-c7a5-4f01-834e-d4d7b0df4992"],
Cell[37332, 943, 231, 6, 46, "Input",ExpressionUUID->"80d69bde-e034-4277-951c-75f9ae5e74ed"],
Cell[37566, 951, 838, 18, 78, "Input",ExpressionUUID->"406843cf-54e5-449e-a90f-790601859d2c"],
Cell[38407, 971, 989, 22, 78, "Input",ExpressionUUID->"05a8fc15-4856-4a61-aa40-58ccab615aa9"],
Cell[39399, 995, 432, 9, 46, "Input",ExpressionUUID->"bcfd9824-82be-4968-b7ae-c4d3d23fa2c6"],
Cell[39834, 1006, 471, 12, 46, "Input",ExpressionUUID->"40209fe3-a3f5-42c7-9e17-d46dee97ee68"],
Cell[40308, 1020, 483, 13, 78, "Input",ExpressionUUID->"1943c9e8-9b58-447e-858e-15f75d62de5c"],
Cell[40794, 1035, 1263, 34, 233, "Input",ExpressionUUID->"c0447984-64a6-4b32-9974-e7c38d0c94dc"],
Cell[42060, 1071, 154, 3, 101, "Section",ExpressionUUID->"9be51e12-456c-48bb-bb40-aecaf24a3f74"],
Cell[42217, 1076, 288, 5, 38, "Input",ExpressionUUID->"7d15d176-941d-40cd-aefa-66cdc6428bd5"],
Cell[CellGroupData[{
Cell[42530, 1085, 3074, 70, 481, "Input",ExpressionUUID->"d0cfef5b-9213-49b6-afee-cada17223066"],
Cell[45607, 1157, 89957, 1631, 97, "Output",ExpressionUUID->"4242cd21-2e8c-4012-8d38-1ad11c80591f"],
Cell[135567, 2790, 991, 16, 84, "Output",ExpressionUUID->"29532b9c-cd8f-4393-a869-893180cd34ad"],
Cell[136561, 2808, 1489, 23, 177, "Output",ExpressionUUID->"cf95a07e-71a2-4714-8681-994011c73d45"],
Cell[138053, 2833, 1019, 16, 84, "Output",ExpressionUUID->"9158c8b5-b0dd-4b90-a844-9bfe3810e904"],
Cell[139075, 2851, 2193, 38, 223, "Output",ExpressionUUID->"8fd265ef-9984-442d-a66c-0fabcb9dd7b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141305, 2894, 244, 4, 46, "Input",ExpressionUUID->"b79489b5-cafc-41a2-a572-e23ca211a95a"],
Cell[141552, 2900, 1144, 18, 115, "Output",ExpressionUUID->"52807785-e45c-487e-96bd-c9db80103488"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142733, 2923, 384, 7, 109, "Input",ExpressionUUID->"0b8d11c7-14d3-486d-b898-5f66cc898a85"],
Cell[143120, 2932, 21167, 484, 141, "Output",ExpressionUUID->"a61046cd-11da-4a4c-9496-46461bfa3565"],
Cell[164290, 3418, 15933, 376, 141, "Output",ExpressionUUID->"936b8461-0deb-4fb3-9c49-fd9a349ba5fe"],
Cell[180226, 3796, 17581, 410, 141, "Output",ExpressionUUID->"282e9f3a-363d-40e2-b704-212176ef6d6f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197844, 4211, 923, 22, 140, "Input",ExpressionUUID->"de8a889c-cc3d-4300-a849-e51681f265e2"],
Cell[198770, 4235, 936, 21, 52, "Output",ExpressionUUID->"f00f7564-857b-4ccb-8d50-f352c16e60cf"],
Cell[199709, 4258, 559, 8, 52, "Output",ExpressionUUID->"6acfe773-924b-40e0-be43-cbcde0a2b58e"],
Cell[200271, 4268, 559, 8, 52, "Output",ExpressionUUID->"a457118d-bbe3-4e3a-9591-80906a6aeebf"],
Cell[200833, 4278, 10272, 280, 525, "Output",ExpressionUUID->"b1f5b4a6-f1ba-4545-bf45-0bc37ee66154"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211142, 4563, 349, 7, 78, "Input",ExpressionUUID->"5fd4e743-0fa3-49df-b06b-c243232ba2eb"],
Cell[211494, 4572, 221, 3, 52, "Output",ExpressionUUID->"945b98f5-095a-4508-9937-6a1d45f9277d"],
Cell[211718, 4577, 221, 3, 52, "Output",ExpressionUUID->"0cf581ca-0743-4a83-861c-c13797199eec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211976, 4585, 1042, 31, 140, "Input",ExpressionUUID->"aa61c210-a3da-47b1-9a59-66028dc4a973"],
Cell[213021, 4618, 1532, 42, 115, "Output",ExpressionUUID->"da4f8ada-26ff-413c-ab6e-3d1de2bda5ab"],
Cell[214556, 4662, 187, 2, 52, "Output",ExpressionUUID->"8ca5f6cd-dacf-4e77-85f6-5e7549feef08"],
Cell[214746, 4666, 187, 2, 52, "Output",ExpressionUUID->"b647f9c8-ef79-490e-a2c0-ef1c3b101f1a"],
Cell[214936, 4670, 1539, 39, 90, "Output",ExpressionUUID->"0f2b4b1c-eafc-4573-8a60-7c8060d319e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216512, 4714, 698, 20, 140, "Input",ExpressionUUID->"59942f2f-6925-4f7e-b68c-e371ed538f0a"],
Cell[217213, 4736, 175, 2, 52, "Output",ExpressionUUID->"ded7acb0-d370-4ad0-b0a7-3f3802f3f386"],
Cell[217391, 4740, 1380, 42, 114, "Output",ExpressionUUID->"53c36cbf-7c38-4ea3-a539-6f730905b544"],
Cell[218774, 4784, 1082, 29, 114, "Output",ExpressionUUID->"9e7945b0-9bfa-427d-80c1-2be48fa0188f"],
Cell[219859, 4815, 2497, 73, 291, "Output",ExpressionUUID->"9458d7d4-8054-41a3-9a45-d7a55aa640a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222393, 4893, 1169, 31, 140, "Input",ExpressionUUID->"4ae57fd9-5796-42b7-91ad-8d0c649cb582"],
Cell[223565, 4926, 546, 7, 52, "Output",ExpressionUUID->"5c5e00cf-d343-4c9f-96fa-a907bfc35e0e"],
Cell[224114, 4935, 558, 7, 52, "Output",ExpressionUUID->"078e05b7-7449-4025-bda0-711e924f2a75"],
Cell[224675, 4944, 559, 7, 52, "Output",ExpressionUUID->"7fe7dc69-6afa-42d4-9ae6-221ba094973c"],
Cell[225237, 4953, 559, 7, 52, "Output",ExpressionUUID->"4e94610d-9087-48c4-826e-44a9f7c39ff1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225833, 4965, 245, 4, 46, "Input",ExpressionUUID->"51a3d1b4-e32f-47c1-9b19-f95e1be2f7ac"],
Cell[226081, 4971, 14790, 354, 141, "Output",ExpressionUUID->"b3207b13-8a54-4c0d-ba59-70c91b3c726b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240908, 5330, 214, 3, 46, "Input",ExpressionUUID->"1a4d8a48-ddfe-40ac-a474-6616719b7aa7"],
Cell[241125, 5335, 8433, 213, 190, "Output",ExpressionUUID->"b7ce68c2-3c9f-4b7e-b703-610dd320708a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249595, 5553, 213, 3, 46, "Input",ExpressionUUID->"24bc3c8d-a6ec-494c-8446-a4e9df3540f0"],
Cell[249811, 5558, 8295, 208, 190, "Output",ExpressionUUID->"b2cda1fe-eb9e-435a-8ac8-831d0790e03a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258143, 5771, 199, 3, 46, "Input",ExpressionUUID->"31ffa36b-df55-4783-bb62-4e79b36e1d53"],
Cell[258345, 5776, 348, 6, 52, "Output",ExpressionUUID->"0831062e-c7e7-4d54-a7e1-f0dfdde9b42f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258730, 5787, 332, 6, 46, "Input",ExpressionUUID->"e1cf44a3-f202-4344-9b1e-8b06b99ab9d8"],
Cell[259065, 5795, 1091, 26, 52, "Output",ExpressionUUID->"ec005aa1-402c-4f40-95af-1305685bd76d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260193, 5826, 364, 7, 46, "Input",ExpressionUUID->"c039af7f-ae49-421c-852b-b0cd4be85222"],
Cell[260560, 5835, 885, 24, 52, "Output",ExpressionUUID->"73217d23-1502-40bf-ac2a-8c1b56ec882d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261482, 5864, 368, 7, 46, "Input",ExpressionUUID->"38d57731-2637-406f-9d97-7098902551e4"],
Cell[261853, 5873, 447, 7, 52, "Output",ExpressionUUID->"5a41fec9-b91a-4d1d-a1ee-efafddf5a34b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[262337, 5885, 317, 6, 46, "Input",ExpressionUUID->"76d3897e-a8a1-4105-afa1-f240a3fe3678"],
Cell[262657, 5893, 888, 24, 52, "Output",ExpressionUUID->"406a1aef-23e3-4598-822c-35f88900cb55"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263582, 5922, 199, 3, 46, "Input",ExpressionUUID->"6092edbf-fa29-45a8-8aae-6d2ab8f6553f"],
Cell[263784, 5927, 15506, 366, 176, "Output",ExpressionUUID->"57dbbc71-b269-489e-b21a-60c49f5465b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279327, 6298, 248, 4, 46, "Input",ExpressionUUID->"34246483-92af-4b1d-86bb-bed1c2dd8bc6"],
Cell[279578, 6304, 33390, 722, 491, "Output",ExpressionUUID->"b00ec363-256a-46e5-a3cb-b69af9571adc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[313005, 7031, 685, 14, 109, "Input",ExpressionUUID->"cd5473e5-c6be-403e-8a7a-815d804783b0"],
Cell[313693, 7047, 853, 25, 69, "Output",ExpressionUUID->"023b9f44-9ac6-4afb-a9fc-f627d217c392"],
Cell[314549, 7074, 992, 30, 69, "Output",ExpressionUUID->"274b98a9-55c8-4e5a-b86b-f7e5c6c6ed83"],
Cell[315544, 7106, 1044, 30, 103, "Output",ExpressionUUID->"13ef6c7e-11e5-49e2-9e63-71773f69352e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[316625, 7141, 460, 9, 46, "Input",ExpressionUUID->"90f5d5ea-180d-4470-8a1e-63714c4860d3"],
Cell[317088, 7152, 5493, 161, 301, "Output",ExpressionUUID->"875675ef-8bbd-4467-9732-a54ebe6e6d70"]
}, Open  ]],
Cell[CellGroupData[{
Cell[322618, 7318, 360, 8, 46, "Input",ExpressionUUID->"c72f7376-6b4a-4af3-a048-68c8737bc86c"],
Cell[322981, 7328, 3226, 94, 254, "Output",ExpressionUUID->"42bf2925-9d16-40c7-a9c6-b58542643eaa"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

