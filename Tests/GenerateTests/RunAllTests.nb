(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    366802,       6910]
NotebookOptionsPosition[    364313,       6866]
NotebookOutlinePosition[    364784,       6884]
CellTagsIndexPosition[    364741,       6881]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8899684458207283`*^9, 3.889968446659306*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"4a4e2e24-fcb6-4e5b-a6de-9a788f0ea471"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"pacletBaseDir", "=", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], ",", "2"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"PacletDirectoryLoad", "[", "pacletBaseDir", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"testFileNames", " ", "=", " ", 
  RowBox[{"FileNames", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"pacletBaseDir", ",", "\"\<Tests\>\"", ",", "\"\<*.wlt\>\""}], 
     "}"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"$ContextPath", "=", 
  RowBox[{"Cases", "[", 
   RowBox[{"$ContextPath", ",", 
    RowBox[{"Except", "[", "\"\<PacletizedResourceFunctions`\>\"", "]"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8894111683493032`*^9, 3.8894112087815933`*^9}, {
   3.889411242053163*^9, 3.88941126569147*^9}, {3.889603572176957*^9, 
   3.88960360623313*^9}, {3.88960408745549*^9, 3.889604092938833*^9}, {
   3.889969691249559*^9, 3.88996969252437*^9}, {3.889970717286119*^9, 
   3.889970718153995*^9}, {3.889971173708085*^9, 3.889971181843957*^9}, {
   3.889971229070705*^9, 3.8899712293375397`*^9}, {3.8899714432222357`*^9, 
   3.8899714500808268`*^9}, 3.890495920897338*^9, {3.890495957177495*^9, 
   3.8904959657175426`*^9}, {3.890496000595605*^9, 3.890496010113224*^9}, {
   3.890496054450512*^9, 3.890496056417246*^9}, {3.890555640296084*^9, 
   3.8905556405146093`*^9}, {3.8905942747634373`*^9, 3.890594276210952*^9}, {
   3.891158085135849*^9, 3.891158137208028*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b9f2d453-3e98-41bc-b67a-28793e860800"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/\"\>"], "Output",
 CellChangeTimes->{3.891852587606163*^9, 3.891852790161696*^9, 
  3.8919137720968103`*^9, 3.892123546894231*^9, 3.892123592268969*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"a62752a1-629e-4bfd-9d93-e49da0d6f03b"],

Cell[BoxData[
 RowBox[{"{", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/\"\>", "}"}]], "Output",
 CellChangeTimes->{3.891852587606163*^9, 3.891852790161696*^9, 
  3.8919137720968103`*^9, 3.892123546894231*^9, 3.8921235923441133`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"0ffb3915-6d7f-46ab-bd31-c0d92557029d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/PacletizeResources.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.891852587606163*^9, 3.891852790161696*^9, 
  3.8919137720968103`*^9, 3.892123546894231*^9, 3.8921235923469067`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"3ba98359-489f-4606-a9e8-4139c830c1df"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"System`\"\>", ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.891852587606163*^9, 3.891852790161696*^9, 
  3.8919137720968103`*^9, 3.892123546894231*^9, 3.892123592349625*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"478c6cea-ff60-441a-bd13-dcbc5b22f81b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tr", "=", 
  RowBox[{"TestReport", "[", "testFileNames", "]"}]}]], "Input",
 CellChangeTimes->{{3.889411155314384*^9, 3.8894111646376877`*^9}, {
  3.889411308437488*^9, 3.889411311891931*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"8a9c9e85-8cbf-4e1c-870c-0a5ec229dd8b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                  Center, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: Catalog.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"93.42%\"", ShowStringCharacters -> False], 
                    0.9342105263157895, AutoDelete -> True], PercentForm], 
                  "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["76", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                  Center, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: Catalog.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"93.42%\"", ShowStringCharacters -> False], 
                    0.9342105263157895, AutoDelete -> True], PercentForm], 
                  "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["76", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["71", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Failed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["5", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox[
                 "\"Failed with wrong results: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["5", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox[
                 "\"Failed with messages: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Failed with errors: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "9.167664`", "\"s\"", "seconds", "\"Seconds\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}], 
               "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: Catalog.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     3838172484420124589 -> 
      TestResultObject[<|
        "TestKey" -> 3838172484420124589, "TestID" -> 
         "Catalog_20230430-5B0DZE", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[
          Get["FernandoDuarte`LongRunRisk`Model`Catalog`"]; 
           Needs["FernandoDuarte`LongRunRisk`Model`ProcessModels`"]; 
           Needs["PacletizedResourceFunctions`"]; Null], "ExpectedOutput" -> 
         HoldForm[Null], "ActualOutput" -> HoldForm[Null], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8921235972951927`*^9, "AbsoluteTimeUsed" -> 
         0.034373`4.6867324358926306, "CPUTimeUsed" -> 0.03439499999999995, 
         "MemoryUsed" -> 6377320|>], 5778499999441152315 -> 
      TestResultObject[<|
        "TestKey" -> 5778499999441152315, "TestID" -> 
         "Catalog_20230430-CGYW9A", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, {
             
             MemberQ[$ContextPath, 
              "FernandoDuarte`LongRunRisk`Model`Catalog`"], 
             
             MemberQ[$ContextPath, 
              "FernandoDuarte`LongRunRisk`Model`ProcessModels`"]}]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8921235973476286`*^9, "AbsoluteTimeUsed" -> 
         0.000031`1.6418766916662664, "CPUTimeUsed" -> 
         0.000029000000000056758`, "MemoryUsed" -> 3456|>], 
      7332364367520653995 -> 
      TestResultObject[<|
        "TestKey" -> 7332364367520653995, "TestID" -> 
         "Catalog_20230430-XEO7BX", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Not[Names["*processModels"] === {}]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8921235973478246`*^9, "AbsoluteTimeUsed" -> 
         0.016953`4.3797615598495545, "CPUTimeUsed" -> 0.01695800000000025, 
         "MemoryUsed" -> 2808|>], 8335744598942742908 -> 
      TestResultObject[<|
        "TestKey" -> 8335744598942742908, "TestID" -> 
         "Catalog_20230430-2XB46L", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[
          FernandoDuarte`LongRunRisk`Model`Catalog`models = 
            PacletizedResourceFunctions`SetSymbolsContext[
             FernandoDuarte`LongRunRisk`Model`Catalog`models]; Apply[And, 
             Map[StringQ, 
              Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8921235973650227`*^9, "AbsoluteTimeUsed" -> 
         4.835392`6.834946685462181, "CPUTimeUsed" -> 1.5663490000000002`, 
         "MemoryUsed" -> 74942280|>], 4346984637480720733 -> 
      TestResultObject[<|
        "TestKey" -> 4346984637480720733, "TestID" -> 
         "Catalog_20230430-7Y5QR3", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, 
            Map[StringQ, 
             Flatten[
              Map[{
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["name"], 
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                "shortname"], 
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["bibRef"], 
                
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["desc"]}& , 
               Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.89212360220067*^9, "AbsoluteTimeUsed" -> 
         0.00006`1.9286662482156374, "CPUTimeUsed" -> 0.00006099999999964467, 
         "MemoryUsed" -> 2856|>], 8824268391482091625 -> 
      TestResultObject[<|
        "TestKey" -> 8824268391482091625, "TestID" -> 
         "Catalog_20230430-746FXB", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, 
            Map[NumberQ, 
             Flatten[
              Map[Values[
                FilterRules[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                 "parameters"], 
                 Except[
                  Alternatives[Catalog`gamma, Catalog`theta]]]]& , {
               "BY", "BKY"}]]]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 3.892123602200896*^9, 
         "AbsoluteTimeUsed" -> 0.000079`2.0481420891224356, "CPUTimeUsed" -> 
         0.00007900000000038432, "MemoryUsed" -> 3088|>], 9203954863430995141 -> 
      TestResultObject[<|
        "TestKey" -> 9203954863430995141, "TestID" -> 
         "Catalog_20230430-PTW6QX", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           FernandoDuarte`LongRunRisk`Model`Catalog`models["BY"][
           "stateVars"]], "ExpectedOutput" -> HoldForm[{
            Catalog`x[Catalog`t], 
            Catalog`sx[Catalog`t]}], "ActualOutput" -> HoldForm[{
            Catalog`x[Catalog`t], 
            Catalog`sx[Catalog`t]}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.8921236022011447`*^9, 
         "AbsoluteTimeUsed" -> 0.000019`1.4292685987848233, "CPUTimeUsed" -> 
         0.000020000000000131024`, "MemoryUsed" -> 2736|>], 
      845335908492446787 -> 
      TestResultObject[<|
        "TestKey" -> 845335908492446787, "TestID" -> 
         "Catalog_20230430-7GZ4W5", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, 
            Map[MemberQ[
              Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]& , {
             "BY", "BKY"}]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 3.8921236022013087`*^9, 
         "AbsoluteTimeUsed" -> 0.000022`1.4929376786542, "CPUTimeUsed" -> 
         0.00002299999999966218, "MemoryUsed" -> 3120|>], 987130484768550190 -> 
      TestResultObject[<|
        "TestKey" -> 987130484768550190, "TestID" -> 
         "Catalog_20230430-BUOGJB", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, 
            Map[AssociationQ, 
             Flatten[{
               Head[FernandoDuarte`LongRunRisk`Model`Catalog`models], 
               Map[Head[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#]]& , 
                Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]}]]]], 
         "ExpectedOutput" -> HoldForm[False], "ActualOutput" -> 
         HoldForm[False], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.892123602201482*^9, 
         "AbsoluteTimeUsed" -> 0.000031`1.6418766916662664, "CPUTimeUsed" -> 
         0.000032000000000032, "MemoryUsed" -> 2864|>], 4291822810235616339 -> 
      TestResultObject[<|
        "TestKey" -> 4291822810235616339, "TestID" -> 
         "Catalog_20230430-BC1D0D", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           PacletizedResourceFunctions`SetSymbolsContext[
            
            Block[{Catalog`model = 
              FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
               FernandoDuarte`LongRunRisk`Model`Catalog`models][
               "NRC"], $Context = "ProcessModels`"}, {
              ReplaceAll[
               PacletizedResourceFunctions`SetSymbolsContext[
                Catalog`pi[Catalog`t]], 
               Catalog`model["exogenousEq"]]}]]], "ExpectedOutput" -> 
         HoldForm[{
            Catalog`pi[Catalog`t]}], "ActualOutput" -> HoldForm[{
            Catalog`pi[Catalog`t]}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.8921236022016654`*^9, 
         "AbsoluteTimeUsed" -> 0.018923`4.427504987200225, "CPUTimeUsed" -> 
         0.018925000000000303`, "MemoryUsed" -> 686752|>], 
      1868510466864175066 -> 
      TestResultObject[<|
        "TestKey" -> 1868510466864175066, "TestID" -> 
         "EndogenousEq_20230423-TLTBLI", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Needs["FernandoDuarte`LongRunRisk`Model`EndogenousEq`"]], 
         "ExpectedOutput" -> HoldForm[Null], "ActualOutput" -> HoldForm[Null],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8921236022278886`*^9, "AbsoluteTimeUsed" -> 
         0.000031`1.6418766916662664, "CPUTimeUsed" -> 0.0000310000000007804, 
         "MemoryUsed" -> 3040|>], 8957131418070303264 -> 
      TestResultObject[<|
        "TestKey" -> 8957131418070303264, "TestID" -> 
         "EndogenousEq_20230423-9GM2JT", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Not[Names["*pdeq"] === {}]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 3.8921236022280817`*^9, 
         "AbsoluteTimeUsed" -> 0.020056`4.452759318782154, "CPUTimeUsed" -> 
         0.02012700000000045, "MemoryUsed" -> 2808|>], 4469394991335224673 -> 
      TestResultObject[<|
        "TestKey" -> 4469394991335224673, "TestID" -> 
         "ExogenousEq_20230430-2RKQZT", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "SameTest" -> SameQ,
          "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Needs["FernandoDuarte`LongRunRisk`Model`ExogenousEq`"]], 
         "ExpectedOutput" -> HoldForm[Null], "ActualOutput" -> HoldForm[Null],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.892123602254575*^9, "AbsoluteTimeUsed" -> 
         0.000031`1.6418766916662664, "CPUTimeUsed" -> 0.0000310000000007804, 
         "MemoryUsed" -> 3040|>], 7282781457445393959 -> 
      TestResultObject[<|
        "TestKey" -> 7282781457445393959, "TestID" -> 
         "ExogenousEq_20230430-NYA3HI", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "SameTest" -> SameQ,
          "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Not[Names["*xeq"] === {}]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 3.8921236022547626`*^9, 
         "AbsoluteTimeUsed" -> 0.01931`4.436297271611389, "CPUTimeUsed" -> 
         0.01931499999999886, "MemoryUsed" -> 2808|>], 385491540432348923 -> 
      TestResultObject[<|
        "TestKey" -> 385491540432348923, "TestID" -> 
         "ExogenousEq_20230430-6FI1ZA", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "SameTest" -> SameQ,
          "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[ExogenousEq`t]], 
         "ExpectedOutput" -> 
         HoldForm[
          FernandoDuarte`LongRunRisk`Model`Parameters`rhoxpbar (-
              FernandoDuarte`LongRunRisk`Model`Parameters`mupbar + 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pibar[-1 + 
               ExogenousEq`t]) + 
           FernandoDuarte`LongRunRisk`Model`Parameters`rhox 
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x[-1 + 
              ExogenousEq`t] + 
           FernandoDuarte`LongRunRisk`Model`Parameters`phixc (
              FernandoDuarte`LongRunRisk`Model`Parameters`Esc^2 + 
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sc[-1 + 
                ExogenousEq`t])^Rational[1, 2] 
            FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][ExogenousEq`t] + 
           FernandoDuarte`LongRunRisk`Model`Parameters`phix (
              FernandoDuarte`LongRunRisk`Model`Parameters`Esx^2 + 
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx[-1 + 
                ExogenousEq`t])^Rational[1, 2] 
            FernandoDuarte`LongRunRisk`Model`Shocks`eps["x"][ExogenousEq`t]], 
         "ActualOutput" -> 
         HoldForm[
          FernandoDuarte`LongRunRisk`Model`Parameters`rhoxpbar (-
              FernandoDuarte`LongRunRisk`Model`Parameters`mupbar + 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pibar[-1 + 
               ExogenousEq`t]) + 
           FernandoDuarte`LongRunRisk`Model`Parameters`rhox 
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x[-1 + 
              ExogenousEq`t] + 
           FernandoDuarte`LongRunRisk`Model`Parameters`phixc (
              FernandoDuarte`LongRunRisk`Model`Parameters`Esc^2 + 
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sc[-1 + 
                ExogenousEq`t])^Rational[1, 2] 
            FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][ExogenousEq`t] + 
           FernandoDuarte`LongRunRisk`Model`Parameters`phix (
              FernandoDuarte`LongRunRisk`Model`Parameters`Esx^2 + 
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx[-1 + 
                ExogenousEq`t])^Rational[1, 2] 
            FernandoDuarte`LongRunRisk`Model`Shocks`eps["x"][ExogenousEq`t]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8921236022743697`*^9, "AbsoluteTimeUsed" -> 
         0.000049`1.8407110778605074, "CPUTimeUsed" -> 
         0.000047999999999603915`, "MemoryUsed" -> 4320|>], 
      208937155180770303 -> 
      TestResultObject[<|
        "TestKey" -> 208937155180770303, "TestID" -> 
         "ExogenousEq_20230430-CH1YSN", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "SameTest" -> SameQ,
          "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Module[{ExogenousEq`allShocks}, ExogenousEq`allShocks = Cases[
               ResourceFunction["SetSymbolsContext"][
                Map[ToExpression, 
                 
                 Map[# <> "[t]"& , 
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]\
]], ExogenousEq`eps[
                 Pattern[ExogenousEq`var, 
                  Blank[]]][
                 Pattern[ExogenousEq`t, 
                  Blank[]]] :> ToString[ExogenousEq`var] <> "eq", Infinity]; 
            SubsetQ[FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars, 
              DeleteDuplicates[ExogenousEq`allShocks]]]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8921236022746177`*^9, "AbsoluteTimeUsed" -> 
         0.105948`5.175607760698893, "CPUTimeUsed" -> 0.09633599999999998, 
         "MemoryUsed" -> 323376|>], 3888277088733959385 -> 
      TestResultObject[<|
        "TestKey" -> 3888277088733959385, "TestID" -> 
         "NiceOutput_20230430-ZCQFAM", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[
          Needs["FernandoDuarte`LongRunRisk`Tools`NiceOutput`"]; 
           Needs["FernandoDuarte`LongRunRisk`Model`ProcessModels`"]; 
           Needs["PacletizedResourceFunctions`"]; 
           Get["FernandoDuarte`LongRunRisk`Model`Catalog`"]; Needs["MaTeX`"]; 
           Null], "ExpectedOutput" -> HoldForm[Null], "ActualOutput" -> 
         HoldForm[Null], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.8921236023896627`*^9, 
         "AbsoluteTimeUsed" -> 0.155586`5.342485513388683, "CPUTimeUsed" -> 
         0.1459729999999997, "MemoryUsed" -> 929416|>], 1628357026362801210 -> 
      TestResultObject[<|
        "TestKey" -> 1628357026362801210, "TestID" -> 
         "NiceOutput_20230430-H5Y998", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, {
             
             MemberQ[$ContextPath, 
              "FernandoDuarte`LongRunRisk`Model`Catalog`"], 
             
             MemberQ[$ContextPath, 
              "FernandoDuarte`LongRunRisk`Tools`NiceOutput`"], 
             
             MemberQ[$ContextPath, 
              "FernandoDuarte`LongRunRisk`Model`ProcessModels`"], 
             MemberQ[$ContextPath, "PacletizedResourceFunctions`"]}]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8921236025456395`*^9, "AbsoluteTimeUsed" -> 
         0.000027`1.581878761990981, "CPUTimeUsed" -> 0.00002800000000036107, 
         "MemoryUsed" -> 3360|>], 5687948065668558583 -> 
      TestResultObject[<|
        "TestKey" -> 5687948065668558583, "TestID" -> 
         "NiceOutput_20230430-QKXM6S", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Not[Names["*Info"] === {}]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 3.8921236025458307`*^9, 
         "AbsoluteTimeUsed" -> 0.024222`4.534724997625952, "CPUTimeUsed" -> 
         0.024191000000000074`, "MemoryUsed" -> 2808|>], 7899548376725083873 -> 
      TestResultObject[<|
        "TestKey" -> 7899548376725083873, "TestID" -> 
         "NiceOutput_20230430-RT7KCF", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, {
             Not[Names["*processModels"] === {}], 
             Not[Names["*models"] === {}]}]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8921236025703416`*^9, "AbsoluteTimeUsed" -> 
         0.047852`4.83041509189495, "CPUTimeUsed" -> 0.04782699999999984, 
         "MemoryUsed" -> 2824|>], 5173764875851825666 -> 
      TestResultObject[<|
        "TestKey" -> 5173764875851825666, "TestID" -> 
         "NiceOutput_20230430-GSTQDK", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[
          NiceOutput`myModels = 
            FernandoDuarte`LongRunRisk`Model`Catalog`models; {
             Head[
              NiceOutput`myModels["BKY"]["numStocks"]], 
             Part[
              NiceOutput`myModels["BKY"]["parameters"], 1]}], 
         "ExpectedOutput" -> 
         HoldForm[{
           Missing, FernandoDuarte`LongRunRisk`Model`Parameters`delta -> 
            0.9989}], "ActualOutput" -> 
         HoldForm[{
           Missing, FernandoDuarte`LongRunRisk`Model`Parameters`delta -> 
            0.9989}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.8921236026185684`*^9, 
         "AbsoluteTimeUsed" -> 0.000041`1.7632988545517294, "CPUTimeUsed" -> 
         0.000041000000000401826`, "MemoryUsed" -> 2336|>], 
      9125104618114944105 -> 
      TestResultObject[<|
        "TestKey" -> 9125104618114944105, "TestID" -> 
         "NiceOutput_20230430-IW2FAF", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[
          NiceOutput`myModelsInfo = 
            FernandoDuarte`LongRunRisk`Tools`NiceOutput`Info[
             NiceOutput`myModels]; 
           Apply[And, {Head[NiceOutput`myModelsInfo] === Column, Head[
                Part[NiceOutput`myModelsInfo, 1]] === List, Head[
                Part[NiceOutput`myModelsInfo, 1, 1]] === OpenerView, 
              Apply[And, 
               Map[MatchQ[#, Grid]& , 
                Map[Head, 
                 Part[NiceOutput`myModelsInfo, 1, 
                  Span[1, All], 1, 2]]]]}]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8921236026188087`*^9, "AbsoluteTimeUsed" -> 
         0.960311`6.13292690140363, "CPUTimeUsed" -> 0.23003600000000013`, 
         "MemoryUsed" -> 3780000|>], 8340599311265480355 -> 
      TestResultObject[<|
        "TestKey" -> 8340599311265480355, "TestID" -> 
         "NiceOutput_20230430-D66RE9", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Failure", "Input" -> 
         HoldForm[
          NiceOutput`newBY = <|"myModel" -> NiceOutput`myModels["BY"]|>; 
           NiceOutput`newBYInfo = 
            PacletizedResourceFunctions`SetSymbolsContext[
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`Info[
              NiceOutput`newBY]]; 
           NiceOutput`newBYproc = 
            PacletizedResourceFunctions`SetSymbolsContext[
              FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
              NiceOutput`newBY]]; 
           NiceOutput`newBYprocInfo = 
            FernandoDuarte`LongRunRisk`Tools`NiceOutput`Info[
             NiceOutput`newBYproc]; 
           Apply[And, {
             Part[NiceOutput`newBYInfo, 1, 1, 1, 1] === "BY", ToString[
                Part[
                NiceOutput`newBYInfo, 1, 1, 1, 2, 1, 4, 1, 1, 2, 1, 1, 1, 1]] === 
              "x[t]", Part[NiceOutput`newBYprocInfo, 1, 1, 1, 1] === "BY", 
              ToString[
                Part[
                NiceOutput`newBYprocInfo, 1, 1, 1, 2, 1, 4, 1, 1, 2, 1, 1, 1, 
                 1]] === "x[t]"}]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[False], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8921236035795474`*^9, "AbsoluteTimeUsed" -> 
         0.082564`5.06730572300474, "CPUTimeUsed" -> 0.08258600000000005, 
         "MemoryUsed" -> 159152|>], 6717303463893626176 -> 
      TestResultObject[<|
        "TestKey" -> 6717303463893626176, "TestID" -> 
         "NiceOutput_20230430-78KH9K", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, {Head[NiceOutput`newBYInfo] === Column, Head[
               Part[NiceOutput`newBYInfo, 1]] === List, Head[
               Part[NiceOutput`newBYInfo, 1, 1]] === OpenerView, 
             Apply[And, 
              Map[MatchQ[#, Grid]& , 
               Map[Head, 
                Part[NiceOutput`newBYInfo, 1, 
                 Span[1, All], 1, 2]]]]}]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.892123603662358*^9, "AbsoluteTimeUsed" -> 
         0.000056`1.8987030248381942, "CPUTimeUsed" -> 0.00005600000000072214,
          "MemoryUsed" -> 6072|>], 4655419445387131516 -> 
      TestResultObject[<|
        "TestKey" -> 4655419445387131516, "TestID" -> 
         "NiceOutput_20230430-3HYGZ7", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           With[{NiceOutput`localPi = 3.14}, {
             
             FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[3.14], 
             
             FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[3.14, NumberMarks -> True], 
             
             FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[3.14, NumberMarks -> False], 
             
             FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[NiceOutput`localPi], 
             
             FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[NiceOutput`localPi, NumberMarks -> True], 
             
             FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[NiceOutput`localPi, NumberMarks -> False], 
             
             FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[NiceOutput`\[CapitalPi]], 
             
             FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[
             NiceOutput`\[CapitalPi], CharacterEncoding -> "ASCII"], 
             
             FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[Pi], 
             
             FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[
              N[Pi]], 
             
             FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[3.14 10^(-7)], 
             
             FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[
              Flatten[{
                ReplaceAll[
                FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
stripContext[NiceOutput`delta]/2, 
                 
                 FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
stripContext[{NiceOutput`delta -> 0.99}]]}]]}]], "ExpectedOutput" -> 
         HoldForm[{
           "3.14", "3.14`", "3.14", "3.14", "3.14`", "3.14", "\[CapitalPi]", 
            "\\[CapitalPi]", "3.141592653589793", "3.141592653589793", 
            "3.14*^-7", "{0.495}"}], "ActualOutput" -> 
         HoldForm[{
           "3.14", "3.14`", "3.14", "3.14", "3.14`", "3.14", "\[CapitalPi]", 
            "\\[CapitalPi]", "3.141592653589793", "3.141592653589793", 
            "3.14*^-7", "{0.495}"}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.8921236036626496`*^9, 
         "AbsoluteTimeUsed" -> 0.000127`2.2543187187879505, "CPUTimeUsed" -> 
         0.00012699999999998823`, "MemoryUsed" -> 3488|>], 
      3079863889345686832 -> 
      TestResultObject[<|
        "TestKey" -> 3079863889345686832, "TestID" -> 
         "NiceOutput_20230430-UH3CPJ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Not[
            StringFreeQ[
             
             FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
stringFormattingTemplate[
             "Long-run risk model with stochastic volatility in the original \
2004 paper by Bansal and Yaron"], 
             Alternatives["\t", "\n"]]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 3.8921236036629395`*^9, 
         "AbsoluteTimeUsed" -> 0.000636`2.9539721134804076, "CPUTimeUsed" -> 
         0.0006370000000002207, "MemoryUsed" -> 21200|>], 4534661209786667117 -> 
      TestResultObject[<|
        "TestKey" -> 4534661209786667117, "TestID" -> 
         "PacletizeResources_20230430-TSBLY6", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/PacletizeResources.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[{Needs["FernandoDuarte`LongRunRisk`"]; Null}], 
         "ExpectedOutput" -> HoldForm[{Null}], "ActualOutput" -> 
         HoldForm[{Null}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.8921236036733336`*^9, 
         "AbsoluteTimeUsed" -> 0.339573`5.681448149318003, "CPUTimeUsed" -> 
         0.32165799999999933`, "MemoryUsed" -> 294920|>], 5701652886910553219 -> 
      TestResultObject[<|
        "TestKey" -> 5701652886910553219, "TestID" -> 
         "PacletizeResources_20230430-8Q9ENI", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/PacletizeResources.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, {
             Not[PacletFind["MaTeX"] === {}], 
             Not[PacletFind["PacletizedResourceFunctions"] === {}], 
             MemberQ[$Packages, "MaTeX`"], Part[
               PacletFind["MaTeX"], 1]["Version"] === "1.7.9", 
             Not[PacletFind[
                Names["*NeedsDefinitions"]] === {}], 
             Not[PacletFind[
                Names["*SetSymbolsContext"]] === {}]}]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8921236040133147`*^9, "AbsoluteTimeUsed" -> 
         0.043712`4.791115675497414, "CPUTimeUsed" -> 0.04374199999999995, 
         "MemoryUsed" -> 1832|>], 6471210325591053495 -> 
      TestResultObject[<|
        "TestKey" -> 6471210325591053495, "TestID" -> 
         "ProcessModels_20230430-LQGN9L", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[
          Get["FernandoDuarte`LongRunRisk`Model`Catalog`"]; 
           Needs["FernandoDuarte`LongRunRisk`Model`ProcessModels`"]; 
           Needs["PacletizedResourceFunctions`"]; Null], "ExpectedOutput" -> 
         HoldForm[Null], "ActualOutput" -> HoldForm[Null], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8921236040651145`*^9, "AbsoluteTimeUsed" -> 
         0.001871`3.422588785332004, "CPUTimeUsed" -> 0.0018809999999991334`, 
         "MemoryUsed" -> 2360|>], 1842556750203199170 -> 
      TestResultObject[<|
        "TestKey" -> 1842556750203199170, "TestID" -> 
         "ProcessModels_20230430-2VUU3H", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, {
             
             MemberQ[$ContextPath, 
              "FernandoDuarte`LongRunRisk`Model`Catalog`"], 
             
             MemberQ[$ContextPath, 
              "FernandoDuarte`LongRunRisk`Model`ProcessModels`"]}]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8921236040672097`*^9, "AbsoluteTimeUsed" -> 
         0.000023`1.512242833849586, "CPUTimeUsed" -> 0.00002299999999966218, 
         "MemoryUsed" -> 3088|>], 6259296462780160086 -> 
      TestResultObject[<|
        "TestKey" -> 6259296462780160086, "TestID" -> 
         "ProcessModels_20230430-MM0N2R", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, {
             Not[Names["*processModels"] === {}], 
             Not[Names["*models"] === {}]}]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8921236040673966`*^9, "AbsoluteTimeUsed" -> 
         0.040202`4.754762657069644, "CPUTimeUsed" -> 0.04020799999999891, 
         "MemoryUsed" -> 2824|>], 6000772220166179566 -> 
      TestResultObject[<|
        "TestKey" -> 6000772220166179566, "TestID" -> 
         "ProcessModels_20230430-6XBRD7", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[
          ProcessModels`myModels = 
            FernandoDuarte`LongRunRisk`Model`Catalog`models; Apply[And, 
             Map[StringQ, 
              Keys[ProcessModels`myModels]]]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8921236041078987`*^9, "AbsoluteTimeUsed" -> 
         0.000032`1.6556649761518998, "CPUTimeUsed" -> 0.000032000000000032, 
         "MemoryUsed" -> 1672|>], 1204570815390243331 -> 
      TestResultObject[<|
        "TestKey" -> 1204570815390243331, "TestID" -> 
         "ProcessModels_20230430-WMC319", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, 
            Map[StringQ, 
             Flatten[
              Map[{
                ProcessModels`myModels[#]["name"], 
                ProcessModels`myModels[#]["shortname"], 
                ProcessModels`myModels[#]["bibRef"], 
                ProcessModels`myModels[#]["desc"]}& , 
               Keys[ProcessModels`myModels]]]]]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8921236041081047`*^9, "AbsoluteTimeUsed" -> 
         0.00007`1.9956130378462509, "CPUTimeUsed" -> 0.00007100000000015427, 
         "MemoryUsed" -> 2856|>], 8325813681360669667 -> 
      TestResultObject[<|
        "TestKey" -> 8325813681360669667, "TestID" -> 
         "ProcessModels_20230430-IM6EQG", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, 
            Map[NumberQ, 
             Flatten[
              Map[Values[
                N[
                 ReplaceRepeated[<|
                   ProcessModels`myModels[#]["parameters"]|>, 
                  ProcessModels`myModels[#]["parameters"]]]]& , 
               Keys[ProcessModels`myModels]]]]]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8921236041083455`*^9, "AbsoluteTimeUsed" -> 
         0.003949`3.747002131568538, "CPUTimeUsed" -> 0.003948999999999536, 
         "MemoryUsed" -> 190080|>], 5593637665652509782 -> 
      TestResultObject[<|
        "TestKey" -> 5593637665652509782, "TestID" -> 
         "ProcessModels_20230430-E0UA32", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           PacletizedResourceFunctions`SetSymbolsContext[
            
            Block[{ProcessModels`model = 
              ProcessModels`myModels["BY"], $Context = "ProcessModels`"}, 
             ProcessModels`model["stateVars"]]]], "ExpectedOutput" -> 
         HoldForm[{
            ProcessModels`x[ProcessModels`t], 
            ProcessModels`sx[ProcessModels`t]}], "ActualOutput" -> HoldForm[{
            ProcessModels`x[ProcessModels`t], 
            ProcessModels`sx[ProcessModels`t]}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8921236041124988`*^9, "AbsoluteTimeUsed" -> 
         0.00009`2.1047575072713185, "CPUTimeUsed" -> 0.0000910000000002853, 
         "MemoryUsed" -> 2968|>], 5341929082844204392 -> 
      TestResultObject[<|
        "TestKey" -> 5341929082844204392, "TestID" -> 
         "ProcessModels_20230430-AROFNG", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, 
            Map[MemberQ[
              Keys[ProcessModels`myModels], #]& , {"BY", "BKY"}]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8921236041127524`*^9, "AbsoluteTimeUsed" -> 
         0.000025`1.5484550065040317, "CPUTimeUsed" -> 
         0.000023999999999801958`, "MemoryUsed" -> 3120|>], 
      2435489589609486676 -> 
      TestResultObject[<|
        "TestKey" -> 2435489589609486676, "TestID" -> 
         "ProcessModels_20230430-OE90D5", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           AllTrue[ProcessModels`myModels, AssociationQ]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8921236041129246`*^9, "AbsoluteTimeUsed" -> 
         0.000023`1.512242833849586, "CPUTimeUsed" -> 0.00002299999999966218, 
         "MemoryUsed" -> 2720|>], 1277166386132367647 -> 
      TestResultObject[<|
        "TestKey" -> 1277166386132367647, "TestID" -> 
         "ProcessModels_20230430-I4KF9P", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           AllTrue[
            Map[ProcessModels`myModels[#]& , 
             Keys[ProcessModels`myModels]], AssociationQ]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8921236041131005`*^9, "AbsoluteTimeUsed" -> 
         0.000026`1.5654883458028115, "CPUTimeUsed" -> 
         0.000026999999999333113`, "MemoryUsed" -> 2832|>], 
      5769953179933202877 -> 
      TestResultObject[<|
        "TestKey" -> 5769953179933202877, "TestID" -> 
         "ProcessModels_20230430-RZRH6P", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[
          Get["PacletizedResourceFunctions`"]; 
           Not[Names["*SetSymbolsContext"] === {}]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8921236041132755`*^9, "AbsoluteTimeUsed" -> 
         0.052315`4.869141227487362, "CPUTimeUsed" -> 0.05235600000000051, 
         "MemoryUsed" -> 7096|>], 4865921395683187671 -> 
      TestResultObject[<|
        "TestKey" -> 4865921395683187671, "TestID" -> 
         "ProcessModels_20230430-CNQZU4", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Failure", "Input" -> HoldForm[
           PacletizedResourceFunctions`SetSymbolsContext[
            
            Block[{ProcessModels`model = 
              FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
               ProcessModels`myModels]["NRC"], $Context = "ProcessModels`"}, {
             
              PacletizedResourceFunctions`SetSymbolsContext[
               ReplaceAll[
                ProcessModels`pi[ProcessModels`t], 
                PacletizedResourceFunctions`SetSymbolsContext[
                 ProcessModels`model["exogenousEq"]]]], 
              PacletizedResourceFunctions`SetSymbolsContext[
              ProcessModels`mup + (
                ProcessModels`rhop (ProcessModels`pi[ProcessModels`t - 1] - 
                  ProcessModels`mup) + (
                 ProcessModels`xip 
                  ProcessModels`eps["pi"][ProcessModels`t - 1] + 
                 ProcessModels`phip 
                  ProcessModels`eps["pi"][ProcessModels`t]))]}]]], 
         "ExpectedOutput" -> 
         HoldForm[{
           ProcessModels`mup + 
            ProcessModels`rhop (-ProcessModels`mup + 
              ProcessModels`pi[-1 + ProcessModels`t]) + 
            ProcessModels`xip ProcessModels`eps["pi"][-1 + ProcessModels`t] + 
            ProcessModels`phip ProcessModels`eps["pi"][ProcessModels`t], 
            ProcessModels`mup + 
            ProcessModels`rhop (-ProcessModels`mup + 
              ProcessModels`pi[-1 + ProcessModels`t]) + 
            ProcessModels`xip ProcessModels`eps["pi"][-1 + ProcessModels`t] + 
            ProcessModels`phip ProcessModels`eps["pi"][ProcessModels`t]}], 
         "ActualOutput" -> HoldForm[{
            ProcessModels`pi[ProcessModels`t], ProcessModels`mup + 
            ProcessModels`rhop (-ProcessModels`mup + 
              ProcessModels`pi[-1 + ProcessModels`t]) + 
            ProcessModels`xip ProcessModels`eps["pi"][-1 + ProcessModels`t] + 
            ProcessModels`phip ProcessModels`eps["pi"][ProcessModels`t]}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8921236041660104`*^9, "AbsoluteTimeUsed" -> 
         0.023654`4.524419590306964, "CPUTimeUsed" -> 0.02366400000000013, 
         "MemoryUsed" -> 674248|>], 2045454766560061283 -> 
      TestResultObject[<|
        "TestKey" -> 2045454766560061283, "TestID" -> 
         "ProcessModels_20230430-H47GX8", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Failure", "Input" -> HoldForm[
           PacletizedResourceFunctions`SetSymbolsContext[
            
            Block[{ProcessModels`model = 
              FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
               ProcessModels`myModels]["BY"], $Context = "ProcessModels`"}, {
               PacletizedResourceFunctions`SetSymbolsContext[
                ReplaceAll[
                 ProcessModels`wc[ProcessModels`t], 
                 ProcessModels`model["endogenousEq"]]]} === {
              ProcessModels`A[0] + 
               ProcessModels`A[2] ProcessModels`sx[ProcessModels`t] + 
               ProcessModels`A[1] ProcessModels`x[ProcessModels`t]}]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
         HoldForm[False], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.8921236041901307`*^9, 
         "AbsoluteTimeUsed" -> 0.021611`4.485189861172142, "CPUTimeUsed" -> 
         0.021612000000000187`, "MemoryUsed" -> 499848|>], 
      7758180325664932076 -> 
      TestResultObject[<|
        "TestKey" -> 7758180325664932076, "TestID" -> 
         "ProcessModels_20230430-4WYFNQ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Failure", "Input" -> HoldForm[
           PacletizedResourceFunctions`SetSymbolsContext[
            
            Block[{ProcessModels`model = 
              FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
               ProcessModels`myModels]["BY"], $Context = "ProcessModels`"}, {
               PacletizedResourceFunctions`SetSymbolsContext[
                ReplaceAll[
                 ProcessModels`pd[ProcessModels`t, ProcessModels`i], 
                 ProcessModels`model["endogenousEq"]]]} === {
              ProcessModels`B[ProcessModels`i][0] + (
                ProcessModels`B[ProcessModels`i][2] 
                 ProcessModels`sx[ProcessModels`t] + 
                ProcessModels`B[ProcessModels`i][1] 
                 ProcessModels`x[ProcessModels`t])}]]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[False], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8921236042121687`*^9, "AbsoluteTimeUsed" -> 
         0.021568`4.48432487268722, "CPUTimeUsed" -> 0.021584000000000714`, 
         "MemoryUsed" -> 493992|>], 1028149846864086799 -> 
      TestResultObject[<|
        "TestKey" -> 1028149846864086799, "TestID" -> 
         "ProcessModels_20230430-JWVGH2", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Failure", "Input" -> HoldForm[
           PacletizedResourceFunctions`SetSymbolsContext[
            
            Block[{ProcessModels`model = 
              FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
               ProcessModels`myModels]["NRC"], $Context = "ProcessModels`"}, {
              
               PacletizedResourceFunctions`SetSymbolsContext[
                ReplaceAll[
                 ProcessModels`bondexcret[ProcessModels`t, ProcessModels`m], 
                 ProcessModels`model["endogenousEq"]]]} === {
              ProcessModels`bondret[ProcessModels`t, ProcessModels`m, 1] - 
               ProcessModels`bondyield[ProcessModels`t - 1, 1]}]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
         HoldForm[False], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.8921236042341805`*^9, 
         "AbsoluteTimeUsed" -> 0.021615`4.485270237701664, "CPUTimeUsed" -> 
         0.02163399999999971, "MemoryUsed" -> 493104|>], 5539191578118853042 -> 
      TestResultObject[<|
        "TestKey" -> 5539191578118853042, "TestID" -> 
         "ProcessModels_20230430-BJRV99", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           PacletizedResourceFunctions`SetSymbolsContext[
            
            Block[{ProcessModels`modelsP = 
              FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
               ProcessModels`myModels], ProcessModels`modelBY = 
              FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
               ProcessModels`myModels]["BY"], ProcessModels`modelBKY = 
              FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
               ProcessModels`myModels]["BKY"], ProcessModels`newModels, 
              ProcessModels`newModelsP, $Context = "ProcessModels`"}, 
             ProcessModels`newModels = <|
               "myModel" -> ProcessModels`modelBKY, "BY" -> 
                ProcessModels`modelBY|>; 
             ProcessModels`newModelsP = 
              FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
               ProcessModels`newModels]; 
             Apply[And, {
               ProcessModels`newModelsP["myModel"] === 
                ProcessModels`modelsP["BKY"], ProcessModels`newModelsP["BY"] === 
                ProcessModels`modelsP["BY"]}]]]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.892123604256221*^9, "AbsoluteTimeUsed" -> 
         0.07048`4.998580893235985, "CPUTimeUsed" -> 0.07048399999999955, 
         "MemoryUsed" -> 6376|>], 5901910242906978400 -> 
      TestResultObject[<|
        "TestKey" -> 5901910242906978400, "TestID" -> 
         "Shocks_20230503-RNOUX5", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Needs["FernandoDuarte`LongRunRisk`Model`Shocks`"]], 
         "ExpectedOutput" -> HoldForm[Null], "ActualOutput" -> HoldForm[Null],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8921236043376384`*^9, "AbsoluteTimeUsed" -> 
         0.000034`1.6819939148742484, "CPUTimeUsed" -> 0.00003499999999956316,
          "MemoryUsed" -> 3040|>], 6670174264756468057 -> 
      TestResultObject[<|
        "TestKey" -> 6670174264756468057, "TestID" -> 
         "Shocks_20230503-JDVNNJ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           MemberQ[$ContextPath, "FernandoDuarte`LongRunRisk`Model`Shocks`"]],
          "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
         HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.8921236043378525`*^9, 
         "AbsoluteTimeUsed" -> 0.000023`1.512242833849586, "CPUTimeUsed" -> 
         0.000024000000000690136`, "MemoryUsed" -> 2928|>], 
      7427563948841727571 -> 
      TestResultObject[<|
        "TestKey" -> 7427563948841727571, "TestID" -> 
         "Shocks_20230503-NFFJHZ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Not[Names["*rulesE"] === {}]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 3.8921236043380237`*^9, 
         "AbsoluteTimeUsed" -> 0.021653`4.486033073726228, "CPUTimeUsed" -> 
         0.02165599999999923, "MemoryUsed" -> 2808|>], 3547953227230551342 -> 
      TestResultObject[<|
        "TestKey" -> 3547953227230551342, "TestID" -> 
         "Shocks_20230503-3BRJQN", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[
             ReplaceAll[
              FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t], 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
            Table[
             ReplaceAll[
              FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
              Shocks`t, Shocks`ii], 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}]}], "ExpectedOutput" -> 
         HoldForm[{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0}}], "ActualOutput" -> 
         HoldForm[{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0}}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8921236043600254`*^9, "AbsoluteTimeUsed" -> 
         0.000237`2.5252633438420977, "CPUTimeUsed" -> 
         0.00023499999999909704`, "MemoryUsed" -> 4400|>], 
      5057460894591581919 -> 
      TestResultObject[<|
        "TestKey" -> 5057460894591581919, "TestID" -> 
         "Shocks_20230503-2O3ZJ4", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][
               Shocks`t]^2, 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
               Shocks`t, Shocks`ii]^2, 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}]}], "ExpectedOutput" -> 
         HoldForm[{{1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 1}}], "ActualOutput" -> 
         HoldForm[{{1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 1}}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.89212360436045*^9, "AbsoluteTimeUsed" -> 0.023568`4.52283772733055,
          "CPUTimeUsed" -> 0.02366699999999966, "MemoryUsed" -> 3782936|>], 
      6263542986838432643 -> 
      TestResultObject[<|
        "TestKey" -> 6263542986838432643, "TestID" -> 
         "Shocks_20230503-WTI85K", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][
               Shocks`t]^3, 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
               Shocks`t, Shocks`ii]^3, 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}]}], "ExpectedOutput" -> 
         HoldForm[{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0}}], "ActualOutput" -> 
         HoldForm[{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0}}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8921236043842945`*^9, "AbsoluteTimeUsed" -> 
         0.002919`3.6157490928200087, "CPUTimeUsed" -> 0.002951000000001258, 
         "MemoryUsed" -> 3016|>], 3342047158004443020 -> 
      TestResultObject[<|
        "TestKey" -> 3342047158004443020, "TestID" -> 
         "Shocks_20230503-VRZEKL", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][
               Shocks`t]^4, 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
               Shocks`t, Shocks`ii]^4, 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}]}], "ExpectedOutput" -> 
         HoldForm[{{3, 3, 3, 3, 3, 3, 3, 3}, {3, 3, 3}}], "ActualOutput" -> 
         HoldForm[{{3, 3, 3, 3, 3, 3, 3, 3}, {3, 3, 3}}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.892123604387428*^9, "AbsoluteTimeUsed" -> 
         0.002875`3.609152846857643, "CPUTimeUsed" -> 0.0029120000000002477`, 
         "MemoryUsed" -> 3016|>], 7351823014641299648 -> 
      TestResultObject[<|
        "TestKey" -> 7351823014641299648, "TestID" -> 
         "Shocks_20230503-Q00MJG", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[
             If[Shocks`f === Shocks`g, 0, 
              ReplaceAll[
              FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][
                Shocks`t], 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]]], {
             Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}, {
             Shocks`g, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
               Shocks`t, Shocks`ii] 
              FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t], 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}, {
             Shocks`f, {"x", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
         "ExpectedOutput" -> 
         HoldForm[{{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0,
             0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
            0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 
            0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
            0}, {0, 0, 0, 0, 0, 0, 0}}}], "ActualOutput" -> 
         HoldForm[{{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0,
             0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
            0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 
            0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
            0}, {0, 0, 0, 0, 0, 0, 0}}}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.8921236043905525`*^9, 
         "AbsoluteTimeUsed" -> 0.001556`3.3425245904856644, "CPUTimeUsed" -> 
         0.001554999999999751, "MemoryUsed" -> 7408|>], 5831384806206799732 -> 
      TestResultObject[<|
        "TestKey" -> 5831384806206799732, "TestID" -> 
         "Shocks_20230503-TL5UBK", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Map[StringDelete[#, 
             StringExpression[
              Alternatives["FernandoDuarte", "`"], 
              BlankSequence[], "`"]]& , 
            Table[
             ToString[
              ReplaceAll[
              FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                Shocks`t, Shocks`ii] 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][Shocks`t], 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]]], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}]]], "ExpectedOutput" -> 
         HoldForm[{"taugd[1]", "taugd[i]", "taugd[j]"}], "ActualOutput" -> 
         HoldForm[{"taugd[1]", "taugd[i]", "taugd[j]"}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8921236043923006`*^9, "AbsoluteTimeUsed" -> 
         0.000232`2.5160029827228936, "CPUTimeUsed" -> 
         0.00023299999999970566`, "MemoryUsed" -> 2760|>], 
      2018429912914323888 -> 
      TestResultObject[<|
        "TestKey" -> 2018429912914323888, "TestID" -> 
         "Shocks_20230503-FK75YS", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][
               Shocks`t]^4, 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
               Shocks`t, Shocks`ii]^4, 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}]}], "ExpectedOutput" -> 
         HoldForm[{{3, 3, 3, 3, 3, 3, 3, 3}, {3, 3, 3}}], "ActualOutput" -> 
         HoldForm[{{3, 3, 3, 3, 3, 3, 3, 3}, {3, 3, 3}}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8921236043927307`*^9, "AbsoluteTimeUsed" -> 
         0.002905`3.6136611345583436, "CPUTimeUsed" -> 0.002935000000000798, 
         "MemoryUsed" -> 3016|>], 7290397360499119473 -> 
      TestResultObject[<|
        "TestKey" -> 7290397360499119473, "TestID" -> 
         "Shocks_20230503-J2ZKFP", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[
             If[Shocks`f === Shocks`g, 0, 
              ReplaceAll[
              FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][
                 Shocks`t]^2 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][
                Shocks`t], 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]]], {
             Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}, {
             Shocks`g, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                Shocks`t, Shocks`ii]^2 
              FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t], 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}, {
             Shocks`f, {"x", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
         "ExpectedOutput" -> 
         HoldForm[{{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0,
             0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
            0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 
            0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
            0}, {0, 0, 0, 0, 0, 0, 0}}}], "ActualOutput" -> 
         HoldForm[{{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0,
             0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
            0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 
            0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
            0}, {0, 0, 0, 0, 0, 0, 0}}}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.8921236043958764`*^9, 
         "AbsoluteTimeUsed" -> 0.019421`4.438786586086815, "CPUTimeUsed" -> 
         0.01964200000000016, "MemoryUsed" -> 6208|>], 1022020689367603772 -> 
      TestResultObject[<|
        "TestKey" -> 1022020689367603772, "TestID" -> 
         "Shocks_20230503-4LCSM3", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[ReplaceAll[Shocks`expr, 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
             Shocks`expr, {Shocks`expr, 
              Table[
               FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][
               Shocks`t + 1], {
               Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
            Table[ReplaceAll[Shocks`expr, 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
             Shocks`expr, {Shocks`expr, 
              Table[
               FernandoDuarte`LongRunRisk`Model`Shocks`eps[
                ToExpression[Shocks`f]][Shocks`t], {
               Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
            Table[ReplaceAll[Shocks`expr, 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
             Shocks`expr, {Shocks`expr, {
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
               Shocks`t + 1, Shocks`i], 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`dd][
               Shocks`t, Shocks`i]}}]}], "ExpectedOutput" -> 
         HoldForm[{{True, True, True, True, True, True, True, True}, {
            True, True, True, True, True, True, True, True}, {True, True}}], 
         "ActualOutput" -> 
         HoldForm[{{True, True, True, True, True, True, True, True}, {
            True, True, True, True, True, True, True, True}, {True, True}}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8921236044155436`*^9, "AbsoluteTimeUsed" -> 
         0.000424`2.7778808544247267, "CPUTimeUsed" -> 0.0004249999999998977, 
         "MemoryUsed" -> 7136|>], 392195635710245156 -> 
      TestResultObject[<|
        "TestKey" -> 392195635710245156, "TestID" -> "Shocks_20230503-MVL927",
          "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[ReplaceAll[Shocks`expr, 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
             Shocks`expr, {Shocks`expr, 
              Table[
               FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f], {
               Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
            Table[ReplaceAll[
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"], 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
             FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}]}], "ExpectedOutput" -> 
         HoldForm[{{True, True, True, True, True, True, True, True}, {
            True, True, True}}], "ActualOutput" -> 
         HoldForm[{{True, True, True, True, True, True, True, True}, {
            True, True, True}}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.8921236044161706`*^9, 
         "AbsoluteTimeUsed" -> 0.000209`2.4706612839430475, "CPUTimeUsed" -> 
         0.00021000000000093166`, "MemoryUsed" -> 3168|>], 
      3827686994436763061 -> 
      TestResultObject[<|
        "TestKey" -> 3827686994436763061, "TestID" -> 
         "Shocks_20230503-115E06", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[ReplaceAll[Shocks`expr, 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
             Shocks`expr, {Shocks`expr, 
              Table[
               FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f], {
               Shocks`f, {
                "xx", "adc", "p", "rhobar", "ssg", "ssx", "sdc", "spi"}}]}], 
            Table[ReplaceAll[
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["ddd"], 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
             FernandoDuarte`LongRunRisk`Model`Shocks`eps["ddd"], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}]}], "ExpectedOutput" -> 
         HoldForm[{{True, True, True, True, True, True, True, True}, {
            True, True, True}}], "ActualOutput" -> 
         HoldForm[{{True, True, True, True, True, True, True, True}, {
            True, True, True}}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.892123604416578*^9, 
         "AbsoluteTimeUsed" -> 0.000209`2.4706612839430475, "CPUTimeUsed" -> 
         0.0002089999999999037, "MemoryUsed" -> 3168|>], 6313090256707259515 -> 
      TestResultObject[<|
        "TestKey" -> 6313090256707259515, "TestID" -> 
         "Shocks_20230503-CG0EJO", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[ReplaceAll[Shocks`expr, 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
             Shocks`expr, {Shocks`expr, 
              Table[
               FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][
               Shocks`tt], {
               Shocks`f, {
                "xx", "adc", "p", "rhobar", "ssg", "ssx", "sdc", "spi"}}, {
               Shocks`tt, {
                Shocks`t + 1, Shocks`t - 1, Shocks`s, Shocks`t + 
                 Shocks`h}}]}], 
            Table[ReplaceAll[Shocks`expr, 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
             Shocks`expr, {Shocks`expr, 
              Table[
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
               Shocks`tt, Shocks`ii], {Shocks`ii, {1, Shocks`i, Shocks`j}}, {
               Shocks`tt, {
                Shocks`t + 1, Shocks`t - 1, Shocks`s, Shocks`t + 
                 Shocks`h}}]}]}], "ExpectedOutput" -> 
         HoldForm[{{True, True, True, True, True, True, True, True}, {
            True, True, True}}], "ActualOutput" -> 
         HoldForm[{{True, True, True, True, True, True, True, True}, {
            True, True, True}}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.8921236044170184`*^9, 
         "AbsoluteTimeUsed" -> 0.000305`2.6348148371787796, "CPUTimeUsed" -> 
         0.0003049999999999997, "MemoryUsed" -> 3200|>], 1882520111808354730 -> 
      TestResultObject[<|
        "TestKey" -> 1882520111808354730, "TestID" -> 
         "Shocks_20230503-HD5ME8", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[
             ReplaceAll[
              NewContext`eps[Shocks`f][Shocks`t], 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
            Table[
             ReplaceAll[
              NewContext`eps["dd"][Shocks`t, Shocks`ii], 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}]}], "ExpectedOutput" -> 
         HoldForm[{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0}}], "ActualOutput" -> 
         HoldForm[{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0}}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8921236044175096`*^9, "AbsoluteTimeUsed" -> 
         0.000192`2.4338162265355434, "CPUTimeUsed" -> 
         0.00019100000000005224`, "MemoryUsed" -> 4160|>], 437551772623780077 -> 
      TestResultObject[<|
        "TestKey" -> 437551772623780077, "TestID" -> "Shocks_20230503-RH2XUN",
          "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps[Shocks`f][
               Shocks`t]^2, 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps["dd"][
               Shocks`t, Shocks`ii]^2, 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}]}], "ExpectedOutput" -> 
         HoldForm[{{1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 1}}], "ActualOutput" -> 
         HoldForm[{{1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 1}}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8921236044178767`*^9, "AbsoluteTimeUsed" -> 
         0.0029`3.61291299573095, "CPUTimeUsed" -> 0.0029360000000000497`, 
         "MemoryUsed" -> 3016|>], 3327788026265941145 -> 
      TestResultObject[<|
        "TestKey" -> 3327788026265941145, "TestID" -> 
         "TimeAggregation_20230423-KPQB0B", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Needs["FernandoDuarte`LongRunRisk`Tools`TimeAggregation`"]], 
         "ExpectedOutput" -> HoldForm[Null], "ActualOutput" -> HoldForm[Null],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8921236044298787`*^9, "AbsoluteTimeUsed" -> 
         0.000031`1.6418766916662664, "CPUTimeUsed" -> 
         0.000030999999999892225`, "MemoryUsed" -> 3056|>], 
      6871705562505716182 -> 
      TestResultObject[<|
        "TestKey" -> 6871705562505716182, "TestID" -> 
         "TimeAggregation_20230423-JL3EZL", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           
           MemberQ[$ContextPath, 
            "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`"]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8921236044300804`*^9, "AbsoluteTimeUsed" -> 
         0.00002`1.451544993495975, "CPUTimeUsed" -> 0.000020000000000131024`,
          "MemoryUsed" -> 2928|>], 2186449559546114314 -> 
      TestResultObject[<|
        "TestKey" -> 2186449559546114314, "TestID" -> 
         "TimeAggregation_20230423-WH9KE8", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Not[Names["*growth"] === {}]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 3.8921236044302516`*^9, 
         "AbsoluteTimeUsed" -> 0.021276`4.478404979480536, "CPUTimeUsed" -> 
         0.021296999999999677`, "MemoryUsed" -> 2808|>], 8486948856833955603 -> 
      TestResultObject[<|
        "TestKey" -> 8486948856833955603, "TestID" -> 
         "TimeAggregation_20230423-D9OPZX", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
            TimeAggregation`dc, TimeAggregation`t], 
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
            TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 1, 
             "numPeriods" -> 1]}], "ExpectedOutput" -> HoldForm[{
            TimeAggregation`dc[TimeAggregation`t], 
            TimeAggregation`dc[TimeAggregation`t]}], "ActualOutput" -> 
         HoldForm[{
            TimeAggregation`dc[TimeAggregation`t], 
            TimeAggregation`dc[TimeAggregation`t]}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8921236044518185`*^9, "AbsoluteTimeUsed" -> 
         0.009345`4.121094303546845, "CPUTimeUsed" -> 0.009345000000000603, 
         "MemoryUsed" -> 3056480|>], 6156834806096836756 -> 
      TestResultObject[<|
        "TestKey" -> 6156834806096836756, "TestID" -> 
         "TimeAggregation_20230423-45HRTG", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
            TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 3, 
             "numPeriods" -> 1], 
            ReplaceAll[
             ReplaceAll[
              ReplaceAll[
               ReplaceAll[
                FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 
                 12, "numPeriods" -> 1], Plus -> List], Times -> List], 
              TimeAggregation`dc[{
                 Pattern[TimeAggregation`x, 
                  BlankSequence[]], TimeAggregation`t}] -> -
               TimeAggregation`x], TimeAggregation`dc[TimeAggregation`t] -> 
             0]}], "ExpectedOutput" -> 
         HoldForm[{
           Rational[1, 3] (TimeAggregation`dc[-4 + TimeAggregation`t] + 
             2 TimeAggregation`dc[-3 + TimeAggregation`t] + 
             3 TimeAggregation`dc[-2 + TimeAggregation`t] + 
             2 TimeAggregation`dc[-1 + TimeAggregation`t] + 
             TimeAggregation`dc[TimeAggregation`t]), {{
              Rational[1, 12], 22}, {
              Rational[1, 6], 21}, {
              Rational[1, 4], 20}, {
              Rational[1, 3], 19}, {
              Rational[5, 12], 18}, {
              Rational[1, 2], 17}, {
              Rational[7, 12], 16}, {
              Rational[2, 3], 15}, {
              Rational[3, 4], 14}, {
              Rational[5, 6], 13}, {
              Rational[11, 12], 12}, 11, {
              Rational[11, 12], 10}, {
              Rational[5, 6], 9}, {
              Rational[3, 4], 8}, {
              Rational[2, 3], 7}, {
              Rational[7, 12], 6}, {
              Rational[1, 2], 5}, {
              Rational[5, 12], 4}, {
              Rational[1, 3], 3}, {
              Rational[1, 4], 2}, {
              Rational[1, 6], 1}, {
              Rational[1, 12], 0}}}], "ActualOutput" -> 
         HoldForm[{
           Rational[1, 3] (TimeAggregation`dc[-4 + TimeAggregation`t] + 
             2 TimeAggregation`dc[-3 + TimeAggregation`t] + 
             3 TimeAggregation`dc[-2 + TimeAggregation`t] + 
             2 TimeAggregation`dc[-1 + TimeAggregation`t] + 
             TimeAggregation`dc[TimeAggregation`t]), {{
              Rational[1, 12], 22}, {
              Rational[1, 6], 21}, {
              Rational[1, 4], 20}, {
              Rational[1, 3], 19}, {
              Rational[5, 12], 18}, {
              Rational[1, 2], 17}, {
              Rational[7, 12], 16}, {
              Rational[2, 3], 15}, {
              Rational[3, 4], 14}, {
              Rational[5, 6], 13}, {
              Rational[11, 12], 12}, 11, {
              Rational[11, 12], 10}, {
              Rational[5, 6], 9}, {
              Rational[3, 4], 8}, {
              Rational[2, 3], 7}, {
              Rational[7, 12], 6}, {
              Rational[1, 2], 5}, {
              Rational[5, 12], 4}, {
              Rational[1, 3], 3}, {
              Rational[1, 4], 2}, {
              Rational[1, 6], 1}, {
              Rational[1, 12], 0}}}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.8921236044614697`*^9, 
         "AbsoluteTimeUsed" -> 0.054251`4.884922745707017, "CPUTimeUsed" -> 
         0.054537999999999975`, "MemoryUsed" -> 526272|>], 
      5607508647548858373 -> 
      TestResultObject[<|
        "TestKey" -> 5607508647548858373, "TestID" -> 
         "TimeAggregation_20230423-BKME0N", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
            TimeAggregation`sx, TimeAggregation`tau, "TimeAggregation" -> 3, 
             "numPeriods" -> 1], 
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
            TimeAggregation`pibar, TimeAggregation`t - TimeAggregation`h, 
             "TimeAggregation" -> 3, "numPeriods" -> 1]}], "ExpectedOutput" -> 
         HoldForm[{
           Rational[1, 3] (TimeAggregation`sx[-4 + TimeAggregation`tau] + 
             2 TimeAggregation`sx[-3 + TimeAggregation`tau] + 
             3 TimeAggregation`sx[-2 + TimeAggregation`tau] + 
             2 TimeAggregation`sx[-1 + TimeAggregation`tau] + 
             TimeAggregation`sx[TimeAggregation`tau]), 
            Rational[1, 3] (
             TimeAggregation`pibar[-4 - TimeAggregation`h + 
               TimeAggregation`t] + 
             2 TimeAggregation`pibar[-3 - TimeAggregation`h + 
                TimeAggregation`t] + 
             3 TimeAggregation`pibar[-2 - TimeAggregation`h + 
                TimeAggregation`t] + 
             2 TimeAggregation`pibar[-1 - TimeAggregation`h + 
                TimeAggregation`t] + 
             TimeAggregation`pibar[-TimeAggregation`h + TimeAggregation`t])}],
          "ActualOutput" -> 
         HoldForm[{
           Rational[1, 3] (TimeAggregation`sx[-4 + TimeAggregation`tau] + 
             2 TimeAggregation`sx[-3 + TimeAggregation`tau] + 
             3 TimeAggregation`sx[-2 + TimeAggregation`tau] + 
             2 TimeAggregation`sx[-1 + TimeAggregation`tau] + 
             TimeAggregation`sx[TimeAggregation`tau]), 
            Rational[1, 3] (
             TimeAggregation`pibar[-4 - TimeAggregation`h + 
               TimeAggregation`t] + 
             2 TimeAggregation`pibar[-3 - TimeAggregation`h + 
                TimeAggregation`t] + 
             3 TimeAggregation`pibar[-2 - TimeAggregation`h + 
                TimeAggregation`t] + 
             2 TimeAggregation`pibar[-1 - TimeAggregation`h + 
                TimeAggregation`t] + 
             TimeAggregation`pibar[-TimeAggregation`h + TimeAggregation`t])}],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.89212360451601*^9, "AbsoluteTimeUsed" -> 
         0.010524`4.1726958372456595, "CPUTimeUsed" -> 0.01064899999999902, 
         "MemoryUsed" -> 124440|>], 9041493888034833069 -> 
      TestResultObject[<|
        "TestKey" -> 9041493888034833069, "TestID" -> 
         "TimeAggregation_20230423-6CV0A3", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
            TimeAggregation`dd, TimeAggregation`t, TimeAggregation`i, 
             "TimeAggregation" -> 3, "numPeriods" -> 1]}], "ExpectedOutput" -> 
         HoldForm[{
           Rational[1, 3] (
             TimeAggregation`dd[-4 + TimeAggregation`t, TimeAggregation`i] + 
             2 TimeAggregation`dd[-3 + TimeAggregation`t, TimeAggregation`i] + 
             3 TimeAggregation`dd[-2 + TimeAggregation`t, TimeAggregation`i] + 
             2 TimeAggregation`dd[-1 + TimeAggregation`t, TimeAggregation`i] + 
             TimeAggregation`dd[TimeAggregation`t, TimeAggregation`i])}], 
         "ActualOutput" -> 
         HoldForm[{
           Rational[1, 3] (
             TimeAggregation`dd[-4 + TimeAggregation`t, TimeAggregation`i] + 
             2 TimeAggregation`dd[-3 + TimeAggregation`t, TimeAggregation`i] + 
             3 TimeAggregation`dd[-2 + TimeAggregation`t, TimeAggregation`i] + 
             2 TimeAggregation`dd[-1 + TimeAggregation`t, TimeAggregation`i] + 
             TimeAggregation`dd[TimeAggregation`t, TimeAggregation`i])}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.892123604526869*^9, "AbsoluteTimeUsed" -> 
         0.004188`3.7725216708387985, "CPUTimeUsed" -> 0.004266999999999577, 
         "MemoryUsed" -> 59760|>], 2054341745204879035 -> 
      TestResultObject[<|
        "TestKey" -> 2054341745204879035, "TestID" -> 
         "TimeAggregation_20230423-HT6FU6", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            ReplaceAll[
             ReplaceAll[
              ReplaceAll[
               ReplaceAll[
                FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 
                 12, "numPeriods" -> 1, "v0" -> 
                 Function[{
                   TimeAggregation`t, TimeAggregation`j, TimeAggregation`h, 
                    TimeAggregation`k, TimeAggregation`v, TimeAggregation`im},
                    0.0015]], Plus -> List], Times -> List], 
              TimeAggregation`dc[{
                 Pattern[TimeAggregation`x, 
                  BlankSequence[]], TimeAggregation`t}] -> -
               TimeAggregation`x], TimeAggregation`dc[TimeAggregation`t] -> 
             0]}], "ExpectedOutput" -> 
         HoldForm[{{
            0., {0.08264755348988516, 22}, {0.1654191713350095, 21}, {
             0.24831503977154812`, 20}, {0.33133534531523995`, 19}, {
             0.41448027476180754`, 18}, {0.4977500151873771, 17}, {
             0.5811447539488999, 16}, {0.664664678684573, 15}, {
             0.7483099773142627, 14}, {0.8320808380399262, 13}, {
             0.9159774493460349, 12}, 11, {0.9173524465101148, 10}, {
             0.8345808286649905, 9}, {0.7516849602284519, 8}, {
             0.6686646546847601, 7}, {0.5855197252381925, 6}, {
             0.502249984812623, 5}, {0.41885524605110014`, 4}, {
             0.335335321315427, 3}, {0.25169002268573726`, 2}, {
             0.16791916196007384`, 1}, {0.08402255065396513, 0}}}], 
         "ActualOutput" -> 
         HoldForm[{{
            0., {0.08264755348988516, 22}, {0.1654191713350095, 21}, {
             0.24831503977154812`, 20}, {0.33133534531523995`, 19}, {
             0.41448027476180754`, 18}, {0.4977500151873771, 17}, {
             0.5811447539488999, 16}, {0.664664678684573, 15}, {
             0.7483099773142627, 14}, {0.8320808380399262, 13}, {
             0.9159774493460349, 12}, 11, {0.9173524465101148, 10}, {
             0.8345808286649905, 9}, {0.7516849602284519, 8}, {
             0.6686646546847601, 7}, {0.5855197252381925, 6}, {
             0.502249984812623, 5}, {0.41885524605110014`, 4}, {
             0.335335321315427, 3}, {0.25169002268573726`, 2}, {
             0.16791916196007384`, 1}, {0.08402255065396513, 0}}}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8921236045314145`*^9, "AbsoluteTimeUsed" -> 
         0.034641`4.69010541836591, "CPUTimeUsed" -> 0.034848999999999464`, 
         "MemoryUsed" -> 430408|>], 4053364859742793258 -> 
      TestResultObject[<|
        "TestKey" -> 4053364859742793258, "TestID" -> 
         "TimeAggregation_20230423-WHBQKK", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
            TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 3, 
             "numPeriods" -> 1, "v0" -> 
             Function[{TimeAggregation`t, TimeAggregation`j}, 0.0015]]}], 
         "ExpectedOutput" -> 
         HoldForm[{
           0. + 0.3328334585207629 TimeAggregation`dc[-4 + TimeAggregation`t] + 
            0.6661665418542368 TimeAggregation`dc[-3 + TimeAggregation`t] + 
            TimeAggregation`dc[-2 + TimeAggregation`t] + 
            0.6671665414792372 TimeAggregation`dc[-1 + TimeAggregation`t] + 
            0.33383345814576315` TimeAggregation`dc[TimeAggregation`t]}], 
         "ActualOutput" -> 
         HoldForm[{
           0. + 0.3328334585207629 TimeAggregation`dc[-4 + TimeAggregation`t] + 
            0.6661665418542368 TimeAggregation`dc[-3 + TimeAggregation`t] + 
            TimeAggregation`dc[-2 + TimeAggregation`t] + 
            0.6671665414792372 TimeAggregation`dc[-1 + TimeAggregation`t] + 
            0.33383345814576315` TimeAggregation`dc[TimeAggregation`t]}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8921236045663586`*^9, "AbsoluteTimeUsed" -> 
         0.003296`3.668502200857072, "CPUTimeUsed" -> 0.003338000000000285, 
         "MemoryUsed" -> 66560|>], 7851657047741404478 -> 
      TestResultObject[<|
        "TestKey" -> 7851657047741404478, "TestID" -> 
         "TimeAggregation_20230423-6A2R9N", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, {
             FreeQ[
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 3, 
               "numPeriods" -> 1, "v0" -> 
               Function[{
                 TimeAggregation`t, TimeAggregation`j, TimeAggregation`h, 
                  TimeAggregation`k, TimeAggregation`v, TimeAggregation`im}, 
                 If[
                 TimeAggregation`h == 12, TimeAggregation`h12, 
                  TimeAggregation`hnot12]]], TimeAggregation`h12], 
             FreeQ[
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 12, 
               "numPeriods" -> 1, "v0" -> 
               Function[{
                 TimeAggregation`t, TimeAggregation`j, TimeAggregation`h, 
                  TimeAggregation`k, TimeAggregation`v, TimeAggregation`im}, 
                 If[
                 TimeAggregation`h == 12, TimeAggregation`h12, 
                  TimeAggregation`hnot12]]], TimeAggregation`hnot12]}]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8921236045699434`*^9, "AbsoluteTimeUsed" -> 
         1.596732`6.353747026876993, "CPUTimeUsed" -> 1.597989, "MemoryUsed" -> 
         8180848|>], 1288511789013863531 -> 
      TestResultObject[<|
        "TestKey" -> 1288511789013863531, "TestID" -> 
         "TimeAggregation_20230423-G9K8GT", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, {0 === FullSimplify[
               Coefficient[
                ReplaceAll[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 
                  3, "numPeriods" -> 1, "v0" -> 
                  Function[{
                    TimeAggregation`t, TimeAggregation`j, TimeAggregation`h, 
                    TimeAggregation`k, TimeAggregation`v, 
                    TimeAggregation`im}, (-1)/(TimeAggregation`h + 1)]], 
                 TimeAggregation`dc[
                   BlankSequence[]] -> TimeAggregation`dcX], 
                TimeAggregation`dcX, 0]], 0 === FullSimplify[
               Coefficient[
                ReplaceAll[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 
                  3, "numPeriods" -> 3, "v0" -> 
                  Function[{
                    TimeAggregation`t, TimeAggregation`j, TimeAggregation`h, 
                    TimeAggregation`k, TimeAggregation`v, TimeAggregation`im},
                     TimeAggregation`k^2]], TimeAggregation`dc[
                   BlankSequence[]] -> TimeAggregation`dcX], 
                TimeAggregation`dcX, 0]], 0 === FullSimplify[
               Coefficient[
                ReplaceAll[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 
                  3, "numPeriods" -> 3, "v0" -> 
                  Function[{
                    TimeAggregation`t, TimeAggregation`j, TimeAggregation`h, 
                    TimeAggregation`k, TimeAggregation`v, TimeAggregation`im},
                     TimeAggregation`v]], TimeAggregation`dc[
                   BlankSequence[]] -> TimeAggregation`dcX], 
                TimeAggregation`dcX, 0]], 0 === FullSimplify[
               Coefficient[
                ReplaceAll[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 TimeAggregation`dd, TimeAggregation`t, TimeAggregation`i, 
                  "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
                  Function[{
                    TimeAggregation`t, TimeAggregation`j, TimeAggregation`h, 
                    TimeAggregation`k, TimeAggregation`v, TimeAggregation`im},
                     TimeAggregation`im]], TimeAggregation`dd[
                   BlankSequence[], TimeAggregation`i] -> 
                 TimeAggregation`ddX], TimeAggregation`ddX, 0]]}]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8921236061672544`*^9, "AbsoluteTimeUsed" -> 
         0.192234`5.434345200657194, "CPUTimeUsed" -> 0.19286100000000062`, 
         "MemoryUsed" -> 1050768|>], 8487830903662411853 -> 
      TestResultObject[<|
        "TestKey" -> 8487830903662411853, "TestID" -> 
         "TimeAggregation_20230423-89AP1H", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           
           Module[{TimeAggregation`arbitraryFun = 
             Function[{
               TimeAggregation`t, TimeAggregation`h, TimeAggregation`k, 
                TimeAggregation`v}, 
               If[
               TimeAggregation`v === 
                TimeAggregation`dc, (-TimeAggregation`k^4) (
                 TimeAggregation`h^2/TimeAggregation`t), 
                Sqrt[TimeAggregation`h/TimeAggregation`k + 1]/
                TimeAggregation`t]]}, 0. === FullSimplify[
              N[
               ReplaceAll[
                Coefficient[
                 ReplaceAll[
                  FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                  TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 
                   3, "numPeriods" -> 1, "v0" -> 
                   Function[{
                    TimeAggregation`t, TimeAggregation`j, TimeAggregation`h, 
                    TimeAggregation`k, TimeAggregation`v, TimeAggregation`im}, 
                    TimeAggregation`F[
                    TimeAggregation`t, TimeAggregation`h, TimeAggregation`k, 
                    TimeAggregation`v]]], TimeAggregation`dc[
                    BlankSequence[]] -> TimeAggregation`dcX], 
                 TimeAggregation`dcX, 0], TimeAggregation`F -> 
                TimeAggregation`arbitraryFun]], TimeAggregation`t >= 0]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8921236063598046`*^9, "AbsoluteTimeUsed" -> 
         0.056756`4.904526777867222, "CPUTimeUsed" -> 0.05697200000000002, 
         "MemoryUsed" -> 166328|>], 9145529975201574597 -> 
      TestResultObject[<|
        "TestKey" -> 9145529975201574597, "TestID" -> 
         "TimeAggregation_20230423-HURIQ5", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Not[
            N[0 === Coefficient[
               ReplaceAll[
                FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 3,
                  "numPeriods" -> 3, "v0" -> 
                 Function[{
                   TimeAggregation`t, TimeAggregation`j, TimeAggregation`h, 
                    TimeAggregation`k, TimeAggregation`v, TimeAggregation`im},
                    TimeAggregation`j]], TimeAggregation`dc[
                  BlankSequence[]] -> TimeAggregation`dcX], 
               TimeAggregation`dcX, 0]]]], "ExpectedOutput" -> HoldForm[True],
          "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.892123606416805*^9, "AbsoluteTimeUsed" -> 
         0.013314`4.274823550447646, "CPUTimeUsed" -> 0.013374999999999915`, 
         "MemoryUsed" -> 256912|>], 5645083867236508472 -> 
      TestResultObject[<|
        "TestKey" -> 5645083867236508472, "TestID" -> 
         "TimeAggregation_20230423-0HCVKW", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           
           Module[{TimeAggregation`k = 1, TimeAggregation`h, 
             TimeAggregation`rulej, TimeAggregation`out1, 
             TimeAggregation`out2, TimeAggregation`out3}, 
            TimeAggregation`h = 1; 
            TimeAggregation`out1 = N[0 === Coefficient[
                 ReplaceAll[
                  FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                  TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 
                   TimeAggregation`h, "numPeriods" -> TimeAggregation`k, "v0" -> 
                   Function[{
                    TimeAggregation`t, TimeAggregation`j, TimeAggregation`h, 
                    TimeAggregation`k, TimeAggregation`v, TimeAggregation`im}, 
                    TimeAggregation`F[TimeAggregation`t]]], TimeAggregation`dc[
                    BlankSequence[]] -> TimeAggregation`dcX], 
                 TimeAggregation`dcX, 0]]; TimeAggregation`h = 2; 
            TimeAggregation`rulej = 
             Table[
              TimeAggregation`F[TimeAggregation`i] -> 
               TimeAggregation`F[
                TimeAggregation`h TimeAggregation`k + TimeAggregation`i], {
               TimeAggregation`i, 0, TimeAggregation`h - 2}]; 
            TimeAggregation`out2 = N[0 === Coefficient[
                 ReplaceAll[
                  ReplaceAll[
                   FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                   TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 
                    TimeAggregation`h, "numPeriods" -> TimeAggregation`k, 
                    "v0" -> Function[{
                    TimeAggregation`t, TimeAggregation`j, TimeAggregation`h, 
                    TimeAggregation`k, TimeAggregation`v, TimeAggregation`im}, 
                    TimeAggregation`F[TimeAggregation`j]]], 
                   TimeAggregation`rulej], TimeAggregation`dc[
                    BlankSequence[]] -> TimeAggregation`dcX], 
                 TimeAggregation`dcX, 0]]; TimeAggregation`h = 3; 
            TimeAggregation`rulej = 
             Table[TimeAggregation`F[TimeAggregation`i] -> 
               TimeAggregation`F[
                TimeAggregation`h TimeAggregation`k + TimeAggregation`i], {
               TimeAggregation`i, 0, TimeAggregation`h - 2}]; 
            TimeAggregation`out3 = N[0 === Coefficient[
                 ReplaceAll[
                  ReplaceAll[
                   FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                   TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 
                    TimeAggregation`h, "numPeriods" -> TimeAggregation`k, 
                    "v0" -> Function[{
                    TimeAggregation`t, TimeAggregation`j, TimeAggregation`h, 
                    TimeAggregation`k, TimeAggregation`v, TimeAggregation`im}, 
                    TimeAggregation`F[TimeAggregation`j]]], 
                   TimeAggregation`rulej], TimeAggregation`dc[
                    BlankSequence[]] -> TimeAggregation`dcX], 
                 TimeAggregation`dcX, 0]]; 
            Apply[And, {
              TimeAggregation`out1, TimeAggregation`out2, 
               TimeAggregation`out3}]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 3.8921236064304595`*^9, 
         "AbsoluteTimeUsed" -> 0.10584`5.175164829011439, "CPUTimeUsed" -> 
         0.1062240000000001, "MemoryUsed" -> 590120|>], 4224658524907562811 -> 
      TestResultObject[<|
        "TestKey" -> 4224658524907562811, "TestID" -> 
         "TimeAggregation_20230423-8EF4ZS", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, {Cases[
               Expand[
                FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                TimeAggregation`dd, TimeAggregation`t, TimeAggregation`i, 
                 "TimeAggregation" -> 3, "numPeriods" -> 2, "order" -> 0]], 
               Optional[
                  Pattern[TimeAggregation`coef, 
                   Blank[]]] TimeAggregation`dd[
                   BlankSequence[], TimeAggregation`i]^Optional[
                   Pattern[TimeAggregation`p, 
                    Blank[]]] :> TimeAggregation`p] === {}, Max[
               Cases[
                Expand[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 TimeAggregation`dd, TimeAggregation`t, TimeAggregation`i, 
                  "TimeAggregation" -> 3, "numPeriods" -> 2, "order" -> 1]], 
                Optional[
                   Pattern[TimeAggregation`coef, 
                    Blank[]]] TimeAggregation`dd[
                    BlankSequence[], TimeAggregation`i]^Optional[
                    Pattern[TimeAggregation`p, 
                    Blank[]]] :> TimeAggregation`p]] === 1, Max[
               Cases[
                Expand[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 TimeAggregation`dd, TimeAggregation`t, TimeAggregation`i, 
                  "TimeAggregation" -> 3, "numPeriods" -> 2, "order" -> 2]], 
                Optional[
                   Pattern[TimeAggregation`coef, 
                    Blank[]]] TimeAggregation`dd[
                    BlankSequence[], TimeAggregation`i]^Optional[
                    Pattern[TimeAggregation`p, 
                    Blank[]]] :> TimeAggregation`p]] === 2, Max[
               Cases[
                Expand[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 TimeAggregation`dd, TimeAggregation`t, TimeAggregation`i, 
                  "TimeAggregation" -> 3, "numPeriods" -> 2, "order" -> 3]], 
                Optional[
                   Pattern[TimeAggregation`coef, 
                    Blank[]]] TimeAggregation`dd[
                    BlankSequence[], TimeAggregation`i]^Optional[
                    Pattern[TimeAggregation`p, 
                    Blank[]]] :> TimeAggregation`p]] === 3, Max[
               Cases[
                Expand[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 
                  3, "numPeriods" -> 2, "order" -> 3]], Optional[
                   Pattern[TimeAggregation`coef, 
                    Blank[]]] TimeAggregation`dc[
                    BlankSequence[]]^Optional[
                    Pattern[TimeAggregation`p, 
                    Blank[]]] :> TimeAggregation`p]] === 3}]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8921236065366397`*^9, "AbsoluteTimeUsed" -> 
         0.021985`4.492641467787719, "CPUTimeUsed" -> 0.02223499999999934, 
         "MemoryUsed" -> 296072|>]|>, "TestsSucceededKeys" -> CompressedData["

1:eJw1lcmNJTQQhudABBABGdS+RDAaiRMhcEDixGHIX3x+drf0Wu56di3/Uv37
X//++ff3b9++/fyFX3/88/O/H79x8PHRtpgIE7XI2U88uyf2/ESoprnmJ97u
5hVenSaVvnvj454dkTsb1mEr84mHR+1EecdIm/D+3h8Lq/HVGJPVsptnTXwz
pjxcSK6hP3499yOpQNZYi6ie/oR3Wl3ovmsyRVduVVsds1Exz9Jyv1PpcE0l
qqZCO6XqdrNJHmrRo7i4Vdw8NO8LDkpxM+re7tvGejQ+IztXcj/t+GSsZkiA
Usyaf8Ims96aefJ/CjzsQYG/Z0CFFLy+XZYNaIqVc4IVvVNlTS8wVtaZdnJe
N7MHMu9qS4HQ12VqE4tprgIHr+60q/YBQUc1Dr9y61bzQCDMabestO/9qMzQ
PaMeuDX1xl16IWq4HfQGm3bvJzlKobWHmq3aT1OilTZTS8l008tKRZ8Z3TLP
Fx5PUzpBCKUJolBI6IsDWlnbioIDMorM7YcT8JohZMr35puXTmBKRqFKLNxd
n2YtR73OByUsrd4+oQLBFjgngDLFnYvOdI+y7eOW8L1xUgL/Yp0S+CHNV91u
OvEpPaaBii8cCsKcDhc3iU1/1cUOyAdl6Uyi61d3ETZSPq4qugl5OBSA4jXy
JmiM5M1DiAC6nUHknPvOS5eA4mZtDv7qX/l5GIVGsa+CyH7xggCToofZiWOK
p1s/06PnEYnApyZvNxyZuWhgLlsYujsAnSoJEC4rg6H76QSeYBhecesxDHZ4
7lqWQEPKcR7Ce3oGAtCSOursEofr67pFSQzMnICUmk+emAtVng127rvUhaHo
RhACymIjJTvmS254hJ4AHxOBlcsnfXgDFsXKHMHJYwvq2JGDS61yWZLxXIRH
GnhRKbgqLnvTsnwCaVMQ6zGw3h0DMHWowkFnC2S97VB6Igc1WQ7YoN4WEBwx
h/TzCtvf+yuBmw+IWJhUSOWhnCxhdMJs7AKgvX0GTmOTT+7Ryx4vvG2Cv7FL
dJMQgnuemqmGlQc1ImnPLxeRdA6gXmXAgHDflolM2D3/KNA02noqr/gsKZaV
F6fotzXOfmVTWSwDsvhU/wfJsjFm
     "], "TestsFailedWrongResultsKeys" -> {8340599311265480355, 
     4865921395683187671, 2045454766560061283, 7758180325664932076, 
     1028149846864086799}, "TestsFailedWithMessagesKeys" -> {}, 
    "TestsFailedWithErrorsKeys" -> {}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.891852599178028*^9, 3.891852704753726*^9, 
  3.8918528014520597`*^9, 3.891913785423458*^9, 3.892123559577157*^9, 
  3.892123606579562*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"b45a0495-e03b-42ea-81bd-b4e1abd33fb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tr", "=", 
  RowBox[{"TestReport", "[", "testFileNames", "]"}]}]], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"89327c75-70af-4b75-adfd-86608c4fe806"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: Catalog.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["74", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: Catalog.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["74", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["74", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Failed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox[
                 "\"Failed with wrong results: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox[
                 "\"Failed with messages: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Failed with errors: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "2.414903`", "\"s\"", "seconds", "\"Seconds\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}], 
               "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: Catalog.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     7110199315763325893 -> 
      TestResultObject[<|
        "TestKey" -> 7110199315763325893, "TestID" -> 
         "Catalog_20230430-5B0DZE", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[
          Get["FernandoDuarte`LongRunRisk`Model`Catalog`"]; 
           Needs["FernandoDuarte`LongRunRisk`Model`ProcessModels`"]; 
           Needs["PacletizedResourceFunctions`"]; Null], "ExpectedOutput" -> 
         HoldForm[Null], "ActualOutput" -> HoldForm[Null], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.891913785757143*^9, "AbsoluteTimeUsed" -> 
         0.001841`3.4155687863360042, "CPUTimeUsed" -> 0.0018410000000006477`,
          "MemoryUsed" -> 133048|>], 4991227514317888380 -> 
      TestResultObject[<|
        "TestKey" -> 4991227514317888380, "TestID" -> 
         "Catalog_20230430-CGYW9A", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, {
             
             MemberQ[$ContextPath, 
              "FernandoDuarte`LongRunRisk`Model`Catalog`"], 
             
             MemberQ[$ContextPath, 
              "FernandoDuarte`LongRunRisk`Model`ProcessModels`"]}]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8919137857591887`*^9, "AbsoluteTimeUsed" -> 
         0.000027`1.5818787619909789, "CPUTimeUsed" -> 
         0.000023999999999801958`, "MemoryUsed" -> 3088|>], 
      9162584419695752388 -> 
      TestResultObject[<|
        "TestKey" -> 9162584419695752388, "TestID" -> 
         "Catalog_20230430-XEO7BX", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Not[Names["*processModels"] === {}]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.89191378575937*^9, "AbsoluteTimeUsed" -> 
         0.030795`4.638995206258265, "CPUTimeUsed" -> 0.03074099999999902, 
         "MemoryUsed" -> 2808|>], 6227663736306071004 -> 
      TestResultObject[<|
        "TestKey" -> 6227663736306071004, "TestID" -> 
         "Catalog_20230430-2XB46L", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[
          FernandoDuarte`LongRunRisk`Model`Catalog`models = 
            PacletizedResourceFunctions`SetSymbolsContext[
             FernandoDuarte`LongRunRisk`Model`Catalog`models]; Apply[And, 
             Map[StringQ, 
              Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8919137857905006`*^9, "AbsoluteTimeUsed" -> 
         0.009965`4.148992300868496, "CPUTimeUsed" -> 0.009962999999999056, 
         "MemoryUsed" -> 1608|>], 5750833969423204891 -> 
      TestResultObject[<|
        "TestKey" -> 5750833969423204891, "TestID" -> 
         "Catalog_20230430-7Y5QR3", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, 
            Map[StringQ, 
             Flatten[
              Map[{
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["name"], 
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                "shortname"], 
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["bibRef"], 
                
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["desc"]}& , 
               Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8919137858008056`*^9, "AbsoluteTimeUsed" -> 
         0.000063`1.9498555472855732, "CPUTimeUsed" -> 0.000064000000000064, 
         "MemoryUsed" -> 2856|>], 9015516540665924782 -> 
      TestResultObject[<|
        "TestKey" -> 9015516540665924782, "TestID" -> 
         "Catalog_20230430-746FXB", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, 
            Map[NumberQ, 
             Flatten[
              Map[Values[
                FilterRules[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                 "parameters"], 
                 Except[
                  Alternatives[Catalog`gamma, Catalog`theta]]]]& , {
               "BY", "BKY"}]]]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 3.8919137858010616`*^9, 
         "AbsoluteTimeUsed" -> 0.000087`2.0900342504506106, "CPUTimeUsed" -> 
         0.00008699999999883801, "MemoryUsed" -> 3088|>], 6842485283334686209 -> 
      TestResultObject[<|
        "TestKey" -> 6842485283334686209, "TestID" -> 
         "Catalog_20230430-PTW6QX", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           FernandoDuarte`LongRunRisk`Model`Catalog`models["BY"][
           "stateVars"]], "ExpectedOutput" -> HoldForm[{
            Catalog`x[Catalog`t], 
            Catalog`sx[Catalog`t]}], "ActualOutput" -> HoldForm[{
            Catalog`x[Catalog`t], 
            Catalog`sx[Catalog`t]}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.891913785801355*^9, 
         "AbsoluteTimeUsed" -> 0.000019`1.4292685987848202, "CPUTimeUsed" -> 
         0.000020000000001019203`, "MemoryUsed" -> 2736|>], 
      1522455448634481856 -> 
      TestResultObject[<|
        "TestKey" -> 1522455448634481856, "TestID" -> 
         "Catalog_20230430-7GZ4W5", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, 
            Map[MemberQ[
              Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]& , {
             "BY", "BKY"}]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 3.8919137858015337`*^9, 
         "AbsoluteTimeUsed" -> 0.000029`1.612912995730948, "CPUTimeUsed" -> 
         0.00002800000000036107, "MemoryUsed" -> 3120|>], 4182308268465842260 -> 
      TestResultObject[<|
        "TestKey" -> 4182308268465842260, "TestID" -> 
         "Catalog_20230430-BUOGJB", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, 
            Map[AssociationQ, 
             Flatten[{
               Head[FernandoDuarte`LongRunRisk`Model`Catalog`models], 
               Map[Head[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#]]& , 
                Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]}]]]], 
         "ExpectedOutput" -> HoldForm[False], "ActualOutput" -> 
         HoldForm[False], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.8919137858017206`*^9, 
         "AbsoluteTimeUsed" -> 0.000033`1.669028937709879, "CPUTimeUsed" -> 
         0.00003300000000017178, "MemoryUsed" -> 2864|>], 4814600817160195854 -> 
      TestResultObject[<|
        "TestKey" -> 4814600817160195854, "TestID" -> 
         "Catalog_20230430-BC1D0D", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           PacletizedResourceFunctions`SetSymbolsContext[
            Block[{
             Catalog`model = 
              FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
               FernandoDuarte`LongRunRisk`Model`Catalog`models][
               "NRC"], $Context = "ProcessModels`"}, {
              ReplaceAll[
               PacletizedResourceFunctions`SetSymbolsContext[
                Catalog`pi[Catalog`t]], 
               Catalog`model["exogenousEq"]]}]]], "ExpectedOutput" -> 
         HoldForm[{
            Catalog`pi[Catalog`t]}], "ActualOutput" -> HoldForm[{
            Catalog`pi[Catalog`t]}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.89191378580193*^9, 
         "AbsoluteTimeUsed" -> 0.019382`4.437913587066244, "CPUTimeUsed" -> 
         0.019406000000000034`, "MemoryUsed" -> 504016|>], 
      2832479343575769284 -> 
      TestResultObject[<|
        "TestKey" -> 2832479343575769284, "TestID" -> 
         "EndogenousEq_20230423-TLTBLI", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Needs["FernandoDuarte`LongRunRisk`Model`EndogenousEq`"]], 
         "ExpectedOutput" -> HoldForm[Null], "ActualOutput" -> HoldForm[Null],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8919137858303676`*^9, "AbsoluteTimeUsed" -> 
         0.000032`1.6556649761518951, "CPUTimeUsed" -> 0.00003300000000017178,
          "MemoryUsed" -> 3040|>], 400760957489807287 -> 
      TestResultObject[<|
        "TestKey" -> 400760957489807287, "TestID" -> 
         "EndogenousEq_20230423-9GM2JT", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Not[Names["*pdeq"] === {}]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 3.891913785830589*^9, 
         "AbsoluteTimeUsed" -> 0.023358`4.518950651933795, "CPUTimeUsed" -> 
         0.02338600000000035, "MemoryUsed" -> 2808|>], 5758267250402984600 -> 
      TestResultObject[<|
        "TestKey" -> 5758267250402984600, "TestID" -> 
         "ExogenousEq_20230430-2RKQZT", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "SameTest" -> SameQ,
          "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Needs["FernandoDuarte`LongRunRisk`Model`ExogenousEq`"]], 
         "ExpectedOutput" -> HoldForm[Null], "ActualOutput" -> HoldForm[Null],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8919137858621798`*^9, "AbsoluteTimeUsed" -> 
         0.000031`1.6418766916662644, "CPUTimeUsed" -> 0.00003100000000166858,
          "MemoryUsed" -> 3040|>], 1065764030363936194 -> 
      TestResultObject[<|
        "TestKey" -> 1065764030363936194, "TestID" -> 
         "ExogenousEq_20230430-NYA3HI", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "SameTest" -> SameQ,
          "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Not[Names["*xeq"] === {}]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 3.8919137858623877`*^9, 
         "AbsoluteTimeUsed" -> 0.023489`4.521379525732356, "CPUTimeUsed" -> 
         0.02351400000000048, "MemoryUsed" -> 2808|>], 2101608640391142241 -> 
      TestResultObject[<|
        "TestKey" -> 2101608640391142241, "TestID" -> 
         "ExogenousEq_20230430-6FI1ZA", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "SameTest" -> SameQ,
          "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[ExogenousEq`t]], 
         "ExpectedOutput" -> 
         HoldForm[
          FernandoDuarte`LongRunRisk`Model`Parameters`rhoxpbar (-
              FernandoDuarte`LongRunRisk`Model`Parameters`mupbar + 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pibar[-1 + 
               ExogenousEq`t]) + 
           FernandoDuarte`LongRunRisk`Model`Parameters`rhox 
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x[-1 + 
              ExogenousEq`t] + 
           FernandoDuarte`LongRunRisk`Model`Parameters`phixc (
              FernandoDuarte`LongRunRisk`Model`Parameters`Esc^2 + 
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sc[-1 + 
                ExogenousEq`t])^Rational[1, 2] 
            FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][ExogenousEq`t] + 
           FernandoDuarte`LongRunRisk`Model`Parameters`phix (
              FernandoDuarte`LongRunRisk`Model`Parameters`Esx^2 + 
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx[-1 + 
                ExogenousEq`t])^Rational[1, 2] 
            FernandoDuarte`LongRunRisk`Model`Shocks`eps["x"][ExogenousEq`t]], 
         "ActualOutput" -> 
         HoldForm[
          FernandoDuarte`LongRunRisk`Model`Parameters`rhoxpbar (-
              FernandoDuarte`LongRunRisk`Model`Parameters`mupbar + 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pibar[-1 + 
               ExogenousEq`t]) + 
           FernandoDuarte`LongRunRisk`Model`Parameters`rhox 
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x[-1 + 
              ExogenousEq`t] + 
           FernandoDuarte`LongRunRisk`Model`Parameters`phixc (
              FernandoDuarte`LongRunRisk`Model`Parameters`Esc^2 + 
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sc[-1 + 
                ExogenousEq`t])^Rational[1, 2] 
            FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][ExogenousEq`t] + 
           FernandoDuarte`LongRunRisk`Model`Parameters`phix (
              FernandoDuarte`LongRunRisk`Model`Parameters`Esx^2 + 
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx[-1 + 
                ExogenousEq`t])^Rational[1, 2] 
            FernandoDuarte`LongRunRisk`Model`Shocks`eps["x"][ExogenousEq`t]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.891913785886201*^9, "AbsoluteTimeUsed" -> 
         0.000047`1.8226128557677115, "CPUTimeUsed" -> 
         0.000047999999999603915`, "MemoryUsed" -> 4320|>], 
      5967836124292284994 -> 
      TestResultObject[<|
        "TestKey" -> 5967836124292284994, "TestID" -> 
         "ExogenousEq_20230430-CH1YSN", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "SameTest" -> SameQ,
          "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Module[{ExogenousEq`allShocks}, ExogenousEq`allShocks = Cases[
               ResourceFunction["SetSymbolsContext"][
                Map[ToExpression, 
                 
                 Map[# <> "[t]"& , 
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]\
]], ExogenousEq`eps[
                 Pattern[ExogenousEq`var, 
                  Blank[]]][
                 Pattern[ExogenousEq`t, 
                  Blank[]]] :> ToString[ExogenousEq`var] <> "eq", Infinity]; 
            SubsetQ[FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars, 
              DeleteDuplicates[ExogenousEq`allShocks]]]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.891913785886461*^9, "AbsoluteTimeUsed" -> 
         0.002342`3.520101888568336, "CPUTimeUsed" -> 0.002342999999999762, 
         "MemoryUsed" -> 4224|>], 4557481407708863400 -> 
      TestResultObject[<|
        "TestKey" -> 4557481407708863400, "TestID" -> 
         "NiceOutput_20230430-ZCQFAM", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[
          Needs["FernandoDuarte`LongRunRisk`Tools`NiceOutput`"]; 
           Needs["FernandoDuarte`LongRunRisk`Model`ProcessModels`"]; 
           Needs["PacletizedResourceFunctions`"]; 
           Get["FernandoDuarte`LongRunRisk`Model`Catalog`"]; Needs["MaTeX`"]; 
           Null], "ExpectedOutput" -> HoldForm[Null], "ActualOutput" -> 
         HoldForm[Null], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.89191378589641*^9, 
         "AbsoluteTimeUsed" -> 0.001933`3.4367468518605446, "CPUTimeUsed" -> 
         0.0019329999999992964`, "MemoryUsed" -> 8|>], 3492709151475519487 -> 
      TestResultObject[<|
        "TestKey" -> 3492709151475519487, "TestID" -> 
         "NiceOutput_20230430-H5Y998", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, {
             
             MemberQ[$ContextPath, 
              "FernandoDuarte`LongRunRisk`Model`Catalog`"], 
             
             MemberQ[$ContextPath, 
              "FernandoDuarte`LongRunRisk`Tools`NiceOutput`"], 
             
             MemberQ[$ContextPath, 
              "FernandoDuarte`LongRunRisk`Model`ProcessModels`"], 
             MemberQ[$ContextPath, "PacletizedResourceFunctions`"]}]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.891913785898553*^9, "AbsoluteTimeUsed" -> 
         0.000025`1.5484550065040306, "CPUTimeUsed" -> 
         0.000026000000000081513`, "MemoryUsed" -> 3360|>], 
      8714819923357384530 -> 
      TestResultObject[<|
        "TestKey" -> 8714819923357384530, "TestID" -> 
         "NiceOutput_20230430-QKXM6S", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Not[Names["*Info"] === {}]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 3.8919137858987346`*^9, 
         "AbsoluteTimeUsed" -> 0.024336`4.536764194540916, "CPUTimeUsed" -> 
         0.024359999999999715`, "MemoryUsed" -> 2808|>], 4408073922504622075 -> 
      TestResultObject[<|
        "TestKey" -> 4408073922504622075, "TestID" -> 
         "NiceOutput_20230430-RT7KCF", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, {
             Not[Names["*processModels"] === {}], 
             Not[Names["*models"] === {}]}]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.891913785923347*^9, "AbsoluteTimeUsed" -> 
         0.040131`4.7539949796209235, "CPUTimeUsed" -> 0.040150999999999826`, 
         "MemoryUsed" -> 2824|>], 1342084697372668769 -> 
      TestResultObject[<|
        "TestKey" -> 1342084697372668769, "TestID" -> 
         "NiceOutput_20230430-GSTQDK", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[
          NiceOutput`myModels = 
            FernandoDuarte`LongRunRisk`Model`Catalog`models; {
             Head[
              NiceOutput`myModels["BKY"]["numStocks"]], 
             Part[
              NiceOutput`myModels["BKY"]["parameters"], 1]}], 
         "ExpectedOutput" -> 
         HoldForm[{
           Missing, FernandoDuarte`LongRunRisk`Model`Parameters`delta -> 
            0.9989}], "ActualOutput" -> 
         HoldForm[{
           Missing, FernandoDuarte`LongRunRisk`Model`Parameters`delta -> 
            0.9989}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.8919137859637756`*^9, 
         "AbsoluteTimeUsed" -> 0.000405`2.7579700210466602, "CPUTimeUsed" -> 
         0.00040500000000065484`, "MemoryUsed" -> -367288|>], 
      7595016998645725721 -> 
      TestResultObject[<|
        "TestKey" -> 7595016998645725721, "TestID" -> 
         "NiceOutput_20230430-IW2FAF", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[
          NiceOutput`myModelsInfo = 
            FernandoDuarte`LongRunRisk`Tools`NiceOutput`Info[
             NiceOutput`myModels]; 
           Apply[And, {Head[NiceOutput`myModelsInfo] === Column, Head[
                Part[NiceOutput`myModelsInfo, 1]] === List, Head[
                Part[NiceOutput`myModelsInfo, 1, 1]] === OpenerView, 
              Apply[And, 
               Map[MatchQ[#, Grid]& , 
                Map[Head, 
                 Part[NiceOutput`myModelsInfo, 1, 
                  Span[1, All], 1, 2]]]]}]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8919137859643717`*^9, "AbsoluteTimeUsed" -> 
         0.793569`6.0500996920185655, "CPUTimeUsed" -> 0.14575199999999988`, 
         "MemoryUsed" -> 935792|>], 6252916738852813596 -> 
      TestResultObject[<|
        "TestKey" -> 6252916738852813596, "TestID" -> 
         "NiceOutput_20230430-D66RE9", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[
          NiceOutput`newBY = <|"myModel" -> NiceOutput`myModels["BY"]|>; 
           NiceOutput`newBYInfo = 
            PacletizedResourceFunctions`SetSymbolsContext[
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`Info[
              NiceOutput`newBY]]; 
           NiceOutput`newBYproc = 
            PacletizedResourceFunctions`SetSymbolsContext[
              FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
              NiceOutput`newBY]]; 
           NiceOutput`newBYprocInfo = 
            FernandoDuarte`LongRunRisk`Tools`NiceOutput`Info[
             NiceOutput`newBYproc]; 
           Apply[And, {
             Part[NiceOutput`newBYInfo, 1, 1, 1, 1] === "BY", ToString[
                Part[
                NiceOutput`newBYInfo, 1, 1, 1, 2, 1, 4, 1, 1, 2, 1, 1, 1, 1]] === 
              "x[t]", Part[NiceOutput`newBYprocInfo, 1, 1, 1, 1] === "BY", 
              ToString[
                Part[
                NiceOutput`newBYprocInfo, 1, 1, 1, 2, 1, 4, 1, 1, 2, 1, 1, 1, 
                 1]] === "x[t]"}]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 3.891913786758482*^9, 
         "AbsoluteTimeUsed" -> 0.085578`5.082877130422607, "CPUTimeUsed" -> 
         0.08562000000000047, "MemoryUsed" -> -705232|>], 4268265379826093975 -> 
      TestResultObject[<|
        "TestKey" -> 4268265379826093975, "TestID" -> 
         "NiceOutput_20230430-78KH9K", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, {Head[NiceOutput`newBYInfo] === Column, Head[
               Part[NiceOutput`newBYInfo, 1]] === List, Head[
               Part[NiceOutput`newBYInfo, 1, 1]] === OpenerView, 
             Apply[And, 
              Map[MatchQ[#, Grid]& , 
               Map[Head, 
                Part[NiceOutput`newBYInfo, 1, 
                 Span[1, All], 1, 2]]]]}]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8919137868443246`*^9, "AbsoluteTimeUsed" -> 
         0.000057`1.906389853504483, "CPUTimeUsed" -> 0.00005699999999997374, 
         "MemoryUsed" -> 5976|>], 1287919215168938044 -> 
      TestResultObject[<|
        "TestKey" -> 1287919215168938044, "TestID" -> 
         "NiceOutput_20230430-3HYGZ7", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           With[{NiceOutput`localPi = 3.14}, {
             
             FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[3.14], 
             
             FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[3.14, NumberMarks -> True], 
             
             FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[3.14, NumberMarks -> False], 
             
             FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[NiceOutput`localPi], 
             
             FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[NiceOutput`localPi, NumberMarks -> True], 
             
             FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[NiceOutput`localPi, NumberMarks -> False], 
             
             FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[NiceOutput`\[CapitalPi]], 
             
             FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[
             NiceOutput`\[CapitalPi], CharacterEncoding -> "ASCII"], 
             
             FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[Pi], 
             
             FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[
              N[Pi]], 
             
             FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[3.14 10^(-7)], 
             
             FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[
              Flatten[{
                ReplaceAll[
                FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
stripContext[NiceOutput`delta]/2, 
                 
                 FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
stripContext[{NiceOutput`delta -> 0.99}]]}]]}]], "ExpectedOutput" -> 
         HoldForm[{
           "3.14", "3.14`", "3.14", "3.14", "3.14`", "3.14", "\[CapitalPi]", 
            "\\[CapitalPi]", "3.141592653589793", "3.141592653589793", 
            "3.14*^-7", "{0.495}"}], "ActualOutput" -> 
         HoldForm[{
           "3.14", "3.14`", "3.14", "3.14", "3.14`", "3.14", "\[CapitalPi]", 
            "\\[CapitalPi]", "3.141592653589793", "3.141592653589793", 
            "3.14*^-7", "{0.495}"}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.891913786844628*^9, 
         "AbsoluteTimeUsed" -> 0.000127`2.2543187187879483, "CPUTimeUsed" -> 
         0.000128000000000128, "MemoryUsed" -> 3488|>], 4508730882898925829 -> 
      TestResultObject[<|
        "TestKey" -> 4508730882898925829, "TestID" -> 
         "NiceOutput_20230430-UH3CPJ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Not[
            StringFreeQ[
             
             FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
stringFormattingTemplate[
             "Long-run risk model with stochastic volatility in the original \
2004 paper by Bansal and Yaron"], 
             Alternatives["\t", "\n"]]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 3.891913786844925*^9, 
         "AbsoluteTimeUsed" -> 0.000086`2.085013449075557, "CPUTimeUsed" -> 
         0.00008600000000136276, "MemoryUsed" -> 2768|>], 1072269767281470531 -> 
      TestResultObject[<|
        "TestKey" -> 1072269767281470531, "TestID" -> 
         "PacletizeResources_20230430-TSBLY6", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/PacletizeResources.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[{Needs["FernandoDuarte`LongRunRisk`"]; Null}], 
         "ExpectedOutput" -> HoldForm[{Null}], "ActualOutput" -> 
         HoldForm[{Null}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.891913786854372*^9, 
         "AbsoluteTimeUsed" -> 0.00003`1.627636252551652, "CPUTimeUsed" -> 
         0.000030000000000640625`, "MemoryUsed" -> 3080|>], 
      9163019013950321581 -> 
      TestResultObject[<|
        "TestKey" -> 9163019013950321581, "TestID" -> 
         "PacletizeResources_20230430-8Q9ENI", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/PacletizeResources.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, {
             Not[PacletFind["MaTeX"] === {}], 
             Not[PacletFind["PacletizedResourceFunctions"] === {}], 
             MemberQ[$Packages, "MaTeX`"], Part[
               PacletFind["MaTeX"], 1]["Version"] === "1.7.9", 
             Not[PacletFind[
                Names["*NeedsDefinitions"]] === {}], 
             Not[PacletFind[
                Names["*SetSymbolsContext"]] === {}]}]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.891913786854591*^9, "AbsoluteTimeUsed" -> 
         0.070756`5.000278271094126, "CPUTimeUsed" -> 0.0708019999999987, 
         "MemoryUsed" -> 4600|>], 3799610164266639451 -> 
      TestResultObject[<|
        "TestKey" -> 3799610164266639451, "TestID" -> 
         "ProcessModels_20230430-LQGN9L", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[
          Get["FernandoDuarte`LongRunRisk`Model`Catalog`"]; 
           Needs["FernandoDuarte`LongRunRisk`Model`ProcessModels`"]; 
           Needs["PacletizedResourceFunctions`"]; Null], "ExpectedOutput" -> 
         HoldForm[Null], "ActualOutput" -> HoldForm[Null], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.891913786933756*^9, "AbsoluteTimeUsed" -> 
         0.001854`3.41862472764047, "CPUTimeUsed" -> 0.0018720000000023163`, 
         "MemoryUsed" -> 133048|>], 1763612605410960954 -> 
      TestResultObject[<|
        "TestKey" -> 1763612605410960954, "TestID" -> 
         "ProcessModels_20230430-2VUU3H", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, {
             
             MemberQ[$ContextPath, 
              "FernandoDuarte`LongRunRisk`Model`Catalog`"], 
             
             MemberQ[$ContextPath, 
              "FernandoDuarte`LongRunRisk`Model`ProcessModels`"]}]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8919137869358106`*^9, "AbsoluteTimeUsed" -> 
         0.000023`1.512242833849584, "CPUTimeUsed" -> 
         0.000024000000001578314`, "MemoryUsed" -> 3088|>], 
      1096902409342825483 -> 
      TestResultObject[<|
        "TestKey" -> 1096902409342825483, "TestID" -> 
         "ProcessModels_20230430-MM0N2R", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, {
             Not[Names["*processModels"] === {}], 
             Not[Names["*models"] === {}]}]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8919137869359927`*^9, "AbsoluteTimeUsed" -> 
         0.040467`4.7576160072213645, "CPUTimeUsed" -> 0.04049200000000042, 
         "MemoryUsed" -> 2824|>], 5328246577296789255 -> 
      TestResultObject[<|
        "TestKey" -> 5328246577296789255, "TestID" -> 
         "ProcessModels_20230430-6XBRD7", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[
          ProcessModels`myModels = 
            FernandoDuarte`LongRunRisk`Model`Catalog`models; Apply[And, 
             Map[StringQ, 
              Keys[ProcessModels`myModels]]]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.891913786976762*^9, "AbsoluteTimeUsed" -> 
         0.000675`2.979818770663019, "CPUTimeUsed" -> 0.0006740000000000634, 
         "MemoryUsed" -> -396184|>], 2359531048254447876 -> 
      TestResultObject[<|
        "TestKey" -> 2359531048254447876, "TestID" -> 
         "ProcessModels_20230430-WMC319", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, 
            Map[StringQ, 
             Flatten[
              Map[{
                ProcessModels`myModels[#]["name"], 
                ProcessModels`myModels[#]["shortname"], 
                ProcessModels`myModels[#]["bibRef"], 
                ProcessModels`myModels[#]["desc"]}& , 
               Keys[ProcessModels`myModels]]]]]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8919137869776096`*^9, "AbsoluteTimeUsed" -> 
         0.000062`1.9429066873302456, "CPUTimeUsed" -> 0.0000630000000008124, 
         "MemoryUsed" -> 2856|>], 7414298508616496692 -> 
      TestResultObject[<|
        "TestKey" -> 7414298508616496692, "TestID" -> 
         "ProcessModels_20230430-IM6EQG", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, 
            Map[NumberQ, 
             Flatten[
              Map[Values[
                N[
                 ReplaceRepeated[<|
                   ProcessModels`myModels[#]["parameters"]|>, 
                  ProcessModels`myModels[#]["parameters"]]]]& , 
               Keys[ProcessModels`myModels]]]]]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.891913786977832*^9, "AbsoluteTimeUsed" -> 
         0.003824`3.7330328814360563, "CPUTimeUsed" -> 0.003824000000001604, 
         "MemoryUsed" -> 190016|>], 5792437990773358568 -> 
      TestResultObject[<|
        "TestKey" -> 5792437990773358568, "TestID" -> 
         "ProcessModels_20230430-E0UA32", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           PacletizedResourceFunctions`SetSymbolsContext[
            
            Block[{ProcessModels`model = 
              ProcessModels`myModels["BY"], $Context = "ProcessModels`"}, 
             ProcessModels`model["stateVars"]]]], "ExpectedOutput" -> 
         HoldForm[{
            ProcessModels`x[ProcessModels`t], 
            ProcessModels`sx[ProcessModels`t]}], "ActualOutput" -> HoldForm[{
            ProcessModels`x[ProcessModels`t], 
            ProcessModels`sx[ProcessModels`t]}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.891913786981868*^9, "AbsoluteTimeUsed" -> 
         0.000081`2.0590000167106393, "CPUTimeUsed" -> 0.0000809999999997757, 
         "MemoryUsed" -> 2968|>], 3156096952180821551 -> 
      TestResultObject[<|
        "TestKey" -> 3156096952180821551, "TestID" -> 
         "ProcessModels_20230430-AROFNG", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, 
            Map[MemberQ[
              Keys[ProcessModels`myModels], #]& , {"BY", "BKY"}]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.891913786982103*^9, "AbsoluteTimeUsed" -> 
         0.000024`1.5307262395435977, "CPUTimeUsed" -> 
         0.000023999999999801958`, "MemoryUsed" -> 3120|>], 
      440161866234576125 -> 
      TestResultObject[<|
        "TestKey" -> 440161866234576125, "TestID" -> 
         "ProcessModels_20230430-OE90D5", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           AllTrue[ProcessModels`myModels, AssociationQ]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8919137869822717`*^9, "AbsoluteTimeUsed" -> 
         0.00002`1.451544993495975, "CPUTimeUsed" -> 0.000019999999999242846`,
          "MemoryUsed" -> 2720|>], 4249842668366579986 -> 
      TestResultObject[<|
        "TestKey" -> 4249842668366579986, "TestID" -> 
         "ProcessModels_20230430-I4KF9P", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           AllTrue[
            Map[ProcessModels`myModels[#]& , 
             Keys[ProcessModels`myModels]], AssociationQ]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8919137869824376`*^9, "AbsoluteTimeUsed" -> 
         0.000026`1.5654883458028093, "CPUTimeUsed" -> 0.00002700000000110947,
          "MemoryUsed" -> 2832|>], 3090580299287924840 -> 
      TestResultObject[<|
        "TestKey" -> 3090580299287924840, "TestID" -> 
         "ProcessModels_20230430-RZRH6P", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[
          Get["PacletizedResourceFunctions`"]; 
           Not[Names["*SetSymbolsContext"] === {}]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.891913786982607*^9, "AbsoluteTimeUsed" -> 
         0.061351`4.938336643801983, "CPUTimeUsed" -> 0.06142599999999909, 
         "MemoryUsed" -> 5328|>], 5160906958737732026 -> 
      TestResultObject[<|
        "TestKey" -> 5160906958737732026, "TestID" -> 
         "ProcessModels_20230430-CNQZU4", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           PacletizedResourceFunctions`SetSymbolsContext[
            
            Block[{ProcessModels`model = 
              FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
               ProcessModels`myModels]["NRC"], $Context = "ProcessModels`"}, {
             
              PacletizedResourceFunctions`SetSymbolsContext[
               ReplaceAll[
                ProcessModels`pi[ProcessModels`t], 
                PacletizedResourceFunctions`SetSymbolsContext[
                 ProcessModels`model["exogenousEq"]]]], 
              PacletizedResourceFunctions`SetSymbolsContext[
              ProcessModels`mup + (
                ProcessModels`rhop (ProcessModels`pi[ProcessModels`t - 1] - 
                  ProcessModels`mup) + (
                 ProcessModels`xip 
                  ProcessModels`eps["pi"][ProcessModels`t - 1] + 
                 ProcessModels`phip 
                  ProcessModels`eps["pi"][ProcessModels`t]))]}]]], 
         "ExpectedOutput" -> 
         HoldForm[{
           ProcessModels`mup + 
            ProcessModels`rhop (-ProcessModels`mup + 
              ProcessModels`pi[-1 + ProcessModels`t]) + 
            ProcessModels`xip ProcessModels`eps["pi"][-1 + ProcessModels`t] + 
            ProcessModels`phip ProcessModels`eps["pi"][ProcessModels`t], 
            ProcessModels`mup + 
            ProcessModels`rhop (-ProcessModels`mup + 
              ProcessModels`pi[-1 + ProcessModels`t]) + 
            ProcessModels`xip ProcessModels`eps["pi"][-1 + ProcessModels`t] + 
            ProcessModels`phip ProcessModels`eps["pi"][ProcessModels`t]}], 
         "ActualOutput" -> 
         HoldForm[{
           ProcessModels`mup + 
            ProcessModels`rhop (-ProcessModels`mup + 
              ProcessModels`pi[-1 + ProcessModels`t]) + 
            ProcessModels`xip ProcessModels`eps["pi"][-1 + ProcessModels`t] + 
            ProcessModels`phip ProcessModels`eps["pi"][ProcessModels`t], 
            ProcessModels`mup + 
            ProcessModels`rhop (-ProcessModels`mup + 
              ProcessModels`pi[-1 + ProcessModels`t]) + 
            ProcessModels`xip ProcessModels`eps["pi"][-1 + ProcessModels`t] + 
            ProcessModels`phip ProcessModels`eps["pi"][ProcessModels`t]}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.891913787044343*^9, "AbsoluteTimeUsed" -> 
         0.023048`4.513148243104348, "CPUTimeUsed" -> 0.02306100000000022, 
         "MemoryUsed" -> 417768|>], 8928376218842212411 -> 
      TestResultObject[<|
        "TestKey" -> 8928376218842212411, "TestID" -> 
         "ProcessModels_20230430-H47GX8", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           PacletizedResourceFunctions`SetSymbolsContext[
            
            Block[{ProcessModels`model = 
              FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
               ProcessModels`myModels]["BY"], $Context = "ProcessModels`"}, {
               PacletizedResourceFunctions`SetSymbolsContext[
                ReplaceAll[
                 ProcessModels`wc[ProcessModels`t], 
                 ProcessModels`model["endogenousEq"]]]} === {
              ProcessModels`A[0] + 
               ProcessModels`A[2] ProcessModels`sx[ProcessModels`t] + 
               ProcessModels`A[1] ProcessModels`x[ProcessModels`t]}]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.89191378706778*^9, "AbsoluteTimeUsed" -> 
         0.02171`4.48717482128641, "CPUTimeUsed" -> 0.021717999999998128`, 
         "MemoryUsed" -> 338856|>], 3951332593343811230 -> 
      TestResultObject[<|
        "TestKey" -> 3951332593343811230, "TestID" -> 
         "ProcessModels_20230430-4WYFNQ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           PacletizedResourceFunctions`SetSymbolsContext[
            
            Block[{ProcessModels`model = 
              FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
               ProcessModels`myModels]["BY"], $Context = "ProcessModels`"}, {
               PacletizedResourceFunctions`SetSymbolsContext[
                ReplaceAll[
                 ProcessModels`pd[ProcessModels`t, ProcessModels`i], 
                 ProcessModels`model["endogenousEq"]]]} === {
              ProcessModels`B[ProcessModels`i][0] + (
                ProcessModels`B[ProcessModels`i][2] 
                 ProcessModels`sx[ProcessModels`t] + 
                ProcessModels`B[ProcessModels`i][1] 
                 ProcessModels`x[ProcessModels`t])}]]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8919137870898457`*^9, "AbsoluteTimeUsed" -> 
         0.021608`4.485129569011386, "CPUTimeUsed" -> 0.02161699999999911, 
         "MemoryUsed" -> 339272|>], 4895644542555410403 -> 
      TestResultObject[<|
        "TestKey" -> 4895644542555410403, "TestID" -> 
         "ProcessModels_20230430-JWVGH2", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           PacletizedResourceFunctions`SetSymbolsContext[
            
            Block[{ProcessModels`model = 
              FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
               ProcessModels`myModels]["NRC"], $Context = "ProcessModels`"}, {
              
               PacletizedResourceFunctions`SetSymbolsContext[
                ReplaceAll[
                 ProcessModels`bondexcret[ProcessModels`t, ProcessModels`m], 
                 ProcessModels`model["endogenousEq"]]]} === {
              ProcessModels`bondret[ProcessModels`t, ProcessModels`m, 1] - 
               ProcessModels`bondyield[ProcessModels`t - 1, 1]}]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.891913787111809*^9, "AbsoluteTimeUsed" -> 
         0.02172`4.487374818748801, "CPUTimeUsed" -> 0.021720999999999435`, 
         "MemoryUsed" -> 339256|>], 7661968796062185474 -> 
      TestResultObject[<|
        "TestKey" -> 7661968796062185474, "TestID" -> 
         "ProcessModels_20230430-BJRV99", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           PacletizedResourceFunctions`SetSymbolsContext[
            
            Block[{ProcessModels`modelsP = 
              FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
               ProcessModels`myModels], ProcessModels`modelBY = 
              FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
               ProcessModels`myModels]["BY"], ProcessModels`modelBKY = 
              FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
               ProcessModels`myModels]["BKY"], ProcessModels`newModels, 
              ProcessModels`newModelsP, $Context = "ProcessModels`"}, 
             ProcessModels`newModels = <|
               "myModel" -> ProcessModels`modelBKY, "BY" -> 
                ProcessModels`modelBY|>; 
             ProcessModels`newModelsP = 
              FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
               ProcessModels`newModels]; 
             Apply[And, {
               ProcessModels`newModelsP["myModel"] === 
                ProcessModels`modelsP["BKY"], ProcessModels`newModelsP["BY"] === 
                ProcessModels`modelsP["BY"]}]]]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.891913787133872*^9, "AbsoluteTimeUsed" -> 
         0.06904`4.989615780539143, "CPUTimeUsed" -> 0.06906000000000034, 
         "MemoryUsed" -> 1704|>], 596983389486854119 -> 
      TestResultObject[<|
        "TestKey" -> 596983389486854119, "TestID" -> "Shocks_20230430-8YEBOI",
          "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Needs["FernandoDuarte`LongRunRisk`Model`Shocks`"]], 
         "ExpectedOutput" -> HoldForm[Null], "ActualOutput" -> HoldForm[Null],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8919137872117057`*^9, "AbsoluteTimeUsed" -> 
         0.000035`1.6945830421822672, "CPUTimeUsed" -> 0.00003500000000045134,
          "MemoryUsed" -> 3040|>], 7233729835245884560 -> 
      TestResultObject[<|
        "TestKey" -> 7233729835245884560, "TestID" -> 
         "Shocks_20230430-CFK9NO", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           MemberQ[$ContextPath, "FernandoDuarte`LongRunRisk`Model`Shocks`"]],
          "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
         HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.8919137872119207`*^9, 
         "AbsoluteTimeUsed" -> 0.00002`1.4515449934959728, "CPUTimeUsed" -> 
         0.000021000000000270802`, "MemoryUsed" -> 2928|>], 
      5849240621768160801 -> 
      TestResultObject[<|
        "TestKey" -> 5849240621768160801, "TestID" -> 
         "Shocks_20230430-W9ZYUO", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Not[Names["*rulesE"] === {}]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 3.8919137872120857`*^9, 
         "AbsoluteTimeUsed" -> 0.02209`4.494710713703427, "CPUTimeUsed" -> 
         0.02209399999999917, "MemoryUsed" -> 2808|>], 5953154441807581461 -> 
      TestResultObject[<|
        "TestKey" -> 5953154441807581461, "TestID" -> 
         "Shocks_20230430-PODS5K", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[
             ReplaceAll[
              FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t], 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
            Table[
             ReplaceAll[
              FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
              Shocks`t, Shocks`ii], 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}]}], "ExpectedOutput" -> 
         HoldForm[{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0}}], "ActualOutput" -> 
         HoldForm[{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0}}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.891913787234508*^9, "AbsoluteTimeUsed" -> 
         0.000183`2.4129660875624213, "CPUTimeUsed" -> 0.000181000000001319, 
         "MemoryUsed" -> 4160|>], 5693982034011526928 -> 
      TestResultObject[<|
        "TestKey" -> 5693982034011526928, "TestID" -> 
         "Shocks_20230430-LHQK7R", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][
               Shocks`t]^2, 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
               Shocks`t, Shocks`ii]^2, 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}]}], "ExpectedOutput" -> 
         HoldForm[{{1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 1}}], "ActualOutput" -> 
         HoldForm[{{1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 1}}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8919137872348747`*^9, "AbsoluteTimeUsed" -> 
         0.003322`3.671914625947368, "CPUTimeUsed" -> 0.003359000000001444, 
         "MemoryUsed" -> 14232|>], 1391037840834817798 -> 
      TestResultObject[<|
        "TestKey" -> 1391037840834817798, "TestID" -> 
         "Shocks_20230430-M4G293", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][
               Shocks`t]^3, 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
               Shocks`t, Shocks`ii]^3, 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}]}], "ExpectedOutput" -> 
         HoldForm[{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0}}], "ActualOutput" -> 
         HoldForm[{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0}}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.891913787238403*^9, "AbsoluteTimeUsed" -> 
         0.002824`3.6013796902117603, "CPUTimeUsed" -> 0.0028660000000009234`,
          "MemoryUsed" -> 3016|>], 453119150138559528 -> 
      TestResultObject[<|
        "TestKey" -> 453119150138559528, "TestID" -> "Shocks_20230430-NHPBNM",
          "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][
               Shocks`t]^4, 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
               Shocks`t, Shocks`ii]^4, 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}]}], "ExpectedOutput" -> 
         HoldForm[{{3, 3, 3, 3, 3, 3, 3, 3}, {3, 3, 3}}], "ActualOutput" -> 
         HoldForm[{{3, 3, 3, 3, 3, 3, 3, 3}, {3, 3, 3}}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.89191378724143*^9, "AbsoluteTimeUsed" -> 
         0.002816`3.600147648302066, "CPUTimeUsed" -> 0.0028529999999999944`, 
         "MemoryUsed" -> 3016|>], 2501833985387204313 -> 
      TestResultObject[<|
        "TestKey" -> 2501833985387204313, "TestID" -> 
         "Shocks_20230430-12Z06P", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[
             If[Shocks`f === Shocks`g, 0, 
              ReplaceAll[
              FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][
                Shocks`t], 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]]], {
             Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}, {
             Shocks`g, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
               Shocks`t, Shocks`ii] 
              FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t], 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}, {
             Shocks`f, {"x", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
         "ExpectedOutput" -> 
         HoldForm[{{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0,
             0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
            0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 
            0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
            0}, {0, 0, 0, 0, 0, 0, 0}}}], "ActualOutput" -> 
         HoldForm[{{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0,
             0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
            0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 
            0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
            0}, {0, 0, 0, 0, 0, 0, 0}}}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.891913787244493*^9, 
         "AbsoluteTimeUsed" -> 0.001271`3.2546605483860023, "CPUTimeUsed" -> 
         0.0012699999999998823`, "MemoryUsed" -> 7408|>], 7429417615367856997 -> 
      TestResultObject[<|
        "TestKey" -> 7429417615367856997, "TestID" -> 
         "Shocks_20230430-MM36PF", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Map[StringDelete[#, 
             StringExpression[
              Alternatives["FernandoDuarte", "`"], 
              BlankSequence[], "`"]]& , 
            Table[
             ToString[
              ReplaceAll[
              FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                Shocks`t, Shocks`ii] 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][Shocks`t], 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]]], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}]]], "ExpectedOutput" -> 
         HoldForm[{"taugd[1]", "taugd[i]", "taugd[j]"}], "ActualOutput" -> 
         HoldForm[{"taugd[1]", "taugd[i]", "taugd[j]"}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8919137872459497`*^9, "AbsoluteTimeUsed" -> 
         0.000084`2.0747942838938758, "CPUTimeUsed" -> 0.00008399999999930685,
          "MemoryUsed" -> 3192|>], 8098188701575647850 -> 
      TestResultObject[<|
        "TestKey" -> 8098188701575647850, "TestID" -> 
         "Shocks_20230430-EH5MUP", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][
               Shocks`t]^4, 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
               Shocks`t, Shocks`ii]^4, 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}]}], "ExpectedOutput" -> 
         HoldForm[{{3, 3, 3, 3, 3, 3, 3, 3}, {3, 3, 3}}], "ActualOutput" -> 
         HoldForm[{{3, 3, 3, 3, 3, 3, 3, 3}, {3, 3, 3}}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.891913787246212*^9, "AbsoluteTimeUsed" -> 
         0.002795`3.596896810054434, "CPUTimeUsed" -> 0.002826999999999913, 
         "MemoryUsed" -> 3016|>], 3829136988910837097 -> 
      TestResultObject[<|
        "TestKey" -> 3829136988910837097, "TestID" -> 
         "Shocks_20230430-NVWWAI", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[
             If[Shocks`f === Shocks`g, 0, 
              ReplaceAll[
              FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][
                 Shocks`t]^2 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][
                Shocks`t], 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]]], {
             Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}, {
             Shocks`g, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                Shocks`t, Shocks`ii]^2 
              FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t], 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}, {
             Shocks`f, {"x", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
         "ExpectedOutput" -> 
         HoldForm[{{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0,
             0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
            0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 
            0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
            0}, {0, 0, 0, 0, 0, 0, 0}}}], "ActualOutput" -> 
         HoldForm[{{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0,
             0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
            0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 
            0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
            0}, {0, 0, 0, 0, 0, 0, 0}}}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.8919137872492456`*^9, 
         "AbsoluteTimeUsed" -> 0.019235`4.434607188474826, "CPUTimeUsed" -> 
         0.019453999999999638`, "MemoryUsed" -> 6208|>], 4310487573773175602 -> 
      TestResultObject[<|
        "TestKey" -> 4310487573773175602, "TestID" -> 
         "Shocks_20230430-AGSMGW", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[ReplaceAll[Shocks`expr, 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
             Shocks`expr, {Shocks`expr, 
              Table[
               FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][
               Shocks`t + 1], {
               Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
            Table[ReplaceAll[Shocks`expr, 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
             Shocks`expr, {Shocks`expr, 
              Table[
               FernandoDuarte`LongRunRisk`Model`Shocks`eps[
                ToExpression[Shocks`f]][Shocks`t], {
               Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
            Table[ReplaceAll[Shocks`expr, 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
             Shocks`expr, {Shocks`expr, {
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
               Shocks`t + 1, Shocks`i], 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`dd][
               Shocks`t, Shocks`i]}}]}], "ExpectedOutput" -> 
         HoldForm[{{True, True, True, True, True, True, True, True}, {
            True, True, True, True, True, True, True, True}, {True, True}}], 
         "ActualOutput" -> 
         HoldForm[{{True, True, True, True, True, True, True, True}, {
            True, True, True, True, True, True, True, True}, {True, True}}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8919137872687507`*^9, "AbsoluteTimeUsed" -> 
         0.000369`2.717541363991052, "CPUTimeUsed" -> 0.00036899999999917554`,
          "MemoryUsed" -> 3360|>], 5325255467214222159 -> 
      TestResultObject[<|
        "TestKey" -> 5325255467214222159, "TestID" -> 
         "Shocks_20230430-WBCMA6", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[ReplaceAll[Shocks`expr, 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
             Shocks`expr, {Shocks`expr, 
              Table[
               FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f], {
               Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
            Table[ReplaceAll[
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"], 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
             FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}]}], "ExpectedOutput" -> 
         HoldForm[{{True, True, True, True, True, True, True, True}, {
            True, True, True}}], "ActualOutput" -> 
         HoldForm[{{True, True, True, True, True, True, True, True}, {
            True, True, True}}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.891913787269334*^9, 
         "AbsoluteTimeUsed" -> 0.000184`2.41533282084153, "CPUTimeUsed" -> 
         0.0001839999999990738, "MemoryUsed" -> 3168|>], 3572297806961793713 -> 
      TestResultObject[<|
        "TestKey" -> 3572297806961793713, "TestID" -> 
         "Shocks_20230430-M5PH7J", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[ReplaceAll[Shocks`expr, 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
             Shocks`expr, {Shocks`expr, 
              Table[
               FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f], {
               Shocks`f, {
                "xx", "adc", "p", "rhobar", "ssg", "ssx", "sdc", "spi"}}]}], 
            Table[ReplaceAll[
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["ddd"], 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
             FernandoDuarte`LongRunRisk`Model`Shocks`eps["ddd"], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}]}], "ExpectedOutput" -> 
         HoldForm[{{True, True, True, True, True, True, True, True}, {
            True, True, True}}], "ActualOutput" -> 
         HoldForm[{{True, True, True, True, True, True, True, True}, {
            True, True, True}}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.891913787269715*^9, 
         "AbsoluteTimeUsed" -> 0.000178`2.400935000140886, "CPUTimeUsed" -> 
         0.00017899999999926308`, "MemoryUsed" -> 3168|>], 
      6147874711520032660 -> 
      TestResultObject[<|
        "TestKey" -> 6147874711520032660, "TestID" -> 
         "Shocks_20230430-FEYKJT", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[ReplaceAll[Shocks`expr, 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
             Shocks`expr, {Shocks`expr, 
              Table[
               FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][
               Shocks`tt], {
               Shocks`f, {
                "xx", "adc", "p", "rhobar", "ssg", "ssx", "sdc", "spi"}}, {
               Shocks`tt, {
                Shocks`t + 1, Shocks`t - 1, Shocks`s, Shocks`t + 
                 Shocks`h}}]}], 
            Table[ReplaceAll[Shocks`expr, 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
             Shocks`expr, {Shocks`expr, 
              Table[
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
               Shocks`tt, Shocks`ii], {Shocks`ii, {1, Shocks`i, Shocks`j}}, {
               Shocks`tt, {
                Shocks`t + 1, Shocks`t - 1, Shocks`s, Shocks`t + 
                 Shocks`h}}]}]}], "ExpectedOutput" -> 
         HoldForm[{{True, True, True, True, True, True, True, True}, {
            True, True, True}}], "ActualOutput" -> 
         HoldForm[{{True, True, True, True, True, True, True, True}, {
            True, True, True}}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.8919137872701197`*^9, 
         "AbsoluteTimeUsed" -> 0.000247`2.5432119510916595, "CPUTimeUsed" -> 
         0.0002469999999998862, "MemoryUsed" -> 3200|>], 286701693700388858 -> 
      TestResultObject[<|
        "TestKey" -> 286701693700388858, "TestID" -> 
         "TimeAggregation_20230423-KPQB0B", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Needs["FernandoDuarte`LongRunRisk`Tools`TimeAggregation`"]], 
         "ExpectedOutput" -> HoldForm[Null], "ActualOutput" -> HoldForm[Null],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.891913787279099*^9, "AbsoluteTimeUsed" -> 
         0.000031`1.6418766916662622, "CPUTimeUsed" -> 
         0.000031999999999143824`, "MemoryUsed" -> 3056|>], 
      7893764479538290264 -> 
      TestResultObject[<|
        "TestKey" -> 7893764479538290264, "TestID" -> 
         "TimeAggregation_20230423-JL3EZL", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           
           MemberQ[$ContextPath, 
            "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`"]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8919137872793097`*^9, "AbsoluteTimeUsed" -> 
         0.000021`1.4727342925659135, "CPUTimeUsed" -> 0.00002200000000129876,
          "MemoryUsed" -> 2928|>], 9102383818862808848 -> 
      TestResultObject[<|
        "TestKey" -> 9102383818862808848, "TestID" -> 
         "TimeAggregation_20230423-WH9KE8", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Not[Names["*growth"] === {}]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 3.891913787279483*^9, 
         "AbsoluteTimeUsed" -> 0.021657`4.486113294364992, "CPUTimeUsed" -> 
         0.021682999999999453`, "MemoryUsed" -> 2808|>], 2373955787826787653 -> 
      TestResultObject[<|
        "TestKey" -> 2373955787826787653, "TestID" -> 
         "TimeAggregation_20230423-D9OPZX", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
            TimeAggregation`dc, TimeAggregation`t], 
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
            TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 1, 
             "numPeriods" -> 1]}], "ExpectedOutput" -> HoldForm[{
            TimeAggregation`dc[TimeAggregation`t], 
            TimeAggregation`dc[TimeAggregation`t]}], "ActualOutput" -> 
         HoldForm[{
            TimeAggregation`dc[TimeAggregation`t], 
            TimeAggregation`dc[TimeAggregation`t]}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.891913787301434*^9, "AbsoluteTimeUsed" -> 
         0.000493`2.84336191710922, "CPUTimeUsed" -> 0.0004930000000022972, 
         "MemoryUsed" -> 6128|>], 9006388306260658975 -> 
      TestResultObject[<|
        "TestKey" -> 9006388306260658975, "TestID" -> 
         "TimeAggregation_20230423-45HRTG", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
            TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 3, 
             "numPeriods" -> 1], 
            ReplaceAll[
             ReplaceAll[
              ReplaceAll[
               ReplaceAll[
                FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 
                 12, "numPeriods" -> 1], Plus -> List], Times -> List], 
              TimeAggregation`dc[{
                 Pattern[TimeAggregation`x, 
                  BlankSequence[]], TimeAggregation`t}] -> -
               TimeAggregation`x], TimeAggregation`dc[TimeAggregation`t] -> 
             0]}], "ExpectedOutput" -> 
         HoldForm[{
           Rational[1, 3] (TimeAggregation`dc[-4 + TimeAggregation`t] + 
             2 TimeAggregation`dc[-3 + TimeAggregation`t] + 
             3 TimeAggregation`dc[-2 + TimeAggregation`t] + 
             2 TimeAggregation`dc[-1 + TimeAggregation`t] + 
             TimeAggregation`dc[TimeAggregation`t]), {{
              Rational[1, 12], 22}, {
              Rational[1, 6], 21}, {
              Rational[1, 4], 20}, {
              Rational[1, 3], 19}, {
              Rational[5, 12], 18}, {
              Rational[1, 2], 17}, {
              Rational[7, 12], 16}, {
              Rational[2, 3], 15}, {
              Rational[3, 4], 14}, {
              Rational[5, 6], 13}, {
              Rational[11, 12], 12}, 11, {
              Rational[11, 12], 10}, {
              Rational[5, 6], 9}, {
              Rational[3, 4], 8}, {
              Rational[2, 3], 7}, {
              Rational[7, 12], 6}, {
              Rational[1, 2], 5}, {
              Rational[5, 12], 4}, {
              Rational[1, 3], 3}, {
              Rational[1, 4], 2}, {
              Rational[1, 6], 1}, {
              Rational[1, 12], 0}}}], "ActualOutput" -> 
         HoldForm[{
           Rational[1, 3] (TimeAggregation`dc[-4 + TimeAggregation`t] + 
             2 TimeAggregation`dc[-3 + TimeAggregation`t] + 
             3 TimeAggregation`dc[-2 + TimeAggregation`t] + 
             2 TimeAggregation`dc[-1 + TimeAggregation`t] + 
             TimeAggregation`dc[TimeAggregation`t]), {{
              Rational[1, 12], 22}, {
              Rational[1, 6], 21}, {
              Rational[1, 4], 20}, {
              Rational[1, 3], 19}, {
              Rational[5, 12], 18}, {
              Rational[1, 2], 17}, {
              Rational[7, 12], 16}, {
              Rational[2, 3], 15}, {
              Rational[3, 4], 14}, {
              Rational[5, 6], 13}, {
              Rational[11, 12], 12}, 11, {
              Rational[11, 12], 10}, {
              Rational[5, 6], 9}, {
              Rational[3, 4], 8}, {
              Rational[2, 3], 7}, {
              Rational[7, 12], 6}, {
              Rational[1, 2], 5}, {
              Rational[5, 12], 4}, {
              Rational[1, 3], 3}, {
              Rational[1, 4], 2}, {
              Rational[1, 6], 1}, {
              Rational[1, 12], 0}}}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.891913787302188*^9, 
         "AbsoluteTimeUsed" -> 0.03837`4.73450679703031, "CPUTimeUsed" -> 
         0.03860699999999895, "MemoryUsed" -> 253008|>], 5941296820462860043 -> 
      TestResultObject[<|
        "TestKey" -> 5941296820462860043, "TestID" -> 
         "TimeAggregation_20230423-BKME0N", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
            TimeAggregation`sx, TimeAggregation`tau, "TimeAggregation" -> 3, 
             "numPeriods" -> 1], 
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
            TimeAggregation`pibar, TimeAggregation`t - TimeAggregation`h, 
             "TimeAggregation" -> 3, "numPeriods" -> 1]}], "ExpectedOutput" -> 
         HoldForm[{
           Rational[1, 3] (TimeAggregation`sx[-4 + TimeAggregation`tau] + 
             2 TimeAggregation`sx[-3 + TimeAggregation`tau] + 
             3 TimeAggregation`sx[-2 + TimeAggregation`tau] + 
             2 TimeAggregation`sx[-1 + TimeAggregation`tau] + 
             TimeAggregation`sx[TimeAggregation`tau]), 
            Rational[1, 3] (
             TimeAggregation`pibar[-4 - TimeAggregation`h + 
               TimeAggregation`t] + 
             2 TimeAggregation`pibar[-3 - TimeAggregation`h + 
                TimeAggregation`t] + 
             3 TimeAggregation`pibar[-2 - TimeAggregation`h + 
                TimeAggregation`t] + 
             2 TimeAggregation`pibar[-1 - TimeAggregation`h + 
                TimeAggregation`t] + 
             TimeAggregation`pibar[-TimeAggregation`h + TimeAggregation`t])}],
          "ActualOutput" -> 
         HoldForm[{
           Rational[1, 3] (TimeAggregation`sx[-4 + TimeAggregation`tau] + 
             2 TimeAggregation`sx[-3 + TimeAggregation`tau] + 
             3 TimeAggregation`sx[-2 + TimeAggregation`tau] + 
             2 TimeAggregation`sx[-1 + TimeAggregation`tau] + 
             TimeAggregation`sx[TimeAggregation`tau]), 
            Rational[1, 3] (
             TimeAggregation`pibar[-4 - TimeAggregation`h + 
               TimeAggregation`t] + 
             2 TimeAggregation`pibar[-3 - TimeAggregation`h + 
                TimeAggregation`t] + 
             3 TimeAggregation`pibar[-2 - TimeAggregation`h + 
                TimeAggregation`t] + 
             2 TimeAggregation`pibar[-1 - TimeAggregation`h + 
                TimeAggregation`t] + 
             TimeAggregation`pibar[-TimeAggregation`h + TimeAggregation`t])}],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8919137873408337`*^9, "AbsoluteTimeUsed" -> 
         0.0058`3.913942991394929, "CPUTimeUsed" -> 0.005892999999998594, 
         "MemoryUsed" -> 80568|>], 8393263585577159603 -> 
      TestResultObject[<|
        "TestKey" -> 8393263585577159603, "TestID" -> 
         "TimeAggregation_20230423-6CV0A3", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
            TimeAggregation`dd, TimeAggregation`t, TimeAggregation`i, 
             "TimeAggregation" -> 3, "numPeriods" -> 1]}], "ExpectedOutput" -> 
         HoldForm[{
           Rational[1, 3] (
             TimeAggregation`dd[-4 + TimeAggregation`t, TimeAggregation`i] + 
             2 TimeAggregation`dd[-3 + TimeAggregation`t, TimeAggregation`i] + 
             3 TimeAggregation`dd[-2 + TimeAggregation`t, TimeAggregation`i] + 
             2 TimeAggregation`dd[-1 + TimeAggregation`t, TimeAggregation`i] + 
             TimeAggregation`dd[TimeAggregation`t, TimeAggregation`i])}], 
         "ActualOutput" -> 
         HoldForm[{
           Rational[1, 3] (
             TimeAggregation`dd[-4 + TimeAggregation`t, TimeAggregation`i] + 
             2 TimeAggregation`dd[-3 + TimeAggregation`t, TimeAggregation`i] + 
             3 TimeAggregation`dd[-2 + TimeAggregation`t, TimeAggregation`i] + 
             2 TimeAggregation`dd[-1 + TimeAggregation`t, TimeAggregation`i] + 
             TimeAggregation`dd[TimeAggregation`t, TimeAggregation`i])}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.891913787346893*^9, "AbsoluteTimeUsed" -> 
         0.003728`3.7219909015139354, "CPUTimeUsed" -> 0.003757999999999484, 
         "MemoryUsed" -> 38840|>], 5143773443691096032 -> 
      TestResultObject[<|
        "TestKey" -> 5143773443691096032, "TestID" -> 
         "TimeAggregation_20230423-HT6FU6", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            ReplaceAll[
             ReplaceAll[
              ReplaceAll[
               ReplaceAll[
                FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 
                 12, "numPeriods" -> 1, "v0" -> 
                 Function[{
                   TimeAggregation`t, TimeAggregation`j, TimeAggregation`h, 
                    TimeAggregation`k, TimeAggregation`v, TimeAggregation`im},
                    0.0015]], Plus -> List], Times -> List], 
              TimeAggregation`dc[{
                 Pattern[TimeAggregation`x, 
                  BlankSequence[]], TimeAggregation`t}] -> -
               TimeAggregation`x], TimeAggregation`dc[TimeAggregation`t] -> 
             0]}], "ExpectedOutput" -> 
         HoldForm[{{
            0., {0.08264755348988516, 22}, {0.1654191713350095, 21}, {
             0.24831503977154812`, 20}, {0.33133534531523995`, 19}, {
             0.41448027476180754`, 18}, {0.4977500151873771, 17}, {
             0.5811447539488999, 16}, {0.664664678684573, 15}, {
             0.7483099773142627, 14}, {0.8320808380399262, 13}, {
             0.9159774493460349, 12}, 11, {0.9173524465101148, 10}, {
             0.8345808286649905, 9}, {0.7516849602284519, 8}, {
             0.6686646546847601, 7}, {0.5855197252381925, 6}, {
             0.502249984812623, 5}, {0.41885524605110014`, 4}, {
             0.335335321315427, 3}, {0.25169002268573726`, 2}, {
             0.16791916196007384`, 1}, {0.08402255065396513, 0}}}], 
         "ActualOutput" -> 
         HoldForm[{{
            0., {0.08264755348988516, 22}, {0.1654191713350095, 21}, {
             0.24831503977154812`, 20}, {0.33133534531523995`, 19}, {
             0.41448027476180754`, 18}, {0.4977500151873771, 17}, {
             0.5811447539488999, 16}, {0.664664678684573, 15}, {
             0.7483099773142627, 14}, {0.8320808380399262, 13}, {
             0.9159774493460349, 12}, 11, {0.9173524465101148, 10}, {
             0.8345808286649905, 9}, {0.7516849602284519, 8}, {
             0.6686646546847601, 7}, {0.5855197252381925, 6}, {
             0.502249984812623, 5}, {0.41885524605110014`, 4}, {
             0.335335321315427, 3}, {0.25169002268573726`, 2}, {
             0.16791916196007384`, 1}, {0.08402255065396513, 0}}}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.891913787350915*^9, "AbsoluteTimeUsed" -> 
         0.030023`4.627969084085324, "CPUTimeUsed" -> 0.030222000000000193`, 
         "MemoryUsed" -> 222712|>], 718612005207393458 -> 
      TestResultObject[<|
        "TestKey" -> 718612005207393458, "TestID" -> 
         "TimeAggregation_20230423-WHBQKK", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
            TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 3, 
             "numPeriods" -> 1, "v0" -> 
             Function[{TimeAggregation`t, TimeAggregation`j}, 0.0015]]}], 
         "ExpectedOutput" -> 
         HoldForm[{
           0. + 0.3328334585207629 TimeAggregation`dc[-4 + TimeAggregation`t] + 
            0.6661665418542368 TimeAggregation`dc[-3 + TimeAggregation`t] + 
            TimeAggregation`dc[-2 + TimeAggregation`t] + 
            0.6671665414792372 TimeAggregation`dc[-1 + TimeAggregation`t] + 
            0.33383345814576315` TimeAggregation`dc[TimeAggregation`t]}], 
         "ActualOutput" -> 
         HoldForm[{
           0. + 0.3328334585207629 TimeAggregation`dc[-4 + TimeAggregation`t] + 
            0.6661665418542368 TimeAggregation`dc[-3 + TimeAggregation`t] + 
            TimeAggregation`dc[-2 + TimeAggregation`t] + 
            0.6671665414792372 TimeAggregation`dc[-1 + TimeAggregation`t] + 
            0.33383345814576315` TimeAggregation`dc[TimeAggregation`t]}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8919137873811636`*^9, "AbsoluteTimeUsed" -> 
         0.002932`3.617678963801082, "CPUTimeUsed" -> 0.002980000000000871, 
         "MemoryUsed" -> 39664|>], 7967456834920081363 -> 
      TestResultObject[<|
        "TestKey" -> 7967456834920081363, "TestID" -> 
         "TimeAggregation_20230423-6A2R9N", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, {
             FreeQ[
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 3, 
               "numPeriods" -> 1, "v0" -> 
               Function[{
                 TimeAggregation`t, TimeAggregation`j, TimeAggregation`h, 
                  TimeAggregation`k, TimeAggregation`v, TimeAggregation`im}, 
                 If[
                 TimeAggregation`h == 12, TimeAggregation`h12, 
                  TimeAggregation`hnot12]]], TimeAggregation`h12], 
             FreeQ[
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 12, 
               "numPeriods" -> 1, "v0" -> 
               Function[{
                 TimeAggregation`t, TimeAggregation`j, TimeAggregation`h, 
                  TimeAggregation`k, TimeAggregation`v, TimeAggregation`im}, 
                 If[
                 TimeAggregation`h == 12, TimeAggregation`h12, 
                  TimeAggregation`hnot12]]], TimeAggregation`hnot12]}]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8919137873843546`*^9, "AbsoluteTimeUsed" -> 
         0.665849`5.973890749671832, "CPUTimeUsed" -> 0.6664490000000001, 
         "MemoryUsed" -> 593088|>], 6152280224974333325 -> 
      TestResultObject[<|
        "TestKey" -> 6152280224974333325, "TestID" -> 
         "TimeAggregation_20230423-G9K8GT", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, {0 === FullSimplify[
               Coefficient[
                ReplaceAll[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 
                  3, "numPeriods" -> 1, "v0" -> 
                  Function[{
                    TimeAggregation`t, TimeAggregation`j, TimeAggregation`h, 
                    TimeAggregation`k, TimeAggregation`v, 
                    TimeAggregation`im}, (-1)/(TimeAggregation`h + 1)]], 
                 TimeAggregation`dc[
                   BlankSequence[]] -> TimeAggregation`dcX], 
                TimeAggregation`dcX, 0]], 0 === FullSimplify[
               Coefficient[
                ReplaceAll[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 
                  3, "numPeriods" -> 3, "v0" -> 
                  Function[{
                    TimeAggregation`t, TimeAggregation`j, TimeAggregation`h, 
                    TimeAggregation`k, TimeAggregation`v, TimeAggregation`im},
                     TimeAggregation`k^2]], TimeAggregation`dc[
                   BlankSequence[]] -> TimeAggregation`dcX], 
                TimeAggregation`dcX, 0]], 0 === FullSimplify[
               Coefficient[
                ReplaceAll[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 
                  3, "numPeriods" -> 3, "v0" -> 
                  Function[{
                    TimeAggregation`t, TimeAggregation`j, TimeAggregation`h, 
                    TimeAggregation`k, TimeAggregation`v, TimeAggregation`im},
                     TimeAggregation`v]], TimeAggregation`dc[
                   BlankSequence[]] -> TimeAggregation`dcX], 
                TimeAggregation`dcX, 0]], 0 === FullSimplify[
               Coefficient[
                ReplaceAll[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 TimeAggregation`dd, TimeAggregation`t, TimeAggregation`i, 
                  "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
                  Function[{
                    TimeAggregation`t, TimeAggregation`j, TimeAggregation`h, 
                    TimeAggregation`k, TimeAggregation`v, TimeAggregation`im},
                     TimeAggregation`im]], TimeAggregation`dd[
                   BlankSequence[], TimeAggregation`i] -> 
                 TimeAggregation`ddX], TimeAggregation`ddX, 0]]}]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.891913788050729*^9, "AbsoluteTimeUsed" -> 
         0.101876`5.158586882572424, "CPUTimeUsed" -> 0.10234699999999997`, 
         "MemoryUsed" -> 253456|>], 2656497230497979946 -> 
      TestResultObject[<|
        "TestKey" -> 2656497230497979946, "TestID" -> 
         "TimeAggregation_20230423-89AP1H", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           
           Module[{TimeAggregation`arbitraryFun = 
             Function[{
               TimeAggregation`t, TimeAggregation`h, TimeAggregation`k, 
                TimeAggregation`v}, 
               If[
               TimeAggregation`v === 
                TimeAggregation`dc, (-TimeAggregation`k^4) (
                 TimeAggregation`h^2/TimeAggregation`t), 
                Sqrt[TimeAggregation`h/TimeAggregation`k + 1]/
                TimeAggregation`t]]}, 0. === FullSimplify[
              N[
               ReplaceAll[
                Coefficient[
                 ReplaceAll[
                  FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                  TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 
                   3, "numPeriods" -> 1, "v0" -> 
                   Function[{
                    TimeAggregation`t, TimeAggregation`j, TimeAggregation`h, 
                    TimeAggregation`k, TimeAggregation`v, TimeAggregation`im}, 
                    TimeAggregation`F[
                    TimeAggregation`t, TimeAggregation`h, TimeAggregation`k, 
                    TimeAggregation`v]]], TimeAggregation`dc[
                    BlankSequence[]] -> TimeAggregation`dcX], 
                 TimeAggregation`dcX, 0], TimeAggregation`F -> 
                TimeAggregation`arbitraryFun]], TimeAggregation`t >= 0]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.891913788153033*^9, "AbsoluteTimeUsed" -> 
         0.020968`4.472072005770536, "CPUTimeUsed" -> 0.02107400000000048, 
         "MemoryUsed" -> 53648|>], 6843786444772251019 -> 
      TestResultObject[<|
        "TestKey" -> 6843786444772251019, "TestID" -> 
         "TimeAggregation_20230423-HURIQ5", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Not[
            N[0 === Coefficient[
               ReplaceAll[
                FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 3,
                  "numPeriods" -> 3, "v0" -> 
                 Function[{
                   TimeAggregation`t, TimeAggregation`j, TimeAggregation`h, 
                    TimeAggregation`k, TimeAggregation`v, TimeAggregation`im},
                    TimeAggregation`j]], TimeAggregation`dc[
                  BlankSequence[]] -> TimeAggregation`dcX], 
               TimeAggregation`dcX, 0]]]], "ExpectedOutput" -> HoldForm[True],
          "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.891913788174246*^9, "AbsoluteTimeUsed" -> 
         0.008846`4.097261932865579, "CPUTimeUsed" -> 0.008904000000001133, 
         "MemoryUsed" -> 54624|>], 914094466853081036 -> 
      TestResultObject[<|
        "TestKey" -> 914094466853081036, "TestID" -> 
         "TimeAggregation_20230423-0HCVKW", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           
           Module[{TimeAggregation`k = 1, TimeAggregation`h, 
             TimeAggregation`rulej, TimeAggregation`out1, 
             TimeAggregation`out2, TimeAggregation`out3}, 
            TimeAggregation`h = 1; 
            TimeAggregation`out1 = N[0 === Coefficient[
                 ReplaceAll[
                  FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                  TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 
                   TimeAggregation`h, "numPeriods" -> TimeAggregation`k, "v0" -> 
                   Function[{
                    TimeAggregation`t, TimeAggregation`j, TimeAggregation`h, 
                    TimeAggregation`k, TimeAggregation`v, TimeAggregation`im}, 
                    TimeAggregation`F[TimeAggregation`t]]], TimeAggregation`dc[
                    BlankSequence[]] -> TimeAggregation`dcX], 
                 TimeAggregation`dcX, 0]]; TimeAggregation`h = 2; 
            TimeAggregation`rulej = 
             Table[TimeAggregation`F[TimeAggregation`i] -> 
               TimeAggregation`F[
                TimeAggregation`h TimeAggregation`k + TimeAggregation`i], {
               TimeAggregation`i, 0, TimeAggregation`h - 2}]; 
            TimeAggregation`out2 = N[0 === Coefficient[
                 ReplaceAll[
                  ReplaceAll[
                   FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                   TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 
                    TimeAggregation`h, "numPeriods" -> TimeAggregation`k, 
                    "v0" -> Function[{
                    TimeAggregation`t, TimeAggregation`j, TimeAggregation`h, 
                    TimeAggregation`k, TimeAggregation`v, TimeAggregation`im}, 
                    TimeAggregation`F[TimeAggregation`j]]], 
                   TimeAggregation`rulej], TimeAggregation`dc[
                    BlankSequence[]] -> TimeAggregation`dcX], 
                 TimeAggregation`dcX, 0]]; TimeAggregation`h = 3; 
            TimeAggregation`rulej = 
             Table[TimeAggregation`F[TimeAggregation`i] -> 
               TimeAggregation`F[
                TimeAggregation`h TimeAggregation`k + TimeAggregation`i], {
               TimeAggregation`i, 0, TimeAggregation`h - 2}]; 
            TimeAggregation`out3 = N[0 === Coefficient[
                 ReplaceAll[
                  ReplaceAll[
                   FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                   TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 
                    TimeAggregation`h, "numPeriods" -> TimeAggregation`k, 
                    "v0" -> Function[{
                    TimeAggregation`t, TimeAggregation`j, TimeAggregation`h, 
                    TimeAggregation`k, TimeAggregation`v, TimeAggregation`im}, 
                    TimeAggregation`F[TimeAggregation`j]]], 
                   TimeAggregation`rulej], TimeAggregation`dc[
                    BlankSequence[]] -> TimeAggregation`dcX], 
                 TimeAggregation`dcX, 0]]; 
            Apply[And, {
              TimeAggregation`out1, TimeAggregation`out2, 
               TimeAggregation`out3}]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 3.891913788183456*^9, 
         "AbsoluteTimeUsed" -> 0.043028`4.7842661577851, "CPUTimeUsed" -> 
         0.043180999999998804`, "MemoryUsed" -> 90032|>], 3854384289170921942 -> 
      TestResultObject[<|
        "TestKey" -> 3854384289170921942, "TestID" -> 
         "TimeAggregation_20230423-8EF4ZS", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, {Cases[
               Expand[
                FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                TimeAggregation`dd, TimeAggregation`t, TimeAggregation`i, 
                 "TimeAggregation" -> 3, "numPeriods" -> 2, "order" -> 0]], 
               Optional[
                  Pattern[TimeAggregation`coef, 
                   Blank[]]] TimeAggregation`dd[
                   BlankSequence[], TimeAggregation`i]^Optional[
                   Pattern[TimeAggregation`p, 
                    Blank[]]] :> TimeAggregation`p] === {}, Max[
               Cases[
                Expand[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 TimeAggregation`dd, TimeAggregation`t, TimeAggregation`i, 
                  "TimeAggregation" -> 3, "numPeriods" -> 2, "order" -> 1]], 
                Optional[
                   Pattern[TimeAggregation`coef, 
                    Blank[]]] TimeAggregation`dd[
                    BlankSequence[], TimeAggregation`i]^Optional[
                    Pattern[TimeAggregation`p, 
                    Blank[]]] :> TimeAggregation`p]] === 1, Max[
               Cases[
                Expand[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 TimeAggregation`dd, TimeAggregation`t, TimeAggregation`i, 
                  "TimeAggregation" -> 3, "numPeriods" -> 2, "order" -> 2]], 
                Optional[
                   Pattern[TimeAggregation`coef, 
                    Blank[]]] TimeAggregation`dd[
                    BlankSequence[], TimeAggregation`i]^Optional[
                    Pattern[TimeAggregation`p, 
                    Blank[]]] :> TimeAggregation`p]] === 2, Max[
               Cases[
                Expand[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 TimeAggregation`dd, TimeAggregation`t, TimeAggregation`i, 
                  "TimeAggregation" -> 3, "numPeriods" -> 2, "order" -> 3]], 
                Optional[
                   Pattern[TimeAggregation`coef, 
                    Blank[]]] TimeAggregation`dd[
                    BlankSequence[], TimeAggregation`i]^Optional[
                    Pattern[TimeAggregation`p, 
                    Blank[]]] :> TimeAggregation`p]] === 3, Max[
               Cases[
                Expand[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 TimeAggregation`dc, TimeAggregation`t, "TimeAggregation" -> 
                  3, "numPeriods" -> 2, "order" -> 3]], Optional[
                   Pattern[TimeAggregation`coef, 
                    Blank[]]] TimeAggregation`dc[
                    BlankSequence[]]^Optional[
                    Pattern[TimeAggregation`p, 
                    Blank[]]] :> TimeAggregation`p]] === 3}]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.891913788226811*^9, "AbsoluteTimeUsed" -> 
         0.021522`4.4833976248916025, "CPUTimeUsed" -> 0.021781999999999968`, 
         "MemoryUsed" -> 145872|>]|>, "TestsSucceededKeys" -> CompressedData["

1:eJw1lcuNbMcRRN+CFjxaQA/y/zGBglY0gQsCWmnx5D90qqsaA/TMVOfNioyM
iPvH3//9659//fjx49dvfPz7P7/+9+fv/NGqoruu2eVuOeuf89hVs04N154Z
H/mcrxZFEbq12Wk+8zkviqu8vVxKWkXic06NjDvVYW4Ss3r7iGZqZUhVrkWP
3T4TFpPGMx41ZbKfc02zyIyYcj50si5OHXMZ47kCl1ldnJREiYy2FgPm5MVD
Yy5bDwdZ19rEnz9PvUiXMBIIR9qmv/Dp3ZYSYjun5YUjxdMhLgy8XrqvPWyW
zPlmVYETd9zc6qHMwta4c189I/WBKt0yZ7TX32OtZRX+G542Hp5ppXzXHPw+
kf7GDQG10xuk7EI6L04PE2Bve1vVMPFde26CdBeoyXht+taYxoppfXagDu7b
H4Kt0nv5Jev77Q9Rq2sALaQzEt+5ZJq9jEHnohh7a4RaAw2UMnVLun5l5axJ
1MHltJt7zoVbh1MAIK+NvOeKWmGzJENlz+Li9UdpYgHEsLGMuXJO5z8U0m1n
EyC6+I0JwYAuqQ1U2HfeDpa3wxTF3VsI5ekBrR5QLIwVoMIrf/xT5+o0HdR4
tH1lFWDXqTKHZxDnozMQ01mII/8+a7htZCUHpe3hFSPEXS/s8g3tIZWLTezW
M8h4F5ce6aMufbRt6nHzYiIfVfvKZDYrIoP5D3PI9I5bKBh1wORpltHXFax/
ceKgv+JU9akH+UHkeOJJrs5nOgwI6NOia44P5Kt+OD78Qg6GwpnvvFDSmCB7
xeDHjU+1q+LN9OPIvVHdZZM2iimQySRNXzma15Mxkz5Nxri+qVhhAEXT2TmX
7TORLAEyTQQ1dPDVMx0qVWdiQoqb8d+tj49AiIvDvfKI2FdUCZGBmI/V2fql
B2uabQ8LKyVr+uEpPQKLPrMKKi9o+/nJpOpjRm4UjDd5x0Km7BZRwh7I2Hk8
rwix62eEMtQ28WggfZc8mT6RhZLTX9RK0ZZcxi+E5Ne7CTm4Af5JjCHZ4tYP
gWZ1xI1dmKmeSM67AAIioOhjOrcP/EbfykAMBQB0/uBjNJQxJ8pOEBOUjwWi
HI1jgQ5S3p8niBechrSET3426vtGQAp13AmteV5Xn2uX1NwIPEQIDnp5FkKn
BCO5oyzQiE77PwluPiM=
     "], "TestsFailedWrongResultsKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, "TestsFailedWithErrorsKeys" -> {}|>],
  
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.891852654550756*^9, 3.8918527065688677`*^9, 
  3.891852804278133*^9, 3.891913788262104*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"377e5fff-3949-4aa1-b727-dcafe326fbf0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tr", "[", "\"\<TestsFailedWrongResults\>\"", "]"}]], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"f1d84011-dcfc-4f83-98b5-d531ed681557"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"8340599311265480355", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["TestResultObject",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{
                 InsetBox[
                  BoxData[
                   FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox[
                    "\"NiceOutput_20230430-D66RE9\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"NiceOutput_20230430-D66RE9\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["NiceOutput_20230430-D66RE9"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{
                 InsetBox[
                  BoxData[
                   FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox[
                    "\"NiceOutput_20230430-D66RE9\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"NiceOutput_20230430-D66RE9\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["NiceOutput_20230430-D66RE9"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{
                    RowBox[{"NiceOutput`newBY", "=", 
                    RowBox[{"Association", "[", 
                    RowBox[{"\"myModel\"", "\[Rule]", 
                    RowBox[{"NiceOutput`myModels", "[", "\"BY\"", "]"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"NiceOutput`newBYInfo", "=", 
                    
                    RowBox[{"PacletizedResourceFunctions`SetSymbolsContext", 
                    "[", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`NiceOutput`Info", "[", 
                    "NiceOutput`newBY", "]"}], "]"}]}], ";", 
                    RowBox[{"NiceOutput`newBYproc", "=", 
                    
                    RowBox[{"PacletizedResourceFunctions`SetSymbolsContext", 
                    "[", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`ProcessModels`\
processModels", "[", "NiceOutput`newBY", "]"}], "]"}]}], ";", 
                    RowBox[{"NiceOutput`newBYprocInfo", "=", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`NiceOutput`Info", "[", 
                    "NiceOutput`newBYproc", "]"}]}], ";", 
                    RowBox[{"And", "@@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"NiceOutput`newBYInfo", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], 
                    "\[RightDoubleBracket]"}], "===", "\"BY\""}], ",", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"NiceOutput`newBYInfo", "\[LeftDoubleBracket]", 
                    
                    RowBox[{"1", ",", "1", ",", "1", ",", "2", ",", "1", ",", 
                    "4", ",", "1", ",", "1", ",", "2", ",", "1", ",", "1", 
                    ",", "1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], 
                    "===", "\"x[t]\""}], ",", 
                    RowBox[{
                    
                    RowBox[{"NiceOutput`newBYprocInfo", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], 
                    "\[RightDoubleBracket]"}], "===", "\"BY\""}], ",", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    
                    RowBox[{"NiceOutput`newBYprocInfo", 
                    "\[LeftDoubleBracket]", 
                    
                    RowBox[{"1", ",", "1", ",", "1", ",", "2", ",", "1", ",", 
                    "4", ",", "1", ",", "1", ",", "2", ",", "1", ",", "1", 
                    ",", "1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], 
                    "===", "\"x[t]\""}]}], "}"}]}]}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{
                    RowBox[{"NiceOutput`newBY", "=", 
                    RowBox[{"Association", "[", 
                    RowBox[{"\"myModel\"", "\[Rule]", 
                    RowBox[{"NiceOutput`myModels", "[", "\"BY\"", "]"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"NiceOutput`newBYInfo", "=", 
                    
                    RowBox[{"PacletizedResourceFunctions`SetSymbolsContext", 
                    "[", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`NiceOutput`Info", "[", 
                    "NiceOutput`newBY", "]"}], "]"}]}], ";", 
                    RowBox[{"NiceOutput`newBYproc", "=", 
                    
                    RowBox[{"PacletizedResourceFunctions`SetSymbolsContext", 
                    "[", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`ProcessModels`\
processModels", "[", "NiceOutput`newBY", "]"}], "]"}]}], ";", 
                    RowBox[{"NiceOutput`newBYprocInfo", "=", 
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Tools`NiceOutput`Info", "[", 
                    "NiceOutput`newBYproc", "]"}]}], ";", 
                    RowBox[{"And", "@@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"NiceOutput`newBYInfo", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], 
                    "\[RightDoubleBracket]"}], "===", "\"BY\""}], ",", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"NiceOutput`newBYInfo", "\[LeftDoubleBracket]", 
                    
                    RowBox[{"1", ",", "1", ",", "1", ",", "2", ",", "1", ",", 
                    "4", ",", "1", ",", "1", ",", "2", ",", "1", ",", "1", 
                    ",", "1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], 
                    "===", "\"x[t]\""}], ",", 
                    RowBox[{
                    
                    RowBox[{"NiceOutput`newBYprocInfo", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], 
                    "\[RightDoubleBracket]"}], "===", "\"BY\""}], ",", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    
                    RowBox[{"NiceOutput`newBYprocInfo", 
                    "\[LeftDoubleBracket]", 
                    
                    RowBox[{"1", ",", "1", ",", "1", ",", "2", ",", "1", ",", 
                    "4", ",", "1", ",", "1", ",", "2", ",", "1", ",", "1", 
                    ",", "1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], 
                    "===", "\"x[t]\""}]}], "}"}]}]}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    NiceOutput`newBY = <|
                    "myModel" -> NiceOutput`myModels["BY"]|>; 
                    NiceOutput`newBYInfo = 
                    PacletizedResourceFunctions`SetSymbolsContext[
                    FernandoDuarte`LongRunRisk`Tools`NiceOutput`Info[
                    NiceOutput`newBY]]; 
                    NiceOutput`newBYproc = 
                    PacletizedResourceFunctions`SetSymbolsContext[
                    
                    FernandoDuarte`LongRunRisk`Model`ProcessModels`\
processModels[NiceOutput`newBY]]; 
                    NiceOutput`newBYprocInfo = 
                    FernandoDuarte`LongRunRisk`Tools`NiceOutput`Info[
                    NiceOutput`newBYproc]; 
                    Apply[And, {Part[NiceOutput`newBYInfo, 1, 1, 1, 1] === 
                    "BY", ToString[
                    Part[
                    NiceOutput`newBYInfo, 1, 1, 1, 2, 1, 4, 1, 1, 2, 1, 1, 1, 
                    1]] === "x[t]", Part[
                    NiceOutput`newBYprocInfo, 1, 1, 1, 1] === "BY", ToString[
                    Part[
                    NiceOutput`newBYprocInfo, 1, 1, 1, 2, 1, 4, 1, 1, 2, 1, 1,
                     1, 1]] === "x[t]"}]]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "False", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "False", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[False]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     TestResultObject[<|
      "TestKey" -> 8340599311265480355, "TestID" -> 
       "NiceOutput_20230430-D66RE9", "TestFileName" -> 
       "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "SameTest" -> SameQ, 
       "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
       DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
       "Outcome" -> "Failure", "Input" -> 
       HoldForm[
        NiceOutput`newBY = <|"myModel" -> NiceOutput`myModels["BY"]|>; 
         NiceOutput`newBYInfo = 
          PacletizedResourceFunctions`SetSymbolsContext[
            FernandoDuarte`LongRunRisk`Tools`NiceOutput`Info[
            NiceOutput`newBY]]; 
         NiceOutput`newBYproc = 
          PacletizedResourceFunctions`SetSymbolsContext[
            FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
            NiceOutput`newBY]]; 
         NiceOutput`newBYprocInfo = 
          FernandoDuarte`LongRunRisk`Tools`NiceOutput`Info[
           NiceOutput`newBYproc]; 
         Apply[And, {Part[NiceOutput`newBYInfo, 1, 1, 1, 1] === "BY", ToString[
              Part[
              NiceOutput`newBYInfo, 1, 1, 1, 2, 1, 4, 1, 1, 2, 1, 1, 1, 1]] === 
            "x[t]", Part[NiceOutput`newBYprocInfo, 1, 1, 1, 1] === "BY", 
            ToString[
              Part[
              NiceOutput`newBYprocInfo, 1, 1, 1, 2, 1, 4, 1, 1, 2, 1, 1, 1, 
               1]] === "x[t]"}]], "ExpectedOutput" -> HoldForm[True], 
       "ActualOutput" -> HoldForm[False], "ExpectedMessages" -> HoldForm[{}], 
       "ActualMessages" -> {}, "AbsoluteTime" -> 3.8921236035795474`*^9, 
       "AbsoluteTimeUsed" -> 0.082564`5.06730572300474, "CPUTimeUsed" -> 
       0.08258600000000005, "MemoryUsed" -> 159152|>],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"4865921395683187671", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["TestResultObject",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{
                 InsetBox[
                  BoxData[
                   FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox[
                    "\"ProcessModels_20230430-CNQZU4\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"ProcessModels_20230430-CNQZU4\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["ProcessModels_20230430-CNQZU4"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{
                 InsetBox[
                  BoxData[
                   FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox[
                    "\"ProcessModels_20230430-CNQZU4\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"ProcessModels_20230430-CNQZU4\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["ProcessModels_20230430-CNQZU4"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> RowBox[{
                    "PacletizedResourceFunctions`SetSymbolsContext", "[", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ProcessModels`model", "=", 
                    RowBox[{
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`ProcessModels`\
processModels", "[", "ProcessModels`myModels", "]"}], "[", "\"NRC\"", "]"}]}],
                     ",", 
                    RowBox[{"$Context", "=", "\"ProcessModels`\""}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"PacletizedResourceFunctions`SetSymbolsContext", 
                    "[", 
                    RowBox[{
                    RowBox[{"ProcessModels`pi", "[", "ProcessModels`t", "]"}],
                     "/.", "\[VeryThinSpace]", 
                    
                    RowBox[{"PacletizedResourceFunctions`SetSymbolsContext", 
                    "[", 
                    
                    RowBox[{"ProcessModels`model", "[", "\"exogenousEq\"", 
                    "]"}], "]"}]}], "]"}], ",", 
                    
                    RowBox[{"PacletizedResourceFunctions`SetSymbolsContext", 
                    "[", 
                    RowBox[{"ProcessModels`mup", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ProcessModels`rhop", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ProcessModels`pi", "[", 
                    RowBox[{"ProcessModels`t", "-", "1"}], "]"}], "-", 
                    "ProcessModels`mup"}], ")"}]}], "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ProcessModels`xip", " ", 
                    RowBox[{
                    RowBox[{"ProcessModels`eps", "[", "\"pi\"", "]"}], "[", 
                    RowBox[{"ProcessModels`t", "-", "1"}], "]"}]}], "+", 
                    RowBox[{"ProcessModels`phip", " ", 
                    RowBox[{
                    RowBox[{"ProcessModels`eps", "[", "\"pi\"", "]"}], "[", 
                    "ProcessModels`t", "]"}]}]}], ")"}]}], ")"}]}], "]"}]}], 
                    "}"}]}], "]"}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    
                    RowBox[{"PacletizedResourceFunctions`SetSymbolsContext", 
                    "[", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ProcessModels`model", "=", 
                    RowBox[{
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`ProcessModels`\
processModels", "[", "ProcessModels`myModels", "]"}], "[", "\"NRC\"", "]"}]}],
                     ",", 
                    RowBox[{"$Context", "=", "\"ProcessModels`\""}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"PacletizedResourceFunctions`SetSymbolsContext", 
                    "[", 
                    RowBox[{
                    RowBox[{"ProcessModels`pi", "[", "ProcessModels`t", "]"}],
                     "/.", "\[VeryThinSpace]", 
                    
                    RowBox[{"PacletizedResourceFunctions`SetSymbolsContext", 
                    "[", 
                    RowBox[{
                    "ProcessModels`model", "[", "\"exogenousEq\"", "]"}], 
                    "]"}]}], "]"}], ",", 
                    
                    RowBox[{"PacletizedResourceFunctions`SetSymbolsContext", 
                    "[", 
                    RowBox[{"ProcessModels`mup", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ProcessModels`rhop", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ProcessModels`pi", "[", 
                    RowBox[{"ProcessModels`t", "-", "1"}], "]"}], "-", 
                    "ProcessModels`mup"}], ")"}]}], "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ProcessModels`xip", " ", 
                    RowBox[{
                    RowBox[{"ProcessModels`eps", "[", "\"pi\"", "]"}], "[", 
                    RowBox[{"ProcessModels`t", "-", "1"}], "]"}]}], "+", 
                    RowBox[{"ProcessModels`phip", " ", 
                    RowBox[{
                    RowBox[{"ProcessModels`eps", "[", "\"pi\"", "]"}], "[", 
                    "ProcessModels`t", "]"}]}]}], ")"}]}], ")"}]}], "]"}]}], 
                    "}"}]}], "]"}], "]"}], "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    PacletizedResourceFunctions`SetSymbolsContext[
                    
                    Block[{ProcessModels`model = 
                    FernandoDuarte`LongRunRisk`Model`ProcessModels`\
processModels[ProcessModels`myModels]["NRC"], $Context = "ProcessModels`"}, {
                    PacletizedResourceFunctions`SetSymbolsContext[
                    ReplaceAll[
                    ProcessModels`pi[ProcessModels`t], 
                    PacletizedResourceFunctions`SetSymbolsContext[
                    ProcessModels`model["exogenousEq"]]]], 
                    PacletizedResourceFunctions`SetSymbolsContext[
                    ProcessModels`mup + (
                    ProcessModels`rhop (ProcessModels`pi[ProcessModels`t - 1] - 
                    ProcessModels`mup) + (
                    ProcessModels`xip ProcessModels`eps["pi"][
                    ProcessModels`t - 1] + 
                    ProcessModels`phip ProcessModels`eps["pi"][
                    ProcessModels`t]))]}]]]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ProcessModels`mup", "+", 
                    RowBox[{"ProcessModels`rhop", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "ProcessModels`mup"}], "+", 
                    RowBox[{"ProcessModels`pi", "[", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "ProcessModels`t"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"ProcessModels`xip", " ", 
                    RowBox[{
                    RowBox[{"ProcessModels`eps", "[", "\"pi\"", "]"}], "[", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "ProcessModels`t"}], "]"}]}], 
                    "+", 
                    RowBox[{"ProcessModels`phip", " ", 
                    RowBox[{
                    RowBox[{"ProcessModels`eps", "[", "\"pi\"", "]"}], "[", 
                    "ProcessModels`t", "]"}]}]}], ",", 
                    RowBox[{"ProcessModels`mup", "+", 
                    RowBox[{"ProcessModels`rhop", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "ProcessModels`mup"}], "+", 
                    RowBox[{"ProcessModels`pi", "[", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "ProcessModels`t"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"ProcessModels`xip", " ", 
                    RowBox[{
                    RowBox[{"ProcessModels`eps", "[", "\"pi\"", "]"}], "[", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "ProcessModels`t"}], "]"}]}], 
                    "+", 
                    RowBox[{"ProcessModels`phip", " ", 
                    RowBox[{
                    RowBox[{"ProcessModels`eps", "[", "\"pi\"", "]"}], "[", 
                    "ProcessModels`t", "]"}]}]}]}], "}"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ProcessModels`mup", "+", 
                    RowBox[{"ProcessModels`rhop", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "ProcessModels`mup"}], "+", 
                    RowBox[{"ProcessModels`pi", "[", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "ProcessModels`t"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"ProcessModels`xip", " ", 
                    RowBox[{
                    RowBox[{"ProcessModels`eps", "[", "\"pi\"", "]"}], "[", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "ProcessModels`t"}], "]"}]}], 
                    "+", 
                    RowBox[{"ProcessModels`phip", " ", 
                    RowBox[{
                    RowBox[{"ProcessModels`eps", "[", "\"pi\"", "]"}], "[", 
                    "ProcessModels`t", "]"}]}]}], ",", 
                    RowBox[{"ProcessModels`mup", "+", 
                    RowBox[{"ProcessModels`rhop", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "ProcessModels`mup"}], "+", 
                    RowBox[{"ProcessModels`pi", "[", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "ProcessModels`t"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"ProcessModels`xip", " ", 
                    RowBox[{
                    RowBox[{"ProcessModels`eps", "[", "\"pi\"", "]"}], "[", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "ProcessModels`t"}], "]"}]}], 
                    "+", 
                    RowBox[{"ProcessModels`phip", " ", 
                    RowBox[{
                    RowBox[{"ProcessModels`eps", "[", "\"pi\"", "]"}], "[", 
                    "ProcessModels`t", "]"}]}]}]}], "}"}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    
                    Unevaluated[{ProcessModels`mup + 
                    ProcessModels`rhop (-ProcessModels`mup + 
                    ProcessModels`pi[-1 + ProcessModels`t]) + 
                    ProcessModels`xip 
                    ProcessModels`eps["pi"][-1 + ProcessModels`t] + 
                    ProcessModels`phip 
                    ProcessModels`eps["pi"][ProcessModels`t], 
                    ProcessModels`mup + 
                    ProcessModels`rhop (-ProcessModels`mup + 
                    ProcessModels`pi[-1 + ProcessModels`t]) + 
                    ProcessModels`xip 
                    ProcessModels`eps["pi"][-1 + ProcessModels`t] + 
                    ProcessModels`phip 
                    ProcessModels`eps["pi"][ProcessModels`t]}]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ProcessModels`pi", "[", "ProcessModels`t", "]"}],
                     ",", 
                    RowBox[{"ProcessModels`mup", "+", 
                    RowBox[{"ProcessModels`rhop", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "ProcessModels`mup"}], "+", 
                    RowBox[{"ProcessModels`pi", "[", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "ProcessModels`t"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"ProcessModels`xip", " ", 
                    RowBox[{
                    RowBox[{"ProcessModels`eps", "[", "\"pi\"", "]"}], "[", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "ProcessModels`t"}], "]"}]}], 
                    "+", 
                    RowBox[{"ProcessModels`phip", " ", 
                    RowBox[{
                    RowBox[{"ProcessModels`eps", "[", "\"pi\"", "]"}], "[", 
                    "ProcessModels`t", "]"}]}]}]}], "}"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ProcessModels`pi", "[", "ProcessModels`t", "]"}],
                     ",", 
                    RowBox[{"ProcessModels`mup", "+", 
                    RowBox[{"ProcessModels`rhop", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "ProcessModels`mup"}], "+", 
                    RowBox[{"ProcessModels`pi", "[", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "ProcessModels`t"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"ProcessModels`xip", " ", 
                    RowBox[{
                    RowBox[{"ProcessModels`eps", "[", "\"pi\"", "]"}], "[", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "ProcessModels`t"}], "]"}]}], 
                    "+", 
                    RowBox[{"ProcessModels`phip", " ", 
                    RowBox[{
                    RowBox[{"ProcessModels`eps", "[", "\"pi\"", "]"}], "[", 
                    "ProcessModels`t", "]"}]}]}]}], "}"}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[{
                    ProcessModels`pi[ProcessModels`t], ProcessModels`mup + 
                    ProcessModels`rhop (-ProcessModels`mup + 
                    ProcessModels`pi[-1 + ProcessModels`t]) + 
                    ProcessModels`xip 
                    ProcessModels`eps["pi"][-1 + ProcessModels`t] + 
                    ProcessModels`phip 
                    ProcessModels`eps["pi"][ProcessModels`t]}]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     TestResultObject[<|
      "TestKey" -> 4865921395683187671, "TestID" -> 
       "ProcessModels_20230430-CNQZU4", "TestFileName" -> 
       "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
       SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
       DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
       "Outcome" -> "Failure", "Input" -> HoldForm[
         PacletizedResourceFunctions`SetSymbolsContext[
          
          Block[{ProcessModels`model = 
            FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
             ProcessModels`myModels]["NRC"], $Context = "ProcessModels`"}, {
            PacletizedResourceFunctions`SetSymbolsContext[
             ReplaceAll[
              ProcessModels`pi[ProcessModels`t], 
              PacletizedResourceFunctions`SetSymbolsContext[
               ProcessModels`model["exogenousEq"]]]], 
            PacletizedResourceFunctions`SetSymbolsContext[
            ProcessModels`mup + (
              ProcessModels`rhop (ProcessModels`pi[ProcessModels`t - 1] - 
                ProcessModels`mup) + (
               ProcessModels`xip ProcessModels`eps["pi"][ProcessModels`t - 1] + 
               ProcessModels`phip 
                ProcessModels`eps["pi"][ProcessModels`t]))]}]]], 
       "ExpectedOutput" -> 
       HoldForm[{
         ProcessModels`mup + 
          ProcessModels`rhop (-ProcessModels`mup + 
            ProcessModels`pi[-1 + ProcessModels`t]) + 
          ProcessModels`xip ProcessModels`eps["pi"][-1 + ProcessModels`t] + 
          ProcessModels`phip ProcessModels`eps["pi"][ProcessModels`t], 
          ProcessModels`mup + 
          ProcessModels`rhop (-ProcessModels`mup + 
            ProcessModels`pi[-1 + ProcessModels`t]) + 
          ProcessModels`xip ProcessModels`eps["pi"][-1 + ProcessModels`t] + 
          ProcessModels`phip ProcessModels`eps["pi"][ProcessModels`t]}], 
       "ActualOutput" -> HoldForm[{
          ProcessModels`pi[ProcessModels`t], ProcessModels`mup + 
          ProcessModels`rhop (-ProcessModels`mup + 
            ProcessModels`pi[-1 + ProcessModels`t]) + 
          ProcessModels`xip ProcessModels`eps["pi"][-1 + ProcessModels`t] + 
          ProcessModels`phip ProcessModels`eps["pi"][ProcessModels`t]}], 
       "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
       "AbsoluteTime" -> 3.8921236041660104`*^9, "AbsoluteTimeUsed" -> 
       0.023654`4.524419590306964, "CPUTimeUsed" -> 0.02366400000000013, 
       "MemoryUsed" -> 674248|>],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"2045454766560061283", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["TestResultObject",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{
                 InsetBox[
                  BoxData[
                   FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox[
                    "\"ProcessModels_20230430-H47GX8\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"ProcessModels_20230430-H47GX8\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["ProcessModels_20230430-H47GX8"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{
                 InsetBox[
                  BoxData[
                   FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox[
                    "\"ProcessModels_20230430-H47GX8\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"ProcessModels_20230430-H47GX8\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["ProcessModels_20230430-H47GX8"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> RowBox[{
                    "PacletizedResourceFunctions`SetSymbolsContext", "[", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ProcessModels`model", "=", 
                    RowBox[{
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`ProcessModels`\
processModels", "[", "ProcessModels`myModels", "]"}], "[", "\"BY\"", "]"}]}], 
                    ",", 
                    RowBox[{"$Context", "=", "\"ProcessModels`\""}]}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"PacletizedResourceFunctions`SetSymbolsContext", 
                    "[", 
                    RowBox[{
                    RowBox[{"ProcessModels`wc", "[", "ProcessModels`t", "]"}],
                     "/.", "\[VeryThinSpace]", 
                    
                    RowBox[{"ProcessModels`model", "[", "\"endogenousEq\"", 
                    "]"}]}], "]"}], "}"}], "===", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ProcessModels`A", "[", "0", "]"}], "+", 
                    RowBox[{
                    RowBox[{"ProcessModels`A", "[", "2", "]"}], " ", 
                    
                    RowBox[{"ProcessModels`sx", "[", "ProcessModels`t", 
                    "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"ProcessModels`A", "[", "1", "]"}], " ", 
                    RowBox[{"ProcessModels`x", "[", "ProcessModels`t", 
                    "]"}]}]}], "}"}]}]}], "]"}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    
                    RowBox[{"PacletizedResourceFunctions`SetSymbolsContext", 
                    "[", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ProcessModels`model", "=", 
                    RowBox[{
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`ProcessModels`\
processModels", "[", "ProcessModels`myModels", "]"}], "[", "\"BY\"", "]"}]}], 
                    ",", 
                    RowBox[{"$Context", "=", "\"ProcessModels`\""}]}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"PacletizedResourceFunctions`SetSymbolsContext", 
                    "[", 
                    RowBox[{
                    RowBox[{"ProcessModels`wc", "[", "ProcessModels`t", "]"}],
                     "/.", "\[VeryThinSpace]", 
                    
                    RowBox[{"ProcessModels`model", "[", "\"endogenousEq\"", 
                    "]"}]}], "]"}], "}"}], "===", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ProcessModels`A", "[", "0", "]"}], "+", 
                    RowBox[{
                    RowBox[{"ProcessModels`A", "[", "2", "]"}], " ", 
                    
                    RowBox[{"ProcessModels`sx", "[", "ProcessModels`t", 
                    "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"ProcessModels`A", "[", "1", "]"}], " ", 
                    
                    RowBox[{"ProcessModels`x", "[", "ProcessModels`t", 
                    "]"}]}]}], "}"}]}]}], "]"}], "]"}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    PacletizedResourceFunctions`SetSymbolsContext[
                    
                    Block[{ProcessModels`model = 
                    FernandoDuarte`LongRunRisk`Model`ProcessModels`\
processModels[ProcessModels`myModels]["BY"], $Context = "ProcessModels`"}, {
                    PacletizedResourceFunctions`SetSymbolsContext[
                    ReplaceAll[
                    ProcessModels`wc[ProcessModels`t], 
                    ProcessModels`model["endogenousEq"]]]} === {
                    ProcessModels`A[0] + 
                    ProcessModels`A[2] ProcessModels`sx[ProcessModels`t] + 
                    ProcessModels`A[1] ProcessModels`x[ProcessModels`t]}]]]], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "False", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "False", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[False]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     TestResultObject[<|
      "TestKey" -> 2045454766560061283, "TestID" -> 
       "ProcessModels_20230430-H47GX8", "TestFileName" -> 
       "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
       SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
       DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
       "Outcome" -> "Failure", "Input" -> HoldForm[
         PacletizedResourceFunctions`SetSymbolsContext[
          
          Block[{ProcessModels`model = 
            FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
             ProcessModels`myModels]["BY"], $Context = "ProcessModels`"}, {
             PacletizedResourceFunctions`SetSymbolsContext[
              ReplaceAll[
               ProcessModels`wc[ProcessModels`t], 
               ProcessModels`model["endogenousEq"]]]} === {
            ProcessModels`A[0] + 
             ProcessModels`A[2] ProcessModels`sx[ProcessModels`t] + 
             ProcessModels`A[1] ProcessModels`x[ProcessModels`t]}]]], 
       "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[False], 
       "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
       "AbsoluteTime" -> 3.8921236041901307`*^9, "AbsoluteTimeUsed" -> 
       0.021611`4.485189861172142, "CPUTimeUsed" -> 0.021612000000000187`, 
       "MemoryUsed" -> 499848|>],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"7758180325664932076", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["TestResultObject",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{
                 InsetBox[
                  BoxData[
                   FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox[
                    "\"ProcessModels_20230430-4WYFNQ\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"ProcessModels_20230430-4WYFNQ\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["ProcessModels_20230430-4WYFNQ"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{
                 InsetBox[
                  BoxData[
                   FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox[
                    "\"ProcessModels_20230430-4WYFNQ\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"ProcessModels_20230430-4WYFNQ\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["ProcessModels_20230430-4WYFNQ"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> RowBox[{
                    "PacletizedResourceFunctions`SetSymbolsContext", "[", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ProcessModels`model", "=", 
                    RowBox[{
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`ProcessModels`\
processModels", "[", "ProcessModels`myModels", "]"}], "[", "\"BY\"", "]"}]}], 
                    ",", 
                    RowBox[{"$Context", "=", "\"ProcessModels`\""}]}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"PacletizedResourceFunctions`SetSymbolsContext", 
                    "[", 
                    RowBox[{
                    RowBox[{"ProcessModels`pd", "[", 
                    RowBox[{"ProcessModels`t", ",", "ProcessModels`i"}], 
                    "]"}], "/.", "\[VeryThinSpace]", 
                    
                    RowBox[{"ProcessModels`model", "[", "\"endogenousEq\"", 
                    "]"}]}], "]"}], "}"}], "===", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ProcessModels`B", "[", "ProcessModels`i", "]"}], 
                    "[", "0", "]"}], "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"ProcessModels`B", "[", "ProcessModels`i", "]"}], 
                    "[", "2", "]"}], " ", 
                    
                    RowBox[{"ProcessModels`sx", "[", "ProcessModels`t", 
                    "]"}]}], "+", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ProcessModels`B", "[", "ProcessModels`i", "]"}], 
                    "[", "1", "]"}], " ", 
                    
                    RowBox[{"ProcessModels`x", "[", "ProcessModels`t", 
                    "]"}]}]}], ")"}]}], "}"}]}]}], "]"}], "]"}], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    
                    RowBox[{"PacletizedResourceFunctions`SetSymbolsContext", 
                    "[", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ProcessModels`model", "=", 
                    RowBox[{
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`ProcessModels`\
processModels", "[", "ProcessModels`myModels", "]"}], "[", "\"BY\"", "]"}]}], 
                    ",", 
                    RowBox[{"$Context", "=", "\"ProcessModels`\""}]}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"PacletizedResourceFunctions`SetSymbolsContext", 
                    "[", 
                    RowBox[{
                    RowBox[{"ProcessModels`pd", "[", 
                    RowBox[{"ProcessModels`t", ",", "ProcessModels`i"}], 
                    "]"}], "/.", "\[VeryThinSpace]", 
                    
                    RowBox[{"ProcessModels`model", "[", "\"endogenousEq\"", 
                    "]"}]}], "]"}], "}"}], "===", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ProcessModels`B", "[", "ProcessModels`i", "]"}], 
                    "[", "0", "]"}], "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"ProcessModels`B", "[", "ProcessModels`i", "]"}], 
                    "[", "2", "]"}], " ", 
                    
                    RowBox[{"ProcessModels`sx", "[", "ProcessModels`t", 
                    "]"}]}], "+", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ProcessModels`B", "[", "ProcessModels`i", "]"}], 
                    "[", "1", "]"}], " ", 
                    
                    RowBox[{"ProcessModels`x", "[", "ProcessModels`t", 
                    "]"}]}]}], ")"}]}], "}"}]}]}], "]"}], "]"}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    PacletizedResourceFunctions`SetSymbolsContext[
                    
                    Block[{ProcessModels`model = 
                    FernandoDuarte`LongRunRisk`Model`ProcessModels`\
processModels[ProcessModels`myModels]["BY"], $Context = "ProcessModels`"}, {
                    PacletizedResourceFunctions`SetSymbolsContext[
                    ReplaceAll[
                    ProcessModels`pd[ProcessModels`t, ProcessModels`i], 
                    ProcessModels`model["endogenousEq"]]]} === {
                    ProcessModels`B[ProcessModels`i][0] + (
                    ProcessModels`B[ProcessModels`i][2] 
                    ProcessModels`sx[ProcessModels`t] + 
                    ProcessModels`B[ProcessModels`i][1] 
                    ProcessModels`x[ProcessModels`t])}]]]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "False", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "False", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[False]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     TestResultObject[<|
      "TestKey" -> 7758180325664932076, "TestID" -> 
       "ProcessModels_20230430-4WYFNQ", "TestFileName" -> 
       "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
       SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
       DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
       "Outcome" -> "Failure", "Input" -> HoldForm[
         PacletizedResourceFunctions`SetSymbolsContext[
          
          Block[{ProcessModels`model = 
            FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
             ProcessModels`myModels]["BY"], $Context = "ProcessModels`"}, {
             PacletizedResourceFunctions`SetSymbolsContext[
              ReplaceAll[
               ProcessModels`pd[ProcessModels`t, ProcessModels`i], 
               ProcessModels`model["endogenousEq"]]]} === {
            ProcessModels`B[ProcessModels`i][0] + (
              ProcessModels`B[ProcessModels`i][2] 
               ProcessModels`sx[ProcessModels`t] + 
              ProcessModels`B[ProcessModels`i][1] 
               ProcessModels`x[ProcessModels`t])}]]], "ExpectedOutput" -> 
       HoldForm[True], "ActualOutput" -> HoldForm[False], "ExpectedMessages" -> 
       HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
       3.8921236042121687`*^9, "AbsoluteTimeUsed" -> 
       0.021568`4.48432487268722, "CPUTimeUsed" -> 0.021584000000000714`, 
       "MemoryUsed" -> 493992|>],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"1028149846864086799", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["TestResultObject",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{
                 InsetBox[
                  BoxData[
                   FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox[
                    "\"ProcessModels_20230430-JWVGH2\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"ProcessModels_20230430-JWVGH2\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["ProcessModels_20230430-JWVGH2"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{
                 InsetBox[
                  BoxData[
                   FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox[
                    "\"ProcessModels_20230430-JWVGH2\"", HoldForm], True -> 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox["\"ProcessModels_20230430-JWVGH2\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["ProcessModels_20230430-JWVGH2"]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> RowBox[{
                    "PacletizedResourceFunctions`SetSymbolsContext", "[", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ProcessModels`model", "=", 
                    RowBox[{
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`ProcessModels`\
processModels", "[", "ProcessModels`myModels", "]"}], "[", "\"NRC\"", "]"}]}],
                     ",", 
                    RowBox[{"$Context", "=", "\"ProcessModels`\""}]}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"PacletizedResourceFunctions`SetSymbolsContext", 
                    "[", 
                    RowBox[{
                    RowBox[{"ProcessModels`bondexcret", "[", 
                    RowBox[{"ProcessModels`t", ",", "ProcessModels`m"}], 
                    "]"}], "/.", "\[VeryThinSpace]", 
                    
                    RowBox[{"ProcessModels`model", "[", "\"endogenousEq\"", 
                    "]"}]}], "]"}], "}"}], "===", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ProcessModels`bondret", "[", 
                    
                    RowBox[{"ProcessModels`t", ",", "ProcessModels`m", ",", 
                    "1"}], "]"}], "-", 
                    RowBox[{"ProcessModels`bondyield", "[", 
                    RowBox[{
                    RowBox[{"ProcessModels`t", "-", "1"}], ",", "1"}], 
                    "]"}]}], "}"}]}]}], "]"}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    
                    RowBox[{"PacletizedResourceFunctions`SetSymbolsContext", 
                    "[", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ProcessModels`model", "=", 
                    RowBox[{
                    
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`ProcessModels`\
processModels", "[", "ProcessModels`myModels", "]"}], "[", "\"NRC\"", "]"}]}],
                     ",", 
                    RowBox[{"$Context", "=", "\"ProcessModels`\""}]}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"PacletizedResourceFunctions`SetSymbolsContext", 
                    "[", 
                    RowBox[{
                    RowBox[{"ProcessModels`bondexcret", "[", 
                    RowBox[{"ProcessModels`t", ",", "ProcessModels`m"}], 
                    "]"}], "/.", "\[VeryThinSpace]", 
                    
                    RowBox[{"ProcessModels`model", "[", "\"endogenousEq\"", 
                    "]"}]}], "]"}], "}"}], "===", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ProcessModels`bondret", "[", 
                    
                    RowBox[{"ProcessModels`t", ",", "ProcessModels`m", ",", 
                    "1"}], "]"}], "-", 
                    RowBox[{"ProcessModels`bondyield", "[", 
                    RowBox[{
                    RowBox[{"ProcessModels`t", "-", "1"}], ",", "1"}], 
                    "]"}]}], "}"}]}]}], "]"}], "]"}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    PacletizedResourceFunctions`SetSymbolsContext[
                    Block[{ProcessModels`model = 
                    FernandoDuarte`LongRunRisk`Model`ProcessModels`\
processModels[ProcessModels`myModels]["NRC"], $Context = "ProcessModels`"}, {
                    PacletizedResourceFunctions`SetSymbolsContext[
                    ReplaceAll[
                    ProcessModels`bondexcret[
                    ProcessModels`t, ProcessModels`m], 
                    ProcessModels`model["endogenousEq"]]]} === {
                    ProcessModels`bondret[
                    ProcessModels`t, ProcessModels`m, 1] - 
                    ProcessModels`bondyield[ProcessModels`t - 1, 1]}]]]], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "True", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "True", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[True]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> "False", True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    "False", "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[False]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     TestResultObject[<|
      "TestKey" -> 1028149846864086799, "TestID" -> 
       "ProcessModels_20230430-JWVGH2", "TestFileName" -> 
       "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "SameTest" -> 
       SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
       DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
       "Outcome" -> "Failure", "Input" -> HoldForm[
         PacletizedResourceFunctions`SetSymbolsContext[
          
          Block[{ProcessModels`model = 
            FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
             ProcessModels`myModels]["NRC"], $Context = "ProcessModels`"}, {
             PacletizedResourceFunctions`SetSymbolsContext[
              ReplaceAll[
               ProcessModels`bondexcret[ProcessModels`t, ProcessModels`m], 
               ProcessModels`model["endogenousEq"]]]} === {
            ProcessModels`bondret[ProcessModels`t, ProcessModels`m, 1] - 
             ProcessModels`bondyield[ProcessModels`t - 1, 1]}]]], 
       "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[False], 
       "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
       "AbsoluteTime" -> 3.8921236042341805`*^9, "AbsoluteTimeUsed" -> 
       0.021615`4.485270237701664, "CPUTimeUsed" -> 0.02163399999999971, 
       "MemoryUsed" -> 493104|>],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.892123565782887*^9, 3.892123609275921*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"6b8022fe-736d-46cb-8824-9a76e0973756"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"tr", "[", "\"\<TestsFailedWithMessages\>\"", "]"}]], "Input",
 CellChangeTimes->{3.891216973918013*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"72b3648a-0cee-4dc9-be71-a2ec78ccaeb6"],

Cell[BoxData[
 RowBox[{"tr", "[", "\"\<AllTestsSucceeded\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.891244270667821*^9, 3.8912442806861467`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"a6c5e524-ea19-4388-b400-11e7955f8ea5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ex", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"tr", "[", "\"\<TestsFailedWrongResults\>\"", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ")"}], "[", "\"\<ExpectedOutput\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ac", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"tr", "[", "\"\<TestsFailedWrongResults\>\"", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ")"}], "[", "\"\<ActualOutput\>\"", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ex", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "i"}], "]"}], "]"}], "//", "Dataset"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"ex", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], "//", 
  "TableForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ac", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "i"}], "]"}], "]"}], "//", "Dataset"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"ex", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], "//", 
   "TableForm"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ex", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "i"}], "]"}], "]"}], "===", 
    RowBox[{"ac", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "i"}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", 
      RowBox[{"ex", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8911892423610697`*^9, 3.891189408745401*^9}, {
  3.891189440317423*^9, 3.891189493958919*^9}, {3.8911896616276073`*^9, 
  3.891189661921062*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"76cb4ed9-01ec-476a-a9e9-6b94634d9568"],

Cell[BoxData[{
 RowBox[{"ex", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"tr", "[", "\"\<TestsFailedWithMessages\>\"", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], ")"}], "[", "\"\<ExpectedMessages\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ac", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"tr", "[", "\"\<TestsFailedWithMessages\>\"", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ")"}], "[", "\"\<ActualMessages\>\"", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ex", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "i"}], "]"}], "]"}], "//", "Dataset"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"ex", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], "//", 
  "TableForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ac", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "i"}], "]"}], "]"}], "//", "Dataset"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"ex", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], "//", 
   "TableForm"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ex", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "i"}], "]"}], "]"}], "===", 
    RowBox[{"ac", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "i"}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", 
      RowBox[{"ex", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8912473352654257`*^9, 3.8912473460524397`*^9}, {
  3.891247384832871*^9, 3.8912474129725733`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"3618d278-2bdc-4117-943a-ec2c4120cbb3"],

Cell[BoxData[{
 RowBox[{"tr", "[", "\"\<Properties\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"tr", "[", "\"\<TestsFailedWithMessages\>\"", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ")"}], "[", "\"\<Properties\>\"", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.891247311071122*^9, 3.89124731367701*^9}, {
  3.891247369997828*^9, 3.8912473769236097`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"6969c719-aae4-437c-b901-af76b3071aca"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"keyRename", ",", "models"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"models", "=", " ", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<key1\>\"", "->", "1"}], ",", 
     RowBox[{"\"\<key2\>\"", "->", "B"}]}], " ", "|>"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"keyRename", "[", 
   RowBox[{"a_Association", ",", " ", 
    RowBox[{"HoldPattern", "[", 
     RowBox[{"key_", " ", "->", " ", "key_"}], "]"}]}], "]"}], " ", ":=", " ",
   "a"}], "\[IndentingNewLine]", 
 RowBox[{"keyRename", "[", 
  RowBox[{"models", ",", 
   RowBox[{"\"\<key1\>\"", ":>", "\"\<key1\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"keyRename", "[", 
  RowBox[{"models", ",", 
   RowBox[{"\"\<key2\>\"", "->", "\"\<key2\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"keyRename", "[", 
  RowBox[{"models", ",", 
   RowBox[{"\"\<key1\>\"", "->", "\"\<key2\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.891252513394017*^9, 3.8912526675960073`*^9}, {
  3.891252750079225*^9, 3.89125279098596*^9}},
 CellLabel->"",ExpressionUUID->"145c4020-2b7b-424d-be26-24a62efb7eb2"],

Cell[BoxData["HoldPattern"], "Input",
 CellChangeTimes->{{3.8912526951004057`*^9, 
  3.891252696617908*^9}},ExpressionUUID->"5ee11ed9-1b48-4a05-b95e-\
bf6433e60297"],

Cell[BoxData[
 RowBox[{"tr", "[", "\"\<TestsSucceeded\>\"", "]"}]], "Input",
 CellLabel->"In[17]:=",ExpressionUUID->"7eacb08d-7f5b-464e-af3c-e1f85d1ec65e"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ex", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"tr", "[", "\"\<TestsSucceeded\>\"", "]"}], "[", 
       "5429993755576444103", "]"}], ")"}], "[", "\"\<ExpectedOutput\>\"", 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"ac", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"tr", "[", "\"\<TestsSucceeded\>\"", "]"}], "[", 
       "5429993755576444103", "]"}], ")"}], "[", "\"\<ActualOutput\>\"", 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{
  3.891312835745772*^9, {3.891312920186902*^9, 3.8913129515677156`*^9}, {
   3.891313033820343*^9, 3.891313036755728*^9}, 
   3.891313069029059*^9},ExpressionUUID->"86c4bf81-c4ec-4e81-9ee4-\
eb2a9bac87a8"]
},
WindowSize->{966, 942},
WindowMargins->{{Automatic, -1772}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.25 Inherited,
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (January 30, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6603c207-289c-456f-bd11-6175ead60d45"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 199, 3, 37, "Input",ExpressionUUID->"4a4e2e24-fcb6-4e5b-a6de-9a788f0ea471"],
Cell[CellGroupData[{
Cell[782, 27, 1575, 30, 116, "Input",ExpressionUUID->"b9f2d453-3e98-41bc-b67a-28793e860800"],
Cell[2360, 59, 314, 4, 42, "Output",ExpressionUUID->"a62752a1-629e-4bfd-9d93-e49da0d6f03b"],
Cell[2677, 65, 338, 5, 42, "Output",ExpressionUUID->"0ffb3915-6d7f-46ab-bd31-c0d92557029d"],
Cell[3018, 72, 1135, 21, 381, "Output",ExpressionUUID->"3ba98359-489f-4606-a9e8-4139c830c1df"],
Cell[4156, 95, 314, 5, 42, "Output",ExpressionUUID->"478c6cea-ff60-441a-bd13-dcbc5b22f81b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4507, 105, 294, 5, 37, "Input",ExpressionUUID->"8a9c9e85-8cbf-4e1c-870c-0a5ec229dd8b"],
Cell[4804, 112, 126537, 2261, 76, "Output",ExpressionUUID->"b45a0495-e03b-42ea-81bd-b4e1abd33fb4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131378, 2378, 177, 3, 37, "Input",ExpressionUUID->"89327c75-70af-4b75-adfd-86608c4fe806"],
Cell[131558, 2383, 123678, 2209, 76, "Output",ExpressionUUID->"377e5fff-3949-4aa1-b727-dcafe326fbf0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255273, 4597, 163, 2, 37, "Input",ExpressionUUID->"f1d84011-dcfc-4f83-98b5-d531ed681557"],
Cell[255439, 4601, 101570, 2052, 354, "Output",ExpressionUUID->"6b8022fe-736d-46cb-8824-9a76e0973756"]
}, Open  ]],
Cell[357024, 6656, 205, 3, 37, "Input",ExpressionUUID->"72b3648a-0cee-4dc9-be71-a2ec78ccaeb6"],
Cell[357232, 6661, 226, 3, 37, "Input",ExpressionUUID->"a6c5e524-ea19-4388-b400-11e7955f8ea5"],
Cell[357461, 6666, 2104, 62, 194, "Input",ExpressionUUID->"76cb4ed9-01ec-476a-a9e9-6b94634d9568"],
Cell[359568, 6730, 2013, 59, 194, "Input",ExpressionUUID->"3618d278-2bdc-4117-943a-ec2c4120cbb3"],
Cell[361584, 6791, 481, 10, 64, "Input",ExpressionUUID->"6969c719-aae4-437c-b901-af76b3071aca"],
Cell[362068, 6803, 1143, 29, 168, "Input",ExpressionUUID->"145c4020-2b7b-424d-be26-24a62efb7eb2"],
Cell[363214, 6834, 165, 3, 37, "Input",ExpressionUUID->"5ee11ed9-1b48-4a05-b95e-bf6433e60297"],
Cell[363382, 6839, 155, 2, 37, "Input",ExpressionUUID->"7eacb08d-7f5b-464e-af3c-e1f85d1ec65e"],
Cell[363540, 6843, 769, 21, 90, "Input",ExpressionUUID->"86c4bf81-c4ec-4e81-9ee4-eb2a9bac87a8"]
}
]
*)

