(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    828732,      16310]
NotebookOptionsPosition[    822132,      16206]
NotebookOutlinePosition[    822602,      16224]
CellTagsIndexPosition[    822559,      16221]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8899684458207283`*^9, 3.889968446659306*^9}, 
   3.905687785878962*^9, 3.905697493964726*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"4a4e2e24-fcb6-4e5b-a6de-9a788f0ea471"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"pacletBaseDir", "=", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], ",", "2"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"PacletDirectoryLoad", "[", "pacletBaseDir", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"testFileNames", " ", "=", " ", 
  RowBox[{"FileNames", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"pacletBaseDir", ",", "\"\<Tests\>\"", ",", "\"\<*.wlt\>\""}], 
     "}"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"$ContextPath", "=", 
  RowBox[{"Cases", "[", 
   RowBox[{"$ContextPath", ",", 
    RowBox[{"Except", "[", "\"\<PacletizedResourceFunctions`\>\"", "]"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8894111683493032`*^9, 3.8894112087815933`*^9}, {
   3.889411242053163*^9, 3.88941126569147*^9}, {3.889603572176957*^9, 
   3.88960360623313*^9}, {3.88960408745549*^9, 3.889604092938833*^9}, {
   3.889969691249559*^9, 3.88996969252437*^9}, {3.889970717286119*^9, 
   3.889970718153995*^9}, {3.889971173708085*^9, 3.889971181843957*^9}, {
   3.889971229070705*^9, 3.8899712293375397`*^9}, {3.8899714432222357`*^9, 
   3.8899714500808268`*^9}, 3.890495920897338*^9, {3.890495957177495*^9, 
   3.8904959657175426`*^9}, {3.890496000595605*^9, 3.890496010113224*^9}, {
   3.890496054450512*^9, 3.890496056417246*^9}, {3.890555640296084*^9, 
   3.8905556405146093`*^9}, {3.8905942747634373`*^9, 3.890594276210952*^9}, {
   3.891158085135849*^9, 3.891158137208028*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b9f2d453-3e98-41bc-b67a-28793e860800"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/\"\>"], "Output",
 CellChangeTimes->{3.905687795130703*^9, 3.905697500314103*^9, 
  3.905698655986959*^9, 3.905698910782078*^9, 3.9056991277614717`*^9, 
  3.905699459136881*^9, 3.905700763948822*^9, 3.9057677871784554`*^9, 
  3.905768105398779*^9, 3.905770427149537*^9, 3.905770995419491*^9, 
  3.9057712428916397`*^9, 3.905771721405154*^9, 3.9057734257647142`*^9, 
  3.905773776563641*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"3e60d630-bd14-4c8d-8d05-d8fef78ad01c"],

Cell[BoxData[
 RowBox[{"{", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/\"\>", "}"}]], "Output",
 CellChangeTimes->{3.905687795130703*^9, 3.905697500314103*^9, 
  3.905698655986959*^9, 3.905698910782078*^9, 3.9056991277614717`*^9, 
  3.905699459136881*^9, 3.905700763948822*^9, 3.9057677871784554`*^9, 
  3.905768105398779*^9, 3.905770427149537*^9, 3.905770995419491*^9, 
  3.9057712428916397`*^9, 3.905771721405154*^9, 3.9057734257647142`*^9, 
  3.9057737765985117`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"22833840-f2de-4fe6-bbbf-269f58a4d5aa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt\"\>\
", ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt\"\
\>", ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/CreateEulerEq.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/PacletizeResources.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/SolveEulerEq.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt\"\>"}], "}"}]], "Output",\

 CellChangeTimes->{3.905687795130703*^9, 3.905697500314103*^9, 
  3.905698655986959*^9, 3.905698910782078*^9, 3.9056991277614717`*^9, 
  3.905699459136881*^9, 3.905700763948822*^9, 3.9057677871784554`*^9, 
  3.905768105398779*^9, 3.905770427149537*^9, 3.905770995419491*^9, 
  3.9057712428916397`*^9, 3.905771721405154*^9, 3.9057734257647142`*^9, 
  3.9057737765992193`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"19d9b494-2f20-4afc-aaed-dc2bc60bec5f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Wolfram`Chatbook`\"\>", ",", "\<\"System`\"\>", 
   ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.905687795130703*^9, 3.905697500314103*^9, 
  3.905698655986959*^9, 3.905698910782078*^9, 3.9056991277614717`*^9, 
  3.905699459136881*^9, 3.905700763948822*^9, 3.9057677871784554`*^9, 
  3.905768105398779*^9, 3.905770427149537*^9, 3.905770995419491*^9, 
  3.9057712428916397`*^9, 3.905771721405154*^9, 3.9057734257647142`*^9, 
  3.905773776600065*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"c3b20972-1a55-4bc5-9757-5c1cba14073d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tr", "=", 
  RowBox[{"TestReport", "[", "testFileNames", "]"}]}]], "Input",
 CellChangeTimes->{{3.905774456753294*^9, 3.905774456896863*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"89327c75-70af-4b75-adfd-86608c4fe806"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TestReportObject", "SummaryHead"], "NonInterpretableSummary"], 
      
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                  PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                  GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Test Report: Catalog.wlt\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["148", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                  PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                  GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Test Report: Catalog.wlt\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["148", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["148", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    "439.4071119999999999998`6.6231203643282175", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                     "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[TestReportObject, 1450656, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", TestReportObject, 1450656, 
            8497098159502705312583410240369053358118118318928417540224, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "TestReportObject[<|Title -> Test Report: Catalog.wlt, <<7>>, \
TestsSucceededKeys -> {741041137084368772, 6659861010106195434, \
5615054124307419793, 714718154992590694, 1173262836660373965, \
7800249462982819680, 9039172835759322369, 305626498964758504, \
4977338915349593811, <<134>>, 62789<<10>>3977, 975866606436587895, \
8358480998446087715, 1547022257359835043, 9207359667791615610}|>]"& )],
  False,
  BoxID -> 8497098159502705312583410240369053358118118318928417540224,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.905774220547978*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"6d9f3fe6-fe17-49be-8e8f-f359717d35b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tr", "[", "\"\<ReportSucceeded\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.905774373220792*^9, 3.9057744556871634`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"a1384358-6bbe-4f41-bc0a-a9f74fea10c1"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.905774394649686*^9, 3.905774450701037*^9}},
 CellLabel->"Out[20]=",ExpressionUUID->"867e3e10-43f1-4f22-b2b4-d51571d609e9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"tr", "[", "\"\<TestsFailedWrongResults\>\"", "]"}], "\n", 
   RowBox[{"tr", "[", "\"\<TestsFailedWithMessages\>\"", "]"}], "\n", 
   RowBox[{"tr", "[", "\"\<TestsSucceeded\>\"", "]"}]}], 
  "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.9057735122958403`*^9, 
  3.9057735382910547`*^9}},ExpressionUUID->"f1d84011-dcfc-4f83-98b5-\
d531ed681557"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ex", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"tr", "[", "\"\<TestsFailedWrongResults\>\"", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ")"}], "[", "\"\<ExpectedOutput\>\"", 
     "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"ac", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"tr", "[", "\"\<TestsFailedWrongResults\>\"", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ")"}], "[", "\"\<ActualOutput\>\"", 
     "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ex", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i"}], "]"}], "]"}], "//", "Dataset"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"ex", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], "//", 
      RowBox[{"TableForm", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ac", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}], "//", "Dataset"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"ex", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}]}], "//", 
     RowBox[{"TableForm", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ex", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i"}], "]"}], "]"}], "===", 
         RowBox[{"ac", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"ex", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "ex"}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"tr", "[", "\"\<TestsFailedWithMessages\>\"", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ")"}], "[", 
       "\"\<ExpectedMessages\>\"", "]"}], "\[IndentingNewLine]", "ac"}], "=", 
     
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"tr", "[", "\"\<TestsFailedWithMessages\>\"", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ")"}], "[", 
         "\"\<ActualMessages\>\"", "]"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ex", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "i"}], "]"}], "]"}], "//", "Dataset"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"ex", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], "//", 
       RowBox[{"TableForm", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ac", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "i"}], "]"}], "]"}], "//", "Dataset"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"ex", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}]}], "//", 
      RowBox[{"TableForm", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ex", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}], "===", 
          RowBox[{"ac", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"ex", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], 
        "]"}]}]}]}]}]}], "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{
  3.905773492449201*^9, {3.9057735328825417`*^9, 
   3.9057735343711348`*^9}},ExpressionUUID->"6221cad6-36a4-4248-80ca-\
185024e4de01"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tr", "=", 
  RowBox[{
  "TestReport", "[", 
   "\"\</Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expected", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
        ")"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}]}], "Input",
 CellChangeTimes->{{3.9056875280845127`*^9, 3.9056875283457623`*^9}, 
   3.9056975439982033`*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"a02079b6-dc93-4662-a435-00398ad5c39a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: Catalog.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["16", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: Catalog.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["16", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["16", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0.0520399999999999999`3.662732303065616", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                   "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: Catalog.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     3612998310800483552 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905768106226876*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "5b6764a6-6762-460c-963f-9fb8889ed01f", "TestID" -> 
         "Catalog_20231007-WMCGR2", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "30edc207-ed54-4702-8a15-a797a0e6395a", "Input" -> 
         HoldForm[Get["FernandoDuarte`LongRunRisk`Model`Catalog`"]; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.045506`4.808583660315428, "CPUTimeUsed" -> 0.04554400000000003, 
         "MemoryUsed" -> 6858312, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 5313877591114629055 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905768106272722*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "00047726-030a-45da-a9e4-67e57b9db29f", "TestID" -> 
         "Catalog_20231007-9OYMAA", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "c9bab255-bd4f-436f-af96-91a854870d54", "Input" -> HoldForm[
           
           MemberQ[$ContextPath, 
            "FernandoDuarte`LongRunRisk`Model`Catalog`"]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000025`1.5484550065040295, "CPUTimeUsed" -> 
         0.000025999999999637424`, "MemoryUsed" -> 3104, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 5463597024044198078 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057681062729917`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "1501d378-1ef3-4a1d-ad4d-65068ea39d6b", "TestID" -> 
         "Catalog_20231007-4PW9Q8", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "82861c71-ec32-40f3-9ab3-45896db35029", "Input" -> HoldForm[
           Apply[And, 
            Map[StringQ, 
             Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000029`1.612912995730948, "CPUTimeUsed" -> 
         0.000029999999999752447`, "MemoryUsed" -> 2560, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 2592496728781624829 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057681062732487`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "eb73b4f5-aad4-4c82-a0a7-bd1d6530b4d1", "TestID" -> 
         "Catalog_20231007-KBDRFP", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "3d9d4e71-3591-4408-bf0d-01a12d069dc2", "Input" -> HoldForm[
           Apply[And, 
            Map[StringQ, 
             Flatten[
              Map[{
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["name"], 
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                "shortname"], 
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["bibRef"], 
                
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["desc"]}& , 
               Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00006`1.9286662482156351, "CPUTimeUsed" -> 0.00006100000000008876, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7437353767262064366 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057681062735248`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "1da0364c-0f39-42af-98f2-76e521dba24b", "TestID" -> 
         "Catalog_20231007-L6CURG", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "c04d5deb-3401-42cd-8074-5dfc7483baf1", "Input" -> HoldForm[
           Apply[And, 
            Map[NumberQ, 
             Flatten[
              Map[ReplaceRepeated[
                Part[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                 "parameters"], 
                 Span[1, All], 2], 
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                "parameters"]]& , 
               Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.002578`3.5617979108493785, "CPUTimeUsed" -> 0.002578999999999887, 
         "MemoryUsed" -> 190536, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 5711026299697714453 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905768106276339*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "809c1156-53d9-4632-98f4-13a0fd26c4b3", "TestID" -> 
         "Catalog_20231007-OTAOFY", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "44a255cf-9c6f-4460-8b04-ac383c4fa1b0", "Input" -> 
         HoldForm[
          FernandoDuarte`LongRunRisk`Model`Catalog`models["BY"]["stateVars"] === {
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x[
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx[
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000019`1.4292685987848202, "CPUTimeUsed" -> 
         0.000018999999999547157`, "MemoryUsed" -> 2608, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 1920727564197943633 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905768106276555*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "5d68b5cb-79b6-47a5-93ee-7456373b5faf", "TestID" -> 
         "Catalog_20231007-G5R6EN", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "2871e99d-2655-4eeb-901c-6e4f6589ba8b", "Input" -> HoldForm[
           Apply[And, 
            Map[MemberQ[
              Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]& , {
             "BY", "BKY"}]]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000021`1.4727342925659115, "CPUTimeUsed" -> 
         0.00002199999999996649, "MemoryUsed" -> 2800, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 8884589708802255124 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905768106276771*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "f3d90034-e2cc-4b15-bba8-baa115321d07", "TestID" -> 
         "Catalog_20231007-ADRCW8", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "84bf9a93-13cb-48bf-babb-51332e0442b7", "Input" -> HoldForm[
           Apply[And, 
            Map[MatchQ[Association, #]& , 
             Flatten[{
               Head[FernandoDuarte`LongRunRisk`Model`Catalog`models], 
               Map[Head[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#]]& , 
                Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]}]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000035`1.6945830421822692, "CPUTimeUsed" -> 
         0.000036000000000591115`, "MemoryUsed" -> 2664, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 1949843626997242133 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905768106277024*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "d8553802-5209-43ab-9b87-b4d65e662036", "TestID" -> 
         "Catalog_20231007-UR77BA", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "78f0eaa3-1ffe-44df-af9f-135ba69fa3d3", "Input" -> HoldForm[
           Apply[And, 
            Map[Apply[And, 
              
              Map[# === 
               "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                 "stateVars"], PatternTest[
                   Pattern[Model`Catalog`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                    SymbolName[#]]& ][
                   BlankSequence[]] :> Model`Catalog`var, Infinity]]]]& , 
             Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000633`2.951918707849347, "CPUTimeUsed" -> 0.0006319999999999659, 
         "MemoryUsed" -> 14544, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 5107265699621921074 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905768106277877*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "64337a2d-6be2-4345-b18e-8a4823449527", "TestID" -> 
         "Catalog_20231007-M9817Y", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "caa1ba29-8f97-4734-bff0-792ee284b1c6", "Input" -> HoldForm[
           Apply[And, 
            Map[Apply[And, 
              Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                 "stateVars"], PatternTest[
                   Pattern[Model`Catalog`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                   BlankSequence[]][
                   BlankSequence[]] :> Model`Catalog`var, Infinity]]]]& , 
             Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00009`2.1047575072713163, "CPUTimeUsed" -> 0.00009000000000014552, 
         "MemoryUsed" -> 2664, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4150812828083253243 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905768106278176*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "304a014e-d7bb-40b8-8c1e-e6e8685943fe", "TestID" -> 
         "Catalog_20231007-SYKS8I", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "f29e21ad-4bb2-49ae-9055-d08f747afe84", "Input" -> HoldForm[
           Apply[And, 
            Map[Apply[And, 
              Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                 "parameters"], PatternTest[
                   Pattern[Model`Catalog`var, 
                    Blank[Symbol]], MemberQ[
                   FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Model`Catalog`var, Infinity]]]]& , 
             Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.001485`3.322241451485225, "CPUTimeUsed" -> 0.0014850000000001806`, 
         "MemoryUsed" -> 9872, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 3362710858239090302 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905768106279861*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "ccd29a51-590f-41be-ad19-2a521a96483f", "TestID" -> 
         "Catalog_20231007-202AXM", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "dba49e07-a117-442c-ae88-c5df3950177a", "Input" -> HoldForm[
           Apply[And, 
            Map[Apply[And, 
              Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                 "stateVars"], PatternTest[
                   Pattern[Model`Catalog`var, 
                    Blank[Symbol]], MemberQ[
                   FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Model`Catalog`var, Infinity]]]]& , 
             Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000221`2.4949072715171026, "CPUTimeUsed" -> 
         0.00022099999999980469`, "MemoryUsed" -> 2664, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 4253649493789416277 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905768106280283*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "f2bd7a98-4290-4094-bc99-e9bd234e14f6", "TestID" -> 
         "Catalog_20231007-B84UK6", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "eed3b4f0-8578-438f-81ea-3ff1a7a6c5c3", "Input" -> HoldForm[
           Apply[And, 
            Map[MatchQ[{}, #]& , 
             Map[Cases[
               FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
               "stateVars"], PatternTest[
                 Pattern[Model`Catalog`var, 
                  Blank[Symbol]], MemberQ[
                  Map[
                  StringDrop[#, -2]& , 
                   FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                  SymbolName[#]]& ][
                 BlankSequence[]] :> Model`Catalog`var, Infinity]& , 
              Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.001185`3.2242333481781147, "CPUTimeUsed" -> 0.0011849999999999916`,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 3827144862450409118 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905768106281661*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "db67d960-9f5e-4eca-a766-eef5b1e56b92", "TestID" -> 
         "Catalog_20231007-GX0TLL", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "9237c231-8d3d-4975-82e0-1fca736120c8", "Input" -> HoldForm[
           Apply[And, {
             AllTrue[
             FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo, 
              AssociationQ], 
             AllTrue[
              Map[
              FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#]& , 
               Keys[
               FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo]], 
              AssociationQ]}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000025`1.5484550065040306, "CPUTimeUsed" -> 
         0.000023999999999801958`, "MemoryUsed" -> 2560, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 4654277440087459101 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905768106281871*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "b041ac3d-8fff-4956-a504-b75fbe8d3b67", "TestID" -> 
         "Catalog_20231007-ET7U5Q", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "e7027550-c752-4c86-a588-ab1085b4b593", "Input" -> HoldForm[
           Apply[And, {
             SubsetQ[
              Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], 
              Keys[
              FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo]]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000069`1.9893640885692447, "CPUTimeUsed" -> 0.00006800000000017903,
          "MemoryUsed" -> 6512, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 8974234346858844485 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057681062822146`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "78d42851-e0d3-4dc7-997c-2d5c524d63a5", "TestID" -> 
         "Catalog_20231007-7BZ2P8", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "189784ad-9361-4116-916b-084e5ceb9926", "Input" -> HoldForm[
           Apply[And, 
            Flatten[
             Map[If[
               KeyExistsQ[
                FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#], 
                "initialGuess"], {
                If[
                 KeyExistsQ[
                  FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#][
                  "initialGuess"], "Ewc"], 
                 VectorQ[
                  ReplaceAll["Ewc", 
                   
                   FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#]\
["initialGuess"]]], True], 
                If[
                 KeyExistsQ[
                  FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#][
                  "initialGuess"], "Epd"], 
                 ArrayQ[
                  ReplaceAll["Epd", 
                   
                   FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#]\
["initialGuess"]], 2], True]}, True]& , 
              Keys[
              FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000059`1.9213670094741364, "CPUTimeUsed" -> 
         0.000058999999999809205`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>]|>, 
    "FailureResults" -> <||>, "TestsNotEvaluatedKeys" -> {}, 
    "TestsFailedWrongResultsKeys" -> {}, "TestsFailedWithMessagesKeys" -> {}, 
    "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {3612998310800483552, 5313877591114629055, 
     5463597024044198078, 2592496728781624829, 7437353767262064366, 
     5711026299697714453, 1920727564197943633, 8884589708802255124, 
     1949843626997242133, 5107265699621921074, 4150812828083253243, 
     3362710858239090302, 4253649493789416277, 3827144862450409118, 
     4654277440087459101, 8974234346858844485}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.905687795557251*^9, 3.905697547906505*^9, 
  3.905698658327141*^9, 3.905698911463025*^9, 3.9056991284348707`*^9, 
  3.905699461227643*^9, 3.905700767650668*^9, 3.905768106457734*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"57d01980-f4e2-4fd3-b9fa-99d0e6377dd7"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905687795557251*^9, 3.905697547906505*^9, 
  3.905698658327141*^9, 3.905698911463025*^9, 3.9056991284348707`*^9, 
  3.905699461227643*^9, 3.905700767650668*^9, 3.905768106460253*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"ab80e1a8-f08c-454d-89d1-1284274daf7a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905687795557251*^9, 3.905697547906505*^9, 
  3.905698658327141*^9, 3.905698911463025*^9, 3.9056991284348707`*^9, 
  3.905699461227643*^9, 3.905700767650668*^9, 3.905768106460711*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"bf2cf179-04de-40ae-8048-0a975adbcb28"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tr", "=", 
  RowBox[{
  "TestReport", "[", 
   "\"\</Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expected", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
        ")"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}]}], "Input",
 CellChangeTimes->{{3.895362797280583*^9, 3.895362797460813*^9}, {
   3.895362883185739*^9, 3.8953628833320417`*^9}, {3.895362914081757*^9, 
   3.895362914242923*^9}, {3.895363069271865*^9, 3.895363069433126*^9}, {
   3.895364934971695*^9, 3.89536493511489*^9}, {3.8954190984559937`*^9, 
   3.895419107713436*^9}, {3.895431466385002*^9, 3.8954314730424356`*^9}, {
   3.901503471271722*^9, 3.901503477273381*^9}, {3.9056875299945927`*^9, 
   3.9056875357328043`*^9}, 3.905697553474082*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"1153a7e3-a4a9-44e1-a1d1-2c85ee2d32e0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: Shocks.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["15", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: Shocks.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["15", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["15", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0.062338`3.769176603401489", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: Shocks.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     6289490411013942582 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90570076884728*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "d71f24b1-65e9-40f5-99a0-23b80f0fc723", "TestID" -> 
         "Shocks_20231007-7Y2T7Y", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "466120d6-7c9b-47c5-a42e-88e02c46d669", "Input" -> 
         HoldForm[Needs["FernandoDuarte`LongRunRisk`Model`Shocks`"]; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000055`1.890877687326233, "CPUTimeUsed" -> 0.00005699999999997374, 
         "MemoryUsed" -> 2832, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 1449189620758850932 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700768847736*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "39734c35-ccde-4f78-a513-3708401028ce", "TestID" -> 
         "Shocks_20231007-V0Z0JM", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "83f3f491-6238-47e4-9ffc-aa17839068fa", "Input" -> HoldForm[
           MemberQ[$ContextPath, "FernandoDuarte`LongRunRisk`Model`Shocks`"]],
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00003`1.6276362525516523, "CPUTimeUsed" -> 
         0.000031000000000336314`, "MemoryUsed" -> 2736, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 4646179767660993793 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700768848063*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "53f90890-68a4-45f0-95fe-ff390186e326", "TestID" -> 
         "Shocks_20231007-U78NUC", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "1c13c7d4-15c3-4989-a381-6f2c1f2f6a33", "Input" -> HoldForm[
           Not[Names["*rulesE"] === {}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.024975`4.548020494730014, "CPUTimeUsed" -> 
         0.02498400000000034, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 4511011074147526410 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700768873477*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "507fb88e-e670-47d5-8fb2-0115fc3303c5", "TestID" -> 
         "Shocks_20231007-LTX8WA", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "787dc74d-ec48-4d83-ac6a-c7c12282da94", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[ReplaceAll[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
                 Model`Shocks`t], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 0, {
               Model`Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
              Table[ReplaceAll[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                 Model`Shocks`t, Model`Shocks`ii], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 0, {
               Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00038`2.730298594448804, "CPUTimeUsed" -> 0.00036800000000036803`, 
         "MemoryUsed" -> 3696, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 9098314127071176472 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90570076887434*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "0448b7e4-25f5-4222-b42d-121d16cd6afa", "TestID" -> 
         "Shocks_20231007-84HPWC", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "ecfe6de1-5004-4d44-bf79-4fff229c1579", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[
              ReplaceAll[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
                  Model`Shocks`t]^2, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 1, {
               Model`Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
              Table[
              ReplaceAll[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                  Model`Shocks`t, Model`Shocks`ii]^2, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 1, {
               Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.024774`4.544511131090338, "CPUTimeUsed" -> 0.02483000000000013, 
         "MemoryUsed" -> 3782624, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 3375683564616150509 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700768899521*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "bbfa28c8-0861-442c-a0f9-94997863cc3b", "TestID" -> 
         "Shocks_20231007-1AQ24U", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "1e7fa756-99cc-427d-a1c6-f12d315f6e25", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[
              ReplaceAll[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
                  Model`Shocks`t]^3, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 0, {
               Model`Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
              Table[
              ReplaceAll[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                  Model`Shocks`t, Model`Shocks`ii]^3, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 0, {
               Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.003087`3.6400516273140853, "CPUTimeUsed" -> 0.0031209999999997073`,
          "MemoryUsed" -> 3736, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7400251222249862976 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700768902891*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "ad7bcbf9-fd65-409a-aedc-73de2bfd9035", "TestID" -> 
         "Shocks_20231007-13B46Z", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "cb734ca1-7518-48e2-bc18-7d5e73c32566", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[
              ReplaceAll[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
                  Model`Shocks`t]^4, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 3, {
               Model`Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
              Table[
              ReplaceAll[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                  Model`Shocks`t, Model`Shocks`ii]^4, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 3, {
               Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.002951`3.620484207331949, "CPUTimeUsed" -> 0.002987000000000073, 
         "MemoryUsed" -> 3736, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4674839299897330214 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700768906126*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "bf4b0dca-8244-4eae-9c0b-2081cdb1d904", "TestID" -> 
         "Shocks_20231007-JAIJWX", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "8cf78d9d-c214-4358-8e15-82c4ca3a51b5", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[0 === If[Model`Shocks`f === Model`Shocks`g, 0, 
                 ReplaceAll[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
                   Model`Shocks`t] 
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`g][
                   Model`Shocks`t], 
                  FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                  Model`Shocks`t]]], {
               Model`Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}, {
               Model`Shocks`g, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
              Table[
              0 === ReplaceAll[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                  Model`Shocks`t, Model`Shocks`ii] 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
                  Model`Shocks`t], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]], {
               Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}, {
               Model`Shocks`f, {
                "x", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.001615`3.358687524499116, "CPUTimeUsed" -> 0.0016149999999997, 
         "MemoryUsed" -> 5656, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 3003634814754756986 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90570076890801*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "52a1e598-b1ad-4ad5-b611-73986d7818a3", "TestID" -> 
         "Shocks_20231007-RTEJ8P", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "eb4ab7f9-71bf-48d7-aa3f-983c0a3f15d4", "Input" -> 
         HoldForm[Map[StringDelete[#, 
              StringExpression[
               Alternatives["FernandoDuarte", "`"], 
               BlankSequence[], "`"]]& , 
             Table[
              ToString[
               ReplaceAll[
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                 Model`Shocks`t, Model`Shocks`ii] 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                 Model`Shocks`t], 
                FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                Model`Shocks`t]]], {
              Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]] === {
            "taugd[1]", "taugd[i]", "taugd[j]"}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000234`2.5197308552421327, "CPUTimeUsed" -> 
         0.00023700000000026478`, "MemoryUsed" -> 3536, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 6458250376178131941 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700768908525*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a0aa8207-f91b-4ba3-8871-6a1725f4c9e0", "TestID" -> 
         "Shocks_20231007-AB2KMZ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "fc5469b3-3a5e-411b-b6af-6eebb1c4e2f8", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[ReplaceAll[Model`Shocks`expr, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === Model`Shocks`expr, {Model`Shocks`expr, 
                Table[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
                 Model`Shocks`t + 1], {
                 Model`Shocks`f, {
                  "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
              Table[ReplaceAll[Model`Shocks`expr, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === Model`Shocks`expr, {Model`Shocks`expr, 
                Table[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps[
                  ToExpression[Model`Shocks`f]][Model`Shocks`t], {
                 Model`Shocks`f, {
                  "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
              Table[ReplaceAll[Model`Shocks`expr, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === Model`Shocks`expr, {
               Model`Shocks`expr, {
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                 Model`Shocks`t + 1, Model`Shocks`i], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`dd][
                 Model`Shocks`t, Model`Shocks`i]}}]}]]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000426`2.7799245969347126, "CPUTimeUsed" -> 0.0004409999999999137, 
         "MemoryUsed" -> 6432, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 1894426301918062109 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700768909202*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "08f1f512-86fa-4cbb-b11b-be9ce04dcefb", "TestID" -> 
         "Shocks_20231007-GN2PEF", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "35b047b3-c2cc-4a6b-8462-83a2a8a216d3", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[ReplaceAll[Model`Shocks`expr, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === Model`Shocks`expr, {Model`Shocks`expr, 
                Table[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps[
                 Model`Shocks`f], {
                 Model`Shocks`f, {
                  "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
              Table[ReplaceAll[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"], {
               Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000217`2.486974731680521, "CPUTimeUsed" -> 0.00021799999999982944`,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7952023138479504764 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700768909667*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "c859f58a-1954-4236-806f-be77b2bb5952", "TestID" -> 
         "Shocks_20231007-Y35BZB", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "129fd7a0-7d53-471d-8c5c-c5236e6576e7", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[ReplaceAll[Model`Shocks`expr, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === Model`Shocks`expr, {Model`Shocks`expr, 
                Table[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps[
                 Model`Shocks`f], {
                 Model`Shocks`f, {
                  "xx", "adc", "p", "rhobar", "ssg", "ssx", "sdc", "spi"}}]}], 
              Table[ReplaceAll[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["ddd"], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["ddd"], {
               Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000217`2.486974731680521, "CPUTimeUsed" -> 0.00021700000000013375`,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4493027228569498184 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700768910158*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "cf826d6f-7841-4584-b5e1-8343670d52d9", "TestID" -> 
         "Shocks_20231007-DGPHWZ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "fcdb05f3-3da7-4967-a8c9-0fbbef6e8bb5", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[ReplaceAll[Model`Shocks`expr, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === Model`Shocks`expr, {Model`Shocks`expr, 
                Table[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
                 Model`Shocks`tt], {
                 Model`Shocks`f, {
                  "xx", "adc", "p", "rhobar", "ssg", "ssx", "sdc", "spi"}}, {
                 Model`Shocks`tt, {
                  Model`Shocks`t + 1, Model`Shocks`t - 1, Model`Shocks`s, 
                   Model`Shocks`t + Model`Shocks`h}}]}], 
              Table[ReplaceAll[Model`Shocks`expr, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === Model`Shocks`expr, {Model`Shocks`expr, 
                Table[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                 Model`Shocks`tt, Model`Shocks`ii], {
                 Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}, {
                 Model`Shocks`tt, {
                  Model`Shocks`t + 1, Model`Shocks`t - 1, Model`Shocks`s, 
                   Model`Shocks`t + Model`Shocks`h}}]}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000299`2.6261861861564233, "CPUTimeUsed" -> 0.000300000000000189, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 8082242859261863904 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700768910689*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a195fb78-a7cf-420e-8d6e-1119124331a1", "TestID" -> 
         "Shocks_20231007-GZIC0T", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "6dd2438f-e111-4c36-a1d8-e45871e31c3c", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[ReplaceAll[
                 NewContext`eps[Model`Shocks`f][Model`Shocks`t], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 0, {
               Model`Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
              Table[ReplaceAll[
                 NewContext`eps["dd"][Model`Shocks`t, Model`Shocks`ii], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 0, {
               Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000178`2.4009350001408856, "CPUTimeUsed" -> 
         0.00017899999999970717`, "MemoryUsed" -> 3616, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 174518038828592275 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057007689111*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "c1707901-512b-43bd-820d-499a1c8821d0", "TestID" -> 
         "Shocks_20231007-JPYKSE", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "a5d41b17-2cff-4996-870b-5da00010cc1b", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[
              ReplaceAll[
                FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps[
                  Model`Shocks`f][Model`Shocks`t]^2, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 1, {
               Model`Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
              Table[
              ReplaceAll[
                FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps["dd"][
                  Model`Shocks`t, Model`Shocks`ii]^2, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 1, {
               Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0029`3.6129129957309476, "CPUTimeUsed" -> 0.00293399999999977, 
         "MemoryUsed" -> 3736, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>]|>, "FailureResults" -> <||>, 
    "TestsNotEvaluatedKeys" -> {}, "TestsFailedWrongResultsKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {6289490411013942582, 1449189620758850932, 
     4646179767660993793, 4511011074147526410, 9098314127071176472, 
     3375683564616150509, 7400251222249862976, 4674839299897330214, 
     3003634814754756986, 6458250376178131941, 1894426301918062109, 
     7952023138479504764, 4493027228569498184, 8082242859261863904, 
     174518038828592275}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.90568779566813*^9, 3.905698659768424*^9, 
  3.9056989118233128`*^9, 3.90569912871776*^9, 3.9056994617400627`*^9, 
  3.9057007689221897`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"4e8f3e95-7cc9-44f4-837d-226d2ae78e1a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.90568779566813*^9, 3.905698659768424*^9, 
  3.9056989118233128`*^9, 3.90569912871776*^9, 3.9056994617400627`*^9, 
  3.905700768927205*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"18136333-4913-4ebf-a808-618f0ef17dda"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.90568779566813*^9, 3.905698659768424*^9, 
  3.9056989118233128`*^9, 3.90569912871776*^9, 3.9056994617400627`*^9, 
  3.9057007689282427`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"0f899501-78f1-4fbb-9c76-b01ff2fad92e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tr", "=", 
  RowBox[{
  "TestReport", "[", 
   "\"\</Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expected", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
        ")"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}]}], "Input",
 CellChangeTimes->{{3.895362797280583*^9, 3.895362797460813*^9}, {
   3.895362883185739*^9, 3.8953628833320417`*^9}, {3.895362914081757*^9, 
   3.895362914242923*^9}, {3.895363069271865*^9, 3.895363069433126*^9}, {
   3.895364934971695*^9, 3.89536493511489*^9}, {3.8954190984559937`*^9, 
   3.895419107713436*^9}, {3.895431466385002*^9, 3.8954314730424356`*^9}, {
   3.901503471271722*^9, 3.901503477273381*^9}, {3.9056875299945927`*^9, 
   3.9056875374263973`*^9}, 3.905698900385931*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"07d47c72-3650-48cf-bae5-d9151c59339e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: ExogenousEq.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["7", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: ExogenousEq.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["7", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["7", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0.047318`3.980443337744043", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: ExogenousEq.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     7864040022364395963 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700769997359*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "f31b0820-d447-402a-90f9-46f7d9abcae9", "TestID" -> 
         "ExogenousEq_20231007-NIGA55", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "EvaluationID" -> 
         "40dc2644-0419-40d9-8d58-9f07c8c9a967", "Input" -> 
         HoldForm[
          Needs["FernandoDuarte`LongRunRisk`Model`ExogenousEq`"]; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000053`1.8747908674327807, "CPUTimeUsed" -> 0.00005500000000013827,
          "MemoryUsed" -> 2832, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 1359979496106907962 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700769997774*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "471e8ba7-f128-4a61-93f4-36ce06062c9b", "TestID" -> 
         "ExogenousEq_20231007-E0I1JF", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "EvaluationID" -> 
         "10dbd1c2-6d5f-4c41-a91a-500cbf11f134", "Input" -> HoldForm[
           Not[Names["*xeq"] === {}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.024587`4.541220539058361, "CPUTimeUsed" -> 
         0.024578999999999684`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 2075003516769992281 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057007700229487`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "1e9a6809-5a6c-4d23-8a47-524f0da4c409", "TestID" -> 
         "ExogenousEq_20231007-7R20E8", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "EvaluationID" -> 
         "5c9189db-a6dc-47bc-9467-dcd13a3f2640", "Input" -> HoldForm[
           Apply[And, {
             MemberQ[
              DeleteDuplicates[
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[
                 Model`ExogenousEq`t], PatternTest[
                   Pattern[Model`ExogenousEq`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "x"]& ][
                   BlankNullSequence[]] :> Model`ExogenousEq`var, Infinity]]],
               "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
             MemberQ[
              DeleteDuplicates[
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`pieq[
                 Model`ExogenousEq`t], PatternTest[
                   Pattern[Model`ExogenousEq`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "pi"]& ][
                   BlankNullSequence[]] :> Model`ExogenousEq`var, Infinity]]],
               "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
             MemberQ[
              DeleteDuplicates[
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`pibareq[
                 Model`ExogenousEq`t], PatternTest[
                   Pattern[Model`ExogenousEq`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "pibar"]& ][
                   BlankNullSequence[]] :> Model`ExogenousEq`var, Infinity]]],
               "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
             MemberQ[
              DeleteDuplicates[
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`sgeq[
                 Model`ExogenousEq`t], PatternTest[
                   Pattern[Model`ExogenousEq`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "sg"]& ][
                   BlankNullSequence[]] :> Model`ExogenousEq`var, Infinity]]],
               "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
             MemberQ[
              DeleteDuplicates[
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`sxeq[
                 Model`ExogenousEq`t], PatternTest[
                   Pattern[Model`ExogenousEq`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "sx"]& ][
                   BlankNullSequence[]] :> Model`ExogenousEq`var, Infinity]]],
               "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
             MemberQ[
              DeleteDuplicates[
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`sceq[
                 Model`ExogenousEq`t], PatternTest[
                   Pattern[Model`ExogenousEq`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "sc"]& ][
                   BlankNullSequence[]] :> Model`ExogenousEq`var, Infinity]]],
               "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
             MemberQ[
              DeleteDuplicates[
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`speq[
                 Model`ExogenousEq`t], PatternTest[
                   Pattern[Model`ExogenousEq`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "sp"]& ][
                   BlankNullSequence[]] :> Model`ExogenousEq`var, Infinity]]],
               "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
             Not[{} === Cases[
                Map[Symbol, 
                 Names[
                 "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*"]], 
                PatternTest[
                  Pattern[Model`ExogenousEq`var, 
                   Blank[Symbol]], MatchQ[
                   SymbolName[#], "dc"]& ] :> Model`ExogenousEq`var, 
                Infinity]], 
             Not[{} === Cases[
                Map[Symbol, 
                 Names[
                 "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*"]], 
                PatternTest[
                  Pattern[Model`ExogenousEq`var, 
                   Blank[Symbol]], MatchQ[
                   SymbolName[#], "dd"]& ] :> Model`ExogenousEq`var, 
                Infinity]], 
             MemberQ[
              DeleteDuplicates[
               Map[Context, 
                Cases[
                 Map[Symbol, 
                  Names[
                  "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*"]], 
                 PatternTest[
                   Pattern[Model`ExogenousEq`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "dc"]& ] :> Model`ExogenousEq`var, 
                 Infinity]]], 
              "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
             MemberQ[
              DeleteDuplicates[
               Map[Context, 
                Cases[
                 Map[Symbol, 
                  Names[
                  "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*"]], 
                 PatternTest[
                   Pattern[Model`ExogenousEq`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "dd"]& ] :> Model`ExogenousEq`var, 
                 Infinity]]], 
              "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.021219`4.477239910634101, "CPUTimeUsed" -> 0.021240000000000148`, 
         "MemoryUsed" -> 5248, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 981738931197314809 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700770044577*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "4ee6c4a2-745c-43c1-85ed-a57141f8021f", "TestID" -> 
         "ExogenousEq_20231007-NBIB7Y", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "EvaluationID" -> 
         "41777efa-1bb0-4846-af20-537902921833", "Input" -> HoldForm[
           Apply[And, 
            
            Map[# === 
             "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
             Map[Context, 
              Cases[
               Map[#[Model`ExogenousEq`t]& , 
                Map[
                Symbol, 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]]\
, PatternTest[
                 Pattern[Model`ExogenousEq`var, 
                  Blank[Symbol]], MemberQ[
                  Map[
                  StringDrop[#, -2]& , 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                  SymbolName[#]]& ][
                 BlankSequence[]] :> Model`ExogenousEq`var, Infinity]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00086`3.0850134490755616, "CPUTimeUsed" -> 0.0008599999999998609, 
         "MemoryUsed" -> 5200, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 311437866647481937 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700770045704*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "89607094-59a6-4b45-a9bf-53b572baa7e9", "TestID" -> 
         "ExogenousEq_20231007-YFUEVW", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "EvaluationID" -> 
         "5d40b869-cb10-4bc7-ade1-66b977831239", "Input" -> HoldForm[
           Apply[And, 
            Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
             Map[Context, 
              Cases[
               Map[#[Model`ExogenousEq`t]& , 
                Map[
                Symbol, 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]]\
, PatternTest[
                 Pattern[Model`ExogenousEq`var, 
                  Blank[Symbol]], MatchQ[
                  SymbolName[#], "eps"]& ][
                 BlankSequence[]][
                 BlankSequence[]] :> Model`ExogenousEq`var, Infinity]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000176`2.3960276656461414, "CPUTimeUsed" -> 0.0001779999999995674, 
         "MemoryUsed" -> 3048, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7798507990718782207 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700770046114*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "38fe9afd-adaa-452b-aa68-477e8e8dcb8d", "TestID" -> 
         "ExogenousEq_20231007-TNAM0Y", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "EvaluationID" -> 
         "4abb4ce4-8d8d-4f56-8fc7-607474d2c885", "Input" -> HoldForm[
           Apply[And, 
            Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
             Map[Context, 
              Cases[
               Map[#[Model`ExogenousEq`t]& , 
                Map[
                Symbol, 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]]\
, PatternTest[
                 Pattern[Model`ExogenousEq`var, 
                  Blank[Symbol]], MemberQ[
                 FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                  SymbolName[#]]& ] :> Model`ExogenousEq`var, Infinity]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000339`2.6807146960350763, "CPUTimeUsed" -> 0.0003389999999998672, 
         "MemoryUsed" -> 2664, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4541065193759416088 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700770046682*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "3d9ff8b0-96fd-4825-99d8-4d8c1950bf16", "TestID" -> 
         "ExogenousEq_20231007-924CFO", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "EvaluationID" -> 
         "fbb6595b-ee53-41fd-b68f-c648b1b0e24d", "Input" -> HoldForm[
           Apply[And, {
             FreeQ[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[
              Model`ExogenousEq`t], foo`t], 
             Not[
              FreeQ[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[
               Model`ExogenousEq`t], Model`ExogenousEq`t]], 
             FreeQ[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[foo`t], 
              Model`ExogenousEq`t], 
             Not[
              FreeQ[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[foo`t], 
               foo`t]], 
             Not[
             foo`xeq[Model`ExogenousEq`t] === 
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[
               Model`ExogenousEq`t]], 
             Not[
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[
               Model`ExogenousEq`t] === 
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[foo`t]]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000084`2.0747942838938753, "CPUTimeUsed" -> 0.00008399999999975094,
          "MemoryUsed" -> 2800, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>]|>, "FailureResults" -> <||>, 
    "TestsNotEvaluatedKeys" -> {}, "TestsFailedWrongResultsKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {7864040022364395963, 1359979496106907962, 
     2075003516769992281, 981738931197314809, 311437866647481937, 
     7798507990718782207, 4541065193759416088}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.905687795734106*^9, 3.905698911993326*^9, 
  3.9056991288834476`*^9, 3.905699461923531*^9, 3.90570077005445*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"9e85cd85-9a7e-45d9-ab44-0c00600f5ebe"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905687795734106*^9, 3.905698911993326*^9, 
  3.9056991288834476`*^9, 3.905699461923531*^9, 3.905700770059511*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"21ad07b9-c0e2-45bd-b80c-e430ce6810df"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905687795734106*^9, 3.905698911993326*^9, 
  3.9056991288834476`*^9, 3.905699461923531*^9, 3.905700770060431*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"0da7268d-bfeb-4196-854a-dd4d7758fc84"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tr", "=", 
  RowBox[{
  "TestReport", "[", 
   "\"\</Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expected", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
        ")"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}]}], "Input",
 CellChangeTimes->{{3.895362797280583*^9, 3.895362797460813*^9}, {
   3.895362883185739*^9, 3.8953628833320417`*^9}, {3.895362914081757*^9, 
   3.895362914242923*^9}, {3.895363069271865*^9, 3.895363069433126*^9}, {
   3.895364934971695*^9, 3.89536493511489*^9}, {3.8954190984559937`*^9, 
   3.895419107713436*^9}, {3.895431466385002*^9, 3.8954314730424356`*^9}, {
   3.901503471271722*^9, 3.901503477273381*^9}, {3.9056875299945927`*^9, 
   3.9056875374263973`*^9}, 3.905698903142271*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"a92fbc3b-b353-4e75-8ee9-b61e11404d6b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: EndogenousEq.wlt\"", "SummaryItem"]}],
                "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["10", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: EndogenousEq.wlt\"", "SummaryItem"]}],
                "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["10", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["10", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0.0296910000000000001`3.6231398228166607", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                   "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: EndogenousEq.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     7142559127892466554 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700771105561*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "7bab8d5c-a670-42e7-92dc-509a24a15652", "TestID" -> 
         "EndogenousEq_20231007-Q9SEK1", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "EvaluationID" -> 
         "7ff3fb3e-16d5-492d-af22-33a65e9a4599", "Input" -> 
         HoldForm[
          Needs["FernandoDuarte`LongRunRisk`Model`EndogenousEq`"]; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000049`1.8407110778605031, "CPUTimeUsed" -> 0.00004899999999974369,
          "MemoryUsed" -> 2832, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 1304331174274742494 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700771106003*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "cb9c9b28-3515-4ad7-83be-9fd74d4fed42", "TestID" -> 
         "EndogenousEq_20231007-XU08RC", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "EvaluationID" -> 
         "09d97bf4-7fc2-47bb-a153-3847102b9a66", "Input" -> HoldForm[
           Not[Names["*pdeq"] === {}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.0257`4.560448121163284, "CPUTimeUsed" -> 
         0.025637999999999828`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 6414580439962539187 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700771132189*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a8dc4ec0-1084-45fe-a1a0-011f05cda219", "TestID" -> 
         "EndogenousEq_20231007-KPJDHK", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "EvaluationID" -> 
         "72a70c54-6ff1-4731-96aa-4b3e25489d47", "Input" -> HoldForm[
           Apply[And, 
            
            Map[# === 
             "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
             Map[Context, 
              Cases[
               Map[#[Model`EndogenousEq`t]& , 
                Map[
                Symbol, 
                 FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars]], PatternTest[
                 Pattern[Model`EndogenousEq`var, 
                  Blank[Symbol]], MemberQ[
                  Map[
                  StringDrop[#, -2]& , 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                  SymbolName[#]]& ][
                 BlankSequence[]] :> Model`EndogenousEq`var, Infinity]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000632`2.9512320761143767, "CPUTimeUsed" -> 0.0006319999999999659, 
         "MemoryUsed" -> 8048, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4454277166269311904 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700771133164*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "f16684f7-0b68-4f1b-b555-81ffbb536065", "TestID" -> 
         "EndogenousEq_20231007-LIXVR2", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "EvaluationID" -> 
         "191eeb3d-10f8-4883-b20d-df5c3cd9f07a", "Input" -> HoldForm[
           Apply[And, 
            Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
             Map[Context, 
              Cases[
               Map[#[Model`EndogenousEq`t]& , 
                Map[
                Symbol, 
                 FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars]], PatternTest[
                 Pattern[Model`EndogenousEq`var, 
                  Blank[Symbol]], MatchQ[
                  SymbolName[#], "eps"]& ][
                 BlankSequence[]][
                 BlankSequence[]] :> Model`EndogenousEq`var, Infinity]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000174`2.3910642461145915, "CPUTimeUsed" -> 
         0.00017399999999989646`, "MemoryUsed" -> 3464, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 7561877516905491885 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700771133614*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a809e8a0-9eec-467a-be6c-c51da7cf571d", "TestID" -> 
         "EndogenousEq_20231007-FQ06I5", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "EvaluationID" -> 
         "3052ed8a-a5e6-402e-a6cc-a2a08668d7b5", "Input" -> HoldForm[
           Apply[And, 
            Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
             Map[Context, 
              Cases[
               Map[#[Model`EndogenousEq`t]& , 
                Map[
                Symbol, 
                 FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars]], PatternTest[
                 Pattern[Model`EndogenousEq`var, 
                  Blank[Symbol]], MemberQ[
                 FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                  SymbolName[#]]& ] :> Model`EndogenousEq`var, Infinity]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000298`2.6247312619082472, "CPUTimeUsed" -> 0.000300000000000189, 
         "MemoryUsed" -> 3752, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7327851564185820693 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700771134183*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "fc146f5b-6fc4-40ec-8f3f-78646ed06734", "TestID" -> 
         "EndogenousEq_20231007-AC6YZU", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "EvaluationID" -> 
         "eaef7455-7fa0-4b9a-b9fb-07267db5bd18", "Input" -> HoldForm[
           Apply[And, 
            
            Map[# === 
             "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"& , 
             Map[Context, 
              Cases[
               Map[#[Model`EndogenousEq`t]& , 
                Map[
                Symbol, 
                 FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars]], PatternTest[
                 Pattern[Model`EndogenousEq`var, 
                  Blank[Symbol]], MemberQ[
                  Map[
                  StringDrop[#, -2]& , 
                   FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                  SymbolName[#]]& ][
                 BlankSequence[]] :> Model`EndogenousEq`var, Infinity]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00127`3.254318718787947, "CPUTimeUsed" -> 0.001266999999999907, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 3391298136754805075 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700771135912*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "9eff76d0-b774-4d70-a55f-df16715167cb", "TestID" -> 
         "EndogenousEq_20231007-A63EXY", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "EvaluationID" -> 
         "8ecfe7f6-470a-4ca2-ada8-fd3bdabd8bc9", "Input" -> HoldForm[
           Apply[And, {
             FreeQ[
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
              Model`EndogenousEq`t, Model`EndogenousEq`m], foo`t], 
             Not[
              FreeQ[
               FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
               Model`EndogenousEq`t, Model`EndogenousEq`m], 
               Model`EndogenousEq`t]], 
             FreeQ[
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
              foo`t, Model`EndogenousEq`m], Model`EndogenousEq`t], 
             Not[
              FreeQ[
               FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
               foo`t, Model`EndogenousEq`m], foo`t]], 
             Not[
             foo`bondyieldeq[Model`EndogenousEq`t, Model`EndogenousEq`m] === 
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
               Model`EndogenousEq`t, Model`EndogenousEq`m]], 
             Not[
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
               Model`EndogenousEq`t, Model`EndogenousEq`m] === 
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
               foo`t, Model`EndogenousEq`m]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000046`1.813272829513566, "CPUTimeUsed" -> 
         0.000046999999999908226`, "MemoryUsed" -> 2664, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 5893211950133612083 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700771136312*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "fa4147f6-1b77-48db-82d4-14e0e63a8cd1", "TestID" -> 
         "EndogenousEq_20231007-1XJ1EX", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "EvaluationID" -> 
         "b13a5da3-7767-4e98-875f-68c0fe598bfb", "Input" -> HoldForm[
           Apply[And, {
             FreeQ[
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
              Model`EndogenousEq`t, Model`EndogenousEq`m], foo`m], 
             Not[
              FreeQ[
               FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
               Model`EndogenousEq`t, Model`EndogenousEq`m], 
               Model`EndogenousEq`m]], 
             FreeQ[
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
              Model`EndogenousEq`t, foo`m], Model`EndogenousEq`m], 
             Not[
              FreeQ[
               FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
               Model`EndogenousEq`t, foo`m], foo`m]], 
             Not[
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
               Model`EndogenousEq`t, Model`EndogenousEq`m] === 
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
               Model`EndogenousEq`t, foo`m]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00004`1.752574989159956, "CPUTimeUsed" -> 0.00004099999999995774, 
         "MemoryUsed" -> 2800, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 2985477881983516033 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700771136649*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "bb4c5873-fb27-4bc3-a800-de4b0e61a121", "TestID" -> 
         "EndogenousEq_20231007-4YPA5Y", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "EvaluationID" -> 
         "c9b56838-a0b4-4ba9-9286-6a6abd1a1167", "Input" -> HoldForm[
           Apply[
           And, {FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondfweq[
              Model`EndogenousEq`t, Model`EndogenousEq`m] === 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondfweq[
              Model`EndogenousEq`t, Model`EndogenousEq`m, 1], 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondreteq[
              Model`EndogenousEq`t, Model`EndogenousEq`m] === 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondreteq[
              Model`EndogenousEq`t, Model`EndogenousEq`m, 1], 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondfwspreadeq[
              Model`EndogenousEq`t, Model`EndogenousEq`m] === 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondfwspreadeq[
              Model`EndogenousEq`t, Model`EndogenousEq`m, 1], 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondexcreteq[
              Model`EndogenousEq`t, Model`EndogenousEq`m] === 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondexcreteq[
              Model`EndogenousEq`t, Model`EndogenousEq`m, 1]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000045`1.803727511607338, "CPUTimeUsed" -> 0.00004599999999976845, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 5437259038891824284 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057007711372857`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "7fb6af65-80cd-43b3-a080-78bd9c6c42ab", "TestID" -> 
         "EndogenousEq_20231007-9MSXSQ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "EvaluationID" -> 
         "98b29ce1-3530-470a-bcf9-caef77f3e63f", "Input" -> 
         HoldForm[
          Model`EndogenousEq`coefwc = 
            FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc; 
           Model`EndogenousEq`coefpd = 
            FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd; 
           Model`EndogenousEq`coefb = 
            FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb; 
           Model`EndogenousEq`coefnb = 
            FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb; 
           Model`EndogenousEq`hpd = Head[Model`EndogenousEq`coefpd]; 
           Model`EndogenousEq`hb = Head[Model`EndogenousEq`coefb]; 
           Model`EndogenousEq`hnb = Head[Model`EndogenousEq`coefnb]; 
           Model`EndogenousEq`ch = Flatten[{{
                Model`EndogenousEq`coefwc[0], 
                N[
                 Model`EndogenousEq`coefwc[0]], 
                N[
                 Model`EndogenousEq`coefwc[0]], 
                Model`EndogenousEq`coefwc[0.], 
                N[
                 Model`EndogenousEq`coefwc[0.]], 
                N[
                 Model`EndogenousEq`coefwc[0.]]}, 
               Table[{
                 Model`EndogenousEq`c[0], 
                 N[
                  Model`EndogenousEq`c[0]], 
                 N[
                  Model`EndogenousEq`c[0]], 
                 Model`EndogenousEq`c[0.], 
                 N[
                  Model`EndogenousEq`c[0.]], 
                 N[
                  Model`EndogenousEq`c[0.]]}, {
                Model`EndogenousEq`c, {
                 Model`EndogenousEq`coefpd, Model`EndogenousEq`coefb, 
                  Model`EndogenousEq`coefnb}}], 
               Table[
                ReplaceAll[
                 ReplaceAll[{
                   Model`EndogenousEq`h[1][0], 
                   N[
                    Model`EndogenousEq`h[1][0]], 
                   N[
                    Model`EndogenousEq`h[1][0]], 
                   Model`EndogenousEq`h[1][0.], 
                   N[
                    Model`EndogenousEq`h[1][0.]], 
                   N[
                    Model`EndogenousEq`h[1][0.]], 
                   Model`EndogenousEq`h[0][1], 
                   N[
                    Model`EndogenousEq`h[0][1]], 
                   N[
                    Model`EndogenousEq`h[0][1]], 
                   Model`EndogenousEq`h[0.][1], 
                   N[
                    Model`EndogenousEq`h[0.][1]], 
                   N[
                    Model`EndogenousEq`h[0.][1]], 
                   Model`EndogenousEq`h[1.][0], 
                   N[
                    Model`EndogenousEq`h[1.][0]], 
                   N[
                    Model`EndogenousEq`h[1.][0]], 
                   Model`EndogenousEq`h[1.][0.], 
                   N[
                    Model`EndogenousEq`h[1.][0.]], 
                   N[
                    Model`EndogenousEq`h[1.][0.]], 
                   Model`EndogenousEq`h[0][1.], 
                   N[
                    Model`EndogenousEq`h[0][1.]], 
                   N[
                    Model`EndogenousEq`h[0]][1.], 
                   Model`EndogenousEq`h[0.][1.], 
                   N[
                    Model`EndogenousEq`h[0.][1.]], 
                   N[
                    Model`EndogenousEq`h[0.][1.]], 
                   Model`EndogenousEq`h[0][Model`EndogenousEq`j], 
                   N[
                    Model`EndogenousEq`h[0][Model`EndogenousEq`j]], 
                   N[
                    Model`EndogenousEq`h[0][Model`EndogenousEq`j]], 
                   Model`EndogenousEq`h[0.][Model`EndogenousEq`j], 
                   N[
                    Model`EndogenousEq`h[0.][Model`EndogenousEq`j]], 
                   N[
                    Model`EndogenousEq`h[0.][Model`EndogenousEq`j]], 
                   Model`EndogenousEq`h[Model`EndogenousEq`j][0], 
                   N[
                    Model`EndogenousEq`h[Model`EndogenousEq`j][0]], 
                   N[
                    Model`EndogenousEq`h[Model`EndogenousEq`j][0]], 
                   Model`EndogenousEq`h[Model`EndogenousEq`j][0.], 
                   N[
                    Model`EndogenousEq`h[Model`EndogenousEq`j][0.]], 
                   N[
                    Model`EndogenousEq`h[Model`EndogenousEq`j][0.]], 
                   Model`EndogenousEq`h[0][Model`EndogenousEq`jj], 
                   N[
                    Model`EndogenousEq`h[0][Model`EndogenousEq`jj]], 
                   N[
                    Model`EndogenousEq`h[0][Model`EndogenousEq`jj]], 
                   Model`EndogenousEq`h[0.][Model`EndogenousEq`jj], 
                   N[
                    Model`EndogenousEq`h[0.][Model`EndogenousEq`jj]], 
                   N[
                    Model`EndogenousEq`h[0.][Model`EndogenousEq`jj]], 
                   Model`EndogenousEq`h[Model`EndogenousEq`jj][0], 
                   N[
                    Model`EndogenousEq`h[Model`EndogenousEq`jj][0]], 
                   N[
                    Model`EndogenousEq`h[Model`EndogenousEq`jj][0]], 
                   Model`EndogenousEq`h[Model`EndogenousEq`jj][0.], 
                   N[
                    Model`EndogenousEq`h[Model`EndogenousEq`jj][0.]], 
                   N[
                    Model`EndogenousEq`h[Model`EndogenousEq`jj][0.]], 
                   Model`EndogenousEq`h[Model`EndogenousEq`jj][
                   Model`EndogenousEq`kk], 
                   N[
                    Model`EndogenousEq`h[Model`EndogenousEq`jj][
                    Model`EndogenousEq`kk]], 
                   N[
                    Model`EndogenousEq`h[Model`EndogenousEq`jj][
                    Model`EndogenousEq`kk]], 
                   N[
                    Table[{
                    Model`EndogenousEq`h[Model`EndogenousEq`ii][
                    Model`EndogenousEq`qq], 
                    N[
                    Model`EndogenousEq`h[Model`EndogenousEq`ii][
                    Model`EndogenousEq`qq]], 
                    N[
                    Model`EndogenousEq`h[Model`EndogenousEq`ii][
                    Model`EndogenousEq`qq]]}, {Model`EndogenousEq`ii, 0, 1}, {
                    Model`EndogenousEq`qq, 2, 3}]]}, Model`EndogenousEq`jj -> 
                  2], Model`EndogenousEq`kk -> 3], {Model`EndogenousEq`h, {
                  Head[Model`EndogenousEq`coefpd], 
                  Head[Model`EndogenousEq`coefb], 
                  Head[Model`EndogenousEq`coefnb]}}]}]; Apply[And, 
             Flatten[{{
                Map[Not, 
                 Map[InexactNumberQ, 
                  Select[
                   Flatten[
                    Cases[Model`EndogenousEq`ch, Pattern[Model`EndogenousEq`x, 
                    Blank[]][
                    Pattern[Model`EndogenousEq`i, 
                    Blank[]]] :> Model`EndogenousEq`i]], NumberQ]]], 
                Map[Not, 
                 Map[InexactNumberQ, 
                  Select[
                   Flatten[
                    Cases[Model`EndogenousEq`ch, Pattern[Model`EndogenousEq`x, 
                    Blank[]][
                    Pattern[Model`EndogenousEq`i, 
                    Blank[]]][
                    Pattern[Model`EndogenousEq`j, 
                    Blank[]]] :> {
                    Model`EndogenousEq`i, Model`EndogenousEq`j}]], 
                   NumberQ]]]}}]]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.001437`3.3079717659662173, "CPUTimeUsed" -> 
         0.0014380000000002724`, "MemoryUsed" -> 54800, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>]|>, 
    "FailureResults" -> <||>, "TestsNotEvaluatedKeys" -> {}, 
    "TestsFailedWrongResultsKeys" -> {}, "TestsFailedWithMessagesKeys" -> {}, 
    "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {7142559127892466554, 1304331174274742494, 
     6414580439962539187, 4454277166269311904, 7561877516905491885, 
     7327851564185820693, 3391298136754805075, 5893211950133612083, 
     2985477881983516033, 5437259038891824284}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9056877957825403`*^9, 3.90569913182227*^9, 
  3.905699462152411*^9, 3.905700771148004*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"d0d36a92-89ec-44ae-a072-ffa1f81d3a83"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9056877957825403`*^9, 3.90569913182227*^9, 
  3.905699462152411*^9, 3.9057007711535177`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"735abc56-9c38-4460-98f9-68474cac99e8"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9056877957825403`*^9, 3.90569913182227*^9, 
  3.905699462152411*^9, 3.905700771154584*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"9294ab13-0791-486c-8d60-f19c72e3aedc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tr", "=", 
  RowBox[{
  "TestReport", "[", 
   "\"\</Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt\>\"\
", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expected", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
        ")"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}]}], "Input",
 CellChangeTimes->{{3.895362797280583*^9, 3.895362797460813*^9}, {
   3.895362883185739*^9, 3.8953628833320417`*^9}, {3.895362914081757*^9, 
   3.895362914242923*^9}, {3.895363069271865*^9, 3.895363069433126*^9}, {
   3.895364934971695*^9, 3.89536493511489*^9}, {3.8954190984559937`*^9, 
   3.895419107713436*^9}, {3.895431466385002*^9, 3.8954314730424356`*^9}, {
   3.901503471271722*^9, 3.901503477273381*^9}, {3.901549113211192*^9, 
   3.901549114083599*^9}, {3.905687541215014*^9, 3.9056875415057697`*^9}, 
   3.905699453862289*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"16b4a727-0558-4183-a2f8-e2e1a7b3a611"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: ComputeConditionalExpectations.wlt\"", 
                  "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["12", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: ComputeConditionalExpectations.wlt\"", 
                  "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["12", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["12", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "3.539496`5.620275177651409", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: ComputeConditionalExpectations.wlt", "Aborted" -> 
    False, "TestResults" -> <|
     5297959389081382236 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700772342176*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "f106758a-46c7-4bc0-b0a2-320c2b4761d0", "TestID" -> 
         "ComputeConditionalExpectations_20231007-LPQ17C", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt", 
         "EvaluationID" -> "51e292a9-b163-4db9-98ed-ac43b18d5cc1", "Input" -> 
         HoldForm[Needs["PacletizedResourceFunctions`"]; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000055`1.8908776873262352, "CPUTimeUsed" -> 0.00006500000000020378,
          "MemoryUsed" -> 2800, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 3067539779485863768 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700772342608*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "b70fc511-246b-48da-8c3b-5e77a675428b", "TestID" -> 
         "ComputeConditionalExpectations_20231007-HQ2WRT", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt", 
         "EvaluationID" -> "89008d6f-5999-4b3c-818d-eeacc9cb9e84", "Input" -> 
         HoldForm[
          Needs["FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`"]; $ContextAliases["ce`"] = 
            "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`"; True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.009097`4.109413192542764, "CPUTimeUsed" -> 0.009077000000000002, 
         "MemoryUsed" -> 102096, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 5909685310977301003 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700772352142*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "8cfd1677-49b1-4eaa-94c6-c5f37d6a653e", "TestID" -> 
         "ComputeConditionalExpectations_20231007-1COH46", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt", 
         "EvaluationID" -> "0084f7c6-70f1-4119-945b-4eff30c445e5", "Input" -> 
         HoldForm[
           Apply[And, {
             
             MemberQ[$ContextPath, 
              "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`"]}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000032`1.6556649761518956, "CPUTimeUsed" -> 
         0.000031999999999587914`, "MemoryUsed" -> 2760, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 3962720906852827063 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700772352523*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "2b6c8807-e9ee-4a6d-80cf-e5ddbde84753", "TestID" -> 
         "ComputeConditionalExpectations_20231007-ZHS71V", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt", 
         "EvaluationID" -> "c0e65c32-9570-415e-b4b2-c2d8d18a16c5", "Input" -> 
         HoldForm[
           Apply[And, {
             Not[Names["*ev"] === {}], 
             Not[Names["ce`lagStateVarst"] === {}]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.023862`4.528221839201616, "CPUTimeUsed" -> 0.023820000000000174`, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4029712862078879326 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700772376795*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "fd932e88-7339-49e8-9d1d-342eebaa8d52", "TestID" -> 
         "ComputeConditionalExpectations_20231007-Y73JOT", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt", 
         "EvaluationID" -> "7732eb07-a083-4139-9cb3-eb5432e33d66", "Input" -> 
         HoldForm[Get[
             Get[
              FileNameJoin[{"FernandoDuarte/LongRunRisk", "Models.wl"}]]]; 
           ComputationalEngine`Cond`msp = FernandoDuarte`LongRunRisk`Models; 
           ComputationalEngine`Cond`modBY = 
            ComputationalEngine`Cond`msp["BY"]; 
           ComputationalEngine`Cond`modNRC = 
            ComputationalEngine`Cond`msp["NRC"]; True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.433381`5.787384865184884, "CPUTimeUsed" -> 0.42865599999999926`, 
         "MemoryUsed" -> 31768120, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 6379842145561170407 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700772810575*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "f90f3487-6af5-418c-a95f-a55b1ce9b393", "TestID" -> 
         "ComputeConditionalExpectations_20231007-BGG0CR", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt", 
         "EvaluationID" -> "234cffa8-01e0-4c87-a3b0-1a7e6019632f", "Input" -> 
         HoldForm[
          FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
            ComputationalEngine`Cond`eps["pi"][ComputationalEngine`Cond`t + 1]
               ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t + 1], 
             ComputationalEngine`Cond`t - 1, ComputationalEngine`Cond`modNRC] === 
           FernandoDuarte`LongRunRisk`Model`Parameters`phip], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.003526`3.697797305795293, "CPUTimeUsed" -> 0.0035709999999995468`, 
         "MemoryUsed" -> 93880, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 3105233855663732005 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700772815577*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "bc1d1d93-c75b-429d-bb7a-d0ecd318b3c6", "TestID" -> 
         "ComputeConditionalExpectations_20231007-8P6VH6", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt", 
         "EvaluationID" -> "a806e615-3450-40af-aeb0-e59049bdad61", "Input" -> 
         HoldForm[
           Apply[And, {0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`dd[
                   ComputationalEngine`Cond`t + 1, ComputationalEngine`Cond`i]
                    ComputationalEngine`Cond`pi[
                   ComputationalEngine`Cond`t + 1], 
                  ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]], (
                 ComputationalEngine`Cond`mup + (
                  ComputationalEngine`Cond`rhop (
                    ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`mup) + 
                  ComputationalEngine`Cond`xip 
                   ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t])) (
                 ComputationalEngine`Cond`mud[ComputationalEngine`Cond`i] + (
                  ComputationalEngine`Cond`rhodp[ComputationalEngine`Cond`i] (
                    ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`mup) + (
                    ComputationalEngine`Cond`xid[ComputationalEngine`Cond`i] 
                    ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t - 1]) 
                   ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t]))]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`dd[
                   ComputationalEngine`Cond`t + 1, ComputationalEngine`Cond`i]
                    ComputationalEngine`Cond`dc[
                   ComputationalEngine`Cond`t + 1], 
                  ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]], (
                  ComputationalEngine`Cond`mud[ComputationalEngine`Cond`i] + (
                   ComputationalEngine`Cond`rhodp[
                    ComputationalEngine`Cond`i] (
                    ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`mup) + (
                    ComputationalEngine`Cond`xid[ComputationalEngine`Cond`i] 
                    ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t - 1]) 
                    ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t])) (
                  ComputationalEngine`Cond`muc + (
                   ComputationalEngine`Cond`rhocp (
                    ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`mup) + (
                    ComputationalEngine`Cond`xic 
                    ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t - 1]) 
                    ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t])) + 
                ComputationalEngine`Cond`phic 
                 ComputationalEngine`Cond`phidc[ComputationalEngine`Cond`i]]],
              0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[(
                   ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 3]
                     ComputationalEngine`Cond`dc[
                    ComputationalEngine`Cond`t + 2]) 
                  ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t + 1],
                   ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]], (
                 ComputationalEngine`Cond`Esg + 
                 ComputationalEngine`Cond`rhog^3 (
                   ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] - 
                   ComputationalEngine`Cond`Esg)) ((
                   ComputationalEngine`Cond`mup + (
                    ComputationalEngine`Cond`rhop (
                    ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`mup) + 
                    ComputationalEngine`Cond`xip 
                    ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t])) (
                   ComputationalEngine`Cond`muc + ((
                    ComputationalEngine`Cond`rhocp 
                    ComputationalEngine`Cond`rhop) (
                    ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`mup) + (
                    ComputationalEngine`Cond`rhocp 
                    ComputationalEngine`Cond`xip) 
                    ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t])) + (
                  ComputationalEngine`Cond`rhocp 
                   ComputationalEngine`Cond`phip^2 + (
                    ComputationalEngine`Cond`xic 
                    ComputationalEngine`Cond`phip) 
                   ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t]))]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t + 2] 
                  ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t + 1],
                   ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]], (
                  ComputationalEngine`Cond`mup + (
                   ComputationalEngine`Cond`rhop (
                    ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`mup) + 
                   ComputationalEngine`Cond`xip 
                    ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t])) (
                  ComputationalEngine`Cond`mup + (
                   ComputationalEngine`Cond`rhop^2 (
                    ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`mup) + (
                    ComputationalEngine`Cond`rhop 
                    ComputationalEngine`Cond`xip) 
                    ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t])) + (
                 ComputationalEngine`Cond`rhop 
                  ComputationalEngine`Cond`phip^2 + 
                 ComputationalEngine`Cond`xip 
                  ComputationalEngine`Cond`phip)]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t + 2] 
                  ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t + 1],
                   ComputationalEngine`Cond`t + 1, 
                  ComputationalEngine`Cond`modNRC]], 
                ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t + 1] 
                PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   ComputationalEngine`Cond`dc[
                   ComputationalEngine`Cond`t + 2], 
                   ComputationalEngine`Cond`t + 1, 
                   ComputationalEngine`Cond`modNRC]]]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t + 2] 
                  ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t + 1],
                   ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]], (
                  ComputationalEngine`Cond`mup + (
                   ComputationalEngine`Cond`rhop (
                    ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`mup) + 
                   ComputationalEngine`Cond`xip 
                    ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t])) (
                  ComputationalEngine`Cond`muc + ((
                    ComputationalEngine`Cond`rhocp 
                    ComputationalEngine`Cond`rhop) (
                    ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`mup) + (
                    ComputationalEngine`Cond`rhocp 
                    ComputationalEngine`Cond`xip) 
                    ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t])) + (
                 ComputationalEngine`Cond`rhocp 
                  ComputationalEngine`Cond`phip^2 + (
                   ComputationalEngine`Cond`xic ComputationalEngine`Cond`phip)
                    ComputationalEngine`Cond`sg[
                   ComputationalEngine`Cond`t])]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t + 1] 
                  ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t + 1],
                   ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]], (
                 ComputationalEngine`Cond`mup + (
                  ComputationalEngine`Cond`rhop (
                    ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`mup) + 
                  ComputationalEngine`Cond`xip 
                   ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t])) (
                 ComputationalEngine`Cond`muc + (
                  ComputationalEngine`Cond`rhocp (
                    ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`mup) + (
                    ComputationalEngine`Cond`xic 
                    ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t - 1]) 
                   ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t]))]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t] 
                  ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t], 
                  ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]], 
                ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] (
                 ComputationalEngine`Cond`muc + (
                  ComputationalEngine`Cond`rhocp (
                    ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t - 1] - 
                    ComputationalEngine`Cond`mup) + ((
                    ComputationalEngine`Cond`xic 
                    ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t - 2]) 
                    ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t - 1] + 
                   ComputationalEngine`Cond`phic 
                    ComputationalEngine`Cond`eps["dc"][
                    ComputationalEngine`Cond`t])))]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t - 1] 
                  ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t - 1],
                   ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]], 
                ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t - 1] (
                 ComputationalEngine`Cond`muc + (
                  ComputationalEngine`Cond`rhocp (
                    ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t - 2] - 
                    ComputationalEngine`Cond`mup) + ((
                    ComputationalEngine`Cond`xic 
                    ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t - 3]) 
                    ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t - 2] + 
                   ComputationalEngine`Cond`phic 
                    ComputationalEngine`Cond`eps["dc"][
                    ComputationalEngine`Cond`t - 1])))]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t - 2] 
                  ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t - 2],
                   ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]], 
                ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t - 2] (
                 ComputationalEngine`Cond`muc + (
                  ComputationalEngine`Cond`rhocp (
                    ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t - 3] - 
                    ComputationalEngine`Cond`mup) + ((
                    ComputationalEngine`Cond`xic 
                    ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t - 4]) 
                    ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t - 3] + 
                   ComputationalEngine`Cond`phic 
                    ComputationalEngine`Cond`eps["dc"][
                    ComputationalEngine`Cond`t - 2])))]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 2] 
                  ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t + 1]^2, 
                  ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]], ((1 - 
                   ComputationalEngine`Cond`rhog) 
                  ComputationalEngine`Cond`Esg) 
                 PacletizedResourceFunctions`SetSymbolsContext[
                   
                   FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t + 1]^2, 
                    ComputationalEngine`Cond`t, 
                    ComputationalEngine`Cond`modNRC]] + 
                ComputationalEngine`Cond`rhog 
                 PacletizedResourceFunctions`SetSymbolsContext[
                   
                   FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t + 1]^3, 
                    ComputationalEngine`Cond`t, 
                    ComputationalEngine`Cond`modNRC]]]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 2] 
                  ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t + 1]^2, 
                  ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]], (1 - 
                  ComputationalEngine`Cond`rhog) (
                  ComputationalEngine`Cond`Esg ((ComputationalEngine`Cond`Esg + 
                    ComputationalEngine`Cond`rhog (
                    ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`Esg))^2 + 
                   ComputationalEngine`Cond`phig^2)) + 
                ComputationalEngine`Cond`rhog ((ComputationalEngine`Cond`Esg + 
                    ComputationalEngine`Cond`rhog (
                    ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`Esg))^3 + 
                  3 (ComputationalEngine`Cond`phig^2 (
                    ComputationalEngine`Cond`Esg + 
                    ComputationalEngine`Cond`rhog (
                    ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`Esg))))]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 3] 
                  ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t + 1]^2, 
                  ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]], ((1 - 
                   ComputationalEngine`Cond`rhog^2) 
                  ComputationalEngine`Cond`Esg) 
                 PacletizedResourceFunctions`SetSymbolsContext[
                   
                   FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t + 1]^2, 
                    ComputationalEngine`Cond`t, 
                    ComputationalEngine`Cond`modNRC]] + 
                ComputationalEngine`Cond`rhog^2 
                 PacletizedResourceFunctions`SetSymbolsContext[
                   
                   FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t + 1]^3, 
                    ComputationalEngine`Cond`t, 
                    ComputationalEngine`Cond`modNRC]]]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 3] 
                  ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t + 1]^2, 
                  ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]], (1 - 
                  ComputationalEngine`Cond`rhog^2) (
                  ComputationalEngine`Cond`Esg ((ComputationalEngine`Cond`Esg + 
                    ComputationalEngine`Cond`rhog (
                    ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`Esg))^2 + 
                   ComputationalEngine`Cond`phig^2)) + 
                ComputationalEngine`Cond`rhog^2 ((
                    ComputationalEngine`Cond`Esg + 
                    ComputationalEngine`Cond`rhog (
                    ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`Esg))^3 + 
                  3 (ComputationalEngine`Cond`phig^2 (
                    ComputationalEngine`Cond`Esg + 
                    ComputationalEngine`Cond`rhog (
                    ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`Esg))))]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 2] 
                  ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 1],
                   ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]], (
                  ComputationalEngine`Cond`Esg + 
                  ComputationalEngine`Cond`rhog^2 (
                    ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`Esg)) (
                  ComputationalEngine`Cond`Esg + 
                  ComputationalEngine`Cond`rhog (
                    ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`Esg)) + 
                ComputationalEngine`Cond`rhog 
                 ComputationalEngine`Cond`phig^2]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 3] 
                  ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 1],
                   ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]], (
                  ComputationalEngine`Cond`Esg + 
                  ComputationalEngine`Cond`rhog^3 (
                    ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`Esg)) (
                  ComputationalEngine`Cond`Esg + 
                  ComputationalEngine`Cond`rhog (
                    ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`Esg)) + 
                ComputationalEngine`Cond`rhog^2 
                 ComputationalEngine`Cond`phig^2]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 2] 
                  ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 1],
                   ComputationalEngine`Cond`t - 1, 
                  ComputationalEngine`Cond`modNRC]], (
                  ComputationalEngine`Cond`Esg + 
                  ComputationalEngine`Cond`rhog^3 (
                    ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t - 1] - 
                    ComputationalEngine`Cond`Esg)) (
                  ComputationalEngine`Cond`Esg + 
                  ComputationalEngine`Cond`rhog^2 (
                    ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t - 1] - 
                    ComputationalEngine`Cond`Esg)) + (
                 ComputationalEngine`Cond`rhog^3 
                  ComputationalEngine`Cond`phig^2 + 
                 ComputationalEngine`Cond`rhog 
                  ComputationalEngine`Cond`phig^2)]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 3] 
                  ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 1],
                   ComputationalEngine`Cond`t - 1, 
                  ComputationalEngine`Cond`modNRC]], (
                  ComputationalEngine`Cond`Esg + 
                  ComputationalEngine`Cond`rhog^4 (
                    ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t - 1] - 
                    ComputationalEngine`Cond`Esg)) (
                  ComputationalEngine`Cond`Esg + 
                  ComputationalEngine`Cond`rhog^2 (
                    ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t - 1] - 
                    ComputationalEngine`Cond`Esg)) + (
                 ComputationalEngine`Cond`rhog^4 
                  ComputationalEngine`Cond`phig^2 + 
                 ComputationalEngine`Cond`rhog^2 
                  ComputationalEngine`Cond`phig^2)]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 1] 
                  ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t + 1],
                   ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]], (
                 ComputationalEngine`Cond`Esg + 
                 ComputationalEngine`Cond`rhog (
                   ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] - 
                   ComputationalEngine`Cond`Esg)) (
                 ComputationalEngine`Cond`mup + (
                  ComputationalEngine`Cond`rhop (
                    ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`mup) + 
                  ComputationalEngine`Cond`xip 
                   ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t]))]], 0 === 
             Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] 
                  ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t], 
                  ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]] - 
               ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] 
               ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t]], 0 === 
             Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t - 1] 
                  ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t - 1],
                   ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]], 
                ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t - 1] 
                ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t - 1]]],
              0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t - 2] 
                  ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t - 2],
                   ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]], 
                ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t - 2] 
                ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t - 2]]],
              0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 1] 
                  ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t + 1],
                   ComputationalEngine`Cond`t + 1, 
                  ComputationalEngine`Cond`modNRC]], 
                ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 1] 
                ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t + 1]]],
              0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 1] 
                  ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t + 1],
                   ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]], (
                 ComputationalEngine`Cond`Esg + 
                 ComputationalEngine`Cond`rhog (
                   ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] - 
                   ComputationalEngine`Cond`Esg)) (
                 ComputationalEngine`Cond`mup + (
                  ComputationalEngine`Cond`rhop (
                    ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`mup) + 
                  ComputationalEngine`Cond`xip 
                   ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t]))]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 1] 
                  ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t + 1],
                   ComputationalEngine`Cond`t - 1, 
                  ComputationalEngine`Cond`modNRC]], (
                 ComputationalEngine`Cond`Esg + 
                 ComputationalEngine`Cond`rhog^2 (
                   ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t - 1] - 
                   ComputationalEngine`Cond`Esg)) (
                 ComputationalEngine`Cond`mup + (
                  ComputationalEngine`Cond`rhop^2 (
                    ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t - 1] - 
                    ComputationalEngine`Cond`mup) + (
                    ComputationalEngine`Cond`rhop 
                    ComputationalEngine`Cond`xip) 
                   ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t - 1]))]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 1] 
                  ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t + 1],
                   ComputationalEngine`Cond`t - 2, 
                  ComputationalEngine`Cond`modNRC]], (
                 ComputationalEngine`Cond`Esg + 
                 ComputationalEngine`Cond`rhog^3 (
                   ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t - 2] - 
                   ComputationalEngine`Cond`Esg)) (
                 ComputationalEngine`Cond`mup + (
                  ComputationalEngine`Cond`rhop^3 (
                    ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t - 2] - 
                    ComputationalEngine`Cond`mup) + (
                    ComputationalEngine`Cond`rhop^2 
                    ComputationalEngine`Cond`xip) 
                   ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t - 2]))]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`sg[
                   ComputationalEngine`Cond`t + 1]^2, 
                  ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]], (
                  ComputationalEngine`Cond`Esg + 
                  ComputationalEngine`Cond`rhog (
                    ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`Esg))^2 + 
                ComputationalEngine`Cond`phig^2]], 0 === 
             Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t]^2, 
                  ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]] - 
               ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t]^2], 0 === 
             Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`sg[
                   ComputationalEngine`Cond`t - 1]^2, 
                  ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]] - 
               ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t - 1]^2],
              0 === Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`sg[
                   ComputationalEngine`Cond`t - 2]^2, 
                  ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]] - 
               ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t - 2]^2],
              0 === Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`sg[
                   ComputationalEngine`Cond`t + 1]^2, 
                  ComputationalEngine`Cond`t + 1, 
                  ComputationalEngine`Cond`modNRC]] - 
               ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 1]^2],
              0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`sg[
                   ComputationalEngine`Cond`t + 1]^2, 
                  ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]], (
                  ComputationalEngine`Cond`Esg + 
                  ComputationalEngine`Cond`rhog (
                    ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`Esg))^2 + 
                ComputationalEngine`Cond`phig^2]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`sg[
                   ComputationalEngine`Cond`t + 1]^2, 
                  ComputationalEngine`Cond`t - 1, 
                  ComputationalEngine`Cond`modNRC]], (
                  ComputationalEngine`Cond`Esg + 
                  ComputationalEngine`Cond`rhog^2 (
                    ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t - 1] - 
                    ComputationalEngine`Cond`Esg))^2 + (
                  ComputationalEngine`Cond`rhog^2 + 1) 
                 ComputationalEngine`Cond`phig^2]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`sg[
                   ComputationalEngine`Cond`t + 1]^2, 
                  ComputationalEngine`Cond`t - 2, 
                  ComputationalEngine`Cond`modNRC]], (
                  ComputationalEngine`Cond`Esg + 
                  ComputationalEngine`Cond`rhog^3 (
                    ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t - 2] - 
                    ComputationalEngine`Cond`Esg))^2 + (
                  ComputationalEngine`Cond`rhog^4 + 
                  ComputationalEngine`Cond`rhog^2 + 1) 
                 ComputationalEngine`Cond`phig^2]], 0 === 
             Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 1],
                   ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]] - (
               ComputationalEngine`Cond`Esg + 
               ComputationalEngine`Cond`rhog (
                 ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] - 
                 ComputationalEngine`Cond`Esg))], 0 === 
             Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t], 
                  ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]] - 
               ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t]], 0 === 
             Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t - 1],
                   ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]] - 
               ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t - 1]], 
             0 === Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t - 2],
                   ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]] - 
               ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t - 2]], 
             0 === Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 1],
                   ComputationalEngine`Cond`t + 1, 
                  ComputationalEngine`Cond`modNRC]] - 
               ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 1]], 
             0 === Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 1],
                   ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC]] - (
               ComputationalEngine`Cond`Esg + 
               ComputationalEngine`Cond`rhog (
                 ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] - 
                 ComputationalEngine`Cond`Esg))], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 1],
                   ComputationalEngine`Cond`t - 1, 
                  ComputationalEngine`Cond`modNRC]], 
                ComputationalEngine`Cond`Esg + 
                ComputationalEngine`Cond`rhog^2 (
                  ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t - 1] - 
                  ComputationalEngine`Cond`Esg)]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t + 1],
                   ComputationalEngine`Cond`t - 1, 
                  ComputationalEngine`Cond`modNRC]], 
                ComputationalEngine`Cond`muc + ((
                   ComputationalEngine`Cond`rhocp 
                   ComputationalEngine`Cond`rhop) (
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t - 1] - 
                   ComputationalEngine`Cond`mup) + (
                   ComputationalEngine`Cond`rhocp 
                   ComputationalEngine`Cond`xip) 
                  ComputationalEngine`Cond`eps["pi"][
                   ComputationalEngine`Cond`t - 1])]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t], 
                  ComputationalEngine`Cond`t - 1, 
                  ComputationalEngine`Cond`modNRC]], 
                ComputationalEngine`Cond`muc + (
                 ComputationalEngine`Cond`rhocp (
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t - 1] - 
                   ComputationalEngine`Cond`mup) + (
                   ComputationalEngine`Cond`xic 
                   ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t - 2]) 
                  ComputationalEngine`Cond`eps["pi"][
                   ComputationalEngine`Cond`t - 1])]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         2.646692`6.573218402494423, "CPUTimeUsed" -> 1.42619, "MemoryUsed" -> 
         20394056, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 8907866654308615221 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700775463975*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "f9751b92-3307-43cd-a54a-704ea1a6d15a", "TestID" -> 
         "ComputeConditionalExpectations_20231007-7QBJX7", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt", 
         "EvaluationID" -> "ec31eefc-1d8a-4e2f-9e91-d2d0e31d3136", "Input" -> 
         HoldForm[
          ComputationalEngine`Cond`dc1 = 
            PacletizedResourceFunctions`SetSymbolsContext[
              ReplaceAll[
               ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t - 1], 
               Normal[
                ComputationalEngine`Cond`modNRC["exogenousEq"]]]]; 
           ComputationalEngine`Cond`dc2 = 
            PacletizedResourceFunctions`SetSymbolsContext[
              ReplaceAll[
               ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t - 2], 
               Normal[
                ComputationalEngine`Cond`modNRC["exogenousEq"]]]]; Apply[And, {
              Simplify[
              ComputationalEngine`Cond`dc1 === 
               ComputationalEngine`Cond`muc + (
                 ComputationalEngine`Cond`rhocp (
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t - 2] - 
                   ComputationalEngine`Cond`mup) + ((
                    ComputationalEngine`Cond`xic 
                    ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t - 3]) 
                   ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t - 2] + 
                  ComputationalEngine`Cond`phic 
                   ComputationalEngine`Cond`eps["dc"][
                    ComputationalEngine`Cond`t - 1]))], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   ComputationalEngine`Cond`dc[
                   ComputationalEngine`Cond`t - 1], 
                   ComputationalEngine`Cond`t - 1, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`muc + (
                  ComputationalEngine`Cond`rhocp (
                    ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t - 2] - 
                    ComputationalEngine`Cond`mup) + ((
                    ComputationalEngine`Cond`xic 
                    ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t - 3]) 
                    ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t - 2] + 
                   ComputationalEngine`Cond`phic 
                    ComputationalEngine`Cond`eps["dc"][
                    ComputationalEngine`Cond`t - 1]))]], 
              Simplify[
              ComputationalEngine`Cond`dc2 === 
               ComputationalEngine`Cond`muc + (
                 ComputationalEngine`Cond`rhocp (
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t - 3] - 
                   ComputationalEngine`Cond`mup) + ((
                    ComputationalEngine`Cond`xic 
                    ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t - 4]) 
                   ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t - 3] + 
                  ComputationalEngine`Cond`phic 
                   ComputationalEngine`Cond`eps["dc"][
                    ComputationalEngine`Cond`t - 2]))], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   ComputationalEngine`Cond`dc[
                   ComputationalEngine`Cond`t - 2], 
                   ComputationalEngine`Cond`t - 1, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`muc + (
                  ComputationalEngine`Cond`rhocp (
                    ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t - 3] - 
                    ComputationalEngine`Cond`mup) + ((
                    ComputationalEngine`Cond`xic 
                    ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t - 4]) 
                    ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t - 3] + 
                   ComputationalEngine`Cond`phic 
                    ComputationalEngine`Cond`eps["dc"][
                    ComputationalEngine`Cond`t - 2]))]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   ComputationalEngine`Cond`dc[
                   ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`muc + (
                  ComputationalEngine`Cond`rhocp (
                    ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`mup) + (
                    ComputationalEngine`Cond`xic 
                    ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t - 1]) 
                   ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t])]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   ComputationalEngine`Cond`dc[
                   ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t - 1, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`muc + ((
                    ComputationalEngine`Cond`rhocp 
                    ComputationalEngine`Cond`rhop) (
                    ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t - 1] - 
                    ComputationalEngine`Cond`mup) + (
                    ComputationalEngine`Cond`rhocp 
                    ComputationalEngine`Cond`xip) 
                   ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t - 1])]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   ComputationalEngine`Cond`dc[
                   ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t - 2, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`muc + ((
                    ComputationalEngine`Cond`rhocp 
                    ComputationalEngine`Cond`rhop^2) (
                    ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t - 2] - 
                    ComputationalEngine`Cond`mup) + ((
                    ComputationalEngine`Cond`rhocp 
                    ComputationalEngine`Cond`rhop) 
                    ComputationalEngine`Cond`xip) 
                   ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t - 2])]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t + 2] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t - 1, 
                   ComputationalEngine`Cond`modNRC]], 0]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t + 1] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t - 1, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`phip]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t - 1, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`rhop ComputationalEngine`Cond`phip + 
                 ComputationalEngine`Cond`xip]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t - 1] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t - 1, 
                   ComputationalEngine`Cond`modNRC]], (
                  ComputationalEngine`Cond`mup + (
                   ComputationalEngine`Cond`rhop^2 (
                    ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t - 1] - 
                    ComputationalEngine`Cond`mup) + (
                    ComputationalEngine`Cond`rhop 
                    ComputationalEngine`Cond`xip) 
                    ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t - 1])) 
                 ComputationalEngine`Cond`eps["pi"][
                  ComputationalEngine`Cond`t - 1]]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t - 2] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t - 1, 
                   ComputationalEngine`Cond`modNRC]], (
                  ComputationalEngine`Cond`mup + (
                   ComputationalEngine`Cond`rhop^2 (
                    ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t - 1] - 
                    ComputationalEngine`Cond`mup) + (
                    ComputationalEngine`Cond`rhop 
                    ComputationalEngine`Cond`xip) 
                    ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t - 1])) 
                 ComputationalEngine`Cond`eps["pi"][
                  ComputationalEngine`Cond`t - 2]]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t + 2] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t, 
                   ComputationalEngine`Cond`modNRC]], 0]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t + 1] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`phip]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t, 
                   ComputationalEngine`Cond`modNRC]], (
                  ComputationalEngine`Cond`mup + (
                   ComputationalEngine`Cond`rhop (
                    ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`mup) + 
                   ComputationalEngine`Cond`xip 
                    ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t])) 
                 ComputationalEngine`Cond`eps["pi"][
                  ComputationalEngine`Cond`t]]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t - 1] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t, 
                   ComputationalEngine`Cond`modNRC]], (
                  ComputationalEngine`Cond`mup + (
                   ComputationalEngine`Cond`rhop (
                    ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`mup) + 
                   ComputationalEngine`Cond`xip 
                    ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t])) 
                 ComputationalEngine`Cond`eps["pi"][
                  ComputationalEngine`Cond`t - 1]]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t - 2] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t, 
                   ComputationalEngine`Cond`modNRC]], (
                  ComputationalEngine`Cond`mup + (
                   ComputationalEngine`Cond`rhop (
                    ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`mup) + 
                   ComputationalEngine`Cond`xip 
                    ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t])) 
                 ComputationalEngine`Cond`eps["pi"][
                  ComputationalEngine`Cond`t - 2]]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t + 2] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t + 1, 
                   ComputationalEngine`Cond`modNRC]], 0]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t + 1] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t + 1, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`eps["pi"][
                  ComputationalEngine`Cond`t + 1] 
                 ComputationalEngine`Cond`pi[
                  ComputationalEngine`Cond`t + 1]]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t + 1, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`eps["pi"][
                  ComputationalEngine`Cond`t] 
                 ComputationalEngine`Cond`pi[
                  ComputationalEngine`Cond`t + 1]]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t - 1] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t + 1, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`eps["pi"][
                  ComputationalEngine`Cond`t - 1] 
                 ComputationalEngine`Cond`pi[
                  ComputationalEngine`Cond`t + 1]]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t - 2] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t + 1, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`eps["pi"][
                  ComputationalEngine`Cond`t - 2] 
                 ComputationalEngine`Cond`pi[
                  ComputationalEngine`Cond`t + 1]]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t + 2], 
                   ComputationalEngine`Cond`t - 2, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`rhop (
                  ComputationalEngine`Cond`rhop ComputationalEngine`Cond`phip + 
                  ComputationalEngine`Cond`xip)]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t - 2, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`rhop ComputationalEngine`Cond`phip + 
                 ComputationalEngine`Cond`xip]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t] 
                   ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t], 
                   ComputationalEngine`Cond`t - 2, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`phip]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t - 1], 
                   ComputationalEngine`Cond`t - 2, 
                   ComputationalEngine`Cond`modNRC]], 0]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t - 2], 
                   ComputationalEngine`Cond`t - 2, 
                   ComputationalEngine`Cond`modNRC]], 0]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t + 2], 
                   ComputationalEngine`Cond`t - 1, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`rhop (
                  ComputationalEngine`Cond`rhop ComputationalEngine`Cond`phip + 
                  ComputationalEngine`Cond`xip)]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t - 1, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`rhop ComputationalEngine`Cond`phip + 
                 ComputationalEngine`Cond`xip]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t] 
                   ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t], 
                   ComputationalEngine`Cond`t - 1, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`phip]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t - 1], 
                   ComputationalEngine`Cond`t - 1, 
                   ComputationalEngine`Cond`modNRC]], 0]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t - 2], 
                   ComputationalEngine`Cond`t - 1, 
                   ComputationalEngine`Cond`modNRC]], 0]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t + 2], 
                   ComputationalEngine`Cond`t, 
                   ComputationalEngine`Cond`modNRC]], (
                  ComputationalEngine`Cond`mup + (
                   ComputationalEngine`Cond`rhop^2 (
                    ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`mup) + (
                    ComputationalEngine`Cond`rhop 
                    ComputationalEngine`Cond`xip) 
                    ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t])) 
                 ComputationalEngine`Cond`eps["pi"][
                  ComputationalEngine`Cond`t]]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t, 
                   ComputationalEngine`Cond`modNRC]], (
                  ComputationalEngine`Cond`mup + (
                   ComputationalEngine`Cond`rhop (
                    ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`mup) + 
                   ComputationalEngine`Cond`xip 
                    ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t])) 
                 ComputationalEngine`Cond`eps["pi"][
                  ComputationalEngine`Cond`t]]], 0 === 
              Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t] 
                   ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t], 
                   ComputationalEngine`Cond`t, 
                   ComputationalEngine`Cond`modNRC]] - 
                ComputationalEngine`Cond`eps["pi"][ComputationalEngine`Cond`t]
                  ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t]], 0 === 
              Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t - 1], 
                   ComputationalEngine`Cond`t, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`eps["pi"][
                  ComputationalEngine`Cond`t] 
                 ComputationalEngine`Cond`pi[
                  ComputationalEngine`Cond`t - 1]]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t - 2], 
                   ComputationalEngine`Cond`t, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`eps["pi"][
                  ComputationalEngine`Cond`t] 
                 ComputationalEngine`Cond`pi[
                  ComputationalEngine`Cond`t - 2]]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t + 2], 
                   ComputationalEngine`Cond`t + 1, 
                   ComputationalEngine`Cond`modNRC]], (
                  ComputationalEngine`Cond`mup + (
                   ComputationalEngine`Cond`rhop (
                    ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t + 1] - 
                    ComputationalEngine`Cond`mup) + 
                   ComputationalEngine`Cond`xip 
                    ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t + 1])) 
                 ComputationalEngine`Cond`eps["pi"][
                  ComputationalEngine`Cond`t]]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t + 1, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`eps["pi"][
                  ComputationalEngine`Cond`t] 
                 ComputationalEngine`Cond`pi[
                  ComputationalEngine`Cond`t + 1]]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t] 
                   ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t], 
                   ComputationalEngine`Cond`t + 1, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`eps["pi"][
                  ComputationalEngine`Cond`t] 
                 ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t]]], 0 === 
              Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t - 1], 
                   ComputationalEngine`Cond`t + 1, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`eps["pi"][
                  ComputationalEngine`Cond`t] 
                 ComputationalEngine`Cond`pi[
                  ComputationalEngine`Cond`t - 1]]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t] 
                   ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t - 2], 
                   ComputationalEngine`Cond`t + 1, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`eps["pi"][
                  ComputationalEngine`Cond`t] 
                 ComputationalEngine`Cond`pi[
                  ComputationalEngine`Cond`t - 2]]], 0 === 
              Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   ComputationalEngine`Cond`pi[
                   ComputationalEngine`Cond`t + 2], 
                   ComputationalEngine`Cond`t + 2, 
                   ComputationalEngine`Cond`modNRC]] - 
                ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t + 2]], 
              0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   ComputationalEngine`Cond`pi[
                   ComputationalEngine`Cond`t + 2], 
                   ComputationalEngine`Cond`t + 1, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`mup + (
                  ComputationalEngine`Cond`rhop (
                    ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t + 1] - 
                    ComputationalEngine`Cond`mup) + 
                  ComputationalEngine`Cond`xip 
                   ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t + 1])]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   ComputationalEngine`Cond`pi[
                   ComputationalEngine`Cond`t + 2], 
                   ComputationalEngine`Cond`t, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`mup + (
                  ComputationalEngine`Cond`rhop^2 (
                    ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`mup) + (
                    ComputationalEngine`Cond`rhop 
                    ComputationalEngine`Cond`xip) 
                   ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t])]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   ComputationalEngine`Cond`pi[
                   ComputationalEngine`Cond`t + 2], 
                   ComputationalEngine`Cond`t - 1, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`mup + (
                  ComputationalEngine`Cond`rhop^3 (
                    ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t - 1] - 
                    ComputationalEngine`Cond`mup) + (
                    ComputationalEngine`Cond`rhop^2 
                    ComputationalEngine`Cond`xip) 
                   ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t - 1])]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   ComputationalEngine`Cond`pi[
                   ComputationalEngine`Cond`t + 2], 
                   ComputationalEngine`Cond`t - 2, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`mup + (
                  ComputationalEngine`Cond`rhop^4 (
                    ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t - 2] - 
                    ComputationalEngine`Cond`mup) + (
                    ComputationalEngine`Cond`rhop^3 
                    ComputationalEngine`Cond`xip) 
                   ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t - 2])]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   ComputationalEngine`Cond`pi[
                   ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`mup + (
                  ComputationalEngine`Cond`rhop (
                    ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`mup) + 
                  ComputationalEngine`Cond`xip 
                   ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t])]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   ComputationalEngine`Cond`pi[
                   ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t - 1, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`mup + (
                  ComputationalEngine`Cond`rhop^2 (
                    ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t - 1] - 
                    ComputationalEngine`Cond`mup) + (
                    ComputationalEngine`Cond`rhop 
                    ComputationalEngine`Cond`xip) 
                   ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t - 1])]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   ComputationalEngine`Cond`pi[
                   ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t - 2, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`mup + (
                  ComputationalEngine`Cond`rhop^3 (
                    ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t - 2] - 
                    ComputationalEngine`Cond`mup) + (
                    ComputationalEngine`Cond`rhop^2 
                    ComputationalEngine`Cond`xip) 
                   ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t - 2])]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   ComputationalEngine`Cond`pi[
                   ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`mup + (
                  ComputationalEngine`Cond`rhop (
                    ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`mup) + 
                  ComputationalEngine`Cond`xip 
                   ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t])]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   ComputationalEngine`Cond`dc[
                   ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`muc + (
                  ComputationalEngine`Cond`rhocp (
                    ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`mup) + (
                    ComputationalEngine`Cond`xic 
                    ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t - 1]) 
                   ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t])]], 0 === 
              Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   ComputationalEngine`Cond`sg[
                   ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t, 
                   ComputationalEngine`Cond`modNRC]] - (
                ComputationalEngine`Cond`Esg + 
                ComputationalEngine`Cond`rhog (
                  ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] - 
                  ComputationalEngine`Cond`Esg))], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   ComputationalEngine`Cond`dd[
                   ComputationalEngine`Cond`t + 1, 
                    ComputationalEngine`Cond`i], ComputationalEngine`Cond`t, 
                   ComputationalEngine`Cond`modNRC]], 
                 ComputationalEngine`Cond`mud[ComputationalEngine`Cond`i] + (
                  ComputationalEngine`Cond`rhodp[ComputationalEngine`Cond`i] (
                    ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`mup) + (
                    ComputationalEngine`Cond`xid[ComputationalEngine`Cond`i] 
                    ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t - 1]) 
                   ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t])]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`pi[
                    ComputationalEngine`Cond`t + 1]^2, 
                   ComputationalEngine`Cond`t, 
                   ComputationalEngine`Cond`modNRC]], (
                   ComputationalEngine`Cond`mup + (
                    ComputationalEngine`Cond`rhop (
                    ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`mup) + 
                    ComputationalEngine`Cond`xip 
                    ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t]))^2 + 
                 ComputationalEngine`Cond`phip^2]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`dc[
                    ComputationalEngine`Cond`t + 1]^2, 
                   ComputationalEngine`Cond`t, 
                   ComputationalEngine`Cond`modNRC]], (
                   ComputationalEngine`Cond`muc + (
                    ComputationalEngine`Cond`rhocp (
                    ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`mup) + (
                    ComputationalEngine`Cond`xic 
                    ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t - 1]) 
                    ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t]))^2 + 
                 ComputationalEngine`Cond`phic^2]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t + 1]^2, 
                   ComputationalEngine`Cond`t, 
                   ComputationalEngine`Cond`modNRC]], (
                   ComputationalEngine`Cond`Esg + 
                   ComputationalEngine`Cond`rhog (
                    ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`Esg))^2 + 
                 ComputationalEngine`Cond`phig^2]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`dd[
                    ComputationalEngine`Cond`t + 1, 
                    ComputationalEngine`Cond`i]^2, ComputationalEngine`Cond`t,
                    ComputationalEngine`Cond`modNRC]], (
                   ComputationalEngine`Cond`mud[
                    ComputationalEngine`Cond`i] + (
                    ComputationalEngine`Cond`rhodp[
                    ComputationalEngine`Cond`i] (
                    ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] - 
                    ComputationalEngine`Cond`mup) + (
                    ComputationalEngine`Cond`xid[ComputationalEngine`Cond`i] 
                    ComputationalEngine`Cond`sg[
                    ComputationalEngine`Cond`t - 1]) 
                    ComputationalEngine`Cond`eps["pi"][
                    ComputationalEngine`Cond`t]))^2 + 
                 ComputationalEngine`Cond`phidc[
                   ComputationalEngine`Cond`i]^2]], 0 === 
              Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`var[
                   ComputationalEngine`Cond`pi[
                   ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t, 
                   ComputationalEngine`Cond`modNRC]] - 
                ComputationalEngine`Cond`phip^2], 0 === 
              Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`var[
                   ComputationalEngine`Cond`dc[
                   ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t, 
                   ComputationalEngine`Cond`modNRC]] - 
                ComputationalEngine`Cond`phic^2], 0 === 
              Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`var[
                   ComputationalEngine`Cond`sg[
                   ComputationalEngine`Cond`t + 1], 
                   ComputationalEngine`Cond`t, 
                   ComputationalEngine`Cond`modNRC]] - 
                ComputationalEngine`Cond`phig^2], 0 === 
              Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`var[
                   ComputationalEngine`Cond`dd[
                   ComputationalEngine`Cond`t + 1, 
                    ComputationalEngine`Cond`i], ComputationalEngine`Cond`t, 
                   ComputationalEngine`Cond`modNRC]] - 
                ComputationalEngine`Cond`phidc[
                 ComputationalEngine`Cond`i]^2]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.128614`5.259803243183925, "CPUTimeUsed" -> 0.13052200000000003`, 
         "MemoryUsed" -> 201224, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 7069819210749017413 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700775594068*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "df789df9-0f30-475c-bb73-9235ae867058", "TestID" -> 
         "ComputeConditionalExpectations_20231007-S4Q3QG", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt", 
         "EvaluationID" -> "dad03281-36f2-447e-9142-518ba142ee4c", "Input" -> 
         HoldForm[
           Apply[And, {0 === Simplify[
               Subtract[
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t + 1], 
                 ComputationalEngine`Cond`t - 1, 
                 ComputationalEngine`Cond`modNRC], 
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t + 1],
                   ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC], 
                 ComputationalEngine`Cond`t - 1, 
                 ComputationalEngine`Cond`modNRC]]], 0 === Simplify[
               Subtract[
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t + 1], 
                 ComputationalEngine`Cond`t - 1, 
                 ComputationalEngine`Cond`modNRC], 
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t + 1],
                   ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC], 
                 ComputationalEngine`Cond`t - 1, 
                 ComputationalEngine`Cond`modNRC]]], 0 === Simplify[
               Subtract[
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 1], 
                 ComputationalEngine`Cond`t - 1, 
                 ComputationalEngine`Cond`modNRC], 
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 1],
                   ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC], 
                 ComputationalEngine`Cond`t - 1, 
                 ComputationalEngine`Cond`modNRC]]], 0 === Simplify[
               Subtract[
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`dd[
                 ComputationalEngine`Cond`t + 1, ComputationalEngine`Cond`i], 
                 ComputationalEngine`Cond`t - 1, 
                 ComputationalEngine`Cond`modNRC], 
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`dd[
                  ComputationalEngine`Cond`t + 1, ComputationalEngine`Cond`i],
                   ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC], 
                 ComputationalEngine`Cond`t - 1, 
                 ComputationalEngine`Cond`modNRC]]], 0 === Simplify[
               Subtract[
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t + 1] 
                 ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t + 1], 
                 ComputationalEngine`Cond`t - 1, 
                 ComputationalEngine`Cond`modNRC], 
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t + 1] 
                  ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t + 1],
                   ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC], 
                 ComputationalEngine`Cond`t - 1, 
                 ComputationalEngine`Cond`modNRC]]], 0 === Simplify[
               Subtract[
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t + 1] 
                 ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 1], 
                 ComputationalEngine`Cond`t - 1, 
                 ComputationalEngine`Cond`modNRC], 
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t + 1] 
                  ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 1],
                   ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC], 
                 ComputationalEngine`Cond`t - 1, 
                 ComputationalEngine`Cond`modNRC]]], 0 === Simplify[
               Subtract[
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t + 1]^2,
                  ComputationalEngine`Cond`t - 1, 
                 ComputationalEngine`Cond`modNRC], 
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`sg[
                   ComputationalEngine`Cond`t + 1]^2, 
                  ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC], 
                 ComputationalEngine`Cond`t - 1, 
                 ComputationalEngine`Cond`modNRC]]], 0 === Simplify[
               Subtract[
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 ComputationalEngine`Cond`dd[
                 ComputationalEngine`Cond`t + 2, ComputationalEngine`Cond`i], 
                 ComputationalEngine`Cond`t - 1, 
                 ComputationalEngine`Cond`modNRC], 
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  ComputationalEngine`Cond`dd[
                  ComputationalEngine`Cond`t + 2, ComputationalEngine`Cond`i],
                   ComputationalEngine`Cond`t, 
                  ComputationalEngine`Cond`modNRC], 
                 ComputationalEngine`Cond`t - 1, 
                 ComputationalEngine`Cond`modNRC]]], 0 === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] 
               ComputationalEngine`Cond`eps["pi"][
                ComputationalEngine`Cond`t + 1], ComputationalEngine`Cond`t - 
               1, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] 
                ComputationalEngine`Cond`eps["pi"][
                 ComputationalEngine`Cond`t + 1], ComputationalEngine`Cond`t, 
                ComputationalEngine`Cond`modNRC], ComputationalEngine`Cond`t - 
               1, ComputationalEngine`Cond`modNRC], 0 === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] 
               ComputationalEngine`Cond`eps["dc"][
                ComputationalEngine`Cond`t + 1], ComputationalEngine`Cond`t - 
               1, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] 
                ComputationalEngine`Cond`eps["dc"][
                 ComputationalEngine`Cond`t + 1], ComputationalEngine`Cond`t, 
                ComputationalEngine`Cond`modNRC], ComputationalEngine`Cond`t - 
               1, ComputationalEngine`Cond`modNRC], 0 === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] 
               ComputationalEngine`Cond`eps["sg"][
                ComputationalEngine`Cond`t + 1], ComputationalEngine`Cond`t - 
               1, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] 
                ComputationalEngine`Cond`eps["sg"][
                 ComputationalEngine`Cond`t + 1], ComputationalEngine`Cond`t, 
                ComputationalEngine`Cond`modNRC], ComputationalEngine`Cond`t - 
               1, ComputationalEngine`Cond`modNRC], 0 === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] 
               ComputationalEngine`Cond`eps["pi"][
                ComputationalEngine`Cond`t + 1], ComputationalEngine`Cond`t - 
               1, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] 
                ComputationalEngine`Cond`eps["pi"][
                 ComputationalEngine`Cond`t + 1], ComputationalEngine`Cond`t, 
                ComputationalEngine`Cond`modNRC], ComputationalEngine`Cond`t - 
               1, ComputationalEngine`Cond`modNRC], 0 === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] 
               ComputationalEngine`Cond`eps["dc"][
                ComputationalEngine`Cond`t + 1], ComputationalEngine`Cond`t - 
               1, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] 
                ComputationalEngine`Cond`eps["dc"][
                 ComputationalEngine`Cond`t + 1], ComputationalEngine`Cond`t, 
                ComputationalEngine`Cond`modNRC], ComputationalEngine`Cond`t - 
               1, ComputationalEngine`Cond`modNRC], 0 === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] 
               ComputationalEngine`Cond`eps["sg"][
                ComputationalEngine`Cond`t + 1], ComputationalEngine`Cond`t - 
               1, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] 
                ComputationalEngine`Cond`eps["sg"][
                 ComputationalEngine`Cond`t + 1], ComputationalEngine`Cond`t, 
                ComputationalEngine`Cond`modNRC], ComputationalEngine`Cond`t - 
               1, ComputationalEngine`Cond`modNRC], 0 === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t]^2 
               ComputationalEngine`Cond`eps["pi"][
                ComputationalEngine`Cond`t + 2], ComputationalEngine`Cond`t - 
               1, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t]^2 
                ComputationalEngine`Cond`eps["pi"][
                 ComputationalEngine`Cond`t + 2], ComputationalEngine`Cond`t, 
                ComputationalEngine`Cond`modNRC], ComputationalEngine`Cond`t - 
               1, ComputationalEngine`Cond`modNRC], 0 === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t]^2 
               ComputationalEngine`Cond`eps["dc"][
                ComputationalEngine`Cond`t + 2], ComputationalEngine`Cond`t - 
               1, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t]^2 
                ComputationalEngine`Cond`eps["dc"][
                 ComputationalEngine`Cond`t + 2], ComputationalEngine`Cond`t, 
                ComputationalEngine`Cond`modNRC], ComputationalEngine`Cond`t - 
               1, ComputationalEngine`Cond`modNRC], 0 === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t]^2 
               ComputationalEngine`Cond`eps["sg"][
                ComputationalEngine`Cond`t + 2], ComputationalEngine`Cond`t - 
               1, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t]^2 
                ComputationalEngine`Cond`eps["sg"][
                 ComputationalEngine`Cond`t + 2], ComputationalEngine`Cond`t, 
                ComputationalEngine`Cond`modNRC], ComputationalEngine`Cond`t - 
               1, ComputationalEngine`Cond`modNRC], 0 === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t]^2 
               ComputationalEngine`Cond`eps["pi"][
                ComputationalEngine`Cond`t + 2], ComputationalEngine`Cond`t - 
               1, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t]^2 
                ComputationalEngine`Cond`eps["pi"][
                 ComputationalEngine`Cond`t + 2], ComputationalEngine`Cond`t, 
                ComputationalEngine`Cond`modNRC], ComputationalEngine`Cond`t - 
               1, ComputationalEngine`Cond`modNRC], 0 === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t]^2 
               ComputationalEngine`Cond`eps["dc"][
                ComputationalEngine`Cond`t + 2], ComputationalEngine`Cond`t - 
               1, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t]^2 
                ComputationalEngine`Cond`eps["dc"][
                 ComputationalEngine`Cond`t + 2], ComputationalEngine`Cond`t, 
                ComputationalEngine`Cond`modNRC], ComputationalEngine`Cond`t - 
               1, ComputationalEngine`Cond`modNRC], 0 === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t]^2 
               ComputationalEngine`Cond`eps["sg"][
                ComputationalEngine`Cond`t + 2], ComputationalEngine`Cond`t - 
               1, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t]^2 
                ComputationalEngine`Cond`eps["sg"][
                 ComputationalEngine`Cond`t + 2], ComputationalEngine`Cond`t, 
                ComputationalEngine`Cond`modNRC], ComputationalEngine`Cond`t - 
               1, ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] 
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                ComputationalEngine`Cond`eps["pi"][
                  ComputationalEngine`Cond`t + 1]^2, 
                 ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC],
                ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] 
               ComputationalEngine`Cond`eps["pi"][
                 ComputationalEngine`Cond`t + 1]^2, 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] 
                ComputationalEngine`Cond`eps["pi"][
                  ComputationalEngine`Cond`t + 1]^2, 
                ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] 
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                ComputationalEngine`Cond`eps["sg"][
                  ComputationalEngine`Cond`t + 1]^2, 
                 ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC],
                ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] 
               ComputationalEngine`Cond`eps["sg"][
                 ComputationalEngine`Cond`t + 1]^2, 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] 
                ComputationalEngine`Cond`eps["sg"][
                  ComputationalEngine`Cond`t + 1]^2, 
                ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] 
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                ComputationalEngine`Cond`eps["dc"][
                  ComputationalEngine`Cond`t + 1]^2, 
                 ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC],
                ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] 
               ComputationalEngine`Cond`eps["dc"][
                 ComputationalEngine`Cond`t + 1]^2, 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] 
                ComputationalEngine`Cond`eps["dc"][
                  ComputationalEngine`Cond`t + 1]^2, 
                ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] 
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                ComputationalEngine`Cond`eps["pi"][
                  ComputationalEngine`Cond`t + 1]^2, 
                 ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC],
                ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] 
               ComputationalEngine`Cond`eps["pi"][
                 ComputationalEngine`Cond`t + 1]^2, 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] 
                ComputationalEngine`Cond`eps["pi"][
                  ComputationalEngine`Cond`t + 1]^2, 
                ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] 
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                ComputationalEngine`Cond`eps["sg"][
                  ComputationalEngine`Cond`t + 1]^2, 
                 ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC],
                ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] 
               ComputationalEngine`Cond`eps["sg"][
                 ComputationalEngine`Cond`t + 1]^2, 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] 
                ComputationalEngine`Cond`eps["sg"][
                  ComputationalEngine`Cond`t + 1]^2, 
                ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] 
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                ComputationalEngine`Cond`eps["dc"][
                  ComputationalEngine`Cond`t + 1]^2, 
                 ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC],
                ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] 
               ComputationalEngine`Cond`eps["dc"][
                 ComputationalEngine`Cond`t + 1]^2, 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t] 
                ComputationalEngine`Cond`eps["dc"][
                  ComputationalEngine`Cond`t + 1]^2, 
                ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t] 
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                ComputationalEngine`Cond`eps["pi"][
                  ComputationalEngine`Cond`t + 1]^2, 
                 ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC],
                ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t] 
               ComputationalEngine`Cond`eps["pi"][
                 ComputationalEngine`Cond`t + 1]^2, 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t] 
                ComputationalEngine`Cond`eps["pi"][
                  ComputationalEngine`Cond`t + 1]^2, 
                ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t] 
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                ComputationalEngine`Cond`eps["sg"][
                  ComputationalEngine`Cond`t + 1]^2, 
                 ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC],
                ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t] 
               ComputationalEngine`Cond`eps["sg"][
                 ComputationalEngine`Cond`t + 1]^2, 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t] 
                ComputationalEngine`Cond`eps["sg"][
                  ComputationalEngine`Cond`t + 1]^2, 
                ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t] 
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                ComputationalEngine`Cond`eps["dc"][
                  ComputationalEngine`Cond`t + 1]^2, 
                 ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC],
                ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t] 
               ComputationalEngine`Cond`eps["dc"][
                 ComputationalEngine`Cond`t + 1]^2, 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t] 
                ComputationalEngine`Cond`eps["dc"][
                  ComputationalEngine`Cond`t + 1]^2, 
                ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`dd[
               ComputationalEngine`Cond`t, ComputationalEngine`Cond`i], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`dd[
                ComputationalEngine`Cond`t, ComputationalEngine`Cond`i] 
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                ComputationalEngine`Cond`eps["pi"][
                  ComputationalEngine`Cond`t + 1]^2, 
                 ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC],
                ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`dd[
                ComputationalEngine`Cond`t, ComputationalEngine`Cond`i] 
               ComputationalEngine`Cond`eps["pi"][
                 ComputationalEngine`Cond`t + 1]^2, 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`dd[
                 ComputationalEngine`Cond`t, ComputationalEngine`Cond`i] 
                ComputationalEngine`Cond`eps["pi"][
                  ComputationalEngine`Cond`t + 1]^2, 
                ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC], 
             
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`dd[
               ComputationalEngine`Cond`t, ComputationalEngine`Cond`i], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`dd[
                ComputationalEngine`Cond`t, ComputationalEngine`Cond`i] 
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                ComputationalEngine`Cond`eps["sg"][
                  ComputationalEngine`Cond`t + 1]^2, 
                 ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC],
                ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`dd[
                ComputationalEngine`Cond`t, ComputationalEngine`Cond`i] 
               ComputationalEngine`Cond`eps["sg"][
                 ComputationalEngine`Cond`t + 1]^2, 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`dd[
                 ComputationalEngine`Cond`t, ComputationalEngine`Cond`i] 
                ComputationalEngine`Cond`eps["sg"][
                  ComputationalEngine`Cond`t + 1]^2, 
                ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`dd[
               ComputationalEngine`Cond`t, ComputationalEngine`Cond`i], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`dd[
                ComputationalEngine`Cond`t, ComputationalEngine`Cond`i] 
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                ComputationalEngine`Cond`eps["dc"][
                  ComputationalEngine`Cond`t + 1]^2, 
                 ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC],
                ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              ComputationalEngine`Cond`dd[
                ComputationalEngine`Cond`t, ComputationalEngine`Cond`i] 
               ComputationalEngine`Cond`eps["dc"][
                 ComputationalEngine`Cond`t + 1]^2, 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`dd[
                 ComputationalEngine`Cond`t, ComputationalEngine`Cond`i] 
                ComputationalEngine`Cond`eps["dc"][
                  ComputationalEngine`Cond`t + 1]^2, 
                ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.266116`5.5755859847577245, "CPUTimeUsed" -> 0.2700780000000007, 
         "MemoryUsed" -> 249144, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 779104685964114918 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057007758607287`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "89e47e07-d243-4bc4-b414-08cef9aa9d50", "TestID" -> 
         "ComputeConditionalExpectations_20231007-EGCETZ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt", 
         "EvaluationID" -> "28e2f129-d049-4869-b94a-6b20d76a35e4", "Input" -> 
         HoldForm[
           Apply[
           And, {FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t + 1], 
               ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               foo`pi[ComputationalEngine`Cond`t + 1], 
               ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC] === 
             ReplaceAll[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                foo`pi[foo`t + 1], foo`t, ComputationalEngine`Cond`modNRC], 
               foo`t -> ComputationalEngine`Cond`t], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`pi[foo`t + 1], 
               ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
              1 + foo`t], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t + 1], 
               foo`t, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
              1 + ComputationalEngine`Cond`t], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               foo`pi[foo`t + 1], ComputationalEngine`Cond`t, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
              1 + foo`t], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               foo`pi[ComputationalEngine`Cond`t + 1], foo`t, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
              1 + ComputationalEngine`Cond`t], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               foo`pi[bar`t + 1], ComputationalEngine`Cond`t, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
              1 + bar`t], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               foo`pi[ComputationalEngine`Cond`t + 1], bar`t, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
              1 + ComputationalEngine`Cond`t], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               foo`pi[bar`t + 1], goo`t, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
              1 + bar`t]}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.011411`4.2078387032012765, "CPUTimeUsed" -> 
         0.011520000000000863`, "MemoryUsed" -> 57952, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 5586287066539720749 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700775872819*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "1932155a-b3bb-45a8-8310-090989458461", "TestID" -> 
         "ComputeConditionalExpectations_20231007-NUQC6A", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt", 
         "EvaluationID" -> "1bbd9996-22de-4f9f-9d5b-644665ec611b", "Input" -> 
         HoldForm[
           Apply[
           And, {FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
               ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
               FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                  ComputationalEngine`Cond`t - 1] - 
                 FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  ComputationalEngine`Cond`t - 1] + 
                FernandoDuarte`LongRunRisk`Model`Parameters`phip 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  ComputationalEngine`Cond`t])), 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
               ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t + 1], 
               ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC] === 
             ReplaceAll[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
                ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t], 
                ComputationalEngine`Cond`t - 1, 
                ComputationalEngine`Cond`modNRC], ComputationalEngine`Cond`t -> 
               ComputationalEngine`Cond`t + 1], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
               ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t + 1], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
               FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                 ComputationalEngine`Cond`t] + (
                FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    ComputationalEngine`Cond`t - 1] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                   FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    ComputationalEngine`Cond`t - 1] + 
                   FernandoDuarte`LongRunRisk`Model`Parameters`phip 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    ComputationalEngine`Cond`t])) + 
                FernandoDuarte`LongRunRisk`Model`Parameters`phip 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  1 + ComputationalEngine`Cond`t])), 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
              ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] 
               ComputationalEngine`Cond`eps["pi"][
                ComputationalEngine`Cond`t + 2], ComputationalEngine`Cond`t, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
               ComputationalEngine`Cond`t] 
              FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
               2 + ComputationalEngine`Cond`t], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
              ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] 
               ComputationalEngine`Cond`eps["pi"][ComputationalEngine`Cond`t],
                ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
               ComputationalEngine`Cond`t] (
               FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   ComputationalEngine`Cond`t - 1] - 
                  FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                 FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                   ComputationalEngine`Cond`t - 1] + 
                 FernandoDuarte`LongRunRisk`Model`Parameters`phip 
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                   ComputationalEngine`Cond`t]))), 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
              ComputationalEngine`Cond`delta, ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`Parameters`delta, 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
               ComputationalEngine`Cond`A[0], ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[0], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
               ComputationalEngine`Cond`R[ComputationalEngine`Cond`m - 1][0], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`R[
              ComputationalEngine`Cond`m - 1][0], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
               ComputationalEngine`Cond`pieq[
               ComputationalEngine`Cond`t, ComputationalEngine`Cond`m], 
               ComputationalEngine`Cond`t + 1, 
               ComputationalEngine`Cond`modNRC] === 
             ComputationalEngine`Cond`pieq[
              ComputationalEngine`Cond`t, ComputationalEngine`Cond`m], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
               ComputationalEngine`Cond`wceq[ComputationalEngine`Cond`t], 
               ComputationalEngine`Cond`t + 1, 
               ComputationalEngine`Cond`modNRC] === 
             ComputationalEngine`Cond`wceq[ComputationalEngine`Cond`t], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[{
                ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t], 
                ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t], 
                ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t]}, 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === {
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
                ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t], 
                ComputationalEngine`Cond`t - 1, 
                ComputationalEngine`Cond`modNRC], 
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
                ComputationalEngine`Cond`sg[ComputationalEngine`Cond`t], 
                ComputationalEngine`Cond`t - 1, 
                ComputationalEngine`Cond`modNRC], 
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
                ComputationalEngine`Cond`dc[ComputationalEngine`Cond`t], 
                ComputationalEngine`Cond`t, ComputationalEngine`Cond`modNRC]},
              FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
               foo`pi[ComputationalEngine`Cond`t], ComputationalEngine`Cond`t - 
               1, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
               ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
              foo`pi[ComputationalEngine`Cond`t] 
               ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
              foo`pi[ComputationalEngine`Cond`t]^2, 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
              ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t]^2, 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[(
                foo`pi[ComputationalEngine`Cond`t] 
                ComputationalEngine`Cond`eps["pi"][
                 ComputationalEngine`Cond`t]) bar`delta, 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[(
                ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t] 
                foo`eps["pi"][ComputationalEngine`Cond`t]) 
               ComputationalEngine`Cond`delta, ComputationalEngine`Cond`t - 1,
                ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
               ComputationalEngine`Cond`pi[foo`t], ComputationalEngine`Cond`t - 
               1, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[foo`t], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
               ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t], 
               ComputationalEngine`Cond`t - 1, 
               ComputationalEngine`Cond`modNRC] === ReplaceAll[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
                ComputationalEngine`Cond`pi[foo`t], foo`t - 1, 
                ComputationalEngine`Cond`modNRC], foo`t -> 
               ComputationalEngine`Cond`t], ExpandAll[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
               ComputationalEngine`Cond`pi[foo`t] 
                ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t], 
                foo`t - 1, ComputationalEngine`Cond`modNRC]] === 
             ExpandAll[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                ComputationalEngine`Cond`t] 
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
                 ComputationalEngine`Cond`pi[foo`t], foo`t - 1, 
                 ComputationalEngine`Cond`modNRC]], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
              ComputationalEngine`Cond`pi[foo`t - 1] 
               ComputationalEngine`Cond`pi[ComputationalEngine`Cond`t], foo`t - 
               1, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
               foo`t - 1] 
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
               ComputationalEngine`Cond`t]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.016687`4.372893263776947, "CPUTimeUsed" -> 0.016896000000000022`, 
         "MemoryUsed" -> 65552, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 2651669407463407664 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700775889774*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "2d77844b-9971-434f-9600-0b3014156c51", "TestID" -> 
         "ComputeConditionalExpectations_20231007-QUYTI0", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt", 
         "EvaluationID" -> "ee9fbf62-452c-487a-bc4c-d1979efd4c1a", "Input" -> 
         HoldForm[Unset[
             $ContextAliases["ce`"]]; True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000023`1.512242833849585, "CPUTimeUsed" -> 
         0.000023999999999801958`, "MemoryUsed" -> 2392, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>]|>, 
    "FailureResults" -> <||>, "TestsNotEvaluatedKeys" -> {}, 
    "TestsFailedWrongResultsKeys" -> {}, "TestsFailedWithMessagesKeys" -> {}, 
    "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {5297959389081382236, 3067539779485863768, 
     5909685310977301003, 3962720906852827063, 4029712862078879326, 
     6379842145561170407, 3105233855663732005, 8907866654308615221, 
     7069819210749017413, 779104685964114918, 5586287066539720749, 
     2651669407463407664}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9056878003567467`*^9, 3.905699467726048*^9, 
  3.9057007759171057`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"1b688ec7-62aa-4f84-9f31-1e3bc9eda8e1"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9056878003567467`*^9, 3.905699467726048*^9, 
  3.905700775931059*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"363b6495-31f2-43fb-a58a-0a0cd1d37b14"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9056878003567467`*^9, 3.905699467726048*^9, 
  3.905700775931953*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"c92518bb-0a90-499f-96d8-0af66f423859"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tr", "=", 
  RowBox[{
  "TestReport", "[", 
   "\"\</Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt\>\
\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expected", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
        ")"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}]}], "Input",
 CellChangeTimes->{{3.905687542874485*^9, 3.905687543055066*^9}, 
   3.90570079251503*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"e330a50a-d51d-4861-9e79-8ecbadd6a684"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: ComputeUnconditionalExpectations.wlt\"", 
                  "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["17", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: ComputeUnconditionalExpectations.wlt\"", 
                  "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["17", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["17", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "4.541921`5.577305652492773", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: ComputeUnconditionalExpectations.wlt", "Aborted" -> 
    False, "TestResults" -> <|
     5321317136419298024 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700793451125*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "5ac4286a-45ff-4da2-ac78-8da1ecbdf588", "TestID" -> 
         "ComputeUnconditionalExpectations_20231007-CN914G", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "20cdfe20-4792-42d0-b848-23dd26311261", "Input" -> 
         HoldForm[Needs["PacletizedResourceFunctions`"]; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000045`1.8037275116073352, "CPUTimeUsed" -> 
         0.000046000000001100716`, "MemoryUsed" -> 2800, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 7647054926420679895 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700793451564*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "208de3b0-ae78-4174-b1b3-ca5c0f6322cf", "TestID" -> 
         "ComputeUnconditionalExpectations_20231007-71XUHO", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "4bd76914-5d80-4769-8e07-e5c7f8e71836", "Input" -> 
         HoldForm[
          Needs["FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`"]; $ContextAliases["ce`"] = 
            "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`"; True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.008894`4.099612122944908, "CPUTimeUsed" -> 0.008899000000001323, 
         "MemoryUsed" -> 3424, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 2138329807971378494 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700793460869*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "0e2a3dcb-896e-41ef-80e4-19fbe17384b3", "TestID" -> 
         "ComputeUnconditionalExpectations_20231007-AK6ZI1", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "c2c39fe5-0cfd-494f-b23f-1e5119d3caa2", "Input" -> 
         HoldForm[
           
           MemberQ[$ContextPath, 
            "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`"]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000027`1.5818787619909769, "CPUTimeUsed" -> 
         0.00002700000000110947, "MemoryUsed" -> 2736, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 3353623355940006247 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057007934611797`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "f25aa0c8-8c10-45b7-a831-966d6b54ebcb", "TestID" -> 
         "ComputeUnconditionalExpectations_20231007-ZD8YR6", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "3adbdb18-b86a-4a96-9f95-d32d95b5d5a2", "Input" -> 
         HoldForm[
           Not[Names["*uncondE"] === {}]], "ExpectedMessages" -> HoldForm[{}],
          "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.03347`4.6751707101897715, "CPUTimeUsed" -> 
         0.033483000000000374`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 2024737415896851655 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700793495082*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "15f7a9f5-8a9b-4c37-8ec4-d5dba06bf8d6", "TestID" -> 
         "ComputeUnconditionalExpectations_20231007-JJQ298", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "678d4451-615e-4ab5-b53b-005cd81422bb", "Input" -> 
         HoldForm[Get[
             Get[
              FileNameJoin[{"FernandoDuarte/LongRunRisk", "Models.wl"}]]]; 
           ComputationalEngine`Uncond`msp = FernandoDuarte`LongRunRisk`Models; 
           ComputationalEngine`Uncond`modBY = 
            ComputationalEngine`Uncond`msp["BY"]; 
           ComputationalEngine`Uncond`modNRC = 
            ComputationalEngine`Uncond`msp["NRC"]; 
           ComputationalEngine`Uncond`createSystem = 
            FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`createSystem; 
           ComputationalEngine`Uncond`evNoEpsStateVarsProduct = 
            FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`evNoEpsStateVarsProduct; 
           ComputationalEngine`Uncond`uncondEStep = 
            FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`uncondEStep; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.124265`5.244863821990167, "CPUTimeUsed" -> 0.12973600000000118`, 
         "MemoryUsed" -> 4970784, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 6879441881553885222 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700793619899*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "832a3034-264e-40e5-be83-d838e45ff138", "TestID" -> 
         "ComputeUnconditionalExpectations_20231007-2H9YIE", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "4c94e048-8c65-4a54-96f7-e79f96304f69", "Input" -> 
         HoldForm[{
             ComputationalEngine`Uncond`nameRules1, 
              ComputationalEngine`Uncond`system1, 
              ComputationalEngine`Uncond`unknowns1} = 
            ComputationalEngine`Uncond`createSystem[
             1, ComputationalEngine`Uncond`modNRC]; {
             ComputationalEngine`Uncond`nameRules2, 
              ComputationalEngine`Uncond`system2, 
              ComputationalEngine`Uncond`unknowns2} = 
            ComputationalEngine`Uncond`createSystem[
             2, ComputationalEngine`Uncond`modNRC]; {
             ComputationalEngine`Uncond`nameRules3, 
              ComputationalEngine`Uncond`system3, 
              ComputationalEngine`Uncond`unknowns3} = 
            ComputationalEngine`Uncond`createSystem[
             3, ComputationalEngine`Uncond`modNRC]; {
             ComputationalEngine`Uncond`nameRules4, 
              ComputationalEngine`Uncond`system4, 
              ComputationalEngine`Uncond`unknowns4} = 
            ComputationalEngine`Uncond`createSystem[
             4, ComputationalEngine`Uncond`modNRC]; 
           ComputationalEngine`Uncond`sol1 = Flatten[
              Solve[
              ComputationalEngine`Uncond`system1, 
               ComputationalEngine`Uncond`unknowns1]]; 
           ComputationalEngine`Uncond`sol2 = Flatten[
              Solve[
              ComputationalEngine`Uncond`system2, 
               ComputationalEngine`Uncond`unknowns2]]; 
           ComputationalEngine`Uncond`sol3 = Flatten[
              Solve[
              ComputationalEngine`Uncond`system3, 
               ComputationalEngine`Uncond`unknowns3]]; 
           ComputationalEngine`Uncond`sol4 = Flatten[
              Solve[
              ComputationalEngine`Uncond`system4, 
               ComputationalEngine`Uncond`unknowns4]]; Apply[And, {
              Apply[And, {
                Not[ComputationalEngine`Uncond`nameRules1 === $Failed], 
                Not[ComputationalEngine`Uncond`system1 === $Failed], 
                Not[ComputationalEngine`Uncond`unknowns1 === $Failed]}], 
              Apply[And, {
                Not[ComputationalEngine`Uncond`nameRules2 === $Failed], 
                Not[ComputationalEngine`Uncond`system2 === $Failed], 
                Not[ComputationalEngine`Uncond`unknowns2 === $Failed]}], 
              Apply[And, {
                Not[ComputationalEngine`Uncond`nameRules3 === $Failed], 
                Not[ComputationalEngine`Uncond`system3 === $Failed], 
                Not[ComputationalEngine`Uncond`unknowns3 === $Failed]}], 
              Apply[And, {
                Not[ComputationalEngine`Uncond`nameRules4 === $Failed], 
                Not[ComputationalEngine`Uncond`system4 === $Failed], 
                Not[ComputationalEngine`Uncond`unknowns4 === $Failed]}], 
              Apply[And, {
                Not[ComputationalEngine`Uncond`sol1 === {}], 
                Not[ComputationalEngine`Uncond`sol2 === {}], 
                Not[ComputationalEngine`Uncond`sol3 === {}], 
                Not[ComputationalEngine`Uncond`sol4 === {}]}], 
              Apply[And, {
                Apply[MatchQ, 
                 ReplaceAll[
                  Intersection[
                  ComputationalEngine`Uncond`unknowns1, 
                   ComputationalEngine`Uncond`unknowns3], {
                  ComputationalEngine`Uncond`sol1, 
                   ComputationalEngine`Uncond`sol3}]], 
                Apply[MatchQ, 
                 ReplaceAll[
                  Intersection[
                  ComputationalEngine`Uncond`unknowns2, 
                   ComputationalEngine`Uncond`unknowns3], {
                  ComputationalEngine`Uncond`sol2, 
                   ComputationalEngine`Uncond`sol3}]], 
                Apply[MatchQ, 
                 ReplaceAll[
                  Intersection[
                  ComputationalEngine`Uncond`unknowns1, 
                   ComputationalEngine`Uncond`unknowns4], {
                  ComputationalEngine`Uncond`sol1, 
                   ComputationalEngine`Uncond`sol4}]], 
                Apply[MatchQ, 
                 ReplaceAll[
                  Intersection[
                  ComputationalEngine`Uncond`unknowns2, 
                   ComputationalEngine`Uncond`unknowns4], {
                  ComputationalEngine`Uncond`sol2, 
                   ComputationalEngine`Uncond`sol4}]], 
                Apply[MatchQ, 
                 ReplaceAll[
                  Intersection[
                  ComputationalEngine`Uncond`unknowns3, 
                   ComputationalEngine`Uncond`unknowns4], {
                  ComputationalEngine`Uncond`sol3, 
                   ComputationalEngine`Uncond`sol4}]]}]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         3.861972`6.737324118572734, "CPUTimeUsed" -> 3.866612999999999, 
         "MemoryUsed" -> 4804040, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 8282248681331977632 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057007974823837`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "f44d88f7-573e-490f-bc14-fc0c28808880", "TestID" -> 
         "ComputeUnconditionalExpectations_20231007-07D8K1", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "fdab20d7-7327-4344-9eb1-ba9ab65f8b95", "Input" -> 
         HoldForm[
           Apply[
           And, {ReplaceAll[
              FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`pi1, 
               ComputationalEngine`Uncond`sol1] === 
             FernandoDuarte`LongRunRisk`Model`Parameters`mup, 
             ReplaceAll[
              FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`sg1, 
               ComputationalEngine`Uncond`sol1] === 
             FernandoDuarte`LongRunRisk`Model`Parameters`Esg, FullSimplify[
               ExpandAll[
                ReplaceAll[
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`pi2, 
                 ComputationalEngine`Uncond`sol2]]] === FullSimplify[
               ExpandAll[
               FernandoDuarte`LongRunRisk`Model`Parameters`mup^2 + 
                Divide[FernandoDuarte`LongRunRisk`Model`Parameters`xip^2 + ((
                    2 FernandoDuarte`LongRunRisk`Model`Parameters`rhop) 
                    FernandoDuarte`LongRunRisk`Model`Parameters`xip) 
                   FernandoDuarte`LongRunRisk`Model`Parameters`phip + 
                  FernandoDuarte`LongRunRisk`Model`Parameters`phip^2, 1 - 
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhop^2]]], 
             Simplify[
               ReplaceAll[
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`sg2, 
                ComputationalEngine`Uncond`sol2]] === 
             Simplify[
              FernandoDuarte`LongRunRisk`Model`Parameters`Esg^2 + 
               FernandoDuarte`LongRunRisk`Model`Parameters`phig^2/(1 - 
                FernandoDuarte`LongRunRisk`Model`Parameters`rhog^2)], Simplify[
               ReplaceAll[
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`pi1sg1, 
                ComputationalEngine`Uncond`sol2]] === 
             Simplify[
              FernandoDuarte`LongRunRisk`Model`Parameters`Esg 
               FernandoDuarte`LongRunRisk`Model`Parameters`mup]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000532`2.8764266301270376, "CPUTimeUsed" -> 0.0005329999999990065, 
         "MemoryUsed" -> 6040, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 2254810726640386886 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057007974833207`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "4e4c62c8-c59e-4da7-bbd9-5044f163f1b0", "TestID" -> 
         "ComputeUnconditionalExpectations_20231007-8JVM8C", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "1237028f-6811-4bb0-a3b4-3afe499b32be", "Input" -> 
         HoldForm[
           Apply[
           And, {FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
               ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t], 
               ComputationalEngine`Uncond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`Parameters`mup, 
             
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
               ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t], 
               ComputationalEngine`Uncond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`Parameters`Esg, FullSimplify[
               ExpandAll[
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t]^2,
                  ComputationalEngine`Uncond`modNRC]]] === FullSimplify[
               ExpandAll[
               FernandoDuarte`LongRunRisk`Model`Parameters`mup^2 + 
                Divide[FernandoDuarte`LongRunRisk`Model`Parameters`xip^2 + ((
                    2 FernandoDuarte`LongRunRisk`Model`Parameters`rhop) 
                    FernandoDuarte`LongRunRisk`Model`Parameters`xip) 
                   FernandoDuarte`LongRunRisk`Model`Parameters`phip + 
                  FernandoDuarte`LongRunRisk`Model`Parameters`phip^2, 1 - 
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhop^2]]], 
             Simplify[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
               ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t]^2, 
                ComputationalEngine`Uncond`modNRC]] === 
             Simplify[
              FernandoDuarte`LongRunRisk`Model`Parameters`Esg^2 + 
               FernandoDuarte`LongRunRisk`Model`Parameters`phig^2/(1 - 
                FernandoDuarte`LongRunRisk`Model`Parameters`rhog^2)], Simplify[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
               ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t], 
                ComputationalEngine`Uncond`modNRC]] === 
             Simplify[
              FernandoDuarte`LongRunRisk`Model`Parameters`Esg 
               FernandoDuarte`LongRunRisk`Model`Parameters`mup]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.005326`3.8769161599349165, "CPUTimeUsed" -> 0.005363000000000895, 
         "MemoryUsed" -> 8680, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 1571206176742730309 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057007974889297`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "82c939ce-5554-4064-9075-767c35192c17", "TestID" -> 
         "ComputeUnconditionalExpectations_20231007-3RVDTA", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "864db63d-afbe-4cbd-8f3f-d3ae8e1b4684", "Input" -> 
         HoldForm[
           Apply[And, {
             Apply[And, 
              Map[NumberQ, 
               ReplaceRepeated[
                Values[ComputationalEngine`Uncond`sol1], 
                ComputationalEngine`Uncond`modNRC["parameters"]]]], 
             Apply[And, 
              Map[NumberQ, 
               ReplaceRepeated[
                Values[ComputationalEngine`Uncond`sol2], 
                ComputationalEngine`Uncond`modNRC["parameters"]]]], 
             Apply[And, 
              Map[NumberQ, 
               ReplaceRepeated[
                Values[ComputationalEngine`Uncond`sol3], 
                ComputationalEngine`Uncond`modNRC["parameters"]]]], 
             Apply[And, 
              Map[NumberQ, 
               ReplaceRepeated[
                Values[ComputationalEngine`Uncond`sol4], 
                ComputationalEngine`Uncond`modNRC["parameters"]]]]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.001378`3.289764215403601, "CPUTimeUsed" -> 0.0013779999999989911`, 
         "MemoryUsed" -> 3168, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7943971382993172704 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057007974908657`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "9d7b27b5-dcbf-4cab-9ffe-705f03d4e7d3", "TestID" -> 
         "ComputeUnconditionalExpectations_20231007-CSQIKZ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "96ea8d65-2cac-4494-b38b-d40261652199", "Input" -> 
         HoldForm[
          ComputationalEngine`Uncond`stateVarsNoEps = {
             ComputationalEngine`Uncond`sg, ComputationalEngine`Uncond`pi}; 
           ComputationalEngine`Uncond`model = 
            ComputationalEngine`Uncond`modNRC; 
           Apply[And, {
             ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                ComputationalEngine`Uncond`eps["pi"][
                 ComputationalEngine`Uncond`t - 1], 
                ComputationalEngine`Uncond`model, 
                ComputationalEngine`Uncond`stateVarsNoEps] === 
              ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`eps["pi"][
                 ComputationalEngine`Uncond`t - 1] 
                ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t], 
                ComputationalEngine`Uncond`model, 
                ComputationalEngine`Uncond`stateVarsNoEps], 
              ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
                ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t], 
                ComputationalEngine`Uncond`model, 
                ComputationalEngine`Uncond`stateVarsNoEps] === 
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
               ComputationalEngine`Uncond`t], 
              ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t], 
                ComputationalEngine`Uncond`model, 
                ComputationalEngine`Uncond`stateVarsNoEps] === 
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                ComputationalEngine`Uncond`t] 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                ComputationalEngine`Uncond`t], ExpandAll[
                ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
                ComputationalEngine`Uncond`pi[
                  ComputationalEngine`Uncond`t - 1] 
                 ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t], 
                 ComputationalEngine`Uncond`model, 
                 ComputationalEngine`Uncond`stateVarsNoEps]] === ExpandAll[
                Subtract[
                FernandoDuarte`LongRunRisk`Model`Parameters`Esg 
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   ComputationalEngine`Uncond`t - 1] + ((
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhog 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    ComputationalEngine`Uncond`t - 1]) 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    ComputationalEngine`Uncond`t - 1] + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`phig 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    ComputationalEngine`Uncond`t - 1]) 
                   FernandoDuarte`LongRunRisk`Model`Shocks`eps["sg"][
                    ComputationalEngine`Uncond`t]), (
                  FernandoDuarte`LongRunRisk`Model`Parameters`Esg 
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhog) 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                  ComputationalEngine`Uncond`t - 1]]], ExpandAll[
                ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
                ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                 ComputationalEngine`Uncond`eps["pi"][
                  ComputationalEngine`Uncond`t], 
                 ComputationalEngine`Uncond`model, 
                 ComputationalEngine`Uncond`stateVarsNoEps]] === ExpandAll[
                Subtract[
                FernandoDuarte`LongRunRisk`Model`Parameters`mup 
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                   ComputationalEngine`Uncond`t] + ((
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhop 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    ComputationalEngine`Uncond`t - 1]) 
                   FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    ComputationalEngine`Uncond`t] + ((
                    FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    ComputationalEngine`Uncond`t - 1]) 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    ComputationalEngine`Uncond`t] + 
                   FernandoDuarte`LongRunRisk`Model`Parameters`phip 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    ComputationalEngine`Uncond`t]^2)), (
                  FernandoDuarte`LongRunRisk`Model`Parameters`mup 
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhop) 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  ComputationalEngine`Uncond`t]]], 
              ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                ComputationalEngine`Uncond`eps["pi"][
                 ComputationalEngine`Uncond`t + 1], 
                ComputationalEngine`Uncond`model, 
                ComputationalEngine`Uncond`stateVarsNoEps] === 
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                ComputationalEngine`Uncond`t] 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                1 + ComputationalEngine`Uncond`t], ExpandAll[
                ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
                ComputationalEngine`Uncond`eps["pi"][
                  ComputationalEngine`Uncond`t] 
                 ComputationalEngine`Uncond`dd[
                  ComputationalEngine`Uncond`t, ComputationalEngine`Uncond`i],
                  ComputationalEngine`Uncond`model, 
                 ComputationalEngine`Uncond`stateVarsNoEps]] === 
              ExpandAll[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dd[
                 ComputationalEngine`Uncond`t, ComputationalEngine`Uncond`i] 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                 ComputationalEngine`Uncond`t]], ExpandAll[
                ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
                ComputationalEngine`Uncond`eps["pi"][
                  ComputationalEngine`Uncond`t] 
                 ComputationalEngine`Uncond`dd[
                  ComputationalEngine`Uncond`t, ComputationalEngine`Uncond`i],
                  ComputationalEngine`Uncond`model, 
                 Append[
                 ComputationalEngine`Uncond`stateVarsNoEps, 
                  ComputationalEngine`Uncond`dd]]] === ExpandAll[
                Subtract[
                FernandoDuarte`LongRunRisk`Model`Parameters`mud[
                   ComputationalEngine`Uncond`i] 
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                   ComputationalEngine`Uncond`t] + ((
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    ComputationalEngine`Uncond`t - 1] 
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[
                    ComputationalEngine`Uncond`i]) 
                   FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    ComputationalEngine`Uncond`t] + ((
                    FernandoDuarte`LongRunRisk`Model`Parameters`phidc[
                    ComputationalEngine`Uncond`i] 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                    ComputationalEngine`Uncond`t]) 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    ComputationalEngine`Uncond`t] + ((
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    ComputationalEngine`Uncond`t - 2] 
                    FernandoDuarte`LongRunRisk`Model`Parameters`xid[
                    ComputationalEngine`Uncond`i]) 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    ComputationalEngine`Uncond`t - 1]) 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    ComputationalEngine`Uncond`t])), (
                  FernandoDuarte`LongRunRisk`Model`Parameters`mup 
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[
                   ComputationalEngine`Uncond`i]) 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  ComputationalEngine`Uncond`t]]], 
              ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                ComputationalEngine`Uncond`eps["pi"][
                 ComputationalEngine`Uncond`t - 1], 
                ComputationalEngine`Uncond`model, 
                ComputationalEngine`Uncond`stateVarsNoEps] === 
              ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`eps["pi"][
                 ComputationalEngine`Uncond`t - 1] 
                ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t], 
                ComputationalEngine`Uncond`model, 
                ComputationalEngine`Uncond`stateVarsNoEps], 
              ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                ComputationalEngine`Uncond`sg[
                 ComputationalEngine`Uncond`t - 1], 
                ComputationalEngine`Uncond`model, 
                ComputationalEngine`Uncond`stateVarsNoEps] === 
              ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t - 1]
                  ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t],
                 ComputationalEngine`Uncond`model, 
                ComputationalEngine`Uncond`stateVarsNoEps]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.02395`4.529820515582574, "CPUTimeUsed" -> 0.02411500000000011, 
         "MemoryUsed" -> 36688, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 8021612496559143934 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700797515371*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "04ec172d-0d83-48ba-abbf-2c22f02aaad8", "TestID" -> 
         "ComputeUnconditionalExpectations_20231007-X7QRK6", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "cf232e87-7b25-4625-be34-098e6e151213", "Input" -> 
         HoldForm[
           Apply[And, {
             Apply[And, 
              Map[MatchQ[#, "FernandoDuarte`LongRunRisk`Model`Shocks`"]& , 
               DeleteDuplicates[
                Cases[
                 
                 ComputationalEngine`Uncond`evNoEpsStateVarsProduct[(
                   ComputationalEngine`Uncond`pi[
                    ComputationalEngine`Uncond`t - 1] 
                   ComputationalEngine`Uncond`dd[
                    ComputationalEngine`Uncond`t, 
                    ComputationalEngine`Uncond`i]) 
                  ComputationalEngine`Uncond`eps["pi"][
                   ComputationalEngine`Uncond`t - 1], 
                  ComputationalEngine`Uncond`model, 
                  Append[
                  ComputationalEngine`Uncond`stateVarsNoEps, 
                   ComputationalEngine`Uncond`dd]], PatternTest[
                   Pattern[ComputationalEngine`Uncond`x, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                   BlankSequence[]][
                   BlankSequence[], 
                   BlankNullSequence[]] :> 
                 Context[ComputationalEngine`Uncond`x], Infinity]]]], 
             Apply[And, 
              Map[MatchQ[#, "FernandoDuarte`LongRunRisk`Model`Shocks`"]& , 
               DeleteDuplicates[
                Cases[
                 ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
                 ComputationalEngine`Uncond`pi[
                   ComputationalEngine`Uncond`t - 1] ((
                    ComputationalEngine`Uncond`dd[
                    ComputationalEngine`Uncond`t, 
                    ComputationalEngine`Uncond`i] 
                    ComputationalEngine`Uncond`eps["pi"][
                    ComputationalEngine`Uncond`t]) 
                   ComputationalEngine`Uncond`eps["pi"][
                    ComputationalEngine`Uncond`t - 1]), 
                  ComputationalEngine`Uncond`model, 
                  Append[
                  ComputationalEngine`Uncond`stateVarsNoEps, 
                   ComputationalEngine`Uncond`dd]], PatternTest[
                   Pattern[ComputationalEngine`Uncond`x, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                   BlankSequence[]][
                   BlankSequence[], 
                   BlankNullSequence[]] :> 
                 Context[ComputationalEngine`Uncond`x], Infinity]]]], 
             Apply[And, 
              Map[MatchQ[#, "FernandoDuarte`LongRunRisk`Model`Shocks`"]& , 
               DeleteDuplicates[
                Cases[
                 
                 ComputationalEngine`Uncond`evNoEpsStateVarsProduct[((
                    ComputationalEngine`Uncond`pi[
                    ComputationalEngine`Uncond`t - 1] 
                    ComputationalEngine`Uncond`sg[
                    ComputationalEngine`Uncond`t]) 
                   ComputationalEngine`Uncond`dd[
                    ComputationalEngine`Uncond`t, 
                    ComputationalEngine`Uncond`i]) 
                  ComputationalEngine`Uncond`eps["pi"][
                   ComputationalEngine`Uncond`t - 1], 
                  ComputationalEngine`Uncond`model, 
                  Append[
                  ComputationalEngine`Uncond`stateVarsNoEps, 
                   ComputationalEngine`Uncond`dd]], PatternTest[
                   Pattern[ComputationalEngine`Uncond`x, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                   BlankSequence[]][
                   BlankSequence[], 
                   BlankNullSequence[]] :> 
                 Context[ComputationalEngine`Uncond`x], Infinity]]]]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.060607`4.933037785130388, "CPUTimeUsed" -> 0.06123900000000049, 
         "MemoryUsed" -> 119440, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 1429264123699375995 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700797576583*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "0991c59d-22a1-46d0-8d62-448112379043", "TestID" -> 
         "ComputeUnconditionalExpectations_20231007-QD5R66", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "62b89e7b-83ed-4593-9d56-4585ac4ff1b8", "Input" -> 
         HoldForm[
           Apply[And, {{} === Cases[
               ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                ComputationalEngine`Uncond`sg[
                 ComputationalEngine`Uncond`t - 1], 
                ComputationalEngine`Uncond`model, 
                ComputationalEngine`Uncond`stateVarsNoEps], 
               PatternTest[
                Blank[Symbol], MatchQ[
                 SymbolName[#], "pi"]& ][ComputationalEngine`Uncond`t], 
               Infinity], 
             Not[{} === Cases[
                ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
                ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                 ComputationalEngine`Uncond`sg[
                  ComputationalEngine`Uncond`t - 1], 
                 ComputationalEngine`Uncond`model, 
                 ComputationalEngine`Uncond`stateVarsNoEps], 
                PatternTest[
                 Blank[Symbol], MatchQ[
                  SymbolName[#], "sg"]& ][ComputationalEngine`Uncond`t - 1], 
                Infinity]], {} === Cases[
               ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                 ComputationalEngine`Uncond`sg[
                  ComputationalEngine`Uncond`t - 1] + 
                ComputationalEngine`Uncond`pi[
                  ComputationalEngine`Uncond`t - 1] 
                 ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t], 
                ComputationalEngine`Uncond`model, 
                ComputationalEngine`Uncond`stateVarsNoEps], 
               PatternTest[
                Blank[Symbol], MatchQ[
                 SymbolName[#], "pi"]& ][ComputationalEngine`Uncond`t], 
               Infinity], {} === Cases[
               ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                 ComputationalEngine`Uncond`sg[
                  ComputationalEngine`Uncond`t - 1] + 
                ComputationalEngine`Uncond`pi[
                  ComputationalEngine`Uncond`t - 1] 
                 ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t], 
                ComputationalEngine`Uncond`model, 
                ComputationalEngine`Uncond`stateVarsNoEps], 
               PatternTest[
                Blank[Symbol], MatchQ[
                 SymbolName[#], "sg"]& ][ComputationalEngine`Uncond`t], 
               Infinity], 
             Not[{} === Cases[
                ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
                ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                  ComputationalEngine`Uncond`sg[
                   ComputationalEngine`Uncond`t - 1] + 
                 ComputationalEngine`Uncond`pi[
                   ComputationalEngine`Uncond`t - 1] 
                  ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t],
                  ComputationalEngine`Uncond`model, 
                 ComputationalEngine`Uncond`stateVarsNoEps], 
                PatternTest[
                 Blank[Symbol], MatchQ[
                  SymbolName[#], "pi"]& ][ComputationalEngine`Uncond`t - 1], 
                Infinity]], 
             Not[{} === Cases[
                ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
                ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                  ComputationalEngine`Uncond`sg[
                   ComputationalEngine`Uncond`t - 1] + 
                 ComputationalEngine`Uncond`pi[
                   ComputationalEngine`Uncond`t - 1] 
                  ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t],
                  ComputationalEngine`Uncond`model, 
                 ComputationalEngine`Uncond`stateVarsNoEps], 
                PatternTest[
                 Blank[Symbol], MatchQ[
                  SymbolName[#], "sg"]& ][ComputationalEngine`Uncond`t - 1], 
                Infinity]]}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.029713`4.6234615007857744, "CPUTimeUsed" -> 
         0.029996000000002354`, "MemoryUsed" -> 71608, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 6604184607334631959 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700797606788*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "d45b3b3b-b05c-424e-b5fa-b92b67c23e55", "TestID" -> 
         "ComputeUnconditionalExpectations_20231007-BRRBF2", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "d7146bfa-808a-49fb-b1fc-b1ac9b9ba8d6", "Input" -> 
         HoldForm[
           Apply[
           And, {ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
              ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
               ComputationalEngine`Uncond`foo[
                ComputationalEngine`Uncond`t - 1], 
               ComputationalEngine`Uncond`model, 
               ComputationalEngine`Uncond`stateVarsNoEps] === 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
               ComputationalEngine`Uncond`t] 
              ComputationalEngine`Uncond`foo[
               ComputationalEngine`Uncond`t - 1], ExpandAll[
               
               ComputationalEngine`Uncond`evNoEpsStateVarsProduct[(
                 ComputationalEngine`Uncond`eps["pi"][
                  ComputationalEngine`Uncond`t + 1] 
                 ComputationalEngine`Uncond`eps["pi"][
                  ComputationalEngine`Uncond`t]) 
                ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t], 
                ComputationalEngine`Uncond`model, 
                ComputationalEngine`Uncond`stateVarsNoEps]] === 
             ExpandAll[
              FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                ComputationalEngine`Uncond`t + 1] 
               ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
                ComputationalEngine`Uncond`eps["pi"][
                  ComputationalEngine`Uncond`t] 
                 ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t], 
                 ComputationalEngine`Uncond`model, 
                 ComputationalEngine`Uncond`stateVarsNoEps]]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00362`3.7092235683651573, "CPUTimeUsed" -> 0.0036340000000016914`, 
         "MemoryUsed" -> 8832, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 239783464915537306 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057007976108217`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "7e4a8b0e-49c6-4a52-b53c-d3c37daf1b6c", "TestID" -> 
         "ComputeUnconditionalExpectations_20231007-GPADHK", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "178257d2-3b31-4ac7-8235-fdb0556e3fd6", "Input" -> 
         HoldForm[
           Apply[
           And, {ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
              ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
               ComputationalEngine`Uncond`eps["pi"][
                ComputationalEngine`Uncond`t - 1], 
               ComputationalEngine`Uncond`model, 
               Append[
               ComputationalEngine`Uncond`stateVarsNoEps, 
                ComputationalEngine`Uncond`myVariable]] === 
             ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
              ComputationalEngine`Uncond`eps["pi"][
                ComputationalEngine`Uncond`t - 1] 
               ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t], 
               ComputationalEngine`Uncond`model, 
               Append[
               ComputationalEngine`Uncond`stateVarsNoEps, 
                ComputationalEngine`Uncond`dd]], 
             ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t], 
               ComputationalEngine`Uncond`model, 
               Append[
               ComputationalEngine`Uncond`stateVarsNoEps, 
                ComputationalEngine`Uncond`irrelevantVar]] === 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
              ComputationalEngine`Uncond`t], 
             ComputationalEngine`Uncond`evNoEpsStateVarsProduct[(
                ComputationalEngine`Uncond`anotherIrrelevantVar 
                ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t]) 
               ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t], 
               ComputationalEngine`Uncond`model, 
               Append[
               ComputationalEngine`Uncond`stateVarsNoEps, 
                ComputationalEngine`Uncond`anotherIrrelevantVar]] === (
               ComputationalEngine`Uncond`anotherIrrelevantVar 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                ComputationalEngine`Uncond`t]) 
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
               ComputationalEngine`Uncond`t]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.004653`3.818248050365262, "CPUTimeUsed" -> 0.004674000000001399, 
         "MemoryUsed" -> 8192, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 2304074915654938083 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700797616019*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "c762fe31-3093-4370-85e1-af87b942dbfd", "TestID" -> 
         "ComputeUnconditionalExpectations_20231007-YG20Z4", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "bc5a459c-1cba-4a13-971c-bc7043d22d20", "Input" -> 
         HoldForm[
           Apply[And, {
             FreeQ[
              ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
              ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t - 1] 
               ComputationalEngine`Uncond`dd[
                ComputationalEngine`Uncond`t, ComputationalEngine`Uncond`i], 
               ComputationalEngine`Uncond`model, 
               Append[
               ComputationalEngine`Uncond`stateVarsNoEps, 
                ComputationalEngine`Uncond`dd]], 
              PatternTest[
               Blank[Symbol], MatchQ[
                SymbolName[#], "dd"]& ][
              ComputationalEngine`Uncond`t, ComputationalEngine`Uncond`i]], 
             FreeQ[
              ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
              ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
               ComputationalEngine`Uncond`dd[
                ComputationalEngine`Uncond`t - 1, 
                 ComputationalEngine`Uncond`i], 
               ComputationalEngine`Uncond`model, 
               Append[
               ComputationalEngine`Uncond`stateVarsNoEps, 
                ComputationalEngine`Uncond`dd]], 
              PatternTest[
               Blank[Symbol], MatchQ[
                SymbolName[#], "pi"]& ][ComputationalEngine`Uncond`t]], 
             FreeQ[
              
              ComputationalEngine`Uncond`evNoEpsStateVarsProduct[(
                ComputationalEngine`Uncond`pi[
                 ComputationalEngine`Uncond`t - 1] 
                ComputationalEngine`Uncond`dd[
                 ComputationalEngine`Uncond`t, ComputationalEngine`Uncond`i]) 
               ComputationalEngine`Uncond`eps["pi"][
                ComputationalEngine`Uncond`t - 1], 
               ComputationalEngine`Uncond`model, 
               Append[
               ComputationalEngine`Uncond`stateVarsNoEps, 
                ComputationalEngine`Uncond`dd]], 
              PatternTest[
               Blank[Symbol], MatchQ[
                SymbolName[#], "dd"]& ][
              ComputationalEngine`Uncond`t - 1, 
               ComputationalEngine`Uncond`i]], 
             Not[
              FreeQ[
               
               ComputationalEngine`Uncond`evNoEpsStateVarsProduct[(
                 ComputationalEngine`Uncond`pi[
                  ComputationalEngine`Uncond`t - 1] 
                 ComputationalEngine`Uncond`dd[
                  ComputationalEngine`Uncond`t, ComputationalEngine`Uncond`i])
                  ComputationalEngine`Uncond`eps["pi"][
                 ComputationalEngine`Uncond`t - 1], 
                ComputationalEngine`Uncond`model, 
                Append[
                ComputationalEngine`Uncond`stateVarsNoEps, 
                 ComputationalEngine`Uncond`dd]], 
               PatternTest[
                Blank[Symbol], MatchQ[
                 SymbolName[#], "eps"]& ]["pi"][
               ComputationalEngine`Uncond`t - 1]]], 
             FreeQ[
              
              ComputationalEngine`Uncond`evNoEpsStateVarsProduct[(
                ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                ComputationalEngine`Uncond`dd[
                 ComputationalEngine`Uncond`t - 1, 
                  ComputationalEngine`Uncond`i]) 
               ComputationalEngine`Uncond`eps["pi"][
                ComputationalEngine`Uncond`t - 1], 
               ComputationalEngine`Uncond`model, 
               Append[
               ComputationalEngine`Uncond`stateVarsNoEps, 
                ComputationalEngine`Uncond`dd]], 
              PatternTest[
               Blank[Symbol], MatchQ[
                SymbolName[#], "pi"]& ][
              ComputationalEngine`Uncond`t, ComputationalEngine`Uncond`i]], 
             FreeQ[
              
              ComputationalEngine`Uncond`evNoEpsStateVarsProduct[(
                ComputationalEngine`Uncond`pi[
                 ComputationalEngine`Uncond`t - 1] 
                ComputationalEngine`Uncond`dd[
                 ComputationalEngine`Uncond`t, ComputationalEngine`Uncond`i]) 
               ComputationalEngine`Uncond`eps["dd"][
                ComputationalEngine`Uncond`t - 1, 
                 ComputationalEngine`Uncond`i], 
               ComputationalEngine`Uncond`model, 
               Append[
               ComputationalEngine`Uncond`stateVarsNoEps, 
                ComputationalEngine`Uncond`dd]], 
              PatternTest[
               Blank[Symbol], MatchQ[
                SymbolName[#], "dd"]& ][
              ComputationalEngine`Uncond`t - 1, 
               ComputationalEngine`Uncond`i]], 
             Not[
              FreeQ[
               
               ComputationalEngine`Uncond`evNoEpsStateVarsProduct[(
                 ComputationalEngine`Uncond`pi[
                  ComputationalEngine`Uncond`t - 1] 
                 ComputationalEngine`Uncond`dd[
                  ComputationalEngine`Uncond`t, ComputationalEngine`Uncond`i])
                  ComputationalEngine`Uncond`eps["dd"][
                 ComputationalEngine`Uncond`t - 1, 
                  ComputationalEngine`Uncond`i], 
                ComputationalEngine`Uncond`model, 
                Append[
                ComputationalEngine`Uncond`stateVarsNoEps, 
                 ComputationalEngine`Uncond`dd]], 
               PatternTest[
                Blank[Symbol], MatchQ[
                 SymbolName[#], "eps"]& ]["dd"][
               ComputationalEngine`Uncond`t - 1, 
                ComputationalEngine`Uncond`i]]], 
             FreeQ[
              ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
              ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] (
                ComputationalEngine`Uncond`dd[
                 ComputationalEngine`Uncond`t - 1, 
                  ComputationalEngine`Uncond`i] 
                ComputationalEngine`Uncond`eps["dd"][
                 ComputationalEngine`Uncond`t - 1, 
                  ComputationalEngine`Uncond`i]), 
               ComputationalEngine`Uncond`model, 
               Append[
               ComputationalEngine`Uncond`stateVarsNoEps, 
                ComputationalEngine`Uncond`dd]], 
              PatternTest[
               Blank[Symbol], MatchQ[
                SymbolName[#], "pi"]& ][ComputationalEngine`Uncond`t]], 
             Not[
              FreeQ[
               ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] (
                 ComputationalEngine`Uncond`dd[
                  ComputationalEngine`Uncond`t - 1, 
                   ComputationalEngine`Uncond`i] 
                 ComputationalEngine`Uncond`eps["dd"][
                  ComputationalEngine`Uncond`t - 1, 
                   ComputationalEngine`Uncond`i]), 
                ComputationalEngine`Uncond`model, 
                Append[
                ComputationalEngine`Uncond`stateVarsNoEps, 
                 ComputationalEngine`Uncond`dd]], 
               PatternTest[
                Blank[Symbol], MatchQ[
                 SymbolName[#], "pi"]& ][
                Blank[]]]], 
             FreeQ[
              ComputationalEngine`Uncond`uncondEStep[
              ComputationalEngine`Uncond`dc[ComputationalEngine`Uncond`t - 1] 
               ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t], 
               ComputationalEngine`Uncond`modNRC], 
              PatternTest[
               Blank[Symbol], MatchQ[
                SymbolName[#], "dc"]& ], Infinity], 
             FreeQ[
              ComputationalEngine`Uncond`uncondEStep[
              ComputationalEngine`Uncond`dc[ComputationalEngine`Uncond`t - 1] 
               ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t], 
               ComputationalEngine`Uncond`modNRC], 
              PatternTest[
               Blank[Symbol], MatchQ[
                SymbolName[#], "pi"]& ][ComputationalEngine`Uncond`t], 
              Infinity]}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.205154`5.462594986895061, "CPUTimeUsed" -> 
         0.20636599999999916`, "MemoryUsed" -> 370384, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 6042152627786156866 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700797821892*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "e51be536-2127-418e-87f7-ef6871351c4b", "TestID" -> 
         "ComputeUnconditionalExpectations_20231007-SRG6D6", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "ed94be16-0c89-440b-bf11-59c4bd1efafc", "Input" -> 
         HoldForm[
           Apply[
           And, {ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
              ComputationalEngine`Uncond`wc[ComputationalEngine`Uncond`t] 
               ComputationalEngine`Uncond`eps["pi"][
                ComputationalEngine`Uncond`t - 1], 
               ComputationalEngine`Uncond`model, 
               ComputationalEngine`Uncond`stateVarsNoEps] === 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`wc[
               ComputationalEngine`Uncond`t] 
              FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
               ComputationalEngine`Uncond`t - 1], Coefficient[
               ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`wc[ComputationalEngine`Uncond`t] 
                ComputationalEngine`Uncond`eps["pi"][
                 ComputationalEngine`Uncond`t], 
                ComputationalEngine`Uncond`model, {
                ComputationalEngine`Uncond`wc}], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
               ComputationalEngine`Uncond`t - 1]] === (
               FernandoDuarte`LongRunRisk`Model`Parameters`rhop 
               FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[1]) 
              FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
               ComputationalEngine`Uncond`t], DeleteDuplicates[
               Cases[
                
                ComputationalEngine`Uncond`evNoEpsStateVarsProduct[(
                  ComputationalEngine`Uncond`A[0] 
                  ComputationalEngine`Uncond`wc[ComputationalEngine`Uncond`t])
                   ComputationalEngine`Uncond`eps["pi"][
                  ComputationalEngine`Uncond`t - 1], 
                 ComputationalEngine`Uncond`model, 
                 ComputationalEngine`Uncond`stateVarsNoEps], PatternTest[
                  Pattern[ComputationalEngine`Uncond`x, 
                   Blank[Symbol]], MatchQ[
                   SymbolName[#], "A"]& ][
                  Blank[]] :> Context[ComputationalEngine`Uncond`x], 
                Infinity]] === {
              "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"}, 
             DeleteDuplicates[
               Cases[
                
                ComputationalEngine`Uncond`evNoEpsStateVarsProduct[(
                  ComputationalEngine`Uncond`A[0] 
                  ComputationalEngine`Uncond`wc[ComputationalEngine`Uncond`t])
                   ComputationalEngine`Uncond`eps["pi"][
                  ComputationalEngine`Uncond`t - 1], 
                 ComputationalEngine`Uncond`model, {
                 ComputationalEngine`Uncond`wc}], PatternTest[
                  Pattern[ComputationalEngine`Uncond`x, 
                   Blank[Symbol]], MatchQ[
                   SymbolName[#], "A"]& ][
                  Blank[]] :> Context[ComputationalEngine`Uncond`x], 
                Infinity]] === {
              "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"}, 
             ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
              ComputationalEngine`Uncond`pd[
                ComputationalEngine`Uncond`t, ComputationalEngine`Uncond`i] 
               ComputationalEngine`Uncond`eps["pi"][
                ComputationalEngine`Uncond`t - 1], 
               ComputationalEngine`Uncond`model, 
               ComputationalEngine`Uncond`stateVarsNoEps] === 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`pd[
               ComputationalEngine`Uncond`t, ComputationalEngine`Uncond`i] 
              FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
               ComputationalEngine`Uncond`t - 1], Coefficient[
               ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`pd[
                 ComputationalEngine`Uncond`t, ComputationalEngine`Uncond`i] 
                ComputationalEngine`Uncond`eps["pi"][
                 ComputationalEngine`Uncond`t], 
                ComputationalEngine`Uncond`model, {
                ComputationalEngine`Uncond`pd}], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
               ComputationalEngine`Uncond`t - 1]] === (
               FernandoDuarte`LongRunRisk`Model`Parameters`rhop 
               FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
                ComputationalEngine`Uncond`i][1]) 
              FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
               ComputationalEngine`Uncond`t], DeleteDuplicates[
               Cases[
                ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
                ComputationalEngine`Uncond`A[
                  0] ((ComputationalEngine`Uncond`B[
                    ComputationalEngine`Uncond`i][1] 
                   ComputationalEngine`Uncond`pd[
                    ComputationalEngine`Uncond`t, 
                    ComputationalEngine`Uncond`i]) 
                  ComputationalEngine`Uncond`eps["pi"][
                   ComputationalEngine`Uncond`t - 1]), 
                 ComputationalEngine`Uncond`model, 
                 ComputationalEngine`Uncond`stateVarsNoEps], PatternTest[
                  Pattern[ComputationalEngine`Uncond`x, 
                   Blank[Symbol]], MatchQ[
                   SymbolName[#], "A"]& ][
                  Blank[]] :> Context[ComputationalEngine`Uncond`x], 
                Infinity]] === {
              "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"}, 
             DeleteDuplicates[
               Cases[
                ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
                ComputationalEngine`Uncond`A[
                  0] ((ComputationalEngine`Uncond`B[
                    ComputationalEngine`Uncond`i][1] 
                   ComputationalEngine`Uncond`pd[
                    ComputationalEngine`Uncond`t, 
                    ComputationalEngine`Uncond`i]) 
                  ComputationalEngine`Uncond`eps["pi"][
                   ComputationalEngine`Uncond`t - 1]), 
                 ComputationalEngine`Uncond`model, 
                 ComputationalEngine`Uncond`stateVarsNoEps], PatternTest[
                  Pattern[ComputationalEngine`Uncond`x, 
                   Blank[Symbol]], MatchQ[
                   SymbolName[#], "B"]& ][
                  Blank[]][
                  Blank[]] :> Context[ComputationalEngine`Uncond`x], 
                Infinity]] === {
              "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"}, 
             DeleteDuplicates[
               Cases[
                ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
                ComputationalEngine`Uncond`A[
                  0] ((ComputationalEngine`Uncond`B[
                    ComputationalEngine`Uncond`i][1] 
                   ComputationalEngine`Uncond`pd[
                    ComputationalEngine`Uncond`t, 
                    ComputationalEngine`Uncond`i]) 
                  ComputationalEngine`Uncond`eps["pi"][
                   ComputationalEngine`Uncond`t - 1]), 
                 ComputationalEngine`Uncond`model, {
                 ComputationalEngine`Uncond`pd}], PatternTest[
                  Pattern[ComputationalEngine`Uncond`x, 
                   Blank[Symbol]], MatchQ[
                   SymbolName[#], "A"]& ][
                  Blank[]] :> Context[ComputationalEngine`Uncond`x], 
                Infinity]] === {
              "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"}, 
             DeleteDuplicates[
               Cases[
                ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
                ComputationalEngine`Uncond`A[
                  0] ((ComputationalEngine`Uncond`B[
                    ComputationalEngine`Uncond`i][1] 
                   ComputationalEngine`Uncond`pd[
                    ComputationalEngine`Uncond`t, 
                    ComputationalEngine`Uncond`i]) 
                  ComputationalEngine`Uncond`eps["pi"][
                   ComputationalEngine`Uncond`t - 1]), 
                 ComputationalEngine`Uncond`model, {
                 ComputationalEngine`Uncond`pd}], PatternTest[
                  Pattern[ComputationalEngine`Uncond`x, 
                   Blank[Symbol]], MatchQ[
                   SymbolName[#], "B"]& ][
                  Blank[]][
                  Blank[]] :> Context[ComputationalEngine`Uncond`x], 
                Infinity]] === {
              "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"}}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.028774`4.609515237100684, "CPUTimeUsed" -> 0.028968999999998246`, 
         "MemoryUsed" -> 26592, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7199251515317633527 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905700797851376*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "60ba6599-76d9-4979-89d0-2bc850ac45ac", "TestID" -> 
         "ComputeUnconditionalExpectations_20231007-YVCN6D", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "64922d5c-d438-4742-8e51-df7ecb9be637", "Input" -> 
         HoldForm[
           Apply[And, {Simplify[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                ComputationalEngine`Uncond`wc[ComputationalEngine`Uncond`t], 
                ComputationalEngine`Uncond`modNRC]] === 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[0], 
             Simplify[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                ComputationalEngine`Uncond`wc[ComputationalEngine`Uncond`t], 
                ComputationalEngine`Uncond`modBY]] === 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[0], 0 === 
             Simplify[
               Subtract[
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                 ComputationalEngine`Uncond`pi[
                   ComputationalEngine`Uncond`t]^3, 
                  ComputationalEngine`Uncond`modNRC] 
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                  ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t],
                   ComputationalEngine`Uncond`modNRC], 
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t]^3 
                 ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t], 
                 ComputationalEngine`Uncond`modNRC]]], 0 === Simplify[
               Subtract[
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t]^3 
                 ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t], 
                 ComputationalEngine`Uncond`modNRC], 
                FernandoDuarte`LongRunRisk`Model`Parameters`Esg (
                 FernandoDuarte`LongRunRisk`Model`Parameters`mup 
                 Subtract[FernandoDuarte`LongRunRisk`Model`Parameters`mup^2, 
                   Divide[
                   3 (FernandoDuarte`LongRunRisk`Model`Parameters`phip^2 + ((
                    2 FernandoDuarte`LongRunRisk`Model`Parameters`phip) 
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhop) 
                    FernandoDuarte`LongRunRisk`Model`Parameters`xip + 
                    FernandoDuarte`LongRunRisk`Model`Parameters`xip^2), 
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhop^2 - 
                    1]])]], Simplify[
               PacletizedResourceFunctions`SetSymbolsContext[
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                 ComputationalEngine`Uncond`dc[ComputationalEngine`Uncond`t], 
                 ComputationalEngine`Uncond`modNRC]]] === 
             ComputationalEngine`Uncond`muc, FullSimplify[
               Expand[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                 ComputationalEngine`Uncond`dc[
                   ComputationalEngine`Uncond`t]^2, 
                  ComputationalEngine`Uncond`modNRC]]]] === FullSimplify[
               Expand[
               ComputationalEngine`Uncond`muc^2 + (
                 ComputationalEngine`Uncond`phic^2 + ((((2 
                    ComputationalEngine`Uncond`Esg) 
                    ComputationalEngine`Uncond`phip) 
                    ComputationalEngine`Uncond`rhocp) 
                   ComputationalEngine`Uncond`xic + (
                   ComputationalEngine`Uncond`xic^2 (
                    ComputationalEngine`Uncond`Esg^2 + 
                    ComputationalEngine`Uncond`phig^2/(1 - 
                    ComputationalEngine`Uncond`rhog^2)) + 
                   Divide[ComputationalEngine`Uncond`rhocp^2 (
                    ComputationalEngine`Uncond`phip^2 + ((2 
                    ComputationalEngine`Uncond`phip) 
                    ComputationalEngine`Uncond`rhop) 
                    ComputationalEngine`Uncond`xip + 
                    ComputationalEngine`Uncond`xip^2), 1 - 
                    ComputationalEngine`Uncond`rhop^2])))]], FullSimplify[
               Expand[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                 ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                  ComputationalEngine`Uncond`dc[ComputationalEngine`Uncond`t],
                   ComputationalEngine`Uncond`modNRC]]]] === FullSimplify[
               Expand[
               ComputationalEngine`Uncond`muc 
                 ComputationalEngine`Uncond`mup + ((
                   ComputationalEngine`Uncond`rhocp 
                   ComputationalEngine`Uncond`xip) 
                  ComputationalEngine`Uncond`phip + (((
                    ComputationalEngine`Uncond`xic 
                    ComputationalEngine`Uncond`rhop) 
                    ComputationalEngine`Uncond`phip) 
                   ComputationalEngine`Uncond`Esg + ((
                    ComputationalEngine`Uncond`xic 
                    ComputationalEngine`Uncond`xip) 
                    ComputationalEngine`Uncond`Esg + 
                   Divide[(ComputationalEngine`Uncond`rhocp 
                    ComputationalEngine`Uncond`rhop) (
                    ComputationalEngine`Uncond`xip^2 + ((2 
                    ComputationalEngine`Uncond`rhop) 
                    ComputationalEngine`Uncond`xip) 
                    ComputationalEngine`Uncond`phip + 
                    ComputationalEngine`Uncond`phip^2), 1 - 
                    ComputationalEngine`Uncond`rhop^2])))]], FullSimplify[
               Expand[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                 ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t] 
                  ComputationalEngine`Uncond`dc[ComputationalEngine`Uncond`t],
                   ComputationalEngine`Uncond`modNRC]]]] === FullSimplify[
               Expand[
               ComputationalEngine`Uncond`muc 
                ComputationalEngine`Uncond`Esg]], FullSimplify[
               Expand[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                 ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t] 
                  ComputationalEngine`Uncond`sg[
                   ComputationalEngine`Uncond`t + 1], 
                  ComputationalEngine`Uncond`modNRC]]]] === FullSimplify[
               Expand[
               ComputationalEngine`Uncond`Esg^2 + (
                  ComputationalEngine`Uncond`rhog/(1 - 
                  ComputationalEngine`Uncond`rhog^2)) 
                 ComputationalEngine`Uncond`phig^2]], FullSimplify[
               Expand[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                 ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t] 
                  ComputationalEngine`Uncond`sg[
                   ComputationalEngine`Uncond`t - 1], 
                  ComputationalEngine`Uncond`modNRC]]]] === FullSimplify[
               Expand[
               ComputationalEngine`Uncond`Esg^2 + (
                  ComputationalEngine`Uncond`rhog/(1 - 
                  ComputationalEngine`Uncond`rhog^2)) 
                 ComputationalEngine`Uncond`phig^2]], FullSimplify[
               Expand[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                 ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                  ComputationalEngine`Uncond`pi[
                   ComputationalEngine`Uncond`t + 1], 
                  ComputationalEngine`Uncond`modNRC]]]] === FullSimplify[
               Expand[
               ComputationalEngine`Uncond`mup^2 + (
                 ComputationalEngine`Uncond`phip 
                  ComputationalEngine`Uncond`xip + 
                 Divide[ComputationalEngine`Uncond`rhop (
                    ComputationalEngine`Uncond`phip^2 + ((2 
                    ComputationalEngine`Uncond`rhop) 
                    ComputationalEngine`Uncond`xip) 
                    ComputationalEngine`Uncond`phip + 
                    ComputationalEngine`Uncond`xip^2), 1 - 
                   ComputationalEngine`Uncond`rhop^2])]], FullSimplify[
               Expand[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                 ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                  ComputationalEngine`Uncond`pi[
                   ComputationalEngine`Uncond`t - 1], 
                  ComputationalEngine`Uncond`modNRC]]]] === FullSimplify[
               Expand[
               ComputationalEngine`Uncond`mup^2 + (
                 ComputationalEngine`Uncond`phip 
                  ComputationalEngine`Uncond`xip + 
                 Divide[ComputationalEngine`Uncond`rhop (
                    ComputationalEngine`Uncond`phip^2 + ((2 
                    ComputationalEngine`Uncond`rhop) 
                    ComputationalEngine`Uncond`xip) 
                    ComputationalEngine`Uncond`phip + 
                    ComputationalEngine`Uncond`xip^2), 1 - 
                   ComputationalEngine`Uncond`rhop^2])]], FullSimplify[
               Expand[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                 ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                  ComputationalEngine`Uncond`sg[
                   ComputationalEngine`Uncond`t + 1], 
                  ComputationalEngine`Uncond`modNRC]]]] === FullSimplify[
               Expand[
               ComputationalEngine`Uncond`Esg 
                ComputationalEngine`Uncond`mup]], FullSimplify[
               Expand[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                 ComputationalEngine`Uncond`pi[
                   ComputationalEngine`Uncond`t - 1] 
                  ComputationalEngine`Uncond`dc[ComputationalEngine`Uncond`t],
                   ComputationalEngine`Uncond`modNRC]]]] === FullSimplify[
               Expand[
               ComputationalEngine`Uncond`muc 
                 ComputationalEngine`Uncond`mup + ((
                   ComputationalEngine`Uncond`Esg 
                   ComputationalEngine`Uncond`phip) 
                  ComputationalEngine`Uncond`xic + 
                 Divide[ComputationalEngine`Uncond`rhocp (
                    ComputationalEngine`Uncond`phip^2 + ((2 
                    ComputationalEngine`Uncond`phip) 
                    ComputationalEngine`Uncond`rhop) 
                    ComputationalEngine`Uncond`xip + 
                    ComputationalEngine`Uncond`xip^2), 1 - 
                   ComputationalEngine`Uncond`rhop^2])]]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.149541`5.325275278335708, "CPUTimeUsed" -> 0.15038599999999924`, 
         "MemoryUsed" -> 234352, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>]|>, "FailureResults" -> <||>, 
    "TestsNotEvaluatedKeys" -> {}, "TestsFailedWrongResultsKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {5321317136419298024, 7647054926420679895, 
     2138329807971378494, 3353623355940006247, 2024737415896851655, 
     6879441881553885222, 8282248681331977632, 2254810726640386886, 
     1571206176742730309, 7943971382993172704, 8021612496559143934, 
     1429264123699375995, 6604184607334631959, 239783464915537306, 
     2304074915654938083, 6042152627786156866, 7199251515317633527}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.905687805753385*^9, {3.905700783780603*^9, 3.905700798024575*^9}},
 CellLabel->"Out[32]=",ExpressionUUID->"43573582-81e7-4d22-98f2-eff3cc83d653"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.905687805753385*^9, {3.905700783780603*^9, 3.905700798030828*^9}},
 CellLabel->"Out[35]=",ExpressionUUID->"6a1ae683-8c21-46a9-83d1-2cde089bd922"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.905687805753385*^9, {3.905700783780603*^9, 3.905700798031765*^9}},
 CellLabel->"Out[36]=",ExpressionUUID->"72dd1bbf-5fc1-4aa0-a5fe-b2943e8c786c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tr", "=", 
  RowBox[{
  "TestReport", "[", 
   "\"\</Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/CreateEulerEq.wlt\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expected", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
        ")"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}]}], "Input",
 CellChangeTimes->{{3.9056875447746487`*^9, 3.90568754503517*^9}, {
  3.9057687796612167`*^9, 
  3.9057687896852217`*^9}},ExpressionUUID->"ab52a8a9-6ba0-4c63-83a5-\
96864da8b71f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905687908187132*^9, 3.905768230952148*^9, 
  3.90576878377812*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"b286ddec-4b5a-4c70-adec-f24fdc08de7e"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905687908187132*^9, 3.905768230952148*^9, 
  3.905768783779179*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"e7a43eea-8082-4268-92fa-b226ac336fe1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tr", "=", 
  RowBox[{
  "TestReport", "[", 
   "\"\</Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/SolveEulerEq.wlt\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expected", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
        ")"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}]}], "Input",
 CellChangeTimes->{{3.905097131309546*^9, 3.905097132763056*^9}, {
   3.905687546464522*^9, 3.905687548255028*^9}, 3.9057687992907124`*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"2f5705e2-54a0-49dc-bed2-96972ce91fe4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: SolveEulerEq.wlt\"", "SummaryItem"]}],
                "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: SolveEulerEq.wlt\"", "SummaryItem"]}],
                "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "11.677943`7.217881348962545", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: SolveEulerEq.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     3383862288379265681 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057704347093606`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "3e1c892f-2b20-4d5f-ab7d-167a24d43772", "TestID" -> 
         "SolveEulerEq_20231008-BNRV7R", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/SolveEulerEq.wlt", "EvaluationID" -> 
         "e1776eea-73ba-4ac2-a9e6-21cd1d72e86a", "Input" -> HoldForm[Off[
             MessageName[General, "stop"]]; 
           Needs["FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
"]; $ContextPath = DeleteDuplicates[
              
              Prepend[$ContextPath, 
               "FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`"]]; Get[
             Get[
              FileNameJoin[{"FernandoDuarte/LongRunRisk", "Models.wl"}]]]; 
           ComputationalEngine`SolveEulerEq`msp = 
            FernandoDuarte`LongRunRisk`Models; 
           ComputationalEngine`SolveEulerEq`modBY = 
            ComputationalEngine`SolveEulerEq`msp["BY"]; 
           ComputationalEngine`SolveEulerEq`modBKY = 
            ComputationalEngine`SolveEulerEq`msp["BKY"]; 
           ComputationalEngine`SolveEulerEq`modNRC = 
            ComputationalEngine`SolveEulerEq`msp["NRC"]; 
           ComputationalEngine`SolveEulerEq`modDES = 
            ComputationalEngine`SolveEulerEq`msp["DES"]; 
           ComputationalEngine`SolveEulerEq`modNRCStochVol = 
            ComputationalEngine`SolveEulerEq`msp["NRCStochVol"]; 
           ComputationalEngine`SolveEulerEq`mods = {
             ComputationalEngine`SolveEulerEq`modBY, 
              ComputationalEngine`SolveEulerEq`modBKY, 
              ComputationalEngine`SolveEulerEq`modNRC, 
              ComputationalEngine`SolveEulerEq`modDES, 
              ComputationalEngine`SolveEulerEq`modNRCStochVol}; 
           ComputationalEngine`SolveEulerEq`coeffsQ[
              Pattern[ComputationalEngine`SolveEulerEq`sol, 
               Blank[]], 
              Pattern[ComputationalEngine`SolveEulerEq`coeffName, 
               Blank[]], 
              Pattern[ComputationalEngine`SolveEulerEq`numStateVars, 
               Blank[]], 
              Optional[
               Pattern[ComputationalEngine`SolveEulerEq`numAssets, 
                Blank[]], 0], 
              Optional[
               Pattern[ComputationalEngine`SolveEulerEq`bond, 
                Blank[]], 0]] := Apply[And, {
               If[ComputationalEngine`SolveEulerEq`numAssets == 0, Sort[
                  Cases[
                   Map[Keys, ComputationalEngine`SolveEulerEq`sol], 
                   ComputationalEngine`SolveEulerEq`coeffName[
                    Pattern[ComputationalEngine`SolveEulerEq`i, 
                    Blank[Integer]]] :> ComputationalEngine`SolveEulerEq`i]] === 
                Range[ComputationalEngine`SolveEulerEq`numStateVars + 1] - 1, 
                Sort[
                  
                  Tuples[{
                   Range[ComputationalEngine`SolveEulerEq`numAssets] - 
                    ComputationalEngine`SolveEulerEq`bond, 
                    Range[ComputationalEngine`SolveEulerEq`numStateVars + 1] - 
                    1}]] == Sort[
                  Cases[
                   Map[Keys, ComputationalEngine`SolveEulerEq`sol], 
                   ComputationalEngine`SolveEulerEq`coeffName[
                    Pattern[ComputationalEngine`SolveEulerEq`i, 
                    Blank[Integer]]][
                    Pattern[ComputationalEngine`SolveEulerEq`j, 
                    Blank[Integer]]] :> {
                    ComputationalEngine`SolveEulerEq`i, 
                    ComputationalEngine`SolveEulerEq`j}]]], 
               Apply[And, 
                Map[MatchQ[#, ComputationalEngine`SolveEulerEq`coeffName]& , 
                 Cases[
                  Map[Keys, ComputationalEngine`SolveEulerEq`sol], 
                  Pattern[ComputationalEngine`SolveEulerEq`var, 
                    Blank[]][
                    Pattern[ComputationalEngine`SolveEulerEq`i, 
                    Blank[Integer]]][
                    Pattern[ComputationalEngine`SolveEulerEq`j, 
                    Blank[Integer]]] :> 
                  ComputationalEngine`SolveEulerEq`var]]], 
               Apply[And, 
                Map[MatchQ[#, 
                  StringDrop[
                   ToString[
                   ComputationalEngine`SolveEulerEq`coeffName], -1]]& , 
                 Cases[
                  Map[Keys, ComputationalEngine`SolveEulerEq`sol], 
                  Pattern[ComputationalEngine`SolveEulerEq`var, 
                    Blank[]][
                    Pattern[ComputationalEngine`SolveEulerEq`i, 
                    Blank[Integer]]][
                    Pattern[ComputationalEngine`SolveEulerEq`j, 
                    Blank[Integer]]] :> 
                  Context[ComputationalEngine`SolveEulerEq`var]]]], 
               Apply[And, 
                Map[NumberQ, 
                 Map[Values, ComputationalEngine`SolveEulerEq`sol]]]}]; 
           ComputationalEngine`SolveEulerEq`opts = {{
              "initialGuess" -> <|"Ewc" -> {4.6}, "Epd" -> {{5.6}}|>}, {
              "PrintResidualsNorm" -> False}, {"MaxIterations" -> 1}, {
              "FindRootOptions" -> {"MaxIterations" -> 1}}, {
              "initialGuess" -> <|"Ewc" -> {4.6}, "Epd" -> {{5.6}}|>, 
               "PrintResidualsNorm" -> False}, {
              "initialGuess" -> <|"Ewc" -> {4.6}, "Epd" -> {{5.6}}|>, 
               "PrintResidualsNorm" -> False, "MaxIterations" -> 1}, {
              "initialGuess" -> <|"Ewc" -> {4.6}, "Epd" -> {{5.6}}|>, 
               "MaxIterations" -> 1}, {
              "PrintResidualsNorm" -> False, "MaxIterations" -> 1}, {
              "initialGuess" -> <|"Ewc" -> {4.6}, "Epd" -> {{5.6}}|>, 
               "PrintResidualsNorm" -> False, 
               "FindRootOptions" -> {
                WorkingPrecision -> $MachinePrecision}}, {
              "initialGuess" -> <|"Ewc" -> {4.6}, "Epd" -> {{5.6}}|>, 
               "PrintResidualsNorm" -> False, "MaxIterations" -> 1, 
               "FindRootOptions" -> {
                WorkingPrecision -> $MachinePrecision}}, {
              "initialGuess" -> <|"Ewc" -> {4.6}, "Epd" -> {{5.6}}|>, 
               "MaxIterations" -> 1, 
               "FindRootOptions" -> {
                WorkingPrecision -> $MachinePrecision}}, {
              "PrintResidualsNorm" -> False, "MaxIterations" -> 1, 
               "FindRootOptions" -> {WorkingPrecision -> $MachinePrecision}}}; 
           ComputationalEngine`SolveEulerEq`optsRepeated = {{
              "initialGuess" -> <|"Ewc" -> {4.6}, "Epd" -> {{5.6}}|>, 
               "PrintResidualsNorm" -> False, 
               "FindRootOptions" -> {WorkingPrecision -> $MachinePrecision}, 
               WorkingPrecision -> $MachinePrecision}, {
              "initialGuess" -> <|"Ewc" -> {4.6}, "Epd" -> {{5.6}}|>, 
               "PrintResidualsNorm" -> False, "MaxIterations" -> 1, 
               "FindRootOptions" -> {WorkingPrecision -> $MachinePrecision}, 
               WorkingPrecision -> $MachinePrecision}, {
              "initialGuess" -> <|"Ewc" -> {4.6}, "Epd" -> {{5.6}}|>, 
               "MaxIterations" -> 1, 
               "FindRootOptions" -> {WorkingPrecision -> $MachinePrecision}, 
               WorkingPrecision -> $MachinePrecision}, {
              "PrintResidualsNorm" -> False, "MaxIterations" -> 1, 
               "FindRootOptions" -> {WorkingPrecision -> $MachinePrecision}, 
               WorkingPrecision -> $MachinePrecision}, {
              "PrintResidualsNorm" -> False, "MaxIterations" -> 1, 
               "FindRootOptions" -> {"MaxIterations" -> 5}}, {
               "PrintResidualsNorm" -> False, "MaxIterations" -> 1, 
                "FindRootOptions" -> {
                 "MaxIterations" -> 5, 
                  WorkingPrecision -> $MachinePrecision}}; {
               "PrintResidualsNorm" -> False, "MaxIterations" -> 1, 
                "FindRootOptions" -> {
                 "MaxIterations" -> 5, WorkingPrecision -> $MachinePrecision},
                 WorkingPrecision -> $MachinePrecision}}; 
           ComputationalEngine`SolveEulerEq`optsMany = Join[
              Part[ComputationalEngine`SolveEulerEq`opts, 
               Span[5, -1]], ComputationalEngine`SolveEulerEq`optsRepeated]; 
           Do[ComputationalEngine`SolveEulerEq`ind = 0; 
             ComputationalEngine`SolveEulerEq`numStateVars = Length[
                ComputationalEngine`SolveEulerEq`model["stateVars"][
                ComputationalEngine`SolveEulerEq`t]]; 
             ComputationalEngine`SolveEulerEq`numStocks = 
              ComputationalEngine`SolveEulerEq`model["numStocks"]; 
             ComputationalEngine`SolveEulerEq`coeffsQWc[
                Pattern[ComputationalEngine`SolveEulerEq`sol, 
                 Blank[]]] := 
              ComputationalEngine`SolveEulerEq`coeffsQ[
               ComputationalEngine`SolveEulerEq`sol, 
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, 
                ComputationalEngine`SolveEulerEq`numStateVars]; 
             ComputationalEngine`SolveEulerEq`coeffsQPd[
                Pattern[ComputationalEngine`SolveEulerEq`sol, 
                 Blank[]]] := 
              ComputationalEngine`SolveEulerEq`coeffsQ[
               ComputationalEngine`SolveEulerEq`sol, 
                Head[
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd],
                 ComputationalEngine`SolveEulerEq`numStateVars, 
                ComputationalEngine`SolveEulerEq`numStocks]; 
             ComputationalEngine`SolveEulerEq`coeffsQBond[
                Pattern[ComputationalEngine`SolveEulerEq`sol, 
                 Blank[]], 
                Pattern[ComputationalEngine`SolveEulerEq`maxMaturity, 
                 Blank[]]] := 
              ComputationalEngine`SolveEulerEq`coeffsQ[
               ComputationalEngine`SolveEulerEq`sol, 
                Head[
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb], 
                ComputationalEngine`SolveEulerEq`numStateVars, 
                ComputationalEngine`SolveEulerEq`maxMaturity + 1, 1]; 
             ComputationalEngine`SolveEulerEq`coeffsQNomBond[
                Pattern[ComputationalEngine`SolveEulerEq`sol, 
                 Blank[]], 
                Pattern[ComputationalEngine`SolveEulerEq`maxMaturity, 
                 Blank[]]] := 
              ComputationalEngine`SolveEulerEq`coeffsQ[
               ComputationalEngine`SolveEulerEq`sol, 
                Head[
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb],
                 ComputationalEngine`SolveEulerEq`numStateVars, 
                ComputationalEngine`SolveEulerEq`maxMaturity + 1, 1]; 
             ComputationalEngine`SolveEulerEq`updateCoeffs = 
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
updateCoeffs; 
             ComputationalEngine`SolveEulerEq`updateCoeffsSol = 
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`updateCoeffsSol; 
             ComputationalEngine`SolveEulerEq`updateCoeffsWc = 
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`updateCoeffsWc; 
             ComputationalEngine`SolveEulerEq`updateCoeffsPd = 
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`updateCoeffsPd; 
             ComputationalEngine`SolveEulerEq`updateCoeffsBond = 
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`updateCoeffsBond; 
             ComputationalEngine`SolveEulerEq`newParameters = {
               ComputationalEngine`SolveEulerEq`delta -> 0.99}; 
             ComputationalEngine`SolveEulerEq`guessCoeffsSolution = {
               ComputationalEngine`SolveEulerEq`A[0] -> 4.6}; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = 
              Apply[And, {
                ComputationalEngine`SolveEulerEq`updateCoeffs[
                  ComputationalEngine`SolveEulerEq`model] == 
                 ComputationalEngine`SolveEulerEq`updateCoeffs[
                  ComputationalEngine`SolveEulerEq`model, {}] == 
                 ComputationalEngine`SolveEulerEq`updateCoeffs[
                  ComputationalEngine`SolveEulerEq`model, {}, {}] == 
                 ComputationalEngine`SolveEulerEq`updateCoeffs[
                  ComputationalEngine`SolveEulerEq`model, {}, {}, {}] == 
                 ComputationalEngine`SolveEulerEq`updateCoeffsSol[
                  ComputationalEngine`SolveEulerEq`model, {}, {}], 
                 ComputationalEngine`SolveEulerEq`updateCoeffs[
                  ComputationalEngine`SolveEulerEq`model, 
                   ComputationalEngine`SolveEulerEq`newParameters] == 
                 ComputationalEngine`SolveEulerEq`updateCoeffs[
                  ComputationalEngine`SolveEulerEq`model, 
                   ComputationalEngine`SolveEulerEq`newParameters, {}] == 
                 ComputationalEngine`SolveEulerEq`updateCoeffs[
                  ComputationalEngine`SolveEulerEq`model, 
                   ComputationalEngine`SolveEulerEq`newParameters, {}, {}] == 
                 ComputationalEngine`SolveEulerEq`updateCoeffsSol[
                  ComputationalEngine`SolveEulerEq`model, 
                   ComputationalEngine`SolveEulerEq`newParameters, {}], 
                 ComputationalEngine`SolveEulerEq`updateCoeffs[
                  ComputationalEngine`SolveEulerEq`model, 
                   ComputationalEngine`SolveEulerEq`newParameters, 
                   ComputationalEngine`SolveEulerEq`guessCoeffsSolution] == 
                 ComputationalEngine`SolveEulerEq`updateCoeffs[
                  ComputationalEngine`SolveEulerEq`model, 
                   ComputationalEngine`SolveEulerEq`newParameters, 
                   ComputationalEngine`SolveEulerEq`guessCoeffsSolution] == 
                 ComputationalEngine`SolveEulerEq`updateCoeffs[
                  ComputationalEngine`SolveEulerEq`model, 
                   ComputationalEngine`SolveEulerEq`newParameters, 
                   ComputationalEngine`SolveEulerEq`guessCoeffsSolution, {}, \
{}] == ComputationalEngine`SolveEulerEq`updateCoeffsSol[
                  ComputationalEngine`SolveEulerEq`model, 
                   ComputationalEngine`SolveEulerEq`newParameters, 
                   ComputationalEngine`SolveEulerEq`guessCoeffsSolution]}]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = Quiet[
                Apply[And, 
                 Flatten[{
                   Map[ComputationalEngine`SolveEulerEq`coeffsQWc, 
                    Map[{
                    ComputationalEngine`SolveEulerEq`updateCoeffsSol[
                    ComputationalEngine`SolveEulerEq`model, {}, {}, #], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, {}, {}, 
                    Sequence[#]], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, {}, {}, 
                    Apply[Sequence, #]], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, {}, #], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    Sequence[{}], #], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    Apply[Sequence, {}], #], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, #], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    Sequence[#]], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    Apply[Sequence, #]], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    Most[#], 
                    Last[#]], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    Sequence[
                    Most[#]], 
                    Last[#]]}& , 
                    Part[ComputationalEngine`SolveEulerEq`opts, 
                    Span[1, 4]]], {2}], 
                   Map[ComputationalEngine`SolveEulerEq`coeffsQWc, 
                    Map[{
                    ComputationalEngine`SolveEulerEq`updateCoeffsSol[
                    ComputationalEngine`SolveEulerEq`model, {}, {}, #], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    First[#], 
                    Rest[#]], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    First[#], 
                    Sequence[
                    Rest[#]]], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    Sequence[
                    First[#], 
                    Rest[#]]], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    Most[#], {
                    Last[#]}], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, {
                    First[#]}, 
                    Rest[#]]}& , ComputationalEngine`SolveEulerEq`optsMany], {
                    2}]}]]]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`optsWc = {
               "MaxIterations" -> 100}; 
             ComputationalEngine`SolveEulerEq`solWc = 
              ComputationalEngine`SolveEulerEq`updateCoeffs[
               ComputationalEngine`SolveEulerEq`model, 
                ComputationalEngine`SolveEulerEq`optsWc]; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = 
              ComputationalEngine`SolveEulerEq`solWc == 
               ComputationalEngine`SolveEulerEq`updateCoeffsSol[
                ComputationalEngine`SolveEulerEq`model, {}, {}, 
                 ComputationalEngine`SolveEulerEq`optsWc] == 
               ComputationalEngine`SolveEulerEq`updateCoeffsWc[
                 ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                 "wc"], 
                 ComputationalEngine`SolveEulerEq`model["params"], {}, 
                 ComputationalEngine`SolveEulerEq`optsWc]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`solWc1 = 
              ComputationalEngine`SolveEulerEq`updateCoeffs[
               ComputationalEngine`SolveEulerEq`model, "MaxIterations" -> 1, 
                "initialGuess" -> <|"Ewc" -> {3}|>]; 
             ComputationalEngine`SolveEulerEq`solWc2 = 
              ComputationalEngine`SolveEulerEq`updateCoeffs[
               ComputationalEngine`SolveEulerEq`model, "MaxIterations" -> 1, 
                "initialGuess" -> <|"Ewc" -> {1}|>]; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = ReplaceAll[
                 FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[0], 
                 ComputationalEngine`SolveEulerEq`solWc1] > ReplaceAll[
                 FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[0], 
                 ComputationalEngine`SolveEulerEq`solWc2]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`solWc1 = 
              ComputationalEngine`SolveEulerEq`updateCoeffs[
               ComputationalEngine`SolveEulerEq`model, 
                "FindRootOptions" -> {"MaxIterations" -> 1}, 
                "initialGuess" -> <|"Ewc" -> {3}|>]; 
             ComputationalEngine`SolveEulerEq`solWc2 = 
              ComputationalEngine`SolveEulerEq`updateCoeffs[
               ComputationalEngine`SolveEulerEq`model, 
                "FindRootOptions" -> {"MaxIterations" -> 1}, 
                "initialGuess" -> <|"Ewc" -> {1}|>]; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = ReplaceAll[
                 FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[0], 
                 ComputationalEngine`SolveEulerEq`solWc1] > ReplaceAll[
                 FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[0], 
                 ComputationalEngine`SolveEulerEq`solWc2]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`m1 = 
              Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
                Reap[
                Module[{}, 
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, "MaxIterations" -> 
                    1, "initialGuess" -> <|"Ewc" -> {4}|>]; 
                   Null]; $MessageList]]; 
             ComputationalEngine`SolveEulerEq`m2 = 
              Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
                Reap[
                Module[{}, 
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, "MaxIterations" -> 
                    3, "initialGuess" -> <|"Ewc" -> {4}|>]; 
                   Null]; $MessageList]]; 
             ComputationalEngine`SolveEulerEq`m3 = 
              Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
                Reap[
                Module[{}, 
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    "FindRootOptions" -> {"MaxIterations" -> 1}, 
                    "initialGuess" -> <|"Ewc" -> {4}|>]; 
                   Null]; $MessageList]]; 
             ComputationalEngine`SolveEulerEq`m4 = 
              Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
                Reap[
                Module[{}, 
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    "FindRootOptions" -> {"MaxIterations" -> 3}, 
                    "initialGuess" -> <|"Ewc" -> {4}|>]; 
                   Null]; $MessageList]]; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = Apply[And, {ReleaseHold[
                   Last[ComputationalEngine`SolveEulerEq`m1]] == {{1}}, 
                 ReleaseHold[
                   Last[ComputationalEngine`SolveEulerEq`m2]] == {{3}}, 
                 ReleaseHold[
                   Last[ComputationalEngine`SolveEulerEq`m3]] == {{1}}, 
                 ReleaseHold[
                   Last[ComputationalEngine`SolveEulerEq`m4]] == {{3}}}]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`m1 = 
              Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
                Reap[
                Module[{}, 
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, "MaxIterations" -> 
                    3, "FindRootOptions" -> {"MaxIterations" -> 1}, 
                    "initialGuess" -> <|"Ewc" -> {4}|>]; 
                   Null]; $MessageList]]; 
             ComputationalEngine`SolveEulerEq`m2 = 
              Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
                Reap[
                Module[{}, 
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    "FindRootOptions" -> {"MaxIterations" -> 1}, 
                    "MaxIterations" -> 3, "initialGuess" -> <|"Ewc" -> {4}|>]; 
                   Null]; $MessageList]]; 
             ComputationalEngine`SolveEulerEq`m3 = 
              Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
                Reap[
                Module[{}, 
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, "MaxIterations" -> 
                    1, "FindRootOptions" -> {"MaxIterations" -> 3}, 
                    "initialGuess" -> <|"Ewc" -> {4}|>]; 
                   Null]; $MessageList]]; 
             ComputationalEngine`SolveEulerEq`m4 = 
              Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
                Reap[
                Module[{}, 
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    "FindRootOptions" -> {"MaxIterations" -> 3}, 
                    "MaxIterations" -> 1, "initialGuess" -> <|"Ewc" -> {4}|>]; 
                   Null]; $MessageList]]; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = Apply[And, {ReleaseHold[
                   Last[ComputationalEngine`SolveEulerEq`m1]] == {{3}}, 
                 ReleaseHold[
                   Last[ComputationalEngine`SolveEulerEq`m2]] == {{3}}, 
                 ReleaseHold[
                   Last[ComputationalEngine`SolveEulerEq`m3]] == {{1}}, 
                 ReleaseHold[
                   Last[ComputationalEngine`SolveEulerEq`m4]] == {{1}}}]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`m1 = 
              Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
                Reap[
                Module[{}, 
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    "PrintResidualsNorm" -> False]; Null]; $MessageList]]; 
             ComputationalEngine`SolveEulerEq`m2 = 
              Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
                Reap[
                Module[{}, 
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    "PrintResidualsNorm" -> True]; Null]; $MessageList]]; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = 
              ReleaseHold[ComputationalEngine`SolveEulerEq`m1] == {{}, {}}; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = 
              First[ComputationalEngine`SolveEulerEq`m2] == {
                 HoldForm[
                  MessageName[
                  FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"]]}; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = NumberQ[
                ReleaseHold[
                 First[
                  Flatten[
                   Last[ComputationalEngine`SolveEulerEq`m2]]]]]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`c1 = Not[
                TrueQ[
                 CheckAbort[
                  Check[
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                   ComputationalEngine`SolveEulerEq`model, "CheckResiduals" -> 
                    False], 
                   Abort[], 
                   MessageName[
                   FernandoDuarte`LongRunRisk`ComputationalEngine`\
SolveEulerEq`Private`checks, "largeresid"]], True]]]; 
             ComputationalEngine`SolveEulerEq`c2 = TrueQ[
                CheckAbort[
                 Check[
                  ComputationalEngine`SolveEulerEq`updateCoeffs[
                  ComputationalEngine`SolveEulerEq`model, "CheckResiduals" -> 
                   True], 
                  Abort[], 
                  MessageName[
                  FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"]], True]]; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = 
              Apply[And, {
                ComputationalEngine`SolveEulerEq`c1, 
                 ComputationalEngine`SolveEulerEq`c2}]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`c1 = Not[
                TrueQ[
                 CheckAbort[
                  Check[
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                   ComputationalEngine`SolveEulerEq`model, "CheckResiduals" -> 
                    True, "Tol" -> 1], 
                   Abort[], 
                   MessageName[
                   FernandoDuarte`LongRunRisk`ComputationalEngine`\
SolveEulerEq`Private`checks, "largeresid"]], True]]]; 
             ComputationalEngine`SolveEulerEq`c2 = TrueQ[
                CheckAbort[
                 Check[
                  ComputationalEngine`SolveEulerEq`updateCoeffs[
                  ComputationalEngine`SolveEulerEq`model, "CheckResiduals" -> 
                   True, "Tol" -> 10.^(-20)], 
                  Abort[], 
                  MessageName[
                  FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"]], True]]; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = 
              Apply[And, {
                ComputationalEngine`SolveEulerEq`c1, 
                 ComputationalEngine`SolveEulerEq`c2}]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`Ewc0 = 4.6; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = 
              ComputationalEngine`SolveEulerEq`coeffsQWc[
                ComputationalEngine`SolveEulerEq`updateCoeffs[
                ComputationalEngine`SolveEulerEq`model, "UpdatePd" -> False, 
                 "initialGuess" -> <|
                  "Ewc" -> {ComputationalEngine`SolveEulerEq`Ewc0}, 
                   "Epd" -> {{5.5}}|>]]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`coeffsWcPd = 
              ComputationalEngine`SolveEulerEq`updateCoeffs[
               ComputationalEngine`SolveEulerEq`model, "UpdatePd" -> True, 
                "initialGuess" -> <|
                 "Ewc" -> {ComputationalEngine`SolveEulerEq`Ewc0}, 
                  "Epd" -> {{5.5}}|>]; 
             ComputationalEngine`SolveEulerEq`coeffsWc = 
              FilterRules[ComputationalEngine`SolveEulerEq`coeffsWcPd, 
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc[
                 Blank[Integer]]]; 
             ComputationalEngine`SolveEulerEq`coeffsPd = 
              FilterRules[ComputationalEngine`SolveEulerEq`coeffsWcPd, 
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd[
                 Blank[Integer]]]; ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = 
              ComputationalEngine`SolveEulerEq`coeffsQWc[
               ComputationalEngine`SolveEulerEq`coeffsWc]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = 
              ComputationalEngine`SolveEulerEq`coeffsQPd[
               ComputationalEngine`SolveEulerEq`coeffsPd]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = 
              ComputationalEngine`SolveEulerEq`updateCoeffs[
                ComputationalEngine`SolveEulerEq`model, 
                 "initialGuess" -> <|
                  "Ewc" -> {ComputationalEngine`SolveEulerEq`Ewc0}|>] == 
               ComputationalEngine`SolveEulerEq`updateCoeffs[
                ComputationalEngine`SolveEulerEq`model, "UpdatePd" -> False, 
                 "initialGuess" -> <|
                  "Ewc" -> {ComputationalEngine`SolveEulerEq`Ewc0}, 
                   "Epd" -> {{5.5}}|>]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = Apply[And, {
                 SubsetQ[
                  Options[ComputationalEngine`SolveEulerEq`updateCoeffs], 
                  Options[
                  FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`updateCoeffsSol]], 
                 SubsetQ[
                  Options[ComputationalEngine`SolveEulerEq`updateCoeffs], 
                  Options[
                  FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks]]}]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`oldOptions = 
              Options[ComputationalEngine`SolveEulerEq`updateCoeffs]; 
             ComputationalEngine`SolveEulerEq`oldOptionsSol = 
              Options[FernandoDuarte`LongRunRisk`ComputationalEngine`\
SolveEulerEq`Private`updateCoeffsSol]; 
             ComputationalEngine`SolveEulerEq`oldOptionsWc = 
              Options[FernandoDuarte`LongRunRisk`ComputationalEngine`\
SolveEulerEq`Private`updateCoeffsWc]; ComputationalEngine`SolveEulerEq`ig = 1; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = 
              ComputationalEngine`SolveEulerEq`updateCoeffs[
                ComputationalEngine`SolveEulerEq`model, 
                 "initialGuess" -> <|
                  "Ewc" -> {ComputationalEngine`SolveEulerEq`ig}|>] == 
               ComputationalEngine`SolveEulerEq`updateCoeffsSol[
                ComputationalEngine`SolveEulerEq`model, {}, {}, 
                 "initialGuess" -> <|
                  "Ewc" -> {ComputationalEngine`SolveEulerEq`ig}|>] == 
               ComputationalEngine`SolveEulerEq`updateCoeffsWc[
                 ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                 "wc"], 
                 ComputationalEngine`SolveEulerEq`model["parameters"], {}, 
                 "Ewc0" -> ComputationalEngine`SolveEulerEq`ig]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             SetOptions[
              ComputationalEngine`SolveEulerEq`updateCoeffs, 
               "initialGuess" -> <|
                "Ewc" -> {ComputationalEngine`SolveEulerEq`ig}|>]; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = 
              ComputationalEngine`SolveEulerEq`updateCoeffs[
                ComputationalEngine`SolveEulerEq`model, 
                 "initialGuess" -> <|
                  "Ewc" -> {ComputationalEngine`SolveEulerEq`ig}|>] == 
               ComputationalEngine`SolveEulerEq`updateCoeffs[
                ComputationalEngine`SolveEulerEq`model]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             Options[ComputationalEngine`SolveEulerEq`updateCoeffs] = 
              ComputationalEngine`SolveEulerEq`oldOptions; 
             SetOptions[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`updateCoeffsSol, 
               "initialGuess" -> <|
                "Ewc" -> {ComputationalEngine`SolveEulerEq`ig}|>]; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = 
              ComputationalEngine`SolveEulerEq`updateCoeffsSol[
                ComputationalEngine`SolveEulerEq`model, {}, {}] == 
               ComputationalEngine`SolveEulerEq`updateCoeffsSol[
                ComputationalEngine`SolveEulerEq`model, {}, {}, 
                 "initialGuess" -> <|
                  "Ewc" -> {ComputationalEngine`SolveEulerEq`ig}|>] == 
               ComputationalEngine`SolveEulerEq`updateCoeffs[
                ComputationalEngine`SolveEulerEq`model, 
                 "initialGuess" -> <|
                  "Ewc" -> {ComputationalEngine`SolveEulerEq`ig}|>]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = Not[
                TrueQ[
                ComputationalEngine`SolveEulerEq`updateCoeffsSol[
                  ComputationalEngine`SolveEulerEq`model, {}, {}, 
                   MaxIterations -> 1] == 
                 ComputationalEngine`SolveEulerEq`updateCoeffs[
                  ComputationalEngine`SolveEulerEq`model, MaxIterations -> 
                   1]]]; ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             Options[FernandoDuarte`LongRunRisk`ComputationalEngine`\
SolveEulerEq`Private`updateCoeffsSol] = 
              ComputationalEngine`SolveEulerEq`oldOptionsSol; 
             SetOptions[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`updateCoeffsWc, "Ewc0" -> ComputationalEngine`SolveEulerEq`ig]; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = 
              ComputationalEngine`SolveEulerEq`updateCoeffsWc[
                 ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                 "wc"], 
                 ComputationalEngine`SolveEulerEq`model["parameters"], {}] == 
               ComputationalEngine`SolveEulerEq`updateCoeffsWc[
                 ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                 "wc"], 
                 ComputationalEngine`SolveEulerEq`model["parameters"], {}, 
                 "Ewc0" -> ComputationalEngine`SolveEulerEq`ig] == 
               ComputationalEngine`SolveEulerEq`updateCoeffs[
                ComputationalEngine`SolveEulerEq`model, 
                 "initialGuess" -> <|
                  "Ewc" -> {ComputationalEngine`SolveEulerEq`ig}|>]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = Not[
                TrueQ[ComputationalEngine`SolveEulerEq`updateCoeffsWc[
                   ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                   "wc"], 
                   ComputationalEngine`SolveEulerEq`model["parameters"], {}, 
                   MaxIterations -> 1] == 
                 ComputationalEngine`SolveEulerEq`updateCoeffs[
                  ComputationalEngine`SolveEulerEq`model, MaxIterations -> 
                   1]]]; ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             Options[FernandoDuarte`LongRunRisk`ComputationalEngine`\
SolveEulerEq`Private`updateCoeffsWc] = 
              ComputationalEngine`SolveEulerEq`oldOptionsWc; 
             ComputationalEngine`SolveEulerEq`oldOptions = 
              Options[ComputationalEngine`SolveEulerEq`updateCoeffs]; 
             ComputationalEngine`SolveEulerEq`optsUpdateCoeff = {{
                "initialGuess" -> <|"Ewc" -> {4.6}, "Epd" -> {{4.6}}|>}, {
                "PrintResidualsNorm" -> True}}; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = Apply[And, 
                Flatten[
                 
                 Map[{SetOptions[
                    ComputationalEngine`SolveEulerEq`updateCoeffs, #]; 
                   ComputationalEngine`SolveEulerEq`out = 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, #] == 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model]; 
                   Options[ComputationalEngine`SolveEulerEq`updateCoeffs] = 
                    ComputationalEngine`SolveEulerEq`oldOptions; 
                   ComputationalEngine`SolveEulerEq`out}& , 
                  ComputationalEngine`SolveEulerEq`optsUpdateCoeff]]]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`optsBad = {{
                MaxIterations -> 100}, {PrecisionGoal -> $MachinePrecision}}; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = Apply[And, 
                Flatten[
                 
                 Map[{ComputationalEngine`SolveEulerEq`m = 
                    Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
                    Reap[Module[{}, 
                    SetOptions[
                    ComputationalEngine`SolveEulerEq`updateCoeffs, #]]; \
$MessageList]]; Options[ComputationalEngine`SolveEulerEq`updateCoeffs] = 
                    ComputationalEngine`SolveEulerEq`oldOptions; First[
                    First[ComputationalEngine`SolveEulerEq`m]] == HoldForm[
                    MessageName[SetOptions, "optnf"]]}& , 
                  ComputationalEngine`SolveEulerEq`optsBad]]]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`optsFindRoot = {
               "FindRootOptions" -> {MaxIterations -> 1}, 
                "FindRootOptions" -> {AccuracyGoal -> 2}}; 
             ComputationalEngine`SolveEulerEq`oldFindRootOpts = 
              Options[FindRoot]; 
             ComputationalEngine`SolveEulerEq`withFindRootOptionDefault = Keys[
                ReplaceAll["FindRootOptions", 
                 Options[ComputationalEngine`SolveEulerEq`updateCoeffs]]]; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = Apply[And, 
                Flatten[
                 
                 Map[{SetOptions[
                    ComputationalEngine`SolveEulerEq`updateCoeffs, #]; 
                   ComputationalEngine`SolveEulerEq`out1 = 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, #] == 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model]; 
                   Options[ComputationalEngine`SolveEulerEq`updateCoeffs] = 
                    ComputationalEngine`SolveEulerEq`oldOptions; 
                   Unprotect[FindRoot]; SetOptions[FindRoot, 
                    Last[#]]; 
                   ComputationalEngine`SolveEulerEq`out2 = 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, #] == 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model]; 
                   ComputationalEngine`SolveEulerEq`out2 = If[
                    MemberQ[
                    ComputationalEngine`SolveEulerEq`\
withFindRootOptionDefault, 
                    First[
                    First[
                    Last[#]]]], 
                    Not[
                    TrueQ[ComputationalEngine`SolveEulerEq`out2]], 
                    ComputationalEngine`SolveEulerEq`out2]; 
                   Options[FindRoot] = 
                    ComputationalEngine`SolveEulerEq`oldFindRootOpts; 
                   Protect[FindRoot]; {
                    ComputationalEngine`SolveEulerEq`out1, 
                    ComputationalEngine`SolveEulerEq`out2}}& , 
                  ComputationalEngine`SolveEulerEq`optsFindRoot]]]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = Apply[And, {
                 ComputationalEngine`SolveEulerEq`coeffsQWc[
                  ComputationalEngine`SolveEulerEq`updateCoeffs[
                  ComputationalEngine`SolveEulerEq`model, 
                   "initialGuess" -> <|"Ewc" -> {1, 8}|>]], 
                 ComputationalEngine`SolveEulerEq`coeffsQWc[
                  ComputationalEngine`SolveEulerEq`updateCoeffs[
                  ComputationalEngine`SolveEulerEq`model, 
                   "initialGuess" -> <|"Ewc" -> {4, 1, 8}|>]]}]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = 
              Apply[And, {ComputationalEngine`SolveEulerEq`coeffsQWc[
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                   ComputationalEngine`SolveEulerEq`model, 
                    "initialGuess" -> <|"Ewc" -> {4.}|>]] == 
                 ComputationalEngine`SolveEulerEq`coeffsQWc[
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                   ComputationalEngine`SolveEulerEq`model, 
                    "initialGuess" -> <|"Ewc" -> {4}|>]], 
                 ComputationalEngine`SolveEulerEq`coeffsQWc[
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                   ComputationalEngine`SolveEulerEq`model, 
                    "initialGuess" -> <|"Ewc" -> {1., 8.}|>]] == 
                 ComputationalEngine`SolveEulerEq`coeffsQWc[
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                   ComputationalEngine`SolveEulerEq`model, 
                    "initialGuess" -> <|"Ewc" -> {1, 8}|>]], 
                 ComputationalEngine`SolveEulerEq`coeffsQWc[
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                   ComputationalEngine`SolveEulerEq`model, 
                    "initialGuess" -> <|"Ewc" -> {4., 1., 8.}|>]] == 
                 ComputationalEngine`SolveEulerEq`coeffsQWc[
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                   ComputationalEngine`SolveEulerEq`model, 
                    "initialGuess" -> <|"Ewc" -> {4, 1, 8}|>]]}]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`maxMaturity = 12; 
             ComputationalEngine`SolveEulerEq`solBond = 
              ComputationalEngine`SolveEulerEq`updateCoeffsBond[
                ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                "bond"], 
                ComputationalEngine`SolveEulerEq`model["params"], {}, 
                ComputationalEngine`SolveEulerEq`maxMaturity, 
                ComputationalEngine`SolveEulerEq`solWc]; 
             ComputationalEngine`SolveEulerEq`solNomBond = 
              ComputationalEngine`SolveEulerEq`updateCoeffsBond[
                ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                "nombond"], 
                ComputationalEngine`SolveEulerEq`model["params"], {}, 
                ComputationalEngine`SolveEulerEq`maxMaturity, 
                ComputationalEngine`SolveEulerEq`solWc]; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = Apply[And, {
                 ComputationalEngine`SolveEulerEq`coeffsQBond[
                 ComputationalEngine`SolveEulerEq`solBond, 
                  ComputationalEngine`SolveEulerEq`maxMaturity], 
                 ComputationalEngine`SolveEulerEq`coeffsQNomBond[
                 ComputationalEngine`SolveEulerEq`solNomBond, 
                  ComputationalEngine`SolveEulerEq`maxMaturity]}]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`newBondParams = {
               FernandoDuarte`LongRunRisk`Model`Parameters`psi -> 
                ReplaceAll[
                 0.1 + FernandoDuarte`LongRunRisk`Model`Parameters`psi, 
                  ComputationalEngine`SolveEulerEq`model["params"]]}; 
             ComputationalEngine`SolveEulerEq`solWcNewBondParams = 
              ComputationalEngine`SolveEulerEq`updateCoeffs[
               ComputationalEngine`SolveEulerEq`model, 
                ComputationalEngine`SolveEulerEq`newBondParams, 
                ComputationalEngine`SolveEulerEq`optsWc]; 
             ComputationalEngine`SolveEulerEq`solBondNew = 
              ComputationalEngine`SolveEulerEq`updateCoeffsBond[
                ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                "bond"], 
                ComputationalEngine`SolveEulerEq`model["params"], 
                ComputationalEngine`SolveEulerEq`newBondParams, 
                ComputationalEngine`SolveEulerEq`maxMaturity, 
                ComputationalEngine`SolveEulerEq`solWcNewBondParams]; 
             ComputationalEngine`SolveEulerEq`solNomBondNew = 
              ComputationalEngine`SolveEulerEq`updateCoeffsBond[
                ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                "nombond"], 
                ComputationalEngine`SolveEulerEq`model["params"], 
                ComputationalEngine`SolveEulerEq`newBondParams, 
                ComputationalEngine`SolveEulerEq`maxMaturity, 
                ComputationalEngine`SolveEulerEq`solWcNewBondParams]; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = Apply[And, {
                 ComputationalEngine`SolveEulerEq`coeffsQBond[
                 ComputationalEngine`SolveEulerEq`solBondNew, 
                  ComputationalEngine`SolveEulerEq`maxMaturity], 
                 ComputationalEngine`SolveEulerEq`coeffsQNomBond[
                 ComputationalEngine`SolveEulerEq`solNomBondNew, 
                  ComputationalEngine`SolveEulerEq`maxMaturity], 
                 Not[
                 ComputationalEngine`SolveEulerEq`solBond === 
                  ComputationalEngine`SolveEulerEq`solBondNew], 
                 Not[
                 ComputationalEngine`SolveEulerEq`solNomBond === 
                  ComputationalEngine`SolveEulerEq`solNomBondNew]}]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`oldMaxMaturity = 
              ComputationalEngine`SolveEulerEq`maxMaturity; 
             ComputationalEngine`SolveEulerEq`maxMaturity = 2; 
             ComputationalEngine`SolveEulerEq`solBond = 
              ComputationalEngine`SolveEulerEq`updateCoeffsBond[
                ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                "bond"], 
                ComputationalEngine`SolveEulerEq`model["params"], {}, 
                ComputationalEngine`SolveEulerEq`maxMaturity, 
                ComputationalEngine`SolveEulerEq`solWc]; 
             ComputationalEngine`SolveEulerEq`solNomBond = 
              ComputationalEngine`SolveEulerEq`updateCoeffsBond[
                ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                "nombond"], 
                ComputationalEngine`SolveEulerEq`model["params"], {}, 
                ComputationalEngine`SolveEulerEq`maxMaturity, 
                ComputationalEngine`SolveEulerEq`solWc]; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = Apply[And, {
                 ComputationalEngine`SolveEulerEq`coeffsQBond[
                 ComputationalEngine`SolveEulerEq`solBond, 
                  ComputationalEngine`SolveEulerEq`maxMaturity], 
                 ComputationalEngine`SolveEulerEq`coeffsQNomBond[
                 ComputationalEngine`SolveEulerEq`solNomBond, 
                  ComputationalEngine`SolveEulerEq`maxMaturity], 
                 Range[0, ComputationalEngine`SolveEulerEq`maxMaturity] == 
                 Sort[
                   DeleteDuplicates[
                    Cases[
                    Keys[ComputationalEngine`SolveEulerEq`solBond], 
                    Pattern[ComputationalEngine`SolveEulerEq`x, 
                    Blank[]][
                    Pattern[ComputationalEngine`SolveEulerEq`i, 
                    Blank[]]][
                    Pattern[ComputationalEngine`SolveEulerEq`j, 
                    Blank[]]] :> ComputationalEngine`SolveEulerEq`i]]], 
                 Range[0, ComputationalEngine`SolveEulerEq`maxMaturity] == 
                 Sort[
                   DeleteDuplicates[
                    Cases[
                    Keys[ComputationalEngine`SolveEulerEq`solNomBond], 
                    Pattern[ComputationalEngine`SolveEulerEq`x, 
                    Blank[]][
                    Pattern[ComputationalEngine`SolveEulerEq`i, 
                    Blank[]]][
                    Pattern[ComputationalEngine`SolveEulerEq`j, 
                    Blank[]]] :> ComputationalEngine`SolveEulerEq`i]]]}]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`maxMaturity = 
              ComputationalEngine`SolveEulerEq`oldMaxMaturity; 
             ComputationalEngine`SolveEulerEq`solBond = 
              ComputationalEngine`SolveEulerEq`updateCoeffsBond[
                ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                "bond"], 
                ComputationalEngine`SolveEulerEq`model["params"], {}, 
                ComputationalEngine`SolveEulerEq`maxMaturity, 
                ComputationalEngine`SolveEulerEq`solWc, "Method" -> Automatic,
                 "Precision" -> 1]; 
             ComputationalEngine`SolveEulerEq`solNomBond = 
              ComputationalEngine`SolveEulerEq`updateCoeffsBond[
                ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                "nombond"], 
                ComputationalEngine`SolveEulerEq`model["params"], {}, 
                ComputationalEngine`SolveEulerEq`maxMaturity, 
                ComputationalEngine`SolveEulerEq`solWc, "Method" -> Automatic,
                 "Precision" -> 1]; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = Apply[And, {
                 ComputationalEngine`SolveEulerEq`coeffsQBond[
                 ComputationalEngine`SolveEulerEq`solBond, 
                  ComputationalEngine`SolveEulerEq`maxMaturity], 
                 ComputationalEngine`SolveEulerEq`coeffsQNomBond[
                 ComputationalEngine`SolveEulerEq`solNomBond, 
                  ComputationalEngine`SolveEulerEq`maxMaturity]}]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = Apply[And, {FilterRules[
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                   ComputationalEngine`SolveEulerEq`model, "UpdateBond" -> 
                    True, "MaxMaturity" -> 
                    ComputationalEngine`SolveEulerEq`maxMaturity], 
                   FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb[
                    Blank[]]] === 
                 ComputationalEngine`SolveEulerEq`updateCoeffsBond[
                   ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                   "bond"], 
                   ComputationalEngine`SolveEulerEq`model["params"], {}, 
                   ComputationalEngine`SolveEulerEq`maxMaturity, 
                   ComputationalEngine`SolveEulerEq`solWc], FilterRules[
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                   ComputationalEngine`SolveEulerEq`model, "UpdateNomBond" -> 
                    True, "MaxMaturity" -> 
                    ComputationalEngine`SolveEulerEq`maxMaturity], 
                   
                   FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\
coefnb[
                    Blank[]]] === 
                 ComputationalEngine`SolveEulerEq`updateCoeffsBond[
                   ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                   "nombond"], 
                   ComputationalEngine`SolveEulerEq`model["params"], {}, 
                   ComputationalEngine`SolveEulerEq`maxMaturity, 
                   ComputationalEngine`SolveEulerEq`solWc]}]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = Apply[And, {Sort[
                   FilterRules[
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, "UpdateBonds" -> 
                    True, "MaxMaturity" -> 
                    ComputationalEngine`SolveEulerEq`maxMaturity], 
                    Alternatives[
                    
                    FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\
coefb[
                    Blank[]], 
                    
                    FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\
coefnb[
                    Blank[]]]]] === Sort[
                   Join[
                    ComputationalEngine`SolveEulerEq`updateCoeffsBond[
                    ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                    "bond"], 
                    ComputationalEngine`SolveEulerEq`model["params"], {}, 
                    ComputationalEngine`SolveEulerEq`maxMaturity, 
                    ComputationalEngine`SolveEulerEq`solWc], 
                    ComputationalEngine`SolveEulerEq`updateCoeffsBond[
                    ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                    "nombond"], 
                    ComputationalEngine`SolveEulerEq`model["params"], {}, 
                    ComputationalEngine`SolveEulerEq`maxMaturity, 
                    ComputationalEngine`SolveEulerEq`solWc]]]}]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`m1 = 
              Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
                Reap[
                Module[{}, 
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, "UpdateBond" -> 
                    True, "PrintResidualsNorm" -> False]; 
                   Null]; $MessageList]]; 
             ComputationalEngine`SolveEulerEq`m2 = 
              Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
                Reap[
                Module[{}, 
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, "UpdateBond" -> 
                    True, "PrintResidualsNorm" -> True]; 
                   Null]; $MessageList]]; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = 
              ReleaseHold[ComputationalEngine`SolveEulerEq`m1] == {{}, {}}; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = MemberQ[
                ReleaseHold[
                 First[ComputationalEngine`SolveEulerEq`m2]], 
                MessageName[
                FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"]]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = NumberQ[
                ReleaseHold[
                 First[
                  Flatten[
                   Last[ComputationalEngine`SolveEulerEq`m2]]]]]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`c1 = Not[
                TrueQ[
                 CheckAbort[
                  Check[
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                   ComputationalEngine`SolveEulerEq`model, "UpdateBond" -> 
                    True, "CheckResiduals" -> False], 
                   Abort[], 
                   MessageName[
                   FernandoDuarte`LongRunRisk`ComputationalEngine`\
SolveEulerEq`Private`checks, "largeresid"]], True]]]; 
             ComputationalEngine`SolveEulerEq`c2 = TrueQ[
                CheckAbort[
                 Check[
                  ComputationalEngine`SolveEulerEq`updateCoeffs[
                  ComputationalEngine`SolveEulerEq`model, "UpdateBond" -> 
                   True, "CheckResiduals" -> True], 
                  Abort[], 
                  MessageName[
                  FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"]], True]]; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = 
              Apply[And, {
                ComputationalEngine`SolveEulerEq`c1, 
                 ComputationalEngine`SolveEulerEq`c2}]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`c1 = Not[
                TrueQ[
                 CheckAbort[
                  Check[
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                   ComputationalEngine`SolveEulerEq`model, "UpdateBond" -> 
                    True, "CheckResiduals" -> True, "Tol" -> 1], 
                   Abort[], 
                   MessageName[
                   FernandoDuarte`LongRunRisk`ComputationalEngine`\
SolveEulerEq`Private`checks, "largeresid"]], True]]]; 
             ComputationalEngine`SolveEulerEq`c2 = TrueQ[
                CheckAbort[
                 Check[
                  ComputationalEngine`SolveEulerEq`updateCoeffs[
                  ComputationalEngine`SolveEulerEq`model, "UpdateBond" -> 
                   True, "CheckResiduals" -> True, "Tol" -> 10.^(-20)], 
                  Abort[], 
                  MessageName[
                  FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"]], True]]; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = 
              Apply[And, {
                ComputationalEngine`SolveEulerEq`c1, 
                 ComputationalEngine`SolveEulerEq`c2}]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; Null, {
             ComputationalEngine`SolveEulerEq`model, 
              ComputationalEngine`SolveEulerEq`mods}]; 
           ComputationalEngine`SolveEulerEq`noMissingTest = {}; 
           Do[ComputationalEngine`SolveEulerEq`testNumber = Sort[
                Cases[
                 Keys[
                  SubValues[ComputationalEngine`SolveEulerEq`outTests]], 
                 Verbatim[HoldPattern][
                   ComputationalEngine`SolveEulerEq`outTests[
                    ComputationalEngine`SolveEulerEq`model["shortname"]][
                    Pattern[ComputationalEngine`SolveEulerEq`i, 
                    Blank[Integer]]]] :> ComputationalEngine`SolveEulerEq`i]]; 
             AppendTo[ComputationalEngine`SolveEulerEq`noMissingTest, Range[0, 
                 Max[ComputationalEngine`SolveEulerEq`testNumber]] == 
               ComputationalEngine`SolveEulerEq`testNumber]; Null, {
             ComputationalEngine`SolveEulerEq`model, 
              ComputationalEngine`SolveEulerEq`mods}]; 
           ComputationalEngine`SolveEulerEq`out = Apply[And, {
               Apply[And, ComputationalEngine`SolveEulerEq`noMissingTest], 
               Apply[And, 
                Values[
                 SubValues[ComputationalEngine`SolveEulerEq`outTests]]]}]; 
           On[
             MessageName[General, "stop"]]; 
           ComputationalEngine`SolveEulerEq`out], "ExpectedMessages" -> 
         HoldForm[{
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[3]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[3]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[3]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[3]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 3.113502648927882*^-14]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 3.113502648927882*^-14, 1.*^-16]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 3.113502648927882*^-14, 1]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 3.113502648927882*^-14, 1.*^-20]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 3.113502648927882*^-14]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 3.113502648927882*^-14]], 
            HoldForm[
             Message[
              MessageName[SetOptions, "optnf"], 
              HoldForm[MaxIterations], 
              HoldForm[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
updateCoeffs]]], 
            HoldForm[
             Message[
              MessageName[SetOptions, "optnf"], 
              HoldForm[PrecisionGoal], 
              HoldForm[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
updateCoeffs]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 3.113502648927882*^-14]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 2.5569089476209456`*^-13]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 3.113502648927882*^-14]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 3.113502648927882*^-14, 1.*^-16]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 3.113502648927882*^-14, 1]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 2.5569089476209456`*^-13, 1]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 3.113502648927882*^-14, 1]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 3.113502648927882*^-14, 1.*^-20]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[3]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[3]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[3]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[3]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 4.383905086044507*^-14]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 4.383905086044507*^-14, 1.*^-16]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 4.383905086044507*^-14, 1]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 4.383905086044507*^-14, 1.*^-20]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 4.383905086044507*^-14]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 4.383905086044507*^-14]], 
            HoldForm[
             Message[
              MessageName[SetOptions, "optnf"], 
              HoldForm[MaxIterations], 
              HoldForm[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
updateCoeffs]]], 
            HoldForm[
             Message[
              MessageName[SetOptions, "optnf"], 
              HoldForm[PrecisionGoal], 
              HoldForm[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
updateCoeffs]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 4.383905086044507*^-14]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 2.4890825068561554`*^-13]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 4.383905086044507*^-14]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 4.383905086044507*^-14, 1.*^-16]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 4.383905086044507*^-14, 1]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 2.4890825068561554`*^-13, 1]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 4.383905086044507*^-14, 1]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 4.383905086044507*^-14, 1.*^-20]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[3]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[3]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[3]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[3]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 2.315142795448291*^-14]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 2.315142795448291*^-14, 1.*^-16]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 2.315142795448291*^-14, 1]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 2.315142795448291*^-14, 1.*^-20]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "lstol"], 
              HoldForm[MachinePrecision]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 2.315142795448291*^-14]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 2.315142795448291*^-14]], 
            HoldForm[
             Message[
              MessageName[SetOptions, "optnf"], 
              HoldForm[MaxIterations], 
              HoldForm[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
updateCoeffs]]], 
            HoldForm[
             Message[
              MessageName[SetOptions, "optnf"], 
              HoldForm[PrecisionGoal], 
              HoldForm[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
updateCoeffs]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 2.315142795448291*^-14]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 2.1898485160071426`*^-13]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 2.315142795448291*^-14]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 2.315142795448291*^-14, 1.*^-16]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 2.315142795448291*^-14, 1]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 2.1898485160071426`*^-13, 1]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 2.315142795448291*^-14, 1]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 2.315142795448291*^-14, 1.*^-20]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[3]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[3]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[3]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[3]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 1.1383179045888502`*^-12]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 1.1383179045888502`*^-12, 1.*^-16]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 1.1383179045888502`*^-12, 1]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 1.1383179045888502`*^-12, 1.*^-20]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[100]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[100]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[100]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[100]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[100]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[100]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[100]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[100]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[100]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[100]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[100]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 1.1383179045888502`*^-12]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 1.1383179045888502`*^-12]], 
            HoldForm[
             Message[
              MessageName[SetOptions, "optnf"], 
              HoldForm[MaxIterations], 
              HoldForm[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
updateCoeffs]]], 
            HoldForm[
             Message[
              MessageName[SetOptions, "optnf"], 
              HoldForm[PrecisionGoal], 
              HoldForm[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
updateCoeffs]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[100]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[100]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[100]]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 1.1383179045888502`*^-12]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 3.8764093488563845`*^-12]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 1.1383179045888502`*^-12]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 1.1383179045888502`*^-12, 1.*^-16]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 1.1383179045888502`*^-12, 1]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 3.8764093488563845`*^-12, 1]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 1.1383179045888502`*^-12, 1]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 1.1383179045888502`*^-12, 1.*^-20]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[3]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[3]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[3]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[3]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 2.799177515852174*^-14]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 2.799177515852174*^-14, 1.*^-16]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 2.799177515852174*^-14, 1]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 2.799177515852174*^-14, 1.*^-20]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "lstol"], 
              HoldForm[MachinePrecision]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "lstol"], 
              HoldForm[MachinePrecision]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "lstol"], 
              HoldForm[MachinePrecision]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 2.799177515852174*^-14]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 2.799177515852174*^-14]], 
            HoldForm[
             Message[
              MessageName[SetOptions, "optnf"], 
              HoldForm[MaxIterations], 
              HoldForm[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
updateCoeffs]]], 
            HoldForm[
             Message[
              MessageName[SetOptions, "optnf"], 
              HoldForm[PrecisionGoal], 
              HoldForm[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
updateCoeffs]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[FindRoot, "cvmit"], 
              HoldForm[1]]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 2.799177515852174*^-14]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 2.6632349341506793`*^-14]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 2.799177515852174*^-14]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 2.799177515852174*^-14, 1.*^-16]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 2.799177515852174*^-14, 1]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 2.6632349341506793`*^-14, 1]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 2.799177515852174*^-14, 1]], 
            HoldForm[
             Message[
              MessageName[
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 2.799177515852174*^-14, 1.*^-20]]}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[3]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[3]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[3]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[3]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 3.113502648927882*^-14]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 3.113502648927882*^-14, 1.*^-16]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 3.113502648927882*^-14, 1]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 3.113502648927882*^-14, 1.*^-20]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 3.113502648927882*^-14]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 3.113502648927882*^-14]], 
           HoldForm[
            Message[
             MessageName[SetOptions, "optnf"], 
             HoldForm[MaxIterations], 
             HoldForm[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
updateCoeffs]]], 
           HoldForm[
            Message[
             MessageName[SetOptions, "optnf"], 
             HoldForm[PrecisionGoal], 
             HoldForm[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
updateCoeffs]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 3.113502648927882*^-14]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 2.5569089476209456`*^-13]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 3.113502648927882*^-14]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 3.113502648927882*^-14, 1.*^-16]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 3.113502648927882*^-14, 1]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 2.5569089476209456`*^-13, 1]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 3.113502648927882*^-14, 1]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 3.113502648927882*^-14, 1.*^-20]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[3]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[3]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[3]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[3]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 4.383905086044507*^-14]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 4.383905086044507*^-14, 1.*^-16]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 4.383905086044507*^-14, 1]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 4.383905086044507*^-14, 1.*^-20]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 4.383905086044507*^-14]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 4.383905086044507*^-14]], 
           HoldForm[
            Message[
             MessageName[SetOptions, "optnf"], 
             HoldForm[MaxIterations], 
             HoldForm[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
updateCoeffs]]], 
           HoldForm[
            Message[
             MessageName[SetOptions, "optnf"], 
             HoldForm[PrecisionGoal], 
             HoldForm[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
updateCoeffs]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 4.383905086044507*^-14]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 2.4890825068561554`*^-13]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 4.383905086044507*^-14]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 4.383905086044507*^-14, 1.*^-16]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 4.383905086044507*^-14, 1]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 2.4890825068561554`*^-13, 1]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 4.383905086044507*^-14, 1]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 4.383905086044507*^-14, 1.*^-20]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[3]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[3]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[3]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[3]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 2.315142795448291*^-14]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 2.315142795448291*^-14, 1.*^-16]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 2.315142795448291*^-14, 1]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 2.315142795448291*^-14, 1.*^-20]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "lstol"], 
             HoldForm[MachinePrecision]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 2.315142795448291*^-14]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 2.315142795448291*^-14]], 
           HoldForm[
            Message[
             MessageName[SetOptions, "optnf"], 
             HoldForm[MaxIterations], 
             HoldForm[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
updateCoeffs]]], 
           HoldForm[
            Message[
             MessageName[SetOptions, "optnf"], 
             HoldForm[PrecisionGoal], 
             HoldForm[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
updateCoeffs]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 2.315142795448291*^-14]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 2.1898485160071426`*^-13]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 2.315142795448291*^-14]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 2.315142795448291*^-14, 1.*^-16]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 2.315142795448291*^-14, 1]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 2.1898485160071426`*^-13, 1]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 2.315142795448291*^-14, 1]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 2.315142795448291*^-14, 1.*^-20]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[3]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[3]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[3]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[3]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 1.1383179045888502`*^-12]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 1.1383179045888502`*^-12, 1.*^-16]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 1.1383179045888502`*^-12, 1]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 1.1383179045888502`*^-12, 1.*^-20]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[100]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[100]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[100]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[100]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[100]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[100]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[100]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[100]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[100]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[100]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[100]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 1.1383179045888502`*^-12]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 1.1383179045888502`*^-12]], 
           HoldForm[
            Message[
             MessageName[SetOptions, "optnf"], 
             HoldForm[MaxIterations], 
             HoldForm[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
updateCoeffs]]], 
           HoldForm[
            Message[
             MessageName[SetOptions, "optnf"], 
             HoldForm[PrecisionGoal], 
             HoldForm[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
updateCoeffs]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[100]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[100]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[100]]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 1.1383179045888502`*^-12]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 3.8764093488563845`*^-12]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 1.1383179045888502`*^-12]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 1.1383179045888502`*^-12, 1.*^-16]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 1.1383179045888502`*^-12, 1]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 3.8764093488563845`*^-12, 1]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 1.1383179045888502`*^-12, 1]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 1.1383179045888502`*^-12, 1.*^-20]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[3]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[3]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[3]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[3]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 2.799177515852174*^-14]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 2.799177515852174*^-14, 1.*^-16]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 2.799177515852174*^-14, 1]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 2.799177515852174*^-14, 1.*^-20]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "lstol"], 
             HoldForm[MachinePrecision]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "lstol"], 
             HoldForm[MachinePrecision]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "lstol"], 
             HoldForm[MachinePrecision]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 2.799177515852174*^-14]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 2.799177515852174*^-14]], 
           HoldForm[
            Message[
             MessageName[SetOptions, "optnf"], 
             HoldForm[MaxIterations], 
             HoldForm[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
updateCoeffs]]], 
           HoldForm[
            Message[
             MessageName[SetOptions, "optnf"], 
             HoldForm[PrecisionGoal], 
             HoldForm[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
updateCoeffs]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[FindRoot, "cvmit"], 
             HoldForm[1]]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 2.799177515852174*^-14]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 2.6632349341506793`*^-14]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"], 2.799177515852174*^-14]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 2.799177515852174*^-14, 1.*^-16]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 2.799177515852174*^-14, 1]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 2.6632349341506793`*^-14, 1]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "smallresid"], 2.799177515852174*^-14, 1]], 
           HoldForm[
            Message[
             MessageName[
             FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "largeresid"], 2.799177515852174*^-14, 1.*^-20]]}, 
         "AbsoluteTimeUsed" -> 11.677943`7.217881348962545, "CPUTimeUsed" -> 
         11.69534, "MemoryUsed" -> 60053296, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>]|>, 
    "FailureResults" -> <||>, "TestsNotEvaluatedKeys" -> {}, 
    "TestsFailedWrongResultsKeys" -> {}, "TestsFailedWithMessagesKeys" -> {}, 
    "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {3383862288379265681}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9056879194118633`*^9, 3.905770446577846*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"e29dc5a2-796d-49a0-9267-dd8012feb918"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9056879194118633`*^9, 3.905770446581102*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"dbb86417-86c6-478e-af42-40177a169c0d"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9056879194118633`*^9, 3.90577044658162*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"bca05209-a17f-4f02-b790-b228739ee79f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tr", "=", 
  RowBox[{
  "TestReport", "[", 
   "\"\</Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expected", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
        ")"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}]}], "Input",
 CellChangeTimes->{{3.905687550054834*^9, 3.9056875503351927`*^9}, 
   3.905768801700536*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"7c47fece-e37b-46a8-a1f5-f66cb52faf00"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: TimeAggregation.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["34", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: TimeAggregation.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["34", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["34", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "4.348433`5.257368863708074", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: TimeAggregation.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     38080127675627873 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905771003925626*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "095d9d19-16bf-4b88-831c-f854abfe300f", "TestID" -> 
         "TimeAggregation_20231008-NL9UOA", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "13ff46cb-fba3-4baf-be12-ec448594cfec", "Input" -> HoldForm[Off[
             MessageName[General, "stop"]]; 
           Needs["FernandoDuarte`LongRunRisk`Tools`TimeAggregation`"]; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000782`3.0437217508918377, "CPUTimeUsed" -> 0.0007830000000002002, 
         "MemoryUsed" -> 71672, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 398916322361931893 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057710039266896`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "192ef68b-d0e5-4728-afbe-5d3be46e8d46", "TestID" -> 
         "TimeAggregation_20231008-8TZMK8", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "a87cc3c0-3a77-4297-9ff9-ced1064c98c5", "Input" -> 
         HoldForm[
          MemberQ[$ContextPath, 
             "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`"]; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000024`1.5307262395435999, "CPUTimeUsed" -> 
         0.000024999999999497646`, "MemoryUsed" -> 3120, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 496487732080306416 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057710039269257`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "0a8750e9-fe38-4240-b2d7-7301a9b11d3d", "TestID" -> 
         "TimeAggregation_20231008-6ZK093", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "63eea579-b5f4-45fe-849b-1c7fb07d44f4", "Input" -> HoldForm[
           Not[Names["*growth"] === {}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.01614`4.358418528218044, "CPUTimeUsed" -> 
         0.01618699999999995, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 8531564014456041439 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905771003943366*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a5d0a0be-573e-4ed2-9724-43f46bdc5298", "TestID" -> 
         "TimeAggregation_20231008-4NSQ80", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "b5917444-7404-4028-8a07-a42d0da6728f", "Input" -> HoldForm[
           Apply[
           And, {FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t] == 
             Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
             FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 1, "numPeriods" -> 1] == 
             Tools`TimeAggregation`dc[Tools`TimeAggregation`t]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.010198`4.159030005463449, "CPUTimeUsed" -> 0.01021800000000006, 
         "MemoryUsed" -> 2377888, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 8476993219353259518 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057710039538918`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "9ce710ba-6404-4c3a-9b5c-930ea6d2e82d", "TestID" -> 
         "TimeAggregation_20231008-7BZWGQ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "96acf0f9-2a81-4725-bb55-24013b73248f", "Input" -> HoldForm[
           Apply[
           And, {FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 3, "numPeriods" -> 1] == (1/3) (
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4] + (
                2 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] + (
                 3 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + 
                 2 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t]))), 
             ReplaceAll[
               ReplaceAll[
                ReplaceAll[
                 ReplaceAll[
                  FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                  Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                   "TimeAggregation" -> 12, "numPeriods" -> 1], Plus -> List],
                  Times -> List], Tools`TimeAggregation`dc[{
                   Pattern[Tools`TimeAggregation`x, 
                    BlankSequence[]], Tools`TimeAggregation`t}] -> -
                 Tools`TimeAggregation`x], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t] -> 0] == {{
               1/12, 22}, {1/6, 21}, {1/4, 20}, {1/3, 19}, {5/12, 18}, {
               1/2, 17}, {7/12, 16}, {2/3, 15}, {3/4, 14}, {5/6, 13}, {
               11/12, 12}, 11, {11/12, 10}, {5/6, 9}, {3/4, 8}, {2/3, 7}, {
               7/12, 6}, {1/2, 5}, {5/12, 4}, {1/3, 3}, {1/4, 2}, {1/6, 1}, {
               1/12, 0}}}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.055914`4.898035559949163, "CPUTimeUsed" -> 
         0.05679099999999959, "MemoryUsed" -> 923472, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 8240430261019463918 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057710040103517`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "f8bd0aee-e633-4b37-b339-8823626ae519", "TestID" -> 
         "TimeAggregation_20231008-VIFCOZ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "6f9cc81d-88a1-4989-a81f-f589e92f5d71", "Input" -> HoldForm[
           Apply[
           And, {FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
               Function[{
                 Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                  Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                  Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                 0.0015]] == 
             0. + (0.3328334585207629 
                Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4] + (
                0.6661665418542368 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                  0.6671665414792372 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
                  0.33383345814576315` 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t])))), 
             FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
               Function[{
                 Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                  Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                  Tools`TimeAggregation`v}, 0.0015]] == 
             0. + (0.3328334585207629 
                Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4] + (
                0.6661665418542368 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                  0.6671665414792372 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
                  0.33383345814576315` 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t])))), 
             FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
               Function[{
                 Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                  Tools`TimeAggregation`h, Tools`TimeAggregation`k}, 0.0015]] == 
             0. + (0.3328334585207629 
                Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4] + (
                0.6661665418542368 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                  0.6671665414792372 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
                  0.33383345814576315` 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t])))), 
             FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
               Function[{
                 Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                  Tools`TimeAggregation`h}, 0.0015]] == 
             0. + (0.3328334585207629 
                Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4] + (
                0.6661665418542368 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                  0.6671665414792372 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
                  0.33383345814576315` 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t])))), 
             FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
               Function[{Tools`TimeAggregation`t, Tools`TimeAggregation`j}, 
                 0.0015]] == 
             0. + (0.3328334585207629 
                Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4] + (
                0.6661665418542368 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                  0.6671665414792372 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
                  0.33383345814576315` 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t])))), 
             FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
               Function[{Tools`TimeAggregation`t}, 0.0015]] == 
             0. + (0.3328334585207629 
                Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4] + (
                0.6661665418542368 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                  0.6671665414792372 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
                  0.33383345814576315` 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t])))), 
             FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
               Function[{}, 0.0015]] == 
             0. + (0.3328334585207629 
                Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4] + (
                0.6661665418542368 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                  0.6671665414792372 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
                  0.33383345814576315` 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t]))))}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.019225`4.434381346305463, "CPUTimeUsed" -> 0.02012200000000064, 
         "MemoryUsed" -> 432896, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 3733353611536687844 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057710040299067`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "69f27626-e6cc-44a0-889c-4f6a46886932", "TestID" -> 
         "TimeAggregation_20231008-3GM2MS", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "c9e6fb00-d4f2-46f9-9d96-668ca82aaf69", "Input" -> HoldForm[
           Apply[And, {Simplify[
               FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
               Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
                Function[{
                  Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                   Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                   Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                  Tools`TimeAggregation`t]]] == (1/(1 + 
               E^Tools`TimeAggregation`t + E^(2 Tools`TimeAggregation`t))) (
               Tools`TimeAggregation`dc[
                Tools`TimeAggregation`t - 
                 4] + ((1 + E^Tools`TimeAggregation`t) 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                  E^Tools`TimeAggregation`t 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                   E^(2 Tools`TimeAggregation`t) 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                    E^Tools`TimeAggregation`t 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + (
                    E^(2 Tools`TimeAggregation`t) 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
                    E^(2 Tools`TimeAggregation`t) 
                    Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t])))))))}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.06822`4.98442671290337, "CPUTimeUsed" -> 0.06898699999999991, 
         "MemoryUsed" -> 624160, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 11630483327103123 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905771004098444*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "7ef7cce6-1f3e-4e5c-ad30-a76b5c385774", "TestID" -> 
         "TimeAggregation_20231008-TFPPSK", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "922b8e4b-4c26-4880-8f3d-f71c996c92dd", "Input" -> HoldForm[
           Apply[And, {
             FreeQ[
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
               Function[{
                 Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                  Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                  Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                 If[
                 Tools`TimeAggregation`h == 12, Tools`TimeAggregation`h12, 
                  Tools`TimeAggregation`hnot12]]], Tools`TimeAggregation`h12], 
             FreeQ[
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 12, "numPeriods" -> 1, "v0" -> 
               Function[{
                 Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                  Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                  Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                 If[
                 Tools`TimeAggregation`h == 12, Tools`TimeAggregation`h12, 
                  Tools`TimeAggregation`hnot12]]], 
              Tools`TimeAggregation`hnot12]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         1.581043`6.349458679534456, "CPUTimeUsed" -> 1.5833089999999999`, 
         "MemoryUsed" -> 9199280, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 8705177935299505193 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905771005680029*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "87f2db30-0df2-44ce-bada-6890a502a587", "TestID" -> 
         "TimeAggregation_20231008-YVXHUC", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "e08da23a-08e3-48c9-a148-e4f4dab925b1", "Input" -> HoldForm[
           Apply[And, {0 === FullSimplify[
               Coefficient[
                ReplaceAll[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                  "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
                  Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, (-1)/(
                    Tools`TimeAggregation`h + 1)]], Tools`TimeAggregation`dc[
                   BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                Tools`TimeAggregation`dcX, 0]], 0 === FullSimplify[
               Coefficient[
                ReplaceAll[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                  "TimeAggregation" -> 3, "numPeriods" -> 3, "v0" -> 
                  Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`h^2]], Tools`TimeAggregation`dc[
                   BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                Tools`TimeAggregation`dcX, 0]], 0 === FullSimplify[
               Coefficient[
                ReplaceAll[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                  "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
                  Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`im]], Tools`TimeAggregation`dc[
                   BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                Tools`TimeAggregation`dcX, 0]], 0 === FullSimplify[
               Coefficient[
                ReplaceAll[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                  "TimeAggregation" -> 3, "numPeriods" -> 3, "v0" -> 
                  Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`v]], Tools`TimeAggregation`dc[
                   BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                Tools`TimeAggregation`dcX, 0]], 0 === FullSimplify[
               Coefficient[
                ReplaceAll[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                  Tools`TimeAggregation`i, "TimeAggregation" -> 3, 
                  "numPeriods" -> 1, "v0" -> 
                  Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`im]], Tools`TimeAggregation`dd[
                   BlankSequence[], Tools`TimeAggregation`i] -> 
                 Tools`TimeAggregation`ddX], Tools`TimeAggregation`ddX, 
                0]]}]], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.278008`5.594572291253181, "CPUTimeUsed" -> 0.2713239999999999, 
         "MemoryUsed" -> 1625744, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 9129502346965597204 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905771005958756*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "ae91b848-3b2c-4add-9c11-41c559366420", "TestID" -> 
         "TimeAggregation_20231008-91JF5Z", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "cbccf6d0-2ffa-40fb-b02f-85032a8dd632", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`arbitraryFun1 = 
            Function[{
              Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
               Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
               Tools`TimeAggregation`v}, 
              Sqrt[Tools`TimeAggregation`h]]; 
           Tools`TimeAggregation`arbitraryFun2 = 
            Function[{
              Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
               Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
               Tools`TimeAggregation`v}, 
              If[Tools`TimeAggregation`v == Tools`TimeAggregation`dd, 
               Sqrt[Tools`TimeAggregation`h], 
               Cos[Tools`TimeAggregation`h]]]; 
           Tools`TimeAggregation`arbitraryFun3 = 
            Function[{
              Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
               Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
               Tools`TimeAggregation`v}, -Tools`TimeAggregation`h]; 
           Tools`TimeAggregation`arbitraryFun4 = 
            Function[{
              Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
               Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
               Tools`TimeAggregation`v}, 
              Sqrt[Tools`TimeAggregation`h] Tools`TimeAggregation`t - 
              Tools`TimeAggregation`k^2]; 
           Tools`TimeAggregation`arbitraryFun5 = 
            Function[{
              Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
               Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
               Tools`TimeAggregation`v}, 
              If[
              Tools`TimeAggregation`v == Tools`TimeAggregation`dd, 
               Sqrt[Tools`TimeAggregation`h] Sqrt[Tools`TimeAggregation`t], 
               Exp[Tools`TimeAggregation`t] Cos[Tools`TimeAggregation`h]]]; 
           Tools`TimeAggregation`arbitraryFun6 = 
            Function[{
              Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
               Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
               Tools`TimeAggregation`v}, (-Tools`TimeAggregation`h) 
              Tools`TimeAggregation`t Tools`TimeAggregation`k]; Apply[And, {
              N[
               ReplaceAll[0 === FullSimplify[
                  Coefficient[
                   ReplaceAll[
                    FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                    Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                    "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
                    Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`F[
                    Tools`TimeAggregation`h, Tools`TimeAggregation`v, 
                    Tools`TimeAggregation`im]]], Tools`TimeAggregation`dc[
                    BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                   Tools`TimeAggregation`dcX, 0]], Tools`TimeAggregation`F -> 
                Tools`TimeAggregation`arbitraryFun1]], 
              N[
               ReplaceAll[0 === FullSimplify[
                  Coefficient[
                   ReplaceAll[
                    FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                    Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                    "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
                    Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`F[
                    Tools`TimeAggregation`h, Tools`TimeAggregation`v, 
                    Tools`TimeAggregation`im]]], Tools`TimeAggregation`dc[
                    BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                   Tools`TimeAggregation`dcX, 0]], Tools`TimeAggregation`F -> 
                Tools`TimeAggregation`arbitraryFun2]], 
              N[
               ReplaceAll[0 === FullSimplify[
                  Coefficient[
                   ReplaceAll[
                    FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                    Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                    "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
                    Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`F[
                    Tools`TimeAggregation`h, Tools`TimeAggregation`v, 
                    Tools`TimeAggregation`im]]], Tools`TimeAggregation`dc[
                    BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                   Tools`TimeAggregation`dcX, 0]], Tools`TimeAggregation`F -> 
                Tools`TimeAggregation`arbitraryFun3]], 
              N[
               ReplaceAll[0 === FullSimplify[
                  Coefficient[
                   ReplaceAll[
                    FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                    Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                    "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
                    Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`F[
                    Tools`TimeAggregation`h, Tools`TimeAggregation`v, 
                    Tools`TimeAggregation`im]]], Tools`TimeAggregation`dc[
                    BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                   Tools`TimeAggregation`dcX, 0]], Tools`TimeAggregation`F -> 
                Tools`TimeAggregation`arbitraryFun4]], 
              N[
               ReplaceAll[0 === FullSimplify[
                  Coefficient[
                   ReplaceAll[
                    FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                    Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                    "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
                    Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`F[
                    Tools`TimeAggregation`h, Tools`TimeAggregation`v, 
                    Tools`TimeAggregation`im]]], Tools`TimeAggregation`dc[
                    BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                   Tools`TimeAggregation`dcX, 0]], Tools`TimeAggregation`F -> 
                Tools`TimeAggregation`arbitraryFun5]], 
              N[
               ReplaceAll[0 === FullSimplify[
                  Coefficient[
                   ReplaceAll[
                    FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                    Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                    "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
                    Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`F[
                    Tools`TimeAggregation`h, Tools`TimeAggregation`v, 
                    Tools`TimeAggregation`im]]], Tools`TimeAggregation`dc[
                    BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                   Tools`TimeAggregation`dcX, 0]], Tools`TimeAggregation`F -> 
                Tools`TimeAggregation`arbitraryFun6]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.133754`5.276821776577234, "CPUTimeUsed" -> 0.135578999999999, 
         "MemoryUsed" -> 468448, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 5147543411714582911 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90577100609297*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "171c0bdd-0e33-4dd2-a935-8856e75295fd", "TestID" -> 
         "TimeAggregation_20231008-0FJ9QZ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "4f1b44f8-abe2-429e-811c-958175cbf5a0", "Input" -> HoldForm[
           Apply[And, {
             Not[
              N[0 === Coefficient[
                 ReplaceAll[
                  FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                  Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                   "TimeAggregation" -> 3, "numPeriods" -> 3, "v0" -> 
                   Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`j]], Tools`TimeAggregation`dc[
                    BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                 Tools`TimeAggregation`dcX, 0]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.013377`4.276873724901262, "CPUTimeUsed" -> 0.01361100000000004, 
         "MemoryUsed" -> 257808, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 2832112115078349378 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905771006106711*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "3de60a64-d979-4142-9819-979bdf5c97db", "TestID" -> 
         "TimeAggregation_20231008-E14NJZ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "571b51b3-8c07-4300-8f54-d04f5b49e53a", "Input" -> HoldForm[
           Apply[
           And, {FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
               Function[{Tools`TimeAggregation`t, Tools`TimeAggregation`j}, 
                 Tools`TimeAggregation`j]] == Subtract[Divide[
                 Subtract[
                  Subtract[
                  Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4] + 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] + 
                   E^4 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3], 
                   7], 3 E^4], 1 + E^4 + E^7] + (
                Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + (
                  Tools`TimeAggregation`dc[Tools`TimeAggregation`t] + (
                   Divide[((1 - E 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t]) - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t]) - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1], 1 + 
                    2 E] + Log[2 + 1/E])))), 
               Log[1 + 1/E^7 + 1/E^3]]}]], "ExpectedMessages" -> HoldForm[{}],
          "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.010246`4.1610693493723145, "CPUTimeUsed" -> 
         0.010430999999999635`, "MemoryUsed" -> 306704, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 7201496330306289805 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905771006117375*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "8412f2ba-d7e7-4bba-a1ea-6de16f6b4fe1", "TestID" -> 
         "TimeAggregation_20231008-ZCTXUR", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "aecc1b94-d20e-4e0e-8542-243904602cdd", "Input" -> HoldForm[
           Apply[And, {
             Not[
              FreeQ[
               FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
               Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
                Function[{
                  Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                   Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                   Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                  If[
                  Tools`TimeAggregation`v === Tools`TimeAggregation`dc, 
                   Tools`TimeAggregation`Edc, 0]]], 
               Tools`TimeAggregation`Edc]], 
             FreeQ[
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`pi, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
               Function[{
                 Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                  Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                  Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                 If[
                 Tools`TimeAggregation`v === Tools`TimeAggregation`dc, 
                  Tools`TimeAggregation`Edc, 0]]], Tools`TimeAggregation`Edc], 
             Not[
              FreeQ[
               FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
               Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                Tools`TimeAggregation`i, "TimeAggregation" -> 12, 
                "numPeriods" -> 1, "v0" -> 
                Function[{
                  Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                   Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                   Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                  If[
                  Tools`TimeAggregation`v === Tools`TimeAggregation`dd, 
                   Tools`TimeAggregation`Edd, 0]]], 
               Tools`TimeAggregation`Edd]], 
             FreeQ[
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 12, "numPeriods" -> 1, "v0" -> 
               Function[{
                 Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                  Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                  Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                 If[
                 Tools`TimeAggregation`v === Tools`TimeAggregation`dd, 
                  Tools`TimeAggregation`Edd, 0]]], 
              Tools`TimeAggregation`Edd]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         1.648241`6.367535710847154, "CPUTimeUsed" -> 1.6519430000000002`, 
         "MemoryUsed" -> 1774792, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 4692866438888142884 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905771007766066*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "3dff5493-f590-4de1-8cb3-471b472491a8", "TestID" -> 
         "TimeAggregation_20231008-TYXH9R", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "89ec9774-4742-404a-9746-34e5031a85c3", "Input" -> HoldForm[
           Apply[And, {ReplaceAll[
               FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
               Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
                Function[{
                  Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                   Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                   Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                  Evaluate[
                   Tools`TimeAggregation`uncondE[
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t]]]]], 
               Tools`TimeAggregation`uncondE[
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t]] -> 0] == 
             FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 3, "numPeriods" -> 1]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0829`5.069069528382266, "CPUTimeUsed" -> 0.08353000000000055, 
         "MemoryUsed" -> 258080, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 1485322381816155346 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905771007849406*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "c048922c-c729-41c9-b1f9-b0424d2232c0", "TestID" -> 
         "TimeAggregation_20231008-18G895", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "fbd89a0f-e71a-44a7-b299-57f68e765122", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 1; Tools`TimeAggregation`k = 1; 
           Apply[And, {
              Simplify[0 === Coefficient[
                 ReplaceAll[
                  FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                  Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                   "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                   Tools`TimeAggregation`k, "v0" -> 
                   Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`F[Tools`TimeAggregation`t]]], 
                  Tools`TimeAggregation`dc[
                    BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                 Tools`TimeAggregation`dcX, 0]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000311`2.6432753868588317, "CPUTimeUsed" -> 0.0003220000000005996, 
         "MemoryUsed" -> 6280, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7789262317548985028 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057710078500466`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "c6605c4a-f4d7-4337-9eea-4c7e8eaed723", "TestID" -> 
         "TimeAggregation_20231008-8ACQXK", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "3c1d1395-40be-4885-89c5-7d2356a3dc99", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 2; Tools`TimeAggregation`k = 1; 
           Tools`TimeAggregation`rulej = 
            Table[Tools`TimeAggregation`F[Tools`TimeAggregation`i] -> 
              Tools`TimeAggregation`F[
               Tools`TimeAggregation`h Tools`TimeAggregation`k + 
                Tools`TimeAggregation`i], {
              Tools`TimeAggregation`i, 0, Tools`TimeAggregation`h - 2}]; 
           Apply[And, {
              FullSimplify[0 === Coefficient[
                 ReplaceAll[
                  ReplaceAll[
                   FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                   Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                    "TimeAggregation" -> Tools`TimeAggregation`h, 
                    "numPeriods" -> Tools`TimeAggregation`k, "v0" -> 
                    Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`F[Tools`TimeAggregation`j]]], 
                   Tools`TimeAggregation`rulej], Tools`TimeAggregation`dc[
                    BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                 Tools`TimeAggregation`dcX, 0]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.022866`4.509705196987802, "CPUTimeUsed" -> 0.02319799999999983, 
         "MemoryUsed" -> 159504, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 8244900033072100845 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057710078733897`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "2fa19ae7-d734-4210-b331-d33e607664f3", "TestID" -> 
         "TimeAggregation_20231008-31R2WE", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "725fe3e1-e573-4047-850f-30bb8f4fb539", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 3; Tools`TimeAggregation`k = 1; 
           Tools`TimeAggregation`rulej = 
            Table[Tools`TimeAggregation`F[Tools`TimeAggregation`i] -> 
              Tools`TimeAggregation`F[
               Tools`TimeAggregation`h Tools`TimeAggregation`k + 
                Tools`TimeAggregation`i], {
              Tools`TimeAggregation`i, 0, Tools`TimeAggregation`h - 2}]; 
           Apply[And, {
              FullSimplify[0 === Coefficient[
                 ReplaceAll[
                  ReplaceAll[
                   FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                   Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                    "TimeAggregation" -> Tools`TimeAggregation`h, 
                    "numPeriods" -> Tools`TimeAggregation`k, "v0" -> 
                    Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`F[Tools`TimeAggregation`j]]], 
                   Tools`TimeAggregation`rulej], Tools`TimeAggregation`dc[
                    BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                 Tools`TimeAggregation`dcX, 0]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.083591`5.072674518563517, "CPUTimeUsed" -> 0.08429700000000029, 
         "MemoryUsed" -> 401536, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 3800930539188975585 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905771007957467*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a8f2b845-ac47-4a83-87cd-2463195c7cbb", "TestID" -> 
         "TimeAggregation_20231008-ZNFA7N", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "ffc18067-00fe-43f5-aced-2c404432be3b", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 4; Tools`TimeAggregation`k = 1; 
           Tools`TimeAggregation`rulej = 
            Table[Tools`TimeAggregation`F[Tools`TimeAggregation`i] -> 
              Tools`TimeAggregation`F[
               Tools`TimeAggregation`h Tools`TimeAggregation`k + 
                Tools`TimeAggregation`i], {
              Tools`TimeAggregation`i, 0, Tools`TimeAggregation`h - 2}]; 
           Apply[And, {
              FullSimplify[0 === Coefficient[
                 ReplaceAll[
                  ReplaceAll[
                   FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                   Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                    "TimeAggregation" -> Tools`TimeAggregation`h, 
                    "numPeriods" -> Tools`TimeAggregation`k, "v0" -> 
                    Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`F[Tools`TimeAggregation`j]]], 
                   Tools`TimeAggregation`rulej], Tools`TimeAggregation`dc[
                    BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                 Tools`TimeAggregation`dcX, 0]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.290744`5.614025758915097, "CPUTimeUsed" -> 0.291531, "MemoryUsed" -> 
         865440, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7314064780768118352 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057710082487197`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "01d76911-c6b9-429d-a9a6-4fe748da5fff", "TestID" -> 
         "TimeAggregation_20231008-E42BTS", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "1dc49f66-ead9-45ed-aab6-5d8eff790676", "Input" -> HoldForm[
           Apply[And, {Cases[
               Expand[
                FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                 "TimeAggregation" -> 3, "numPeriods" -> 1, "Order" -> 0]], 
               Optional[
                  Pattern[Tools`TimeAggregation`coef, 
                   Blank[]]] Tools`TimeAggregation`dc[
                   BlankSequence[]]^Optional[
                   Pattern[Tools`TimeAggregation`p, 
                    Blank[]]] :> Tools`TimeAggregation`p] === {}, Max[
               Cases[
                Expand[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                  "TimeAggregation" -> 3, "numPeriods" -> 1, "Order" -> 1]], 
                Optional[
                   Pattern[Tools`TimeAggregation`coef, 
                    Blank[]]] Tools`TimeAggregation`dc[
                    BlankSequence[]]^Optional[
                    Pattern[Tools`TimeAggregation`p, 
                    Blank[]]] :> Tools`TimeAggregation`p]] === 1, Max[
               Cases[
                Expand[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                  "TimeAggregation" -> 3, "numPeriods" -> 1, "Order" -> 2]], 
                Optional[
                   Pattern[Tools`TimeAggregation`coef, 
                    Blank[]]] Tools`TimeAggregation`dc[
                    BlankSequence[]]^Optional[
                    Pattern[Tools`TimeAggregation`p, 
                    Blank[]]] :> Tools`TimeAggregation`p]] === 2, Max[
               Cases[
                Expand[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                  "TimeAggregation" -> 3, "numPeriods" -> 1, "Order" -> 3]], 
                Optional[
                   Pattern[Tools`TimeAggregation`coef, 
                    Blank[]]] Tools`TimeAggregation`dc[
                    BlankSequence[]]^Optional[
                    Pattern[Tools`TimeAggregation`p, 
                    Blank[]]] :> Tools`TimeAggregation`p]] === 3}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.014097`4.2996416975746055, "CPUTimeUsed" -> 0.01468999999999987, 
         "MemoryUsed" -> 133512, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 2423416131780218969 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057710082632036`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "7cb05ff3-d06d-452f-8cd1-4814a4e88896", "TestID" -> 
         "TimeAggregation_20231008-W74JSN", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "46b07b29-eb38-42c0-895c-874c55a2e635", "Input" -> HoldForm[
           Apply[And, {Cases[
               Expand[
                FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                 Tools`TimeAggregation`i, "TimeAggregation" -> 3, 
                 "numPeriods" -> 1, "Order" -> 0]], Optional[
                  Pattern[Tools`TimeAggregation`coef, 
                   Blank[]]] Tools`TimeAggregation`dd[
                   BlankSequence[], Tools`TimeAggregation`i]^Optional[
                   Pattern[Tools`TimeAggregation`p, 
                    Blank[]]] :> Tools`TimeAggregation`p] === {}, Max[
               Cases[
                Expand[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                  Tools`TimeAggregation`i, "TimeAggregation" -> 3, 
                  "numPeriods" -> 1, "Order" -> 1]], Optional[
                   Pattern[Tools`TimeAggregation`coef, 
                    Blank[]]] Tools`TimeAggregation`dd[
                    BlankSequence[], Tools`TimeAggregation`i]^Optional[
                    Pattern[Tools`TimeAggregation`p, 
                    Blank[]]] :> Tools`TimeAggregation`p]] === 1, Max[
               Cases[
                Expand[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                  Tools`TimeAggregation`i, "TimeAggregation" -> 3, 
                  "numPeriods" -> 1, "Order" -> 2]], Optional[
                   Pattern[Tools`TimeAggregation`coef, 
                    Blank[]]] Tools`TimeAggregation`dd[
                    BlankSequence[], Tools`TimeAggregation`i]^Optional[
                    Pattern[Tools`TimeAggregation`p, 
                    Blank[]]] :> Tools`TimeAggregation`p]] === 2, Max[
               Cases[
                Expand[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                  Tools`TimeAggregation`i, "TimeAggregation" -> 3, 
                  "numPeriods" -> 1, "Order" -> 3]], Optional[
                   Pattern[Tools`TimeAggregation`coef, 
                    Blank[]]] Tools`TimeAggregation`dd[
                    BlankSequence[], Tools`TimeAggregation`i]^Optional[
                    Pattern[Tools`TimeAggregation`p, 
                    Blank[]]] :> Tools`TimeAggregation`p]] === 3}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.01592`4.35245806123364, "CPUTimeUsed" -> 0.016540000000000887`, 
         "MemoryUsed" -> 142656, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 603969188231972184 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905771008279551*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "ae856d7d-afaa-40c6-bc8e-060d3f5ecff5", "TestID" -> 
         "TimeAggregation_20231008-FK1LY2", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "36207a3e-2985-44a7-8cba-8da2ddb03927", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`f = 
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`f; 
           Tools`TimeAggregation`g = 
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`g; 
           Tools`TimeAggregation`s = 
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`s; 
           Tools`TimeAggregation`timeSeriesVector = 
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
timeSeriesVector; 
           Tools`TimeAggregation`gt = 
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`gt; 
           True], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000026`1.5654883458028104, "CPUTimeUsed" -> 
         0.000026000000000081513`, "MemoryUsed" -> 2592, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 5390704601871718435 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057710082801867`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "3d511588-3764-474f-b6be-47614614d63a", "TestID" -> 
         "TimeAggregation_20231008-F353ND", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "e4d854f8-a8cf-4629-8502-4d7587a98375", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 3; Tools`TimeAggregation`k = 2; 
           Apply[And, {
             Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dc, Tools`TimeAggregation`t] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dc, Tools`TimeAggregation`t, {
                "TimeAggregation" -> 3, "numPeriods" -> 
                 Tools`TimeAggregation`k}] == 
              Subtract[
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 5] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4] + (
                  Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] + (
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + (
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t] + 
                    Log[1 + (
                    E^(-Tools`TimeAggregation`dc[Tools`TimeAggregation`t] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1]) + 
                    E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t]))]))))), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 6] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 7]) + 
                  E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t - 6]))]], 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                "TimeAggregation" -> 3, "numPeriods" -> 
                Tools`TimeAggregation`k] == 
              Subtract[
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 5] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4] + (
                  Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] + (
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + (
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t] + 
                    Log[1 + (
                    E^(-Tools`TimeAggregation`dc[Tools`TimeAggregation`t] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1]) + 
                    E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t]))]))))), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 6] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 7]) + 
                  E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t - 6]))]], 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                Tools`TimeAggregation`i, {
                "TimeAggregation" -> 3, "numPeriods" -> 
                 Tools`TimeAggregation`k}] == 
              Subtract[
               Tools`TimeAggregation`dd[
                 Tools`TimeAggregation`t - 5, Tools`TimeAggregation`i] + (
                 Tools`TimeAggregation`dd[
                  Tools`TimeAggregation`t - 4, Tools`TimeAggregation`i] + (
                  Tools`TimeAggregation`dd[
                   Tools`TimeAggregation`t - 3, Tools`TimeAggregation`i] + (
                   Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 2, Tools`TimeAggregation`i] + (
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 1, Tools`TimeAggregation`i] + (
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`i] + 
                    Log[1 + (
                    E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`i] - 
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 1, Tools`TimeAggregation`i]) + 
                    E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`i]))]))))), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 6, Tools`TimeAggregation`i] - 
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 7, Tools`TimeAggregation`i]) + 
                  E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 6, Tools`TimeAggregation`i]))]],
               Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                Tools`TimeAggregation`i, "TimeAggregation" -> 3, "numPeriods" -> 
                Tools`TimeAggregation`k] == 
              Subtract[
               Tools`TimeAggregation`dd[
                 Tools`TimeAggregation`t - 5, Tools`TimeAggregation`i] + (
                 Tools`TimeAggregation`dd[
                  Tools`TimeAggregation`t - 4, Tools`TimeAggregation`i] + (
                  Tools`TimeAggregation`dd[
                   Tools`TimeAggregation`t - 3, Tools`TimeAggregation`i] + (
                   Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 2, Tools`TimeAggregation`i] + (
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 1, Tools`TimeAggregation`i] + (
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`i] + 
                    Log[1 + (
                    E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`i] - 
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 1, Tools`TimeAggregation`i]) + 
                    E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`i]))]))))), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 6, Tools`TimeAggregation`i] - 
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 7, Tools`TimeAggregation`i]) + 
                  E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 6, Tools`TimeAggregation`i]))]],
               Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 1, {
                "TimeAggregation" -> 3, "numPeriods" -> 
                 Tools`TimeAggregation`k}] == 
              Subtract[
               Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 5, 1] + (
                 Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 4, 1] + (
                  Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 3, 1] + (
                   Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 2, 1] + (
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 1, 1] + (
                    Tools`TimeAggregation`dd[Tools`TimeAggregation`t, 1] + 
                    Log[1 + (
                    E^(-Tools`TimeAggregation`dd[Tools`TimeAggregation`t, 1] - 
                    Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 1, 1]) + 
                    E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t, 1]))]))))), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 6, 1] - 
                    Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 7, 1]) + 
                  E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 6, 1]))]], 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 2, 
                "TimeAggregation" -> 3, "numPeriods" -> 
                Tools`TimeAggregation`k] == 
              Subtract[
               Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 5, 2] + (
                 Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 4, 2] + (
                  Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 3, 2] + (
                   Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 2, 2] + (
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 1, 2] + (
                    Tools`TimeAggregation`dd[Tools`TimeAggregation`t, 2] + 
                    Log[1 + (
                    E^(-Tools`TimeAggregation`dd[Tools`TimeAggregation`t, 2] - 
                    Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 1, 2]) + 
                    E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t, 2]))]))))), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 6, 2] - 
                    Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 7, 2]) + 
                  E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 6, 2]))]]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000561`2.8994778590881514, "CPUTimeUsed" -> 0.0005620000000003955, 
         "MemoryUsed" -> 2648, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 6718829052058649855 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905771008281066*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "c168d898-3e3c-4de9-8443-b70ca061f9e2", "TestID" -> 
         "TimeAggregation_20231008-91PFM6", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "b2420d16-7749-4274-97c2-bf1b3b91ab54", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 3; Tools`TimeAggregation`k = 2; 
           Apply[And, {
             Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dc, Tools`TimeAggregation`t] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                "flowVariable" -> False] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                "TimeAggregation" -> 3, "flowVariable" -> False] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                Tools`TimeAggregation`i, {
                "numPeriods" -> Tools`TimeAggregation`k}, "flowVariable" -> 
                False] == Tools`TimeAggregation`dd[
                Tools`TimeAggregation`t - 1, Tools`TimeAggregation`i] + 
               Tools`TimeAggregation`dd[
                Tools`TimeAggregation`t, Tools`TimeAggregation`i], 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                Tools`TimeAggregation`i, "flowVariable" -> False] == 
              Tools`TimeAggregation`dd[
               Tools`TimeAggregation`t, Tools`TimeAggregation`i], 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 1, {
                "TimeAggregation" -> 3}, "flowVariable" -> False] == 
              Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 2, 1] + 
               Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 1, 1] + 
               Tools`TimeAggregation`dd[Tools`TimeAggregation`t, 1], 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 2, 
                "flowVariable" -> False] == 
              Tools`TimeAggregation`dd[Tools`TimeAggregation`t, 2]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000258`2.562134703795222, "CPUTimeUsed" -> 0.00025900000000067536`,
          "MemoryUsed" -> 2592, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 8486031663357150602 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905771008281722*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "1c200302-5583-4e2f-96f9-0c94f821469c", "TestID" -> 
         "TimeAggregation_20231008-7FVTG8", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "6b876974-0c78-4314-ab3b-59229ed34078", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 3; Tools`TimeAggregation`k = 2; 
           Apply[And, {
             Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dc, Tools`TimeAggregation`t] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dc, Tools`TimeAggregation`t, {
                "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                 Tools`TimeAggregation`k}, "flowVariable" -> False] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 5] + (
                Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] + 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t])), 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                Tools`TimeAggregation`k, "flowVariable" -> False] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 5] + (
                Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] + 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t])), 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                Tools`TimeAggregation`i, {
                "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                 Tools`TimeAggregation`k}, "flowVariable" -> False] == 
              Tools`TimeAggregation`dd[
                Tools`TimeAggregation`t - 5, Tools`TimeAggregation`i] + (
                Tools`TimeAggregation`dd[
                 Tools`TimeAggregation`t - 4, Tools`TimeAggregation`i] + (
                 Tools`TimeAggregation`dd[
                  Tools`TimeAggregation`t - 3, Tools`TimeAggregation`i] + (
                  Tools`TimeAggregation`dd[
                   Tools`TimeAggregation`t - 2, Tools`TimeAggregation`i] + 
                  Tools`TimeAggregation`dd[
                   Tools`TimeAggregation`t - 1, Tools`TimeAggregation`i] + 
                  Tools`TimeAggregation`dd[
                   Tools`TimeAggregation`t, Tools`TimeAggregation`i]))), 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                Tools`TimeAggregation`i, "TimeAggregation" -> 
                Tools`TimeAggregation`h, "numPeriods" -> 
                Tools`TimeAggregation`k, "flowVariable" -> False] == 
              Tools`TimeAggregation`dd[
                Tools`TimeAggregation`t - 5, Tools`TimeAggregation`i] + (
                Tools`TimeAggregation`dd[
                 Tools`TimeAggregation`t - 4, Tools`TimeAggregation`i] + (
                 Tools`TimeAggregation`dd[
                  Tools`TimeAggregation`t - 3, Tools`TimeAggregation`i] + (
                  Tools`TimeAggregation`dd[
                   Tools`TimeAggregation`t - 2, Tools`TimeAggregation`i] + 
                  Tools`TimeAggregation`dd[
                   Tools`TimeAggregation`t - 1, Tools`TimeAggregation`i] + 
                  Tools`TimeAggregation`dd[
                   Tools`TimeAggregation`t, Tools`TimeAggregation`i]))), 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 1, {
                "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                 Tools`TimeAggregation`k}, "flowVariable" -> False] == 
              Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 5, 1] + (
                Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 4, 1] + (
                 Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 3, 1] + (
                  Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 2, 1] + 
                  Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 1, 1] + 
                  Tools`TimeAggregation`dd[Tools`TimeAggregation`t, 1]))), 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 2, 
                "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                Tools`TimeAggregation`k, "flowVariable" -> False] == 
              Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 5, 2] + (
                Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 4, 2] + (
                 Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 3, 2] + (
                  Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 2, 2] + 
                  Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 1, 2] + 
                  Tools`TimeAggregation`dd[Tools`TimeAggregation`t, 2])))}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00033`2.6690289377098817, "CPUTimeUsed" -> 0.0003289999999998017, 
         "MemoryUsed" -> 2592, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7449415572991144977 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905771008282396*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "f88f5019-a02e-4101-a35f-98786ed0d379", "TestID" -> 
         "TimeAggregation_20231008-742TNX", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "ad29200b-700a-48b9-8d38-e6cc6b8b41e6", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 3; Tools`TimeAggregation`k = 1; 
           Apply[And, {Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                 "TimeAggregation" -> Tools`TimeAggregation`h], 
                Tools`TimeAggregation`h] == 
              Subtract[
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + (
                  Tools`TimeAggregation`dc[Tools`TimeAggregation`t] + 
                  Log[1 + (
                    E^(-Tools`TimeAggregation`dc[Tools`TimeAggregation`t] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1]) + 
                    E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t]))])), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4]) + 
                  E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t - 3]))]], 
              Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                 "numPeriods" -> Tools`TimeAggregation`k], 1, 
                Tools`TimeAggregation`k] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
              Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t, {
                 "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                  Tools`TimeAggregation`k}], Tools`TimeAggregation`h, 
                Tools`TimeAggregation`k] == 
              Subtract[
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + (
                  Tools`TimeAggregation`dc[Tools`TimeAggregation`t] + 
                  Log[1 + (
                    E^(-Tools`TimeAggregation`dc[Tools`TimeAggregation`t] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1]) + 
                    E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t]))])), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4]) + 
                  E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t - 3]))]], 
              Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                 "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                 Tools`TimeAggregation`k], Tools`TimeAggregation`h, 
                Tools`TimeAggregation`k] == 
              Subtract[
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + (
                  Tools`TimeAggregation`dc[Tools`TimeAggregation`t] + 
                  Log[1 + (
                    E^(-Tools`TimeAggregation`dc[Tools`TimeAggregation`t] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1]) + 
                    E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t]))])), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4]) + 
                  E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t - 3]))]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000225`2.502697515943354, "CPUTimeUsed" -> 0.00022600000000050358`,
          "MemoryUsed" -> 2584, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 5136130477039392554 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905771008282928*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "5a580172-d7bc-4171-9a42-6ab2a9612712", "TestID" -> 
         "TimeAggregation_20231008-XDB92N", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "7bcc8e41-6e4b-401d-851c-6a5a8cfdafe9", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 3; Tools`TimeAggregation`k = 1; 
           Apply[And, {Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t], 
                Tools`TimeAggregation`h] == 
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`g[{
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t]}, 3], 
              Tools`TimeAggregation`g[
                Part[
                 Tools`TimeAggregation`timeSeriesVector[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                  "TimeAggregation" -> Tools`TimeAggregation`h], 
                 Span[1, -2]], Tools`TimeAggregation`h] == 
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`g[{
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3]}, 3], 
              Tools`TimeAggregation`g[
                Part[
                 Tools`TimeAggregation`timeSeriesVector[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                  "numPeriods" -> Tools`TimeAggregation`k], 
                 Span[1, -2]], 1, Tools`TimeAggregation`k] == 
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`g[{}, 
                1, 1], Tools`TimeAggregation`g[
                Part[
                 Tools`TimeAggregation`timeSeriesVector[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, {
                  "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                   Tools`TimeAggregation`k}], 
                 Span[1, -2]], Tools`TimeAggregation`h, 
                Tools`TimeAggregation`k] == 
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`g[{
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3]}, 3, 
                1], Tools`TimeAggregation`g[
                Part[
                 Tools`TimeAggregation`timeSeriesVector[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                  "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                  Tools`TimeAggregation`k], 
                 Span[1, -2]], Tools`TimeAggregation`h, 
                Tools`TimeAggregation`k] == 
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`g[{
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3]}, 3, 
                1]}]], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000143`2.305851035297051, "CPUTimeUsed" -> 0.0001440000000005881, 
         "MemoryUsed" -> 2592, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 5540691933982470233 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905771008283415*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "5d1f2771-85d5-466e-8d2a-cbcb3bdde7bd", "TestID" -> 
         "TimeAggregation_20231008-3CCD6C", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "3672b35a-455b-4b03-a069-0f5092857906", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 3; Tools`TimeAggregation`k = 1; 
           Apply[And, {Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                 "TimeAggregation" -> Tools`TimeAggregation`h], 
                Tools`TimeAggregation`h, "flowVariable" -> True] == 
              Subtract[
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + (
                  Tools`TimeAggregation`dc[Tools`TimeAggregation`t] + 
                  Log[1 + (
                    E^(-Tools`TimeAggregation`dc[Tools`TimeAggregation`t] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1]) + 
                    E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t]))])), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4]) + 
                  E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t - 3]))]], 
              Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                 "numPeriods" -> Tools`TimeAggregation`k], 1, 
                Tools`TimeAggregation`k, "flowVariable" -> True] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
              Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t, {
                 "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                  Tools`TimeAggregation`k}], Tools`TimeAggregation`h, 
                Tools`TimeAggregation`k, "flowVariable" -> True] == 
              Subtract[
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + (
                  Tools`TimeAggregation`dc[Tools`TimeAggregation`t] + 
                  Log[1 + (
                    E^(-Tools`TimeAggregation`dc[Tools`TimeAggregation`t] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1]) + 
                    E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t]))])), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4]) + 
                  E^(-
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3]))]],
               Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                 "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                 Tools`TimeAggregation`k], Tools`TimeAggregation`h, 
                Tools`TimeAggregation`k, "flowVariable" -> True] == 
              Subtract[
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + (
                  Tools`TimeAggregation`dc[Tools`TimeAggregation`t] + 
                  Log[1 + (
                    E^(-Tools`TimeAggregation`dc[Tools`TimeAggregation`t] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1]) + 
                    E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t]))])), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4]) + 
                  E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t - 3]))]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000241`2.532532040406858, "CPUTimeUsed" -> 0.0002400000000006841, 
         "MemoryUsed" -> 2592, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 5815058157876571671 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057710082839336`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "2cff91bf-2f1b-4e04-aec7-d336b0e0c48e", "TestID" -> 
         "TimeAggregation_20231008-3599E6", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "f55165e6-cdf4-4ace-9be7-c7f95b23b387", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 3; Tools`TimeAggregation`k = 1; 
           Apply[And, {Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                 "TimeAggregation" -> Tools`TimeAggregation`h], 
                Tools`TimeAggregation`h, "flowVariable" -> False] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
              Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                 "numPeriods" -> Tools`TimeAggregation`k], 1, 
                Tools`TimeAggregation`k, "flowVariable" -> False] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
              Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t, {
                 "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                  Tools`TimeAggregation`k}], Tools`TimeAggregation`h, 
                Tools`TimeAggregation`k, "flowVariable" -> False] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
              Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                 "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                 Tools`TimeAggregation`k], Tools`TimeAggregation`h, 
                Tools`TimeAggregation`k, "flowVariable" -> False] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000134`2.2776197961968014, "CPUTimeUsed" -> 0.0001340000000000785, 
         "MemoryUsed" -> 2592, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4902665915821499250 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905771008284357*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a6dd8071-6fbe-4bfd-b111-7ca7bc356e98", "TestID" -> 
         "TimeAggregation_20231008-7JQCN9", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "41441065-f9ae-427d-9485-aad2011e292a", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 3; Tools`TimeAggregation`k = 1; 
           Apply[And, {Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t], 1, 
                "flowVariable" -> False] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
              Tools`TimeAggregation`g[
                Part[
                 Tools`TimeAggregation`timeSeriesVector[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                  "TimeAggregation" -> Tools`TimeAggregation`h], 
                 Span[1, Tools`TimeAggregation`h Tools`TimeAggregation`k]], 
                Tools`TimeAggregation`h, "flowVariable" -> False] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
              Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                 "numPeriods" -> Tools`TimeAggregation`k], 1, 
                Tools`TimeAggregation`k, "flowVariable" -> False] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
              Tools`TimeAggregation`g[
                Part[
                 Tools`TimeAggregation`timeSeriesVector[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, {
                  "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                   Tools`TimeAggregation`k}], 
                 Span[1, Tools`TimeAggregation`h Tools`TimeAggregation`k]], 
                Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                "flowVariable" -> False] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
              Tools`TimeAggregation`g[
                Part[
                 Tools`TimeAggregation`timeSeriesVector[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                  "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                  Tools`TimeAggregation`k], 
                 Span[1, Tools`TimeAggregation`h Tools`TimeAggregation`k]], 
                Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                "flowVariable" -> False] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000114`2.207419849168462, "CPUTimeUsed" -> 0.00011500000000008725`,
          "MemoryUsed" -> 2592, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4461614742967261342 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905771008284764*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "fc54ea45-165f-4e0c-ad38-ebf7de95ca15", "TestID" -> 
         "TimeAggregation_20231008-R54CZ0", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "f2b4ee78-64c1-48d5-b0b8-33a9de0baaa4", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 3; Tools`TimeAggregation`k = 1; 
           Apply[And, {Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t], 
                "flowVariable" -> False] == 
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`g[{
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t]}, 
                "flowVariable" -> False], Tools`TimeAggregation`g[
                Part[
                 Tools`TimeAggregation`timeSeriesVector[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                  "TimeAggregation" -> Tools`TimeAggregation`h], 
                 Span[
                 1, Tools`TimeAggregation`h Tools`TimeAggregation`k + 1]], 
                Tools`TimeAggregation`h, "flowVariable" -> False] == 
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`g[{
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3]}, 3, 
                "flowVariable" -> False], Tools`TimeAggregation`g[
                Part[
                 Tools`TimeAggregation`timeSeriesVector[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, {
                  "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                   Tools`TimeAggregation`k}], 
                 Span[
                 1, Tools`TimeAggregation`h Tools`TimeAggregation`k + 1]], 
                Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                "flowVariable" -> False] == 
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`g[{
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3]}, 3, 1,
                 "flowVariable" -> False], Tools`TimeAggregation`g[
                Part[
                 Tools`TimeAggregation`timeSeriesVector[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                  "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                  Tools`TimeAggregation`k], 
                 Span[
                 1, Tools`TimeAggregation`h Tools`TimeAggregation`k + 1]], 
                Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                "flowVariable" -> False] == 
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`g[{
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3]}, 3, 1,
                 "flowVariable" -> False]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000128`2.2577249674798603, "CPUTimeUsed" -> 0.0001299999999995194, 
         "MemoryUsed" -> 2592, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 6541412590277152113 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905771008285288*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "7a3ef923-da92-4768-bf49-10a971d62ef1", "TestID" -> 
         "TimeAggregation_20231008-OUPHEO", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "125a7ddd-40ee-4e6f-979d-6d2cc3a8c445", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 3; Tools`TimeAggregation`k = 1; 
           Apply[And, {Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                 Tools`TimeAggregation`i], 1] == 
              Tools`TimeAggregation`dd[
               Tools`TimeAggregation`t, Tools`TimeAggregation`i], 
              Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                 Tools`TimeAggregation`i, "TimeAggregation" -> 
                 Tools`TimeAggregation`h], Tools`TimeAggregation`h] == 
              Subtract[
               Tools`TimeAggregation`dd[
                 Tools`TimeAggregation`t - 2, Tools`TimeAggregation`i] + (
                 Tools`TimeAggregation`dd[
                  Tools`TimeAggregation`t - 1, Tools`TimeAggregation`i] + (
                  Tools`TimeAggregation`dd[
                   Tools`TimeAggregation`t, Tools`TimeAggregation`i] + 
                  Log[1 + (
                    E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`i] - 
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 1, Tools`TimeAggregation`i]) + 
                    E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`i]))])), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 3, Tools`TimeAggregation`i] - 
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 4, Tools`TimeAggregation`i]) + 
                  E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 3, Tools`TimeAggregation`i]))]],
               Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                 Tools`TimeAggregation`i, "numPeriods" -> 
                 Tools`TimeAggregation`k], 1, Tools`TimeAggregation`k] == 
              Tools`TimeAggregation`dd[
               Tools`TimeAggregation`t, Tools`TimeAggregation`i], 
              Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                 Tools`TimeAggregation`i, {
                 "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                  Tools`TimeAggregation`k}], Tools`TimeAggregation`h, 
                Tools`TimeAggregation`k] == 
              Subtract[
               Tools`TimeAggregation`dd[
                 Tools`TimeAggregation`t - 2, Tools`TimeAggregation`i] + (
                 Tools`TimeAggregation`dd[
                  Tools`TimeAggregation`t - 1, Tools`TimeAggregation`i] + (
                  Tools`TimeAggregation`dd[
                   Tools`TimeAggregation`t, Tools`TimeAggregation`i] + 
                  Log[1 + (
                    E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`i] - 
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 1, Tools`TimeAggregation`i]) + 
                    E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`i]))])), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 3, Tools`TimeAggregation`i] - 
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 4, Tools`TimeAggregation`i]) + 
                  E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 3, Tools`TimeAggregation`i]))]],
               Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                 Tools`TimeAggregation`i, "TimeAggregation" -> 
                 Tools`TimeAggregation`h, "numPeriods" -> 
                 Tools`TimeAggregation`k], Tools`TimeAggregation`h, 
                Tools`TimeAggregation`k] == 
              Subtract[
               Tools`TimeAggregation`dd[
                 Tools`TimeAggregation`t - 2, Tools`TimeAggregation`i] + (
                 Tools`TimeAggregation`dd[
                  Tools`TimeAggregation`t - 1, Tools`TimeAggregation`i] + (
                  Tools`TimeAggregation`dd[
                   Tools`TimeAggregation`t, Tools`TimeAggregation`i] + 
                  Log[1 + (
                    E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`i] - 
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 1, Tools`TimeAggregation`i]) + 
                    E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`i]))])), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 3, Tools`TimeAggregation`i] - 
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 4, Tools`TimeAggregation`i]) + 
                  E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 3, 
                    Tools`TimeAggregation`i]))]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000264`2.5721189247018232, "CPUTimeUsed" -> 0.0002639999999995979, 
         "MemoryUsed" -> 2592, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4512583378571383959 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905771008285933*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "77722a1b-6870-402f-bb03-73f4338bc5c1", "TestID" -> 
         "TimeAggregation_20231008-YNM7TX", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "47bd2c9f-93c6-4931-b399-bee70ac402bd", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 3; Tools`TimeAggregation`k = 1; 
           Apply[And, {Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`bondret, Tools`TimeAggregation`t, 
                 Tools`TimeAggregation`m, "TimeAggregation" -> 
                 Tools`TimeAggregation`h], Tools`TimeAggregation`h] == 
              Subtract[
               Tools`TimeAggregation`bondret[
                 Tools`TimeAggregation`t - 2, Tools`TimeAggregation`m] + (
                 Tools`TimeAggregation`bondret[
                  Tools`TimeAggregation`t - 1, Tools`TimeAggregation`m] + (
                  Tools`TimeAggregation`bondret[
                   Tools`TimeAggregation`t, Tools`TimeAggregation`m] + 
                  Log[1 + (
                    E^(-Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`m] - 
                    Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t - 1, Tools`TimeAggregation`m]) + 
                    E^(-Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`m]))])), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t - 3, Tools`TimeAggregation`m] - 
                    Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t - 4, Tools`TimeAggregation`m]) + 
                  E^(-Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t - 3, Tools`TimeAggregation`m]))]],
               Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`bondret, Tools`TimeAggregation`t, 
                 Tools`TimeAggregation`m, "numPeriods" -> 
                 Tools`TimeAggregation`k], 1, Tools`TimeAggregation`k] == 
              Tools`TimeAggregation`bondret[
               Tools`TimeAggregation`t, Tools`TimeAggregation`m], 
              Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`bondret, Tools`TimeAggregation`t, 
                 Tools`TimeAggregation`m, {
                 "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                  Tools`TimeAggregation`k}], Tools`TimeAggregation`h, 
                Tools`TimeAggregation`k] == 
              Subtract[
               Tools`TimeAggregation`bondret[
                 Tools`TimeAggregation`t - 2, Tools`TimeAggregation`m] + (
                 Tools`TimeAggregation`bondret[
                  Tools`TimeAggregation`t - 1, Tools`TimeAggregation`m] + (
                  Tools`TimeAggregation`bondret[
                   Tools`TimeAggregation`t, Tools`TimeAggregation`m] + 
                  Log[1 + (
                    E^(-Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`m] - 
                    Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t - 1, Tools`TimeAggregation`m]) + 
                    E^(-Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`m]))])), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t - 3, Tools`TimeAggregation`m] - 
                    Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t - 4, Tools`TimeAggregation`m]) + 
                  E^(-Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t - 3, Tools`TimeAggregation`m]))]],
               Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`bondret, Tools`TimeAggregation`t, 
                 Tools`TimeAggregation`m, "TimeAggregation" -> 
                 Tools`TimeAggregation`h, "numPeriods" -> 
                 Tools`TimeAggregation`k], Tools`TimeAggregation`h, 
                Tools`TimeAggregation`k] == 
              Subtract[
               Tools`TimeAggregation`bondret[
                 Tools`TimeAggregation`t - 2, Tools`TimeAggregation`m] + (
                 Tools`TimeAggregation`bondret[
                  Tools`TimeAggregation`t - 1, Tools`TimeAggregation`m] + (
                  Tools`TimeAggregation`bondret[
                   Tools`TimeAggregation`t, Tools`TimeAggregation`m] + 
                  Log[1 + (
                    E^(-Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`m] - 
                    Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t - 1, Tools`TimeAggregation`m]) + 
                    E^(-Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`m]))])), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t - 3, Tools`TimeAggregation`m] - 
                    Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t - 4, Tools`TimeAggregation`m]) + 
                  E^(-Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t - 3, 
                    Tools`TimeAggregation`m]))]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000233`2.5178709188580086, "CPUTimeUsed" -> 
         0.00023399999999984544`, "MemoryUsed" -> 2592, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 7466009890036599507 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905771008286643*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "b04b68b7-788f-4d88-bb44-5b9469b18a27", "TestID" -> 
         "TimeAggregation_20231008-WPGXRF", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "f54cbe54-6534-463e-8aba-138ceda7e4a7", "Input" -> HoldForm[
           Apply[
           And, {Tools`TimeAggregation`timeSeriesVector[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t] == {
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t]}, 
             Tools`TimeAggregation`timeSeriesVector[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 3] == {
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4]}, 
             Tools`TimeAggregation`timeSeriesVector[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, "numPeriods" -> 
               6] == {
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 5]}, 
             Tools`TimeAggregation`timeSeriesVector[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, {
               "TimeAggregation" -> 12, "numPeriods" -> 3}] == {
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 5], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 6], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 7], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 8], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 9], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 10], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 11], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 12], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 13], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 14], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 15], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 16], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 17], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 18], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 19], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 20], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 21], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 22], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 23], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 24], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 25], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 26], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 27], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 28], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 29], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 30], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 31], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 32], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 33], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 34], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 35], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 36], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 37], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 38], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 39], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 40], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 41], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 42], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 43], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 44], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 45], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 46]}, 
             Tools`TimeAggregation`timeSeriesVector[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 12, "numPeriods" -> 3] == {
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 5], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 6], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 7], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 8], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 9], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 10], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 11], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 12], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 13], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 14], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 15], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 16], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 17], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 18], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 19], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 20], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 21], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 22], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 23], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 24], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 25], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 26], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 27], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 28], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 29], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 30], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 31], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 32], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 33], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 34], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 35], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 36], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 37], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 38], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 39], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 40], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 41], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 42], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 43], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 44], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 45], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 46]}}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000156`2.343639596186456, "CPUTimeUsed" -> 0.00015600000000048908`,
          "MemoryUsed" -> 7840, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 819936743586710036 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057710082869997`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "05404a81-2dc7-49f4-b16f-cc1b1a668d27", "TestID" -> 
         "TimeAggregation_20231008-6QIC3T", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "7e816ea4-29d7-4fc6-b054-f2ff6cdf88e2", "Input" -> HoldForm[On[
             MessageName[General, "stop"]]; True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000019`1.4292685987848202, "CPUTimeUsed" -> 
         0.000020000000000131024`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>]|>, 
    "FailureResults" -> <||>, "TestsNotEvaluatedKeys" -> {}, 
    "TestsFailedWrongResultsKeys" -> {}, "TestsFailedWithMessagesKeys" -> {}, 
    "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {38080127675627873, 398916322361931893, 
     496487732080306416, 8531564014456041439, 8476993219353259518, 
     8240430261019463918, 3733353611536687844, 11630483327103123, 
     8705177935299505193, 9129502346965597204, 5147543411714582911, 
     2832112115078349378, 7201496330306289805, 4692866438888142884, 
     1485322381816155346, 7789262317548985028, 8244900033072100845, 
     3800930539188975585, 7314064780768118352, 2423416131780218969, 
     603969188231972184, 5390704601871718435, 6718829052058649855, 
     8486031663357150602, 7449415572991144977, 5136130477039392554, 
     5540691933982470233, 5815058157876571671, 4902665915821499250, 
     4461614742967261342, 6541412590277152113, 4512583378571383959, 
     7466009890036599507, 819936743586710036}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.90568792402221*^9, 3.905771008473027*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"6395794d-5f6a-4362-8cf0-5cb848880710"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.90568792402221*^9, 3.905771008476219*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"d843177c-13e2-4cd1-94fe-a12fad3385cd"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.90568792402221*^9, 3.905771008476768*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"f0569a1c-7ca7-4b2b-9f52-1dad341b6b2e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tr", "=", 
  RowBox[{
  "TestReport", "[", 
   "\"\</Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/PacletizeResources.wlt\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expected", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
        ")"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}]}], "Input",
 CellChangeTimes->{{3.905687551834566*^9, 3.905687552056076*^9}, 
   3.905768804249631*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"ad7fda5b-fb52-4ad1-8d3f-dceb74f45182"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: PacletizeResources.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: PacletizeResources.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "5.658257`6.602167671543323", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: PacletizeResources.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     1921212600143640366 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905771252001801*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "90ac3caf-a9e8-4468-a190-02c8206556fc", "TestID" -> 
         "PacletizeResources_20231008-U7OMIY", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/PacletizeResources.wlt", 
         "EvaluationID" -> "65d5013d-f655-439f-ae8c-a315d80e7d0c", "Input" -> 
         HoldForm[{Needs["FernandoDuarte`LongRunRisk`"]; True}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{True}], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         5.609896`6.899469807921529, "CPUTimeUsed" -> 3.991380999999999, 
         "MemoryUsed" -> 265811280, "ExpectedOutput" -> HoldForm[{True}], 
         "Outcome" -> "Success"|>], 4857270675311396725 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905771257612166*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "baa7663e-767e-4676-9cf9-147a3d8f7857", "TestID" -> 
         "PacletizeResources_20231008-FOD064", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/PacletizeResources.wlt", 
         "EvaluationID" -> "992f5a52-37ff-4975-bc13-9037ff1bc86c", "Input" -> 
         HoldForm[
           Apply[And, {
             Not[PacletFind["MaTeX"] === {}], 
             Not[PacletFind["PacletizedResourceFunctions"] === {}], 
             MemberQ[$Packages, "MaTeX`"], Part[
               PacletFind["MaTeX"], 1]["Version"] === "1.7.9", 
             Not[PacletFind[
                Names["*NeedsDefinitions"]] === {}], 
             Not[PacletFind[
                Names["*SetSymbolsContext"]] === {}]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.048361`4.835010270376223, "CPUTimeUsed" -> 0.04840599999999906, 
         "MemoryUsed" -> 3144, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>]|>, "FailureResults" -> <||>, 
    "TestsNotEvaluatedKeys" -> {}, "TestsFailedWrongResultsKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {1921212600143640366, 4857270675311396725}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.905687926568036*^9, 3.9057712576737013`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"faf272f4-1f73-4923-8374-355bce3e9ea2"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905687926568036*^9, 3.905771257682781*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"2f5eeabc-c18a-4dff-b861-2141f7ed746d"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905687926568036*^9, 3.905771257683312*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"a021286e-07d5-46d7-ad81-a57bf8aaf62c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tr", "=", 
  RowBox[{
  "TestReport", "[", 
   "\"\</Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expected", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
        ")"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}]}], "Input",
 CellChangeTimes->{
  3.905175313001898*^9, {3.905687553635509*^9, 3.905687553886095*^9}, 
   3.905768806011248*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"479fb483-095c-47a5-b63a-afec0a7f6185"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: NiceOutput.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["9", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: NiceOutput.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["9", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["9", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "5.555044`5.940959991612223", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: NiceOutput.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     5678133325815476053 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905771728037761*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "dad628a7-ee97-4225-9907-d9c9f1370057", "TestID" -> 
         "NiceOutput_20231008-6QDJTJ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "EvaluationID" -> 
         "379b8767-d772-45b0-9c78-dd36597e8ca0", "Input" -> HoldForm[Get[
             Get[
              FileNameJoin[{"FernandoDuarte/LongRunRisk", "Models.wl"}]]]; 
           Tools`NiceOutput`msp = FernandoDuarte`LongRunRisk`Models; 
           Tools`NiceOutput`modBY = Tools`NiceOutput`msp["BY"]; 
           Tools`NiceOutput`modBKY = Tools`NiceOutput`msp["BKY"]; 
           Tools`NiceOutput`modNRC = Tools`NiceOutput`msp["NRC"]; 
           Tools`NiceOutput`modDES = Tools`NiceOutput`msp["DES"]; 
           Tools`NiceOutput`modNRCStochVol = 
            Tools`NiceOutput`msp["NRCStochVol"]; True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.415916`5.769520625525739, "CPUTimeUsed" -> 0.4156580000000001, 
         "MemoryUsed" -> 32310440, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 8766772325349514762 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90577172845407*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "5773a479-f601-4db6-ac98-99a3a2b8bf4e", "TestID" -> 
         "NiceOutput_20231008-DFRKZU", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "EvaluationID" -> 
         "706c45f7-ec55-4029-b4e0-73d2efb3eb69", "Input" -> 
         HoldForm[
          Needs["FernandoDuarte`LongRunRisk`Tools`NiceOutput`"]; $ContextPath = 
            DeleteDuplicates[
              Prepend[$ContextPath, 
               "FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`"]]; 
           True], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         2.851709`6.605620204095215, "CPUTimeUsed" -> 1.5590529999999996`, 
         "MemoryUsed" -> 73889760, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 5416857087105619718 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905771731306282*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "8fd4d325-2508-4402-81e5-b6a4aa1a49a2", "TestID" -> 
         "NiceOutput_20231008-HSCZ9K", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "EvaluationID" -> 
         "e1649840-3ea0-4767-9fc4-21b6c4341922", "Input" -> HoldForm[
           Apply[And, {
             
             MemberQ[$ContextPath, 
              "FernandoDuarte`LongRunRisk`Tools`NiceOutput`"]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000032`1.6556649761518998, "CPUTimeUsed" -> 0.00003300000000017178,
          "MemoryUsed" -> 2760, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7486115201234529832 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90577173130667*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "537710ca-f802-4039-b668-3edf658f48d6", "TestID" -> 
         "NiceOutput_20231008-ODPRKR", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "EvaluationID" -> 
         "06720ef2-b1ec-463a-a32f-7bd1cddfc2a6", "Input" -> HoldForm[
           Not[Names["*info"] === {}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.025575`4.558330640216192, "CPUTimeUsed" -> 
         0.025629999999999598`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 2251944793796113902 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905771731332621*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "40946ac0-6399-4320-bddc-7a1e07e10e2c", "TestID" -> 
         "NiceOutput_20231008-RPAR1C", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "EvaluationID" -> 
         "e71bd2a7-a250-427d-ba4b-ae0c7c954d58", "Input" -> 
         HoldForm[
          Tools`NiceOutput`myModelsInfo = 
            PacletizedResourceFunctions`SetSymbolsContext[
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`info[
              Tools`NiceOutput`msp]]; 
           Apply[And, {Head[Tools`NiceOutput`myModelsInfo] === Column, Head[
                Part[Tools`NiceOutput`myModelsInfo, 1]] === List, Head[
                Part[Tools`NiceOutput`myModelsInfo, 1, 1]] === OpenerView, 
              Apply[And, 
               Map[MatchQ[#, Grid]& , 
                Map[Head, 
                 Part[Tools`NiceOutput`myModelsInfo, 1, 
                  Span[1, All], 1, 2]]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         2.029074`6.457812883803547, "CPUTimeUsed" -> 0.8594490000000006, 
         "MemoryUsed" -> 3130560, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 7790697079198461448 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905771733362381*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "6d136ecd-070f-4ec1-a6c5-25e3cb41d0f6", "TestID" -> 
         "NiceOutput_20231008-BPWU46", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "EvaluationID" -> 
         "0e15367f-dc14-4093-859f-7cb10cbf7795", "Input" -> 
         HoldForm[
          Tools`NiceOutput`justBY = <|"BY" -> Tools`NiceOutput`msp["BY"]|>; 
           Tools`NiceOutput`infoBY = 
            PacletizedResourceFunctions`SetSymbolsContext[
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`info[
              Tools`NiceOutput`justBY]]; 
           Tools`NiceOutput`newBY = <|
             "myModel" -> Tools`NiceOutput`msp["BY"]|>; 
           Tools`NiceOutput`infoNewBY = 
            PacletizedResourceFunctions`SetSymbolsContext[
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`info[
              Tools`NiceOutput`newBY]]; 
           Apply[And, {
             Part[Tools`NiceOutput`infoBY, 1, 1, 1, 1] == "BY", 
              Part[Tools`NiceOutput`infoBY, 1, 1, 1, 2, 1, 4, 1, 1, 2, 1, 1, 
                1, 1] === Tools`NiceOutput`x[Tools`NiceOutput`t], 
              Part[Tools`NiceOutput`infoNewBY, 1, 1, 1, 1] == "BY", 
              Part[Tools`NiceOutput`infoNewBY, 1, 1, 1, 2, 1, 4, 1, 1, 2, 1, 
                1, 1, 1] === Tools`NiceOutput`x[Tools`NiceOutput`t]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.231718`5.5154747692009085, "CPUTimeUsed" -> 0.23190299999999997`, 
         "MemoryUsed" -> 60360, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 5823015595991487734 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905771733594698*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "7090fae9-fe0b-4e9f-80a5-1341225dc081", "TestID" -> 
         "NiceOutput_20231008-TFEXLF", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "EvaluationID" -> 
         "e8f4a7aa-8ea0-440c-8c77-32309363aca0", "Input" -> HoldForm[
           Apply[And, {Head[Tools`NiceOutput`infoBY] === Column, Head[
               Part[Tools`NiceOutput`infoBY, 1]] === List, Head[
               Part[Tools`NiceOutput`infoBY, 1, 1]] === OpenerView, 
             Apply[And, 
              Map[MatchQ[#, Grid]& , 
               Map[Head, 
                Part[Tools`NiceOutput`infoBY, 1, 
                 Span[1, All], 1, 2]]]], Head[Tools`NiceOutput`infoNewBY] === 
             Column, Head[
               Part[Tools`NiceOutput`infoNewBY, 1]] === List, Head[
               Part[Tools`NiceOutput`infoNewBY, 1, 1]] === OpenerView, 
             Apply[And, 
              Map[MatchQ[#, Grid]& , 
               Map[Head, 
                Part[Tools`NiceOutput`infoNewBY, 1, 
                 Span[1, All], 1, 2]]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00009`2.104757507271319, "CPUTimeUsed" -> 0.00009099999999939712, 
         "MemoryUsed" -> 8096, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4550436710428297669 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057717335951552`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a0056c3a-054e-4542-b6bd-4d27ce526c1c", "TestID" -> 
         "NiceOutput_20231008-KCA3TO", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "EvaluationID" -> 
         "5ebbbee1-cd09-40f1-909d-18ae172abecf", "Input" -> 
         HoldForm[With[{Tools`NiceOutput`localPi = 3.14}, {
              
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[3.14], 
              
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[3.14, NumberMarks -> True], 
              
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[3.14, NumberMarks -> False], 
              
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[Tools`NiceOutput`localPi], 
              
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[Tools`NiceOutput`localPi, NumberMarks -> True], 
              
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[Tools`NiceOutput`localPi, NumberMarks -> False], 
              
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[Tools`NiceOutput`\[CapitalPi]], 
              
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[
              Tools`NiceOutput`\[CapitalPi], CharacterEncoding -> "ASCII"], 
              
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[Pi], 
              
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[
               N[Pi]], 
              
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[3.14 10^(-7)], 
              
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[
               Flatten[{
                 ReplaceAll[
                 FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
stripContext[Tools`NiceOutput`delta]/2, 
                  
                  FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
stripContext[{Tools`NiceOutput`delta -> 0.99}]]}]]}] === {
            "3.14", "3.14`", "3.14", "3.14", "3.14`", "3.14", "\[CapitalPi]", 
             "\\[CapitalPi]", "3.141592653589793", "3.141592653589793", 
             "3.14*^-7", "{0.495}"}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000155`2.340846696002285, "CPUTimeUsed" -> 
         0.00015499999999946112`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 6362662014840827534 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057717335955434`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "dba0f002-bb70-46e3-940e-eb1044d69cc5", "TestID" -> 
         "NiceOutput_20231008-Z1U5OL", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "EvaluationID" -> 
         "3d6e678e-f0eb-43c1-9b67-2b47376aed09", "Input" -> HoldForm[
           Not[
            StringFreeQ[
             
             FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
stringFormattingTemplate[
             "Long-run risk model with stochastic volatility in the original \
2004 paper by Bansal and Yaron"], 
             Alternatives["\t", "\n"]]]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000775`3.0398167003383043, "CPUTimeUsed" -> 
         0.0007770000000002497, "MemoryUsed" -> 22440, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>]|>, 
    "FailureResults" -> <||>, "TestsNotEvaluatedKeys" -> {}, 
    "TestsFailedWrongResultsKeys" -> {}, "TestsFailedWithMessagesKeys" -> {}, 
    "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {5678133325815476053, 8766772325349514762, 
     5416857087105619718, 7486115201234529832, 2251944793796113902, 
     7790697079198461448, 5823015595991487734, 4550436710428297669, 
     6362662014840827534}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.905687929096223*^9, 3.905771733611906*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"5cda5875-5226-4189-b44c-1f671643d893"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905687929096223*^9, 3.905771733621759*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"263e6f76-6294-44d9-8dc2-5cd0f729c404"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905687929096223*^9, 3.905771733622324*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"d55440ee-dc59-40e6-a14f-ef5c989c8756"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tr", "=", 
  RowBox[{
  "TestReport", "[", 
   "\"\</Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expected", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
        ")"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}]}], "Input",
 CellChangeTimes->{
  3.90565783725738*^9, {3.905687556358674*^9, 3.9056875566683598`*^9}, 
   3.905768809322749*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"afbf4542-7cc1-4920-8238-b47d7922799b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: ToNumber.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["15", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: ToNumber.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["15", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["15", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "275.355061`7.414316801958508", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: ToNumber.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     1031612477782653857 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90577343126763*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "5b66c51a-b0da-4a5d-bb41-aa9010aa651e", "TestID" -> 
         "ToNumber_20231008-GF1J8P", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "7100b491-40dc-4d65-a2ae-78eee765e687", "Input" -> 
         HoldForm[
          Needs["FernandoDuarte`LongRunRisk`Tools`ToNumber`"]; $ContextPath = 
            DeleteDuplicates[
              
              Prepend[$ContextPath, 
               "FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`"]]; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00004`1.752574989159956, "CPUTimeUsed" -> 0.00003899999999967818, 
         "MemoryUsed" -> 2792, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 446124398427068420 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905773431269201*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "1f3730d5-4d2c-4798-8805-de807b66b075", "TestID" -> 
         "ToNumber_20231008-9U9EGD", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "94216342-4bab-40e4-8853-592a5da5acba", "Input" -> HoldForm[Off[
             MessageName[General, "stop"]]; Off[
             MessageName[FindRoot, "lstol"]]; 
           Needs["FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`"]; 
           Needs["FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`"]; 
           Needs["FernandoDuarte`LongRunRisk`Model`EndogenousEq`"]; 
           Needs["FernandoDuarte`LongRunRisk`Model`ExogenousEq`"]; 
           Needs["FernandoDuarte`LongRunRisk`Tools`TimeAggregation`"]; 
           Needs["FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
"]; Get[
             Get[
              FileNameJoin[{"FernandoDuarte/LongRunRisk", "Models.wl"}]]]; 
           Tools`ToNumber`msp = FernandoDuarte`LongRunRisk`Models; 
           Tools`ToNumber`modBY = Tools`ToNumber`msp["BY"]; 
           Tools`ToNumber`modBKY = Tools`ToNumber`msp["BKY"]; 
           Tools`ToNumber`modNRC = Tools`ToNumber`msp["NRC"]; 
           Tools`ToNumber`modDES = Tools`ToNumber`msp["DES"]; 
           Tools`ToNumber`modNRCStochVol = Tools`ToNumber`msp["NRCStochVol"]; 
           Tools`ToNumber`mods = {
             Tools`ToNumber`modBY, Tools`ToNumber`modBKY, 
              Tools`ToNumber`modNRC, Tools`ToNumber`modDES, 
              Tools`ToNumber`modNRCStochVol}; 
           FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`expr[
              Pattern[Tools`ToNumber`t, 
               Blank[]], 
              Pattern[Tools`ToNumber`m, 
               Blank[]], 
              Pattern[Tools`ToNumber`i, 
               Blank[]], 
              Pattern[Tools`ToNumber`mu, 
               Blank[]]] := {
              Tools`ToNumber`wc[Tools`ToNumber`t], 
              Tools`ToNumber`pd[Tools`ToNumber`t, Tools`ToNumber`i], 
              Tools`ToNumber`bond[Tools`ToNumber`t, Tools`ToNumber`m], 
              Tools`ToNumber`nombond[Tools`ToNumber`t, Tools`ToNumber`m], 
              Tools`ToNumber`bondexcret[Tools`ToNumber`t, Tools`ToNumber`m], 
              Tools`ToNumber`bondfw[Tools`ToNumber`t, Tools`ToNumber`m], 
              Tools`ToNumber`bondfwspread[Tools`ToNumber`t, Tools`ToNumber`m], 
              Tools`ToNumber`bondret[Tools`ToNumber`t, Tools`ToNumber`m], 
              Tools`ToNumber`bondyield[Tools`ToNumber`t, Tools`ToNumber`m], 
              Tools`ToNumber`excretc[Tools`ToNumber`t], 
              Tools`ToNumber`excret[Tools`ToNumber`t, Tools`ToNumber`i], 
              Tools`ToNumber`kappa0[Tools`ToNumber`mu], 
              Tools`ToNumber`kappa1[Tools`ToNumber`mu], 
              Tools`ToNumber`nombondexcret[
              Tools`ToNumber`t, Tools`ToNumber`m], 
              Tools`ToNumber`nombondfw[Tools`ToNumber`t, Tools`ToNumber`m], 
              Tools`ToNumber`nombondfwspread[
              Tools`ToNumber`t, Tools`ToNumber`m], 
              Tools`ToNumber`nombondret[Tools`ToNumber`t, Tools`ToNumber`m], 
              Tools`ToNumber`nombondyield[Tools`ToNumber`t, Tools`ToNumber`m], 
              Tools`ToNumber`nomrf[Tools`ToNumber`t], 
              Tools`ToNumber`nomsdf[Tools`ToNumber`t], 
              Tools`ToNumber`retc[Tools`ToNumber`t], 
              Tools`ToNumber`ret[Tools`ToNumber`t, Tools`ToNumber`i], 
              Tools`ToNumber`rf[Tools`ToNumber`t], 
              Tools`ToNumber`sdf[Tools`ToNumber`t], 
              Tools`ToNumber`pi[Tools`ToNumber`t], 
              Tools`ToNumber`dc[Tools`ToNumber`t], 
              Tools`ToNumber`growth[
              Tools`ToNumber`dc, Tools`ToNumber`t, "TimeAggregation" -> 2, 
               "numPeriods" -> 1], 
              Tools`ToNumber`growth[
              Tools`ToNumber`dd, Tools`ToNumber`t, 1, "TimeAggregation" -> 2],
               Tools`ToNumber`AA Tools`ToNumber`dc[Tools`ToNumber`t + 1] 
              Tools`ToNumber`excret[Tools`ToNumber`t, 1], 
              Tools`ToNumber`AA Tools`ToNumber`excret[Tools`ToNumber`t, 1] + 
              Tools`ToNumber`BB 
               Tools`ToNumber`nombondyield[Tools`ToNumber`t, 2]}; 
           Tools`ToNumber`ee = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`expr[
             Tools`ToNumber`t, 3, 1, 1]; 
           Tools`ToNumber`e1 = Part[Tools`ToNumber`ee, 
              Span[1, 3]]; Tools`ToNumber`e2 = Part[Tools`ToNumber`ee, 
              Span[1, 2]]; 
           Tools`ToNumber`optsList = {{}, {Tools`ToNumber`maxMaturity -> 6}, {
              "FindRootOptions" -> {MaxIterations -> 100}}, {
              MaxIterations -> 100}, {
              "initialGuess" -> <|"Ewc" -> {4}, "Epd" -> {{4}}|>}, {
              "initialGuess" -> <|"Ewc" -> {4}, "Epd" -> {{4}}|>, 
               MaxIterations -> 100}, {
              "initialGuess" -> <|"Ewc" -> {4}, "Epd" -> {{4}}|>, 
               "FindRootOptions" -> {MaxIterations -> 100}}, {
              Tools`ToNumber`maxMaturity -> 6, 
               "initialGuess" -> <|"Ewc" -> {4}, "Epd" -> {{4}}|>, 
               MaxIterations -> 100}, {"PrintResidualsNorm" -> True}, {
              "CheckResiduals" -> True, "Tol" -> 1}, {
              "CheckResiduals" -> True, "Tol" -> 10.^(-20)}, {
              "PrintResidualsNorm" -> True, Tools`ToNumber`maxMaturity -> 6, 
               "initialGuess" -> <|"Ewc" -> {4}, "Epd" -> {{4}}|>, 
               MaxIterations -> 100}, {
              "RecurrenceTableOptions" -> {
                "DependentVariables" -> Automatic}}, {
              DependentVariables -> Automatic}}; 
           FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`opts = 
            Part[Tools`ToNumber`optsList, 
              Span[1, 5]]; 
           FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`newParameters = {
             Tools`ToNumber`delta -> 0.99}; 
           FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
guessCoeffsSolution = {Tools`ToNumber`A[0] -> 4.6}; 
           Tools`ToNumber`optNewParam = {
             "initialGuess" -> <|"Ewc" -> {4}, "Epd" -> {{4}}|>, 
              MaxIterations -> 100}; 
           Tools`ToNumber`exprNewParam = Tools`ToNumber`uncondE[
              Tools`ToNumber`wc[Tools`ToNumber`t]]; 
           AbortProtect[
            Do[FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind = 0; 
               Tools`ToNumber`stateVars = Map[#[
                   Blank[]]& , 
                  DeleteDuplicates[
                   DeleteCases[
                    Cases[
                    Variables[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model[
                    "stateVars"][Tools`ToNumber`t]], 
                    Pattern[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`x, 
                    Blank[]][
                    Blank[]] :> 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`x], 
                    0]]]; Tools`ToNumber`numModel = Join[
                  Thread[Tools`ToNumber`stateVars -> 1.], {
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps[
                    Blank[]][
                    Blank[]] -> 1, FernandoDuarte`LongRunRisk`Model`Shocks`eps[
                    Blank[]][
                    Blank[], 
                    Blank[]] -> 1., Tools`ToNumber`mu -> 2., 
                   Tools`ToNumber`AA -> -1., Tools`ToNumber`BB -> 3.}]; 
               Tools`ToNumber`toNum = 
                FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum; 
               Tools`ToNumber`toEquation = 
                FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation; 
               Tools`ToNumber`toExogenousVars = 
                FernandoDuarte`LongRunRisk`Tools`ToNumber`toExogenousVars; 
               Tools`ToNumber`toStateVars = 
                FernandoDuarte`LongRunRisk`Tools`ToNumber`toStateVars; 
               Tools`ToNumber`processNewParameters = 
                FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters; 
               Tools`ToNumber`uncondE = 
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE; 
               Tools`ToNumber`uncondVar = 
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondVar; 
               Tools`ToNumber`uncondCov = 
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondCov; 
               Tools`ToNumber`uncondCorr = 
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondCorr; 
               Tools`ToNumber`ev = 
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev; 
               Tools`ToNumber`var = 
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`var; 
               Tools`ToNumber`cov = 
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`cov; 
               Tools`ToNumber`corr = 
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`corr; 
               Tools`ToNumber`tn = 
                FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model]; 
               Tools`ToNumber`outTests[
                  FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model[
                  "shortname"]][
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind] = 
                Apply[And, 
                  Flatten[{Head[Tools`ToNumber`tn] === Function, 
                    Map[NumericQ, 
                    Flatten[{
                    ReplaceRepeated[
                    Tools`ToNumber`tn[Tools`ToNumber`e1], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    Map[Tools`ToNumber`uncondE, Tools`ToNumber`e1]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    Map[Tools`ToNumber`uncondVar, Tools`ToNumber`e1]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    MapThread[
                    Tools`ToNumber`uncondCov[#, #2]& , {Tools`ToNumber`e1, 
                    Reverse[Tools`ToNumber`e1]}]], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    MapThread[Tools`ToNumber`uncondCorr[#, #2]& , {
                    Part[Tools`ToNumber`e1, 
                    Span[1, 2]], 
                    Part[Tools`ToNumber`e1, 
                    Span[-2, -1]]}]], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    Map[
                    Tools`ToNumber`ev[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e1]], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    Map[
                    Tools`ToNumber`var[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e1]], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    MapThread[
                    Tools`ToNumber`cov[#, #2, Tools`ToNumber`t - 1]& , {
                    Tools`ToNumber`e1, 
                    Reverse[Tools`ToNumber`e1]}]], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    MapThread[
                    Tools`ToNumber`corr[#, #2, Tools`ToNumber`t - 1]& , {
                    Part[Tools`ToNumber`e1, 
                    Span[1, 2]], 
                    Part[Tools`ToNumber`e1, 
                    Span[-2, -1]]}]], Tools`ToNumber`numModel]}]]}]]; 
               FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind = 
                FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind + 1; 
               Tools`ToNumber`outTests[
                  FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model[
                  "shortname"]][
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind] = 
                Apply[And, 
                  Flatten[{Head[Tools`ToNumber`tn] === Function, 
                    Map[NumericQ, 
                    Flatten[{
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Tools`ToNumber`e1, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Map[Tools`ToNumber`uncondE, Tools`ToNumber`e1], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Map[Tools`ToNumber`uncondVar, Tools`ToNumber`e1], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    MapThread[
                    Tools`ToNumber`uncondCov[#, #2]& , {Tools`ToNumber`e1, 
                    Reverse[Tools`ToNumber`e1]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    MapThread[Tools`ToNumber`uncondCorr[#, #2]& , {
                    Part[Tools`ToNumber`e1, 
                    Span[1, 2]], 
                    Part[Tools`ToNumber`e1, 
                    Span[-2, -1]]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Map[
                    Tools`ToNumber`ev[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e1], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Map[
                    Tools`ToNumber`var[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e1], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    MapThread[
                    Tools`ToNumber`cov[#, #2, Tools`ToNumber`t - 1]& , {
                    Tools`ToNumber`e1, 
                    Reverse[Tools`ToNumber`e1]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    MapThread[
                    Tools`ToNumber`corr[#, #2, Tools`ToNumber`t - 1]& , {
                    Part[Tools`ToNumber`e1, 
                    Span[1, 2]], 
                    Part[Tools`ToNumber`e1, 
                    Span[-2, -1]]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel]}]]}]]; 
               FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind = 
                FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind + 1; 
               Tools`ToNumber`outTests[
                  FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model[
                  "shortname"]][
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind] = 
                Apply[And, 
                  Flatten[{Head[Tools`ToNumber`tn] === Function, 
                    Map[NumericQ, 
                    ReplaceRepeated[
                    Flatten[{
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Tools`ToNumber`e1, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Map[Tools`ToNumber`uncondE, Tools`ToNumber`e1], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Map[Tools`ToNumber`uncondVar, Tools`ToNumber`e1], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    MapThread[
                    Tools`ToNumber`uncondCov[#, #2]& , {Tools`ToNumber`e1, 
                    Reverse[Tools`ToNumber`e1]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    MapThread[Tools`ToNumber`uncondCorr[#, #2]& , {
                    Part[Tools`ToNumber`e1, 
                    Span[1, 2]], 
                    Part[Tools`ToNumber`e1, 
                    Span[-2, -1]]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Map[
                    Tools`ToNumber`ev[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e1], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Map[
                    Tools`ToNumber`var[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e1], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    MapThread[
                    Tools`ToNumber`cov[#, #2, Tools`ToNumber`t - 1]& , {
                    Tools`ToNumber`e1, 
                    Reverse[Tools`ToNumber`e1]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    MapThread[
                    Tools`ToNumber`corr[#, #2, Tools`ToNumber`t - 1]& , {
                    Part[Tools`ToNumber`e1, 
                    Span[1, 2]], 
                    Part[Tools`ToNumber`e1, 
                    Span[-2, -1]]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    "Rules", 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model]]]\
}]]; FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind = 
                FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind + 1; 
               Do[Tools`ToNumber`tn = 
                  FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                   FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    Apply[Sequence, Tools`ToNumber`opt]]; 
                 Tools`ToNumber`outTests[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model[
                    "shortname"]][
                   FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind] = 
                  Apply[And, 
                    Flatten[{Head[Tools`ToNumber`tn] === Function, 
                    Map[NumericQ, 
                    Flatten[{
                    ReplaceRepeated[
                    Tools`ToNumber`tn[Tools`ToNumber`e2], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    Map[Tools`ToNumber`uncondE, Tools`ToNumber`e2]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    Map[Tools`ToNumber`uncondVar, Tools`ToNumber`e2]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    MapThread[
                    Tools`ToNumber`uncondCov[#, #2]& , {Tools`ToNumber`e2, 
                    Reverse[Tools`ToNumber`e2]}]], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    MapThread[Tools`ToNumber`uncondCorr[#, #2]& , {
                    Part[Tools`ToNumber`e2, 
                    Span[1, 2]], 
                    Part[Tools`ToNumber`e2, 
                    Span[-2, -1]]}]], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    Map[
                    Tools`ToNumber`ev[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e2]], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    Map[
                    Tools`ToNumber`var[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e2]], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    MapThread[
                    Tools`ToNumber`cov[#, #2, Tools`ToNumber`t - 1]& , {
                    Tools`ToNumber`e2, 
                    Reverse[Tools`ToNumber`e2]}]], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    MapThread[
                    Tools`ToNumber`corr[#, #2, Tools`ToNumber`t - 1]& , {
                    Part[Tools`ToNumber`e2, 
                    Span[1, 2]], 
                    Part[Tools`ToNumber`e2, 
                    Span[-2, -1]]}]], Tools`ToNumber`numModel]}]]}]]; 
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind = 
                  FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind + 1; 
                 Tools`ToNumber`outTests[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model[
                    "shortname"]][
                   FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind] = 
                  Apply[And, 
                    Flatten[{Head[Tools`ToNumber`tn] === Function, 
                    Map[NumericQ, 
                    Flatten[{
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Tools`ToNumber`e2, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    Apply[Sequence, Tools`ToNumber`opt]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Map[Tools`ToNumber`uncondE, Tools`ToNumber`e2], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    Apply[Sequence, Tools`ToNumber`opt]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Map[Tools`ToNumber`uncondVar, Tools`ToNumber`e2], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    Apply[Sequence, Tools`ToNumber`opt]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    MapThread[
                    Tools`ToNumber`uncondCov[#, #2]& , {Tools`ToNumber`e2, 
                    Reverse[Tools`ToNumber`e2]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    Apply[Sequence, Tools`ToNumber`opt]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    MapThread[Tools`ToNumber`uncondCorr[#, #2]& , {
                    Part[Tools`ToNumber`e2, 
                    Span[1, 2]], 
                    Part[Tools`ToNumber`e2, 
                    Span[-2, -1]]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    Apply[Sequence, Tools`ToNumber`opt]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Map[
                    Tools`ToNumber`ev[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e2], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    Apply[Sequence, Tools`ToNumber`opt]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Map[
                    Tools`ToNumber`var[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e2], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    Apply[Sequence, Tools`ToNumber`opt]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    MapThread[
                    Tools`ToNumber`cov[#, #2, Tools`ToNumber`t - 1]& , {
                    Tools`ToNumber`e2, 
                    Reverse[Tools`ToNumber`e2]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    Apply[Sequence, Tools`ToNumber`opt]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    MapThread[
                    Tools`ToNumber`corr[#, #2, Tools`ToNumber`t - 1]& , {
                    Part[Tools`ToNumber`e2, 
                    Span[1, 2]], 
                    Part[Tools`ToNumber`e2, 
                    Span[-2, -1]]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    Apply[Sequence, Tools`ToNumber`opt]], 
                    Tools`ToNumber`numModel]}]]}]]; 
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind = 
                  FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind + 1; 
                 Tools`ToNumber`outTests[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model[
                    "shortname"]][
                   FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind] = 
                  Apply[And, 
                    Flatten[{Head[Tools`ToNumber`tn] === Function, 
                    Map[NumericQ, 
                    ReplaceRepeated[
                    Flatten[{
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Tools`ToNumber`e2, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Map[Tools`ToNumber`uncondE, Tools`ToNumber`e2], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Map[Tools`ToNumber`uncondVar, Tools`ToNumber`e2], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    MapThread[
                    Tools`ToNumber`uncondCov[#, #2]& , {Tools`ToNumber`e2, 
                    Reverse[Tools`ToNumber`e2]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    MapThread[Tools`ToNumber`uncondCorr[#, #2]& , {
                    Part[Tools`ToNumber`e2, 
                    Span[1, 2]], 
                    Part[Tools`ToNumber`e2, 
                    Span[-2, -1]]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Map[
                    Tools`ToNumber`ev[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e2], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Map[
                    Tools`ToNumber`var[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e2], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    MapThread[
                    Tools`ToNumber`cov[#, #2, Tools`ToNumber`t - 1]& , {
                    Tools`ToNumber`e2, 
                    Reverse[Tools`ToNumber`e2]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    MapThread[
                    Tools`ToNumber`corr[#, #2, Tools`ToNumber`t - 1]& , {
                    Part[Tools`ToNumber`e2, 
                    Span[1, 2]], 
                    Part[Tools`ToNumber`e2, 
                    Span[-2, -1]]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    "Rules", 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    Apply[Sequence, Tools`ToNumber`opt]]]]}]]; 
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind = 
                  FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind + 1; 
                 Null, {Tools`ToNumber`opt, 
                  FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`opts}]; 
               Tools`ToNumber`outTests[
                  FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model[
                  "shortname"]][
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind] = 
                Apply[And, 
                  Map[NumericQ, 
                   Flatten[{
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    "UpdatePd" -> False], Tools`ToNumber`numModel][
                    Tools`ToNumber`pd[Tools`ToNumber`t, 1]], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Tools`ToNumber`pd[Tools`ToNumber`t, 1], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    "UpdatePd" -> False], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Tools`ToNumber`pd[Tools`ToNumber`t, 1], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    "Rules", 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    "UpdatePd" -> False]], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    "UpdateBonds" -> False], Tools`ToNumber`numModel][{
                    Tools`ToNumber`bondyield[Tools`ToNumber`t, 2], 
                    Tools`ToNumber`nombondyield[Tools`ToNumber`t, 3]}], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[{
                    Tools`ToNumber`bondyield[Tools`ToNumber`t, 2], 
                    Tools`ToNumber`nombondyield[Tools`ToNumber`t, 3]}, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    "UpdateBonds" -> False], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[{
                    Tools`ToNumber`bondyield[Tools`ToNumber`t, 2], 
                    Tools`ToNumber`nombondyield[Tools`ToNumber`t, 3]}, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    "Rules", 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    "UpdateBonds" -> False]], Tools`ToNumber`numModel]}]]]; 
               FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind = 
                FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind + 1; 
               Tools`ToNumber`outTests[
                  FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model[
                  "shortname"]][
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind] = 
                Apply[And, 
                  Map[NumericQ, {
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
newParameters], Tools`ToNumber`numModel][Tools`ToNumber`exprNewParam], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Tools`ToNumber`exprNewParam, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
newParameters], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Tools`ToNumber`exprNewParam, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    "Rules", 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
newParameters]], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, \
{}, FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`guessCoeffsSolution], 
                    Tools`ToNumber`numModel][Tools`ToNumber`exprNewParam], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Tools`ToNumber`exprNewParam, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, \
{}, FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`guessCoeffsSolution], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Tools`ToNumber`exprNewParam, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    "Rules", 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, \
{}, FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`guessCoeffsSolution]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
newParameters, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
guessCoeffsSolution], Tools`ToNumber`numModel][Tools`ToNumber`exprNewParam], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Tools`ToNumber`exprNewParam, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
newParameters, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
guessCoeffsSolution], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Tools`ToNumber`exprNewParam, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    "Rules", 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
newParameters, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
guessCoeffsSolution]], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
newParameters, 
                    Apply[Sequence, Tools`ToNumber`optNewParam]], 
                    Tools`ToNumber`numModel][Tools`ToNumber`exprNewParam], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Tools`ToNumber`exprNewParam, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
newParameters, 
                    Apply[Sequence, Tools`ToNumber`optNewParam]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Tools`ToNumber`exprNewParam, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    "Rules", 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
newParameters, 
                    Apply[Sequence, Tools`ToNumber`optNewParam]]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, \
{}, FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`guessCoeffsSolution, 
                    Apply[Sequence, Tools`ToNumber`optNewParam]], 
                    Tools`ToNumber`numModel][Tools`ToNumber`exprNewParam], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Tools`ToNumber`exprNewParam, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, \
{}, FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`guessCoeffsSolution, 
                    Apply[Sequence, Tools`ToNumber`optNewParam]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Tools`ToNumber`exprNewParam, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    "Rules", 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, \
{}, FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`guessCoeffsSolution, 
                    Apply[Sequence, Tools`ToNumber`optNewParam]]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
newParameters, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
guessCoeffsSolution, 
                    Apply[Sequence, Tools`ToNumber`optNewParam]], 
                    Tools`ToNumber`numModel][Tools`ToNumber`exprNewParam], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Tools`ToNumber`exprNewParam, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
newParameters, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
guessCoeffsSolution, 
                    Apply[Sequence, Tools`ToNumber`optNewParam]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Tools`ToNumber`exprNewParam, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    "Rules", 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
newParameters, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
guessCoeffsSolution, 
                    Apply[Sequence, Tools`ToNumber`optNewParam]]], 
                    Tools`ToNumber`numModel]}]]; 
               FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind = 
                FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind + 1; 
               Null, {FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model,
                 Tools`ToNumber`mods}]; Null]; 
           Tools`ToNumber`noMissingTest = {}; 
           Do[Tools`ToNumber`testNumber = Sort[
                Cases[
                 Keys[
                  SubValues[Tools`ToNumber`outTests]], Verbatim[HoldPattern][
                   Tools`ToNumber`outTests[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model[
                    "shortname"]][
                    Pattern[Tools`ToNumber`i, 
                    Blank[Integer]]]] :> Tools`ToNumber`i]]; 
             AppendTo[Tools`ToNumber`noMissingTest, Range[0, 
                 Max[Tools`ToNumber`testNumber]] == 
               Tools`ToNumber`testNumber]; Null, {
             FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
              Tools`ToNumber`mods}]; Tools`ToNumber`out = Apply[And, 
              Flatten[{
                Apply[And, Tools`ToNumber`noMissingTest], 
                Apply[And, 
                 Values[
                  SubValues[Tools`ToNumber`outTests]]]}]]; On[
             MessageName[General, "stop"]]; Off[
             MessageName[FindRoot, "lstol"]]; Tools`ToNumber`out], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         275.265607`8.590266949787592, "CPUTimeUsed" -> 283.247106, 
         "MemoryUsed" -> 232414840, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 789935563710371630 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905773706535478*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "6ae4fee5-7e9a-4462-9140-c5563b8ca542", "TestID" -> 
         "ToNumber_20231008-OBOMYE", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "43caf2dd-a1a9-4a24-a9ca-a7859f623b03", "Input" -> 
         HoldForm[
          Tools`ToNumber`processNewParameters = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters; 
           SetAttributes[Tools`ToNumber`checkAbrt, HoldAll]; 
           Tools`ToNumber`checkAbrt[
              Pattern[
              FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`expr, 
               Blank[]]] := TrueQ[
              Quiet[
               AbortProtect[
                CheckAbort[
                FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`expr, 
                 True]]]]; SetAttributes[Tools`ToNumber`checkMsg, HoldAll]; 
           Tools`ToNumber`checkMsg[
              Pattern[
              FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`expr, 
               Blank[]], 
              Pattern[Tools`ToNumber`msg, 
               Blank[]]] := 
            CheckAbort[
             Quiet[AbortProtect[
                 Tools`ToNumber`c = 
                   Check[FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
expr; Null, True, Tools`ToNumber`msg]; Null]; Null]; TrueQ[Tools`ToNumber`c], 
              
              TrueQ[Tools`ToNumber`c]]; 
           Tools`ToNumber`p = {
             Tools`ToNumber`delta -> 0.998, Tools`ToNumber`Esx -> 0.0078, 
              Tools`ToNumber`gamma -> 10, Tools`ToNumber`muc -> 0.0015, 
              Tools`ToNumber`phisxs -> 2.3 10^(-6), Tools`ToNumber`phix -> 
              0.044, Tools`ToNumber`psi -> 1.5, Tools`ToNumber`rhox -> 0.979, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`vx -> 0.987, 
              Tools`ToNumber`mud[1] -> 0.0015, Tools`ToNumber`phidxd[1] -> 
              4.5, Tools`ToNumber`rhodx[1] -> 3}; 
           Tools`ToNumber`newP = {
             Tools`ToNumber`delta -> 0.998, Tools`ToNumber`Esx -> 0.0078, 
              Tools`ToNumber`gamma -> 10, Tools`ToNumber`muc -> 0.0015, 
              Tools`ToNumber`phisxs -> 2.3 10^(-6), Tools`ToNumber`phix -> 
              0.044, Tools`ToNumber`psi -> 1.5, Tools`ToNumber`rhox -> 0.979, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`vx -> 0.987, 
              Tools`ToNumber`mud[1] -> 0.0015, Tools`ToNumber`phidxd[1] -> 
              4.5, Tools`ToNumber`rhodx[1] -> 3}; 
           Tools`ToNumber`pn = 
            KeyValueMap[# -> ReplaceAll[#2, Tools`ToNumber`p]& , <|
              Tools`ToNumber`p|>]; 
           Tools`ToNumber`newPn = 
            KeyValueMap[# -> ReplaceAll[#2, Tools`ToNumber`newP]& , <|
              Tools`ToNumber`newP|>]; 
           Tools`ToNumber`procP = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newP, Tools`ToNumber`p]; 
           Tools`ToNumber`procPn = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newPn, Tools`ToNumber`pn]; 
           Tools`ToNumber`procPn1 = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newP, Tools`ToNumber`pn]; 
           Tools`ToNumber`procPn2 = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newPn, Tools`ToNumber`p]; 
           Tools`ToNumber`msg = 
            Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
              Reap[
              Module[{}, 
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]; 
                 Null]; $MessageList]]; 
           Apply[And, {
             Sort[Tools`ToNumber`procP] === Sort[Tools`ToNumber`procPn] === 
              Sort[Tools`ToNumber`procPn1] === Sort[Tools`ToNumber`procPn2], 
              Apply[And, 
               Map[NumberQ, 
                Values[Tools`ToNumber`procP]]], Sort[
                Keys[Tools`ToNumber`procP]] === Sort[
                Keys[Tools`ToNumber`newP]], 
              SubsetQ[
               Keys[Tools`ToNumber`p], 
               Keys[Tools`ToNumber`procP]], 
              ReleaseHold[Tools`ToNumber`msg] == {{}, {}}, 
              Not[
               Tools`ToNumber`checkAbrt[
                
                FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]]]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.001774`3.3994686133277017, "CPUTimeUsed" -> 0.0017890000000306827`,
          "MemoryUsed" -> 22424, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 4722713273079957559 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057737065376377`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "d5601192-df9b-4530-89d6-b1b28880960a", "TestID" -> 
         "ToNumber_20231008-18HDPG", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "8e1e9f36-c678-47bd-a093-7c578bba07ca", "Input" -> 
         HoldForm[
          Tools`ToNumber`p = {
             Tools`ToNumber`delta -> 0.998, Tools`ToNumber`Esx -> 0.0078, 
              Tools`ToNumber`gamma -> 10, Tools`ToNumber`muc -> 0.0015, 
              Tools`ToNumber`phisxs -> 2.3 10^(-6), Tools`ToNumber`phix -> 
              0.044, Tools`ToNumber`psi -> 1.5, Tools`ToNumber`rhox -> 0.979, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`vx -> 0.987, 
              Tools`ToNumber`mud[1] -> 0.0015, Tools`ToNumber`phidxd[1] -> 
              4.5, Tools`ToNumber`rhodx[1] -> 3}; 
           Tools`ToNumber`newP = {
             Tools`ToNumber`delta -> 0.9, Tools`ToNumber`Esx -> 1}; 
           Tools`ToNumber`pn = 
            KeyValueMap[# -> ReplaceAll[#2, Tools`ToNumber`p]& , <|
              Tools`ToNumber`p|>]; 
           Tools`ToNumber`newPn = 
            KeyValueMap[# -> ReplaceAll[#2, Tools`ToNumber`newP]& , <|
              Tools`ToNumber`newP|>]; 
           Tools`ToNumber`procP = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newP, Tools`ToNumber`p]; 
           Tools`ToNumber`procPn = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newPn, Tools`ToNumber`pn]; 
           Tools`ToNumber`procPn1 = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newP, Tools`ToNumber`pn]; 
           Tools`ToNumber`procPn2 = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newPn, Tools`ToNumber`p]; 
           Tools`ToNumber`msg = 
            Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
              Reap[
              Module[{}, 
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]; 
                 Null]; $MessageList]]; 
           Apply[And, {
             Sort[Tools`ToNumber`procP] === Sort[Tools`ToNumber`procPn] === 
              Sort[Tools`ToNumber`procPn1] === Sort[Tools`ToNumber`procPn2], 
              Apply[And, 
               Map[NumberQ, 
                Values[Tools`ToNumber`procP]]], Sort[
                Keys[Tools`ToNumber`procP]] === Sort[
                Keys[Tools`ToNumber`newP]], 
              SubsetQ[
               Keys[Tools`ToNumber`p], 
               Keys[Tools`ToNumber`procP]], 
              ReleaseHold[Tools`ToNumber`msg] == {{}, {}}, 
              Not[
               Tools`ToNumber`checkAbrt[
                
                FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]]]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000801`3.0541475139162317, "CPUTimeUsed" -> 0.0008009999999671891, 
         "MemoryUsed" -> -6592, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4419732249327161404 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905773706538778*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "4713d8b6-39d3-4045-97a2-cc93f8b5b779", "TestID" -> 
         "ToNumber_20231008-FIWR29", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "9fce2c41-3d39-4d7a-929d-58e59299ec35", "Input" -> 
         HoldForm[
          Tools`ToNumber`p = {
             Tools`ToNumber`delta -> 0.998, Tools`ToNumber`Esx -> 0.0078, 
              Tools`ToNumber`gamma -> 10, Tools`ToNumber`muc -> 0.0015, 
              Tools`ToNumber`phisxs -> 2.3 10^(-6), Tools`ToNumber`phix -> 
              0.044, Tools`ToNumber`psi -> 1.5, Tools`ToNumber`rhox -> 0.979, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`vx -> 0.987, 
              Tools`ToNumber`mud[1] -> 0.0015, Tools`ToNumber`phidxd[1] -> 
              4.5, Tools`ToNumber`rhodx[1] -> 3}; Tools`ToNumber`newP = {}; 
           Tools`ToNumber`pn = 
            KeyValueMap[# -> ReplaceAll[#2, Tools`ToNumber`p]& , <|
              Tools`ToNumber`p|>]; 
           Tools`ToNumber`newPn = 
            KeyValueMap[# -> ReplaceAll[#2, Tools`ToNumber`newP]& , <|
              Tools`ToNumber`newP|>]; 
           Tools`ToNumber`procP = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newP, Tools`ToNumber`p]; 
           Tools`ToNumber`procPn = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newPn, Tools`ToNumber`pn]; 
           Tools`ToNumber`procPn1 = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newP, Tools`ToNumber`pn]; 
           Tools`ToNumber`procPn2 = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newPn, Tools`ToNumber`p]; 
           Tools`ToNumber`msg = 
            Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
              Reap[
              Module[{}, 
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]; 
                 Null]; $MessageList]]; 
           Apply[And, {
             Sort[Tools`ToNumber`procP] === Sort[Tools`ToNumber`procPn] === 
              Sort[Tools`ToNumber`procPn1] === Sort[Tools`ToNumber`procPn2], 
              Apply[And, 
               Map[NumberQ, 
                Values[Tools`ToNumber`procP]]], Sort[
                Keys[Tools`ToNumber`procP]] === Sort[
                Keys[Tools`ToNumber`newP]], 
              SubsetQ[
               Keys[Tools`ToNumber`p], 
               Keys[Tools`ToNumber`procP]], 
              ReleaseHold[Tools`ToNumber`msg] == {{}, {}}, 
              Not[
               Tools`ToNumber`checkAbrt[
                
                FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]]]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000096`2.132786230871562, "CPUTimeUsed" -> 0.00009599999998499698, 
         "MemoryUsed" -> -680, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 6738375099583174649 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905773706539146*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "94eb097e-7d4d-4961-a01c-9f585b53aae4", "TestID" -> 
         "ToNumber_20231008-XRAJMG", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "8053eae1-363a-4c41-a305-2a18f5281f65", "Input" -> 
         HoldForm[
          Tools`ToNumber`p = {
             Tools`ToNumber`delta -> 0.998, Tools`ToNumber`Esx -> 0.0078, 
              Tools`ToNumber`gamma -> 10, Tools`ToNumber`muc -> 0.0015, 
              Tools`ToNumber`phisxs -> 2.3 10^(-6), Tools`ToNumber`phix -> 
              0.044, Tools`ToNumber`psi -> 1.5, Tools`ToNumber`rhox -> 0.979, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`vx -> 0.987, 
              Tools`ToNumber`mud[1] -> 0.0015, Tools`ToNumber`phidxd[1] -> 
              4.5, Tools`ToNumber`rhodx[1] -> 3}; 
           Tools`ToNumber`newP = {
             Tools`ToNumber`delta -> 0.9, Tools`ToNumber`Esx -> 1, 
              Tools`ToNumber`phip -> 3}; Apply[And, {
              Tools`ToNumber`checkAbrt[
               FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
               Tools`ToNumber`newP, Tools`ToNumber`p]], 
              Tools`ToNumber`checkMsg[
               FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
               Tools`ToNumber`newP, Tools`ToNumber`p], 
               MessageName[
               FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters,
                 "subsetparam"]]}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.028531`4.605831991601614, "CPUTimeUsed" -> 
         0.02855899999997291, "MemoryUsed" -> 4688, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 5198918444734797043 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905773706567949*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "24fb14ef-105d-4654-814c-d45c65dce2fd", "TestID" -> 
         "ToNumber_20231008-THA7ZT", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "2de0d4cc-4281-4d1d-b553-d983088330c8", "Input" -> 
         HoldForm[
          Tools`ToNumber`p = {
             Tools`ToNumber`delta -> 0.998, Tools`ToNumber`Esx -> 0.0078, 
              Tools`ToNumber`gamma -> 10, Tools`ToNumber`muc -> 0.0015, 
              Tools`ToNumber`phisxs -> 2.3 10^(-6), Tools`ToNumber`phix -> 
              0.044, Tools`ToNumber`psi -> 1.5, Tools`ToNumber`rhox -> 0.979, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`vx -> 0.987, 
              Tools`ToNumber`mud[1] -> 0.0015, Tools`ToNumber`phidxd[1] -> 
              4.5, Tools`ToNumber`rhodx[1] -> 3}; 
           Tools`ToNumber`newP = {
             Tools`ToNumber`delta -> 0.9, Tools`ToNumber`Esx -> 1, 
              Tools`ToNumber`psi -> 1}; Apply[And, {
              Tools`ToNumber`checkAbrt[
               FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
               Tools`ToNumber`newP, Tools`ToNumber`p]], 
              Tools`ToNumber`checkMsg[
               FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
               Tools`ToNumber`newP, Tools`ToNumber`p], 
               MessageName[
               FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters,
                 "psi"]]}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000305`2.6348148371787796, "CPUTimeUsed" -> 
         0.0003050000000257569, "MemoryUsed" -> 2920, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 7957995869761279183 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905773706568514*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a7edd991-f9ea-4fe4-972e-2fbcbb3882e8", "TestID" -> 
         "ToNumber_20231008-01NY69", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "14dd033d-5e26-41ac-87de-f0c27f2777c1", "Input" -> 
         HoldForm[
          Tools`ToNumber`p = {
             Tools`ToNumber`delta -> 0.998, Tools`ToNumber`Esx -> 0.0078, 
              Tools`ToNumber`gamma -> 10, Tools`ToNumber`muc -> 0.0015, 
              Tools`ToNumber`phisxs -> 2.3 10^(-6), Tools`ToNumber`phix -> 
              0.044, Tools`ToNumber`psi -> 1.5, Tools`ToNumber`rhox -> 0.979, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`vx -> 0.987, 
              Tools`ToNumber`mud[1] -> 0.0015, Tools`ToNumber`phidxd[1] -> 
              4.5, Tools`ToNumber`rhodx[1] -> 3}; 
           Tools`ToNumber`newP = {
             Tools`ToNumber`delta -> 0.9, Tools`ToNumber`Esx -> 1, 
              Tools`ToNumber`psi -> 1.}; Apply[And, {
              Tools`ToNumber`checkAbrt[
               FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
               Tools`ToNumber`newP, Tools`ToNumber`p]], 
              Tools`ToNumber`checkMsg[
               FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
               Tools`ToNumber`newP, Tools`ToNumber`p], 
               MessageName[
               FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters,
                 "psi"]]}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000296`2.6218067088909325, "CPUTimeUsed" -> 
         0.0002959999999916363, "MemoryUsed" -> 2904, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 3777353804616385522 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9057737065691*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "dd20d65a-c508-4ec2-a75e-0cce6012d6f2", "TestID" -> 
         "ToNumber_20231008-50GV3K", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "169ef5f9-9104-4028-8ffd-8abca912841f", "Input" -> 
         HoldForm[
          Tools`ToNumber`p = {
             Tools`ToNumber`delta -> 0.998, Tools`ToNumber`Esx -> 0.0078, 
              Tools`ToNumber`gamma -> 10, Tools`ToNumber`muc -> 0.0015, 
              Tools`ToNumber`phisxs -> 2.3 10^(-6), Tools`ToNumber`phix -> 
              0.044, Tools`ToNumber`psi -> 1.5, Tools`ToNumber`rhox -> 0.979, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`vx -> 0.987, 
              Tools`ToNumber`mud[1] -> 0.0015, Tools`ToNumber`phidxd[1] -> 
              4.5, Tools`ToNumber`rhodx[1] -> 3}; 
           Tools`ToNumber`newP = {
             Tools`ToNumber`gamma -> 10, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`psi -> 1.5}; 
           Tools`ToNumber`procP = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newP, Tools`ToNumber`p]; 
           Tools`ToNumber`msg = 
            Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
              Reap[
              Module[{}, 
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]; 
                 Null]; $MessageList]]; Apply[And, {
              Apply[And, 
               Map[NumberQ, 
                Values[Tools`ToNumber`procP]]], Sort[
                Keys[Tools`ToNumber`procP]] === Sort[
                Keys[Tools`ToNumber`newP]], 
              SubsetQ[
               Keys[Tools`ToNumber`p], 
               Keys[Tools`ToNumber`procP]], 
              ReleaseHold[Tools`ToNumber`msg] == {{}, {}}, 
              Not[
               Tools`ToNumber`checkAbrt[
                
                FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]]]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000528`2.8731489203658063, "CPUTimeUsed" -> 0.000528999999971802, 
         "MemoryUsed" -> 3488, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7195231356689817313 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905773706569914*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "7ec2923e-36e1-4bc1-aa96-655b3f644861", "TestID" -> 
         "ToNumber_20231008-TQ1R03", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "3fbea6e4-e9a2-4be0-8ae8-f297d9e0888d", "Input" -> 
         HoldForm[
          Tools`ToNumber`p = {
             Tools`ToNumber`delta -> 0.998, Tools`ToNumber`Esx -> 0.0078, 
              Tools`ToNumber`gamma -> 10, Tools`ToNumber`muc -> 0.0015, 
              Tools`ToNumber`phisxs -> 2.3 10^(-6), Tools`ToNumber`phix -> 
              0.044, Tools`ToNumber`psi -> 1.5, Tools`ToNumber`rhox -> 0.979, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`vx -> 0.987, 
              Tools`ToNumber`mud[1] -> 0.0015, Tools`ToNumber`phidxd[1] -> 
              4.5, Tools`ToNumber`rhodx[1] -> 3}; 
           Tools`ToNumber`newP = {
             Tools`ToNumber`gamma -> 10, Tools`ToNumber`theta -> 3.23, 
              Tools`ToNumber`psi -> 1.5}; Tools`ToNumber`procP = Quiet[
              FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
              Tools`ToNumber`newP, Tools`ToNumber`p], 
              MessageName[
              FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters, 
               "param"]]; Apply[And, {
              Apply[And, 
               Map[NumberQ, 
                Values[Tools`ToNumber`procP]]], Sort[
                Keys[Tools`ToNumber`procP]] === Sort[
                Keys[Tools`ToNumber`newP]], 
              SubsetQ[
               Keys[Tools`ToNumber`p], 
               Keys[Tools`ToNumber`procP]], 
              Not[
               Tools`ToNumber`checkAbrt[
                
                FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]]], 
              Tools`ToNumber`checkMsg[
               FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
               Tools`ToNumber`newP, Tools`ToNumber`p], 
               MessageName[
               FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters,
                 "param"]], Chop[
                RealAbs[
                ReplaceAll[
                  Tools`ToNumber`theta, 
                   Tools`ToNumber`procP] - -27.]] < $MachineEpsilon}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000487`2.838043959046628, "CPUTimeUsed" -> 0.0004870000000209984, 
         "MemoryUsed" -> 2736, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 5387720544999667070 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905773706570697*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "dbcfb217-6361-46ef-9d03-36fb7f859814", "TestID" -> 
         "ToNumber_20231008-597Z62", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "20c788e6-36aa-40e0-a6fa-7b8e502e897a", "Input" -> 
         HoldForm[
          Tools`ToNumber`p = {
             Tools`ToNumber`delta -> 0.998, Tools`ToNumber`Esx -> 0.0078, 
              Tools`ToNumber`gamma -> 10, Tools`ToNumber`muc -> 0.0015, 
              Tools`ToNumber`phisxs -> 2.3 10^(-6), Tools`ToNumber`phix -> 
              0.044, Tools`ToNumber`psi -> 1.5, Tools`ToNumber`rhox -> 0.979, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`vx -> 0.987, 
              Tools`ToNumber`mud[1] -> 0.0015, Tools`ToNumber`phidxd[1] -> 
              4.5, Tools`ToNumber`rhodx[1] -> 3}; 
           Tools`ToNumber`newP = {
             Tools`ToNumber`psi -> 2, Tools`ToNumber`theta -> -3.}; 
           Tools`ToNumber`procP = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newP, Tools`ToNumber`p]; 
           Tools`ToNumber`msg = 
            Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
              Reap[
              Module[{}, 
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]; 
                 Null]; $MessageList]]; Apply[And, {
              Apply[And, 
               Map[NumberQ, 
                Values[Tools`ToNumber`procP]]], Sort[
                Keys[Tools`ToNumber`procP]] === Sort[
                Join[{Tools`ToNumber`gamma}, 
                 Keys[Tools`ToNumber`newP]]], 
              SubsetQ[
               Keys[Tools`ToNumber`p], 
               Keys[Tools`ToNumber`procP]], 
              Not[
               Tools`ToNumber`checkAbrt[
                
                FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]]], 
              ReleaseHold[Tools`ToNumber`msg] == {{}, {}}, Chop[
                RealAbs[
                ReplaceAll[Tools`ToNumber`gamma, Tools`ToNumber`procP] - 
                 2.5]] < $MachineEpsilon}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.001008`3.1539755299415004, "CPUTimeUsed" -> 0.001021999999977652, 
         "MemoryUsed" -> 4896, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 2154358716585224398 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905773706572003*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "8ac3aa8a-0bcc-417b-b12f-f0d084080f37", "TestID" -> 
         "ToNumber_20231008-96K47K", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "4fb4f285-431b-44ab-9960-483a16f42103", "Input" -> 
         HoldForm[
          Tools`ToNumber`p = {
             Tools`ToNumber`delta -> 0.998, Tools`ToNumber`Esx -> 0.0078, 
              Tools`ToNumber`gamma -> 10, Tools`ToNumber`muc -> 0.0015, 
              Tools`ToNumber`phisxs -> 2.3 10^(-6), Tools`ToNumber`phix -> 
              0.044, Tools`ToNumber`psi -> 1.5, Tools`ToNumber`rhox -> 0.979, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`vx -> 0.987, 
              Tools`ToNumber`mud[1] -> 0.0015, Tools`ToNumber`phidxd[1] -> 
              4.5, Tools`ToNumber`rhodx[1] -> 3}; 
           Tools`ToNumber`newP = {
             Tools`ToNumber`psi -> 2, Tools`ToNumber`gamma -> 2.5}; 
           Tools`ToNumber`procP = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newP, Tools`ToNumber`p]; 
           Tools`ToNumber`msg = 
            Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
              Reap[
              Module[{}, 
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]; 
                 Null]; $MessageList]]; Apply[And, {
              Apply[And, 
               Map[NumberQ, 
                Values[Tools`ToNumber`procP]]], Sort[
                Keys[Tools`ToNumber`procP]] === Sort[
                Join[{Tools`ToNumber`theta}, 
                 Keys[Tools`ToNumber`newP]]], 
              SubsetQ[
               Keys[Tools`ToNumber`p], 
               Keys[Tools`ToNumber`procP]], 
              Not[
               Tools`ToNumber`checkAbrt[
                
                FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]]], 
              ReleaseHold[Tools`ToNumber`msg] == {{}, {}}, 
              RealAbs[ReplaceAll[
                 Tools`ToNumber`theta, 
                  Tools`ToNumber`procP] - -3] < $MachineEpsilon}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.001027`3.162085441429272, "CPUTimeUsed" -> 0.0010340000000041982`, 
         "MemoryUsed" -> 2904, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 6676186110564758457 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905773706573452*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "09d35aa4-2e3b-46a8-b734-7664303a5b99", "TestID" -> 
         "ToNumber_20231008-IPRKEH", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "6b2b324d-4183-483d-9481-0c396ff91abd", "Input" -> 
         HoldForm[
          Tools`ToNumber`p = {
             Tools`ToNumber`delta -> 0.998, Tools`ToNumber`Esx -> 0.0078, 
              Tools`ToNumber`gamma -> 10, Tools`ToNumber`muc -> 0.0015, 
              Tools`ToNumber`phisxs -> 2.3 10^(-6), Tools`ToNumber`phix -> 
              0.044, Tools`ToNumber`psi -> 1.5, Tools`ToNumber`rhox -> 0.979, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`vx -> 0.987, 
              Tools`ToNumber`mud[1] -> 0.0015, Tools`ToNumber`phidxd[1] -> 
              4.5, Tools`ToNumber`rhodx[1] -> 3}; 
           Tools`ToNumber`newP = {
             Tools`ToNumber`gamma -> 2.5, Tools`ToNumber`theta -> -3.}; 
           Tools`ToNumber`procP = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newP, Tools`ToNumber`p]; 
           Tools`ToNumber`msg = 
            Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
              Reap[
              Module[{}, 
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]; 
                 Null]; $MessageList]]; Apply[And, {
              Apply[And, 
               Map[NumberQ, 
                Values[Tools`ToNumber`procP]]], Sort[
                Keys[Tools`ToNumber`procP]] === Sort[
                Join[{Tools`ToNumber`psi}, 
                 Keys[Tools`ToNumber`newP]]], 
              SubsetQ[
               Keys[Tools`ToNumber`p], 
               Keys[Tools`ToNumber`procP]], 
              Not[
               Tools`ToNumber`checkAbrt[
                
                FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]]], 
              ReleaseHold[Tools`ToNumber`msg] == {{}, {}}, 
              RealAbs[ReplaceAll[Tools`ToNumber`psi, Tools`ToNumber`procP] - 
                2] < $MachineEpsilon}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.001065`3.1778646056067505, "CPUTimeUsed" -> 
         0.0010780000000067957`, "MemoryUsed" -> 3416, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 2323537394000988383 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905773706574834*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "908a007f-4742-4ac0-a4ce-abdd0f830eb3", "TestID" -> 
         "ToNumber_20231008-T7S6Y6", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "3e1e82a6-9bf5-45df-95a3-bd1b58a61718", "Input" -> 
         HoldForm[
          Tools`ToNumber`p = {
             Tools`ToNumber`delta -> 0.998, Tools`ToNumber`Esx -> 0.0078, 
              Tools`ToNumber`gamma -> 10, Tools`ToNumber`muc -> 0.0015, 
              Tools`ToNumber`phisxs -> 2.3 10^(-6), Tools`ToNumber`phix -> 
              0.044, Tools`ToNumber`psi -> 1.5, Tools`ToNumber`rhox -> 0.979, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`vx -> 0.987, 
              Tools`ToNumber`mud[1] -> 0.0015, Tools`ToNumber`phidxd[1] -> 
              4.5, Tools`ToNumber`rhodx[1] -> 3}; 
           Tools`ToNumber`newP = {
             Tools`ToNumber`delta -> 0.9, Tools`ToNumber`Esx -> 1, 
              Tools`ToNumber`theta -> 1.}; Apply[And, {
              Tools`ToNumber`checkAbrt[
               FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
               Tools`ToNumber`newP, Tools`ToNumber`p]], 
              Tools`ToNumber`checkMsg[
               FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
               Tools`ToNumber`newP, Tools`ToNumber`p], 
               MessageName[
               FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters,
                 "theta"]]}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.053233`4.876695939802839, "CPUTimeUsed" -> 
         0.05325199999998631, "MemoryUsed" -> 6128, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 2476541715006275298 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905773706628515*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "5adf3c0c-073b-4d0f-b9df-1399baca104b", "TestID" -> 
         "ToNumber_20231008-8P0GF2", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "f7e95002-f5e3-4096-a55a-459b5bbb85a5", "Input" -> 
         HoldForm[
          Tools`ToNumber`p = {
             context1`delta -> 0.998, context1`Esx -> 0.0078, foo`gamma -> 10,
               Tools`ToNumber`muc -> 0.0015, Tools`ToNumber`phisxs -> 
              2.3 10^(-6), Tools`ToNumber`phix -> 0.044, Tools`ToNumber`psi -> 
              1.5, Tools`ToNumber`rhox -> 0.979, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`vx -> 0.987, 
              Tools`ToNumber`mud[1] -> 0.0015, Tools`ToNumber`phidxd[1] -> 
              4.5, Tools`ToNumber`rhodx[1] -> 3}; 
           Tools`ToNumber`newP = {
             context2`delta -> 0.9, Tools`ToNumber`Esx -> 1, bar`gamma -> 2}; 
           Tools`ToNumber`procP = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newP, Tools`ToNumber`p]; 
           Apply[And, {KeyTake[Tools`ToNumber`p, 
                Keys[Tools`ToNumber`newP]] === <||>, Map[Context, 
                Keys[Tools`ToNumber`procP]] === Map[Context, 
                Keys[
                 KeyTake[Tools`ToNumber`p, 
                  Keys[Tools`ToNumber`procP]]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000263`2.5704707463217518, "CPUTimeUsed" -> 
         0.00026300000001810986`, "MemoryUsed" -> 2640, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>]|>, 
    "FailureResults" -> <||>, "TestsNotEvaluatedKeys" -> {}, 
    "TestsFailedWrongResultsKeys" -> {}, "TestsFailedWithMessagesKeys" -> {}, 
    "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {1031612477782653857, 446124398427068420, 
     789935563710371630, 4722713273079957559, 4419732249327161404, 
     6738375099583174649, 5198918444734797043, 7957995869761279183, 
     3777353804616385522, 7195231356689817313, 5387720544999667070, 
     2154358716585224398, 6676186110564758457, 2323537394000988383, 
     2476541715006275298}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.905688212312258*^9, 3.90577370681995*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"286dfd69-1b64-41dd-ab71-bf848d0a8c31"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905688212312258*^9, 3.905773706822832*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"4b583b5b-0176-4730-ac95-2bdef450339e"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905688212312258*^9, 3.905773706823359*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"5be593d9-a970-4782-aace-88009f0bab5f"]
}, Open  ]]
},
WindowSize->{1551, 843},
WindowMargins->{{Automatic, -1920}, {Automatic, 48}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.25 Inherited,
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6603c207-289c-456f-bd11-6175ead60d45"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 246, 4, 37, "Input",ExpressionUUID->"4a4e2e24-fcb6-4e5b-a6de-9a788f0ea471"],
Cell[CellGroupData[{
Cell[829, 28, 1575, 30, 116, "Input",ExpressionUUID->"b9f2d453-3e98-41bc-b67a-28793e860800"],
Cell[2407, 60, 552, 8, 42, "Output",ExpressionUUID->"3e60d630-bd14-4c8d-8d05-d8fef78ad01c"],
Cell[2962, 70, 576, 9, 42, "Output",ExpressionUUID->"22833840-f2de-4fe6-bbbf-269f58a4d5aa"],
Cell[3541, 81, 1838, 33, 329, "Output",ExpressionUUID->"19d9b494-2f20-4afc-aaed-dc2bc60bec5f"],
Cell[5382, 116, 590, 10, 42, "Output",ExpressionUUID->"c3b20972-1a55-4bc5-9757-5c1cba14073d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6009, 131, 243, 4, 37, "Input",ExpressionUUID->"89327c75-70af-4b75-adfd-86608c4fe806"],
Cell[6255, 137, 9774, 202, 103, "Output",ExpressionUUID->"6d9f3fe6-fe17-49be-8e8f-f359717d35b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16066, 344, 224, 3, 37, "Input",ExpressionUUID->"a1384358-6bbe-4f41-bc0a-a9f74fea10c1"],
Cell[16293, 349, 176, 2, 42, "Output",ExpressionUUID->"867e3e10-43f1-4f22-b2b4-d51571d609e9"]
}, Open  ]],
Cell[16484, 354, 436, 9, 142, "Input",ExpressionUUID->"f1d84011-dcfc-4f83-98b5-d531ed681557"],
Cell[16923, 365, 4418, 120, 454, "Input",ExpressionUUID->"6221cad6-36a4-4248-80ca-185024e4de01"],
Cell[CellGroupData[{
Cell[21366, 489, 1939, 55, 142, "Input",ExpressionUUID->"a02079b6-dc93-4662-a435-00398ad5c39a"],
Cell[23308, 546, 30007, 566, 76, "Output",ExpressionUUID->"57d01980-f4e2-4fd3-b9fa-99d0e6377dd7"],
Cell[53318, 1114, 313, 4, 42, "Output",ExpressionUUID->"ab80e1a8-f08c-454d-89d1-1284274daf7a"],
Cell[53634, 1120, 313, 4, 42, "Output",ExpressionUUID->"bf2cf179-04de-40ae-8048-0a975adbcb28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53984, 1129, 2330, 60, 142, "Input",ExpressionUUID->"1153a7e3-a4a9-44e1-a1d1-2c85ee2d32e0"],
Cell[56317, 1191, 32848, 615, 76, "Output",ExpressionUUID->"4e8f3e95-7cc9-44f4-837d-226d2ae78e1a"],
Cell[89168, 1808, 270, 4, 42, "Output",ExpressionUUID->"18136333-4913-4ebf-a808-618f0ef17dda"],
Cell[89441, 1814, 272, 4, 42, "Output",ExpressionUUID->"0f899501-78f1-4fbb-9c76-b01ff2fad92e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89750, 1823, 2335, 60, 142, "Input",ExpressionUUID->"07d47c72-3650-48cf-bae5-d9151c59339e"],
Cell[92088, 1885, 22835, 465, 76, "Output",ExpressionUUID->"9e85cd85-9a7e-45d9-ab44-0c00600f5ebe"],
Cell[114926, 2352, 245, 3, 42, "Output",ExpressionUUID->"21ad07b9-c0e2-45bd-b80c-e430ce6810df"],
Cell[115174, 2357, 245, 3, 42, "Output",ExpressionUUID->"0da7268d-bfeb-4196-854a-dd4d7758fc84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115456, 2365, 2336, 60, 142, "Input",ExpressionUUID->"a92fbc3b-b353-4e75-8ee9-b61e11404d6b"],
Cell[117795, 2427, 30688, 612, 76, "Output",ExpressionUUID->"d0d36a92-89ec-44ae-a072-ffa1f81d3a83"],
Cell[148486, 3041, 224, 3, 42, "Output",ExpressionUUID->"735abc56-9c38-4460-98f9-68474cac99e8"],
Cell[148713, 3046, 222, 3, 42, "Output",ExpressionUUID->"9294ab13-0791-486c-8d60-f19c72e3aedc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148972, 3054, 2400, 61, 142, "Input",ExpressionUUID->"16b4a727-0558-4183-a2f8-e2e1a7b3a611"],
Cell[151375, 3117, 168584, 3169, 76, "Output",ExpressionUUID->"1b688ec7-62aa-4f84-9f31-1e3bc9eda8e1"],
Cell[319962, 6288, 201, 3, 42, "Output",ExpressionUUID->"363b6495-31f2-43fb-a58a-0a0cd1d37b14"],
Cell[320166, 6293, 201, 3, 42, "Output",ExpressionUUID->"c92518bb-0a90-499f-96d8-0af66f423859"]
}, Open  ]],
Cell[CellGroupData[{
Cell[320404, 6301, 1956, 55, 142, "Input",ExpressionUUID->"e330a50a-d51d-4861-9e79-8ecbadd6a684"],
Cell[322363, 6358, 86607, 1600, 76, "Output",ExpressionUUID->"43573582-81e7-4d22-98f2-eff3cc83d653"],
Cell[408973, 7960, 201, 3, 42, "Output",ExpressionUUID->"6a1ae683-8c21-46a9-83d1-2cde089bd922"],
Cell[409177, 7965, 201, 3, 42, "Output",ExpressionUUID->"72dd1bbf-5fc1-4aa0-a5fe-b2943e8c786c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[409415, 7973, 1949, 56, 142, "Input",ExpressionUUID->"ab52a8a9-6ba0-4c63-83a5-96864da8b71f"],
Cell[411367, 8031, 198, 3, 42, "Output",ExpressionUUID->"b286ddec-4b5a-4c70-adec-f24fdc08de7e"],
Cell[411568, 8036, 199, 3, 42, "Output",ExpressionUUID->"e7a43eea-8082-4268-92fa-b226ac336fe1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[411804, 8044, 1986, 55, 142, "Input",ExpressionUUID->"2f5705e2-54a0-49dc-bed2-96972ce91fe4"],
Cell[413793, 8101, 137788, 3143, 76, "Output",ExpressionUUID->"e29dc5a2-796d-49a0-9267-dd8012feb918"],
Cell[551584, 11246, 175, 2, 42, "Output",ExpressionUUID->"dbb86417-86c6-478e-af42-40177a169c0d"],
Cell[551762, 11250, 174, 2, 42, "Output",ExpressionUUID->"bca05209-a17f-4f02-b790-b228739ee79f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[551973, 11257, 1943, 55, 142, "Input",ExpressionUUID->"7c47fece-e37b-46a8-a1f5-f66cb52faf00"],
Cell[553919, 11314, 135049, 2301, 76, "Output",ExpressionUUID->"6395794d-5f6a-4362-8cf0-5cb848880710"],
Cell[688971, 13617, 172, 2, 42, "Output",ExpressionUUID->"d843177c-13e2-4cd1-94fe-a12fad3385cd"],
Cell[689146, 13621, 172, 2, 42, "Output",ExpressionUUID->"f0569a1c-7ca7-4b2b-9f52-1dad341b6b2e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[689355, 13628, 1944, 55, 142, "Input",ExpressionUUID->"ad7fda5b-fb52-4ad1-8d3f-dceb74f45182"],
Cell[691302, 13685, 10081, 207, 76, "Output",ExpressionUUID->"faf272f4-1f73-4923-8374-355bce3e9ea2"],
Cell[701386, 13894, 173, 2, 42, "Output",ExpressionUUID->"2f5eeabc-c18a-4dff-b861-2141f7ed746d"],
Cell[701562, 13898, 173, 2, 42, "Output",ExpressionUUID->"a021286e-07d5-46d7-ad81-a57bf8aaf62c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[701772, 13905, 1961, 56, 142, "Input",ExpressionUUID->"479fb483-095c-47a5-b63a-afec0a7f6185"],
Cell[703736, 13963, 22141, 424, 76, "Output",ExpressionUUID->"5cda5875-5226-4189-b44c-1f671643d893"],
Cell[725880, 14389, 173, 2, 42, "Output",ExpressionUUID->"263e6f76-6294-44d9-8dc2-5cd0f729c404"],
Cell[726056, 14393, 173, 2, 42, "Output",ExpressionUUID->"d55440ee-dc59-40e6-a14f-ef5c989c8756"]
}, Open  ]],
Cell[CellGroupData[{
Cell[726266, 14400, 1960, 56, 142, "Input",ExpressionUUID->"afbf4542-7cc1-4920-8238-b47d7922799b"],
Cell[728229, 14458, 93535, 1737, 76, "Output",ExpressionUUID->"286dfd69-1b64-41dd-ab71-bf848d0a8c31"],
Cell[821767, 16197, 173, 2, 42, "Output",ExpressionUUID->"4b583b5b-0176-4730-ac95-2bdef450339e"],
Cell[821943, 16201, 173, 2, 42, "Output",ExpressionUUID->"5be593d9-a970-4782-aace-88009f0bab5f"]
}, Open  ]]
}
]
*)

