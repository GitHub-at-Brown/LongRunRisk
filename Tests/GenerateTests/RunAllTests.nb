(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    963404,      17709]
NotebookOptionsPosition[    952947,      17556]
NotebookOutlinePosition[    953415,      17574]
CellTagsIndexPosition[    953372,      17571]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["All Tests Together", "Section",
 CellChangeTimes->{{3.905876958238845*^9, 
  3.905876964840434*^9}},ExpressionUUID->"78e49db9-cc4f-4fd7-843c-\
0d52d841f43e"],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8899684458207283`*^9, 3.889968446659306*^9}, 
   3.905687785878962*^9, 3.905697493964726*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"4a4e2e24-fcb6-4e5b-a6de-9a788f0ea471"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"pacletBaseDir", "=", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], ",", "2"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"PacletDirectoryLoad", "[", "pacletBaseDir", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"testFileNames", " ", "=", " ", 
  RowBox[{"FileNames", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"pacletBaseDir", ",", "\"\<Tests\>\"", ",", "\"\<*.wlt\>\""}], 
     "}"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"$ContextPath", "=", 
  RowBox[{"Cases", "[", 
   RowBox[{"$ContextPath", ",", 
    RowBox[{"Except", "[", "\"\<PacletizedResourceFunctions`\>\"", "]"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8894111683493032`*^9, 3.8894112087815933`*^9}, {
   3.889411242053163*^9, 3.88941126569147*^9}, {3.889603572176957*^9, 
   3.88960360623313*^9}, {3.88960408745549*^9, 3.889604092938833*^9}, {
   3.889969691249559*^9, 3.88996969252437*^9}, {3.889970717286119*^9, 
   3.889970718153995*^9}, {3.889971173708085*^9, 3.889971181843957*^9}, {
   3.889971229070705*^9, 3.8899712293375397`*^9}, {3.8899714432222357`*^9, 
   3.8899714500808268`*^9}, 3.890495920897338*^9, {3.890495957177495*^9, 
   3.8904959657175426`*^9}, {3.890496000595605*^9, 3.890496010113224*^9}, {
   3.890496054450512*^9, 3.890496056417246*^9}, {3.890555640296084*^9, 
   3.8905556405146093`*^9}, {3.8905942747634373`*^9, 3.890594276210952*^9}, {
   3.891158085135849*^9, 3.891158137208028*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b9f2d453-3e98-41bc-b67a-28793e860800"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/\"\>"], "Output",
 CellChangeTimes->{
  3.905876869513242*^9, {3.905876986465622*^9, 3.905877013964843*^9}, 
   3.90590135292181*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"f0461080-b8f0-4951-b6f2-1231af50aaa5"],

Cell[BoxData[
 RowBox[{"{", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/\"\>", "}"}]], "Output",
 CellChangeTimes->{
  3.905876869513242*^9, {3.905876986465622*^9, 3.905877013964843*^9}, 
   3.905901352958118*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"8d31b7e2-a278-4a25-a9d5-42bcbd036b1a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt\"\>\
", ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt\"\
\>", ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/CreateEulerEq.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/PacletizeResources.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/SolveEulerEq.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt\"\>"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.905876869513242*^9, {3.905876986465622*^9, 3.905877013964843*^9}, 
   3.905901352958894*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"afd55ddb-14b0-4c68-9038-e208862619f9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Wolfram`Chatbook`\"\>", ",", "\<\"System`\"\>", 
   ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.905876869513242*^9, {3.905876986465622*^9, 3.905877013964843*^9}, 
   3.905901352959778*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"fe7a633d-ab25-4ddf-8df9-bbf871baad73"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tr", "=", 
  RowBox[{"TestReport", "[", "testFileNames", "]"}]}]], "Input",
 CellChangeTimes->{{3.905774456753294*^9, 3.905774456896863*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"89327c75-70af-4b75-adfd-86608c4fe806"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TestReportObject", "SummaryHead"], "NonInterpretableSummary"], 
      
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                  PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                  GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Test Report: Catalog.wlt\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["180", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                  PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                  GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Test Report: Catalog.wlt\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["180", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["180", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    "32.819098`5.41136913346143", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[TestReportObject, 1568216, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", TestReportObject, 1568216, 
            8497328388342721563874520660250783324671895567656930616464, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "TestReportObject[<|Title -> Test Report: Catalog.wlt, <<7>>, \
TestsSucceededKeys -> {1321508345002544942, 5375338096187170479, \
665111530681308148, 7474071356343508748, 3716580872517706158, \
1757318512717793676, 4199995967366532967, 4651413003329659731, \
7690540907874868389, <<166>>, 688<<13>>342, 2049930196430166252, \
7309126100391358473, 5732668954932602365, 4653738323569815282}|>]"& )],
  False,
  BoxID -> 8497328388342721563874520660250783324671895567656930616464,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.905877008930414*^9, 3.905877049938714*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"83617de6-811c-4523-8da4-108b3f55bdae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tr", "[", "\"\<ReportSucceeded\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.905774373220792*^9, 3.9057744556871634`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"a1384358-6bbe-4f41-bc0a-a9f74fea10c1"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905877050258745*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"3078577c-f250-431c-83d3-fede15a5a703"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"tr", "[", "\"\<TestsFailedWrongResults\>\"", "]"}], "\n", 
   RowBox[{"tr", "[", "\"\<TestsFailedWithMessages\>\"", "]"}], "\n", 
   RowBox[{"tr", "[", "\"\<TestsSucceeded\>\"", "]"}]}], 
  "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.9057735122958403`*^9, 
  3.9057735382910547`*^9}},ExpressionUUID->"f1d84011-dcfc-4f83-98b5-\
d531ed681557"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ex", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"tr", "[", "\"\<TestsFailedWrongResults\>\"", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ")"}], "[", "\"\<ExpectedOutput\>\"", 
     "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"ac", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"tr", "[", "\"\<TestsFailedWrongResults\>\"", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ")"}], "[", "\"\<ActualOutput\>\"", 
     "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ex", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i"}], "]"}], "]"}], "//", "Dataset"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"ex", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], "//", 
      RowBox[{"TableForm", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ac", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}], "//", "Dataset"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"ex", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}]}], "//", 
     RowBox[{"TableForm", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ex", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i"}], "]"}], "]"}], "===", 
         RowBox[{"ac", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"ex", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "ex"}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"tr", "[", "\"\<TestsFailedWithMessages\>\"", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ")"}], "[", 
       "\"\<ExpectedMessages\>\"", "]"}], "\[IndentingNewLine]", "ac"}], "=", 
     
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"tr", "[", "\"\<TestsFailedWithMessages\>\"", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ")"}], "[", 
         "\"\<ActualMessages\>\"", "]"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ex", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "i"}], "]"}], "]"}], "//", "Dataset"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"ex", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], "//", 
       RowBox[{"TableForm", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ac", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "i"}], "]"}], "]"}], "//", "Dataset"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"ex", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}]}], "//", 
      RowBox[{"TableForm", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ex", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}], "===", 
          RowBox[{"ac", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"ex", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], 
        "]"}]}]}]}]}]}], "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{
  3.905773492449201*^9, {3.9057735328825417`*^9, 
   3.9057735343711348`*^9}},ExpressionUUID->"6221cad6-36a4-4248-80ca-\
185024e4de01"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Individual Tests", "Section",
 CellChangeTimes->{{3.905876938304287*^9, 
  3.90587694345366*^9}},ExpressionUUID->"d25c25c5-91e4-4db4-8d5d-\
ffff3c9dd8e9"],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8899684458207283`*^9, 3.889968446659306*^9}, 
   3.905687785878962*^9, 3.905697493964726*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"b7145b60-97f2-4c82-a22d-4a857448917d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"pacletBaseDir", "=", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], ",", "2"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"PacletDirectoryLoad", "[", "pacletBaseDir", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"testFileNames", " ", "=", " ", 
  RowBox[{"FileNames", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"pacletBaseDir", ",", "\"\<Tests\>\"", ",", "\"\<*.wlt\>\""}], 
     "}"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"$ContextPath", "=", 
  RowBox[{"Cases", "[", 
   RowBox[{"$ContextPath", ",", 
    RowBox[{"Except", "[", "\"\<PacletizedResourceFunctions`\>\"", "]"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8894111683493032`*^9, 3.8894112087815933`*^9}, {
   3.889411242053163*^9, 3.88941126569147*^9}, {3.889603572176957*^9, 
   3.88960360623313*^9}, {3.88960408745549*^9, 3.889604092938833*^9}, {
   3.889969691249559*^9, 3.88996969252437*^9}, {3.889970717286119*^9, 
   3.889970718153995*^9}, {3.889971173708085*^9, 3.889971181843957*^9}, {
   3.889971229070705*^9, 3.8899712293375397`*^9}, {3.8899714432222357`*^9, 
   3.8899714500808268`*^9}, 3.890495920897338*^9, {3.890495957177495*^9, 
   3.8904959657175426`*^9}, {3.890496000595605*^9, 3.890496010113224*^9}, {
   3.890496054450512*^9, 3.890496056417246*^9}, {3.890555640296084*^9, 
   3.8905556405146093`*^9}, {3.8905942747634373`*^9, 3.890594276210952*^9}, {
   3.891158085135849*^9, 3.891158137208028*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b694159f-2a88-4f10-b86e-66a9ab5899ad"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/\"\>"], "Output",
 CellChangeTimes->{3.905902356646802*^9, 3.9059033147968693`*^9, 
  3.905904638579575*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"29948ab4-6fed-4083-ae6f-cac135957c9f"],

Cell[BoxData[
 RowBox[{"{", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/\"\>", "}"}]], "Output",
 CellChangeTimes->{3.905902356646802*^9, 3.9059033147968693`*^9, 
  3.905904638621961*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"803bde79-e36b-466a-87cf-181af8cb347e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt\"\>\
", ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt\"\
\>", ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/CreateEulerEq.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/PacletizeResources.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/SolveEulerEq.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt\"\>"}], "}"}]], "Output",\

 CellChangeTimes->{3.905902356646802*^9, 3.9059033147968693`*^9, 
  3.905904638622715*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"0f4fef74-9be4-418a-bbe1-73f19c205093"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Wolfram`Chatbook`\"\>", ",", "\<\"System`\"\>", 
   ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.905902356646802*^9, 3.9059033147968693`*^9, 
  3.905904638623599*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"587596b5-5466-4f64-ac7e-0b59c6a19995"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tr", "=", 
  RowBox[{
  "TestReport", "[", 
   "\"\</Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expected", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
        ")"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.9056875280845127`*^9, 3.9056875283457623`*^9}, 
   3.9056975439982033`*^9, 3.905876631913815*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"a02079b6-dc93-4662-a435-00398ad5c39a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: Catalog.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["16", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: Catalog.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["16", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["16", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0.0618750000000000001`3.7379102271176943", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                   "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: Catalog.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     6412737068422983672 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768754658494`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "89c21fc8-b05f-4f93-bdad-ee84839708e5", "TestID" -> 
         "Catalog_20231007-WMCGR2", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "d56057a6-b9f6-44ef-acc8-03b7220a3d2a", "Input" -> 
         HoldForm[Needs["FernandoDuarte`LongRunRisk`Model`Catalog`"]; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0554`4.894024762560424, "CPUTimeUsed" -> 0.05542599999999975, 
         "MemoryUsed" -> 7132248, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 8052332362736556990 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876875521583*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "2715b5e4-0e65-42ba-b76b-a4ada7a93d4c", "TestID" -> 
         "Catalog_20231007-9OYMAA", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "f7d4ef60-a6e3-4de7-ae5e-1c8ac2c37d8b", "Input" -> HoldForm[
           
           MemberQ[$ContextPath, 
            "FernandoDuarte`LongRunRisk`Model`Catalog`"]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000025`1.5484550065040317, "CPUTimeUsed" -> 
         0.000025999999999637424`, "MemoryUsed" -> 3104, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 3777566771294487681 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876875521841*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "8c53c807-2f9b-47a6-8b51-1e3a483b0835", "TestID" -> 
         "Catalog_20231007-4PW9Q8", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "e5c86032-aa14-414c-91f2-176f3e61251f", "Input" -> HoldForm[
           Apply[And, 
            Map[StringQ, 
             Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000023`1.512242833849587, "CPUTimeUsed" -> 0.00002300000000010627, 
         "MemoryUsed" -> 2560, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 1579223566526416252 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876875522087*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "3aea8b3d-ef02-4f8e-b81e-0f556ac6988a", "TestID" -> 
         "Catalog_20231007-KBDRFP", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "4e46d3e1-e846-4c74-a818-982a3b8d7b9a", "Input" -> HoldForm[
           Apply[And, 
            Map[StringQ, 
             Flatten[
              Map[{
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["name"], 
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                "shortname"], 
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["bibRef"], 
                
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["desc"]}& , 
               Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000055`1.8908776873262374, "CPUTimeUsed" -> 0.00005600000000027805,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 5835345572494652828 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768755223584`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "ec90b5c0-eaf0-47ad-8dab-b3b4d374b7da", "TestID" -> 
         "Catalog_20231007-L6CURG", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "a2b44b2a-1269-42c0-bd02-795578e459a6", "Input" -> HoldForm[
           Apply[And, 
            Map[NumberQ, 
             Flatten[
              Map[ReplaceRepeated[
                Part[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                 "parameters"], 
                 Span[1, All], 2], 
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                "parameters"]]& , 
               Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.002547`3.556543942795609, "CPUTimeUsed" -> 0.002547000000000299, 
         "MemoryUsed" -> 190536, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 6486028402145516924 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876875525123*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "8f00a6c4-b340-4945-9bd6-35fb1c0c76fc", "TestID" -> 
         "Catalog_20231007-OTAOFY", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "ca43f444-9949-414e-93ff-300002bd0f15", "Input" -> 
         HoldForm[
          FernandoDuarte`LongRunRisk`Model`Catalog`models["BY"]["stateVars"] === {
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x[
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx[
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000018`1.4057875029353, "CPUTimeUsed" -> 0.000018999999999991246`, 
         "MemoryUsed" -> 2608, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7343840939284968099 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768755253353`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "64a46ecd-6cc2-4bfb-b267-a131dda646d8", "TestID" -> 
         "Catalog_20231007-G5R6EN", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "a900db27-b959-4e01-8c1f-3a2c2ecaa773", "Input" -> HoldForm[
           Apply[And, 
            Map[MemberQ[
              Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]& , {
             "BY", "BKY"}]]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000021`1.4727342925659135, "CPUTimeUsed" -> 
         0.00002199999999996649, "MemoryUsed" -> 2800, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 1784831749261102921 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768755255494`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "5d731a9e-ce54-4252-9043-f7fd04e4e16f", "TestID" -> 
         "Catalog_20231007-ADRCW8", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "4825babc-2afb-4667-81ef-a74381c1a9c0", "Input" -> HoldForm[
           Apply[And, 
            Map[MatchQ[Association, #]& , 
             Flatten[{
               Head[FernandoDuarte`LongRunRisk`Model`Catalog`models], 
               Map[Head[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#]]& , 
                Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]}]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000043`1.7839834534115804, "CPUTimeUsed" -> 0.00004399999999993298,
          "MemoryUsed" -> 2728, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 5918513033512485581 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876875525805*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a355b9ba-674e-44f9-9b3b-ecef0b279fbf", "TestID" -> 
         "Catalog_20231007-UR77BA", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "6c150c67-c42c-4db3-8c5b-f805b019efa9", "Input" -> HoldForm[
           Apply[And, 
            Map[Apply[And, 
              
              Map[# === 
               "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                 "stateVars"], PatternTest[
                   Pattern[Model`Catalog`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                    SymbolName[#]]& ][
                   BlankSequence[]] :> Model`Catalog`var, Infinity]]]]& , 
             Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000632`2.951232076114379, "CPUTimeUsed" -> 0.0006319999999999659, 
         "MemoryUsed" -> 14544, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 5792401781569069420 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768755266414`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "f9277365-bd0e-43a9-8fa1-df438142170c", "TestID" -> 
         "Catalog_20231007-M9817Y", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "0c74003c-145a-4e95-90eb-8bcb1b4b1b32", "Input" -> HoldForm[
           Apply[And, 
            Map[Apply[And, 
              Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                 "stateVars"], PatternTest[
                   Pattern[Model`Catalog`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                   BlankSequence[]][
                   BlankSequence[]] :> Model`Catalog`var, Infinity]]]]& , 
             Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000096`2.132786230871562, "CPUTimeUsed" -> 0.00009600000000009601, 
         "MemoryUsed" -> 2664, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 2250517517173189052 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768755269413`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "dad3e93a-bf57-4a47-94e1-6e49350a16e2", "TestID" -> 
         "Catalog_20231007-SYKS8I", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "dff0659b-3456-4287-8306-cfd6b17bde17", "Input" -> HoldForm[
           Apply[And, 
            Map[Apply[And, 
              Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                 "parameters"], PatternTest[
                   Pattern[Model`Catalog`var, 
                    Blank[Symbol]], MemberQ[
                   FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Model`Catalog`var, Infinity]]]]& , 
             Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.001469`3.3175367936222506, "CPUTimeUsed" -> 0.0014689999999997205`,
          "MemoryUsed" -> 9872, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 5154368328190123103 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876875528613*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "afdb6f9a-b910-4619-8da9-89d2b50ea5e8", "TestID" -> 
         "Catalog_20231007-202AXM", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "782bedee-77fe-43e9-82e8-99b441faefdf", "Input" -> HoldForm[
           Apply[And, 
            Map[Apply[And, 
              Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                 "stateVars"], PatternTest[
                   Pattern[Model`Catalog`var, 
                    Blank[Symbol]], MemberQ[
                   FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Model`Catalog`var, Infinity]]]]& , 
             Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000221`2.494907271517105, "CPUTimeUsed" -> 0.00022199999999994446`,
          "MemoryUsed" -> 2664, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 2649776620595046079 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876875529034*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "845de296-4a6c-4b8d-981d-1450af58e5ee", "TestID" -> 
         "Catalog_20231007-B84UK6", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "94c39e54-2991-4bed-bc3d-951da4d9cd99", "Input" -> HoldForm[
           Apply[And, 
            Map[MatchQ[{}, #]& , 
             Map[Cases[
               FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
               "stateVars"], PatternTest[
                 Pattern[Model`Catalog`var, 
                  Blank[Symbol]], MemberQ[
                  Map[
                  StringDrop[#, -2]& , 
                   FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                  SymbolName[#]]& ][
                 BlankSequence[]] :> Model`Catalog`var, Infinity]& , 
              Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.001183`3.2234997424599245, "CPUTimeUsed" -> 0.0011830000000001561`,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 6913060946401836047 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876875530414*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "97d43a96-eff2-4c3e-ac15-e31afea158d6", "TestID" -> 
         "Catalog_20231007-GX0TLL", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "feedce3b-11b1-4e67-bfb2-d18c55b2c6b6", "Input" -> HoldForm[
           Apply[And, {
             AllTrue[
             FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo, 
              AssociationQ], 
             AllTrue[
              Map[
              FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#]& , 
               Keys[
               FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo]], 
              AssociationQ]}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000025`1.5484550065040306, "CPUTimeUsed" -> 
         0.000024999999999941735`, "MemoryUsed" -> 2560, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 1960960900625560272 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876875530619*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "6cd6967d-966a-455c-8f26-dcf5e5e6d196", "TestID" -> 
         "Catalog_20231007-ET7U5Q", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "3b990dbe-b70e-42ec-9046-794ea4037b47", "Input" -> HoldForm[
           Apply[And, {
             SubsetQ[
              Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], 
              Keys[
              FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo]]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000061`1.935844832842761, "CPUTimeUsed" -> 0.00006300000000036832, 
         "MemoryUsed" -> 6512, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4837370470650632179 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768755308843`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "c3fbe40e-646c-4e64-8adc-ea5395daa96c", "TestID" -> 
         "Catalog_20231007-7BZ2P8", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "f95c03b0-3470-4396-8188-36cb6aacf531", "Input" -> HoldForm[
           Apply[And, 
            Flatten[
             Map[If[
               KeyExistsQ[
                FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#], 
                "initialGuess"], {
                If[
                 KeyExistsQ[
                  FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#][
                  "initialGuess"], "Ewc"], 
                 VectorQ[
                  ReplaceAll["Ewc", 
                   
                   FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#]\
["initialGuess"]]], True], 
                If[
                 KeyExistsQ[
                  FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#][
                  "initialGuess"], "Epd"], 
                 ArrayQ[
                  ReplaceAll["Epd", 
                   
                   FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#]\
["initialGuess"]], 2], True]}, True]& , 
              Keys[
              FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000056`1.8987030248381942, "CPUTimeUsed" -> 0.00005599999999938987,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>]|>, "FailureResults" -> <||>, 
    "TestsNotEvaluatedKeys" -> {}, "TestsFailedWrongResultsKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {6412737068422983672, 8052332362736556990, 
     3777566771294487681, 1579223566526416252, 5835345572494652828, 
     6486028402145516924, 7343840939284968099, 1784831749261102921, 
     5918513033512485581, 5792401781569069420, 2250517517173189052, 
     5154368328190123103, 2649776620595046079, 6913060946401836047, 
     1960960900625560272, 4837370470650632179}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.905876822479735*^9, 3.905876875704623*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"e4396594-1207-4563-9185-d785fd402ca0"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.905876822479735*^9, 3.905876875708853*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"2a37bc9c-691e-4a18-ae4c-a1e2fb528abb"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.905876822479735*^9, 3.905876875709457*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"6f009d0b-2ea6-4227-aae7-be0ff49cf959"],

Cell[BoxData[{
 RowBox[{"tr", "=", 
  RowBox[{
  "TestReport", "[", 
   "\"\</Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expected", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
        ")"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.895362797280583*^9, 3.895362797460813*^9}, {
   3.895362883185739*^9, 3.8953628833320417`*^9}, {3.895362914081757*^9, 
   3.895362914242923*^9}, {3.895363069271865*^9, 3.895363069433126*^9}, {
   3.895364934971695*^9, 3.89536493511489*^9}, {3.8954190984559937`*^9, 
   3.895419107713436*^9}, {3.895431466385002*^9, 3.8954314730424356`*^9}, {
   3.901503471271722*^9, 3.901503477273381*^9}, {3.9056875299945927`*^9, 
   3.9056875357328043`*^9}, 3.905697553474082*^9, 3.905876631913967*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"1153a7e3-a4a9-44e1-a1d1-2c85ee2d32e0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: Shocks.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["15", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: Shocks.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["15", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["15", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0.0555379999999999999`3.719013974928701", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                   "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: Shocks.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     1764433617783076012 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768758709183`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "b9447afb-9fc3-4a49-ba39-490813f1cb96", "TestID" -> 
         "Shocks_20231007-7Y2T7Y", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "9ae48ed0-97bd-472c-aa44-1ac75b4db606", "Input" -> 
         HoldForm[Needs["FernandoDuarte`LongRunRisk`Model`Shocks`"]; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000028`1.5976730291742125, "CPUTimeUsed" -> 
         0.000029000000000056758`, "MemoryUsed" -> 2832, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 5258064412168254447 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876875871188*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "db629208-9aee-4a92-ad64-8a702e60f71f", "TestID" -> 
         "Shocks_20231007-V0Z0JM", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "86d56320-bccd-4062-b814-a28896884936", "Input" -> HoldForm[
           MemberQ[$ContextPath, "FernandoDuarte`LongRunRisk`Model`Shocks`"]],
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00002`1.451544993495975, "CPUTimeUsed" -> 0.000021000000000270802`,
          "MemoryUsed" -> 2736, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 5637892560928079061 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876875871406*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "e4dd2b2e-cbaf-4828-83a7-bfb97c8c4936", "TestID" -> 
         "Shocks_20231007-U78NUC", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "80509798-c471-44db-8951-1781ed6ab337", "Input" -> HoldForm[
           Not[Names["*rulesE"] === {}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.021474`4.482427946605642, "CPUTimeUsed" -> 
         0.021475000000000133`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 5687172716764804728 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876875893259*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "07b4b754-f0d4-4cd7-aabf-419c07a53c8f", "TestID" -> 
         "Shocks_20231007-LTX8WA", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "88fedc84-2a9a-469c-9f9f-4a80a668fb92", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[ReplaceAll[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
                 Model`Shocks`t], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 0, {
               Model`Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
              Table[ReplaceAll[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                 Model`Shocks`t, Model`Shocks`ii], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 0, {
               Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000211`2.474797453129687, "CPUTimeUsed" -> 0.00021200000000032304`,
          "MemoryUsed" -> 3696, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 9113408839664430910 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768758937883`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "cf4be13c-a028-4c05-b27f-390023a00948", "TestID" -> 
         "Shocks_20231007-84HPWC", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "bd4dcf52-64d2-45f9-96d0-308eff8b226c", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[
              ReplaceAll[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
                  Model`Shocks`t]^2, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 1, {
               Model`Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
              Table[
              ReplaceAll[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                  Model`Shocks`t, Model`Shocks`ii]^2, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 1, {
               Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.022098`4.494867967070551, "CPUTimeUsed" -> 0.02217799999999981, 
         "MemoryUsed" -> 3781280, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 734919844142289492 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768759162064`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "877adce4-b889-4b7f-beed-2f3d26862b22", "TestID" -> 
         "Shocks_20231007-1AQ24U", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "b999051a-99ac-4978-bb44-ac8302bcc843", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[
              ReplaceAll[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
                  Model`Shocks`t]^3, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 0, {
               Model`Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
              Table[
              ReplaceAll[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                  Model`Shocks`t, Model`Shocks`ii]^3, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 0, {
               Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.002922`3.6161952094302716, "CPUTimeUsed" -> 0.0029529999999993173`,
          "MemoryUsed" -> 3736, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7126296162574748734 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876875919412*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "abbc4c28-3623-4d2d-95dc-483ccda8d2df", "TestID" -> 
         "Shocks_20231007-13B46Z", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "087181d9-c04b-4288-9e59-b8f37344eea1", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[
              ReplaceAll[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
                  Model`Shocks`t]^4, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 3, {
               Model`Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
              Table[
              ReplaceAll[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                  Model`Shocks`t, Model`Shocks`ii]^4, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 3, {
               Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.002829`3.6021479452889844, "CPUTimeUsed" -> 0.0028639999999997556`,
          "MemoryUsed" -> 3736, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 2891331413106450629 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876875922533*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "f7a66b01-2e15-4377-b652-5e28674032bd", "TestID" -> 
         "Shocks_20231007-JAIJWX", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "9c7275ed-4b31-4c98-95a1-6954b0ed4f5d", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[0 === If[Model`Shocks`f === Model`Shocks`g, 0, 
                 ReplaceAll[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
                   Model`Shocks`t] 
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`g][
                   Model`Shocks`t], 
                  FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                  Model`Shocks`t]]], {
               Model`Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}, {
               Model`Shocks`g, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
              Table[
              0 === ReplaceAll[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                  Model`Shocks`t, Model`Shocks`ii] 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
                  Model`Shocks`t], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]], {
               Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}, {
               Model`Shocks`f, {
                "x", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.001586`3.3508181808135786, "CPUTimeUsed" -> 0.0015860000000000873`,
          "MemoryUsed" -> 5656, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 3483436457341517779 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768759243674`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "dc3b776b-0909-400f-b0c9-809a5f818227", "TestID" -> 
         "Shocks_20231007-RTEJ8P", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "95518941-4bfa-4bfb-b3fd-ebaa896008e0", "Input" -> 
         HoldForm[Map[StringDelete[#, 
              StringExpression[
               Alternatives["FernandoDuarte", "`"], 
               BlankSequence[], "`"]]& , 
             Table[
              ToString[
               ReplaceAll[
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                 Model`Shocks`t, Model`Shocks`ii] 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                 Model`Shocks`t], 
                FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                Model`Shocks`t]]], {
              Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]] === {
            "taugd[1]", "taugd[i]", "taugd[j]"}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000225`2.5026975159433564, "CPUTimeUsed" -> 
         0.00022400000000022402`, "MemoryUsed" -> 3536, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 5033473043376772072 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768759248633`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "d7c30427-2b28-43c8-8943-fd37378bfeff", "TestID" -> 
         "Shocks_20231007-AB2KMZ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "ab37da3b-ff74-4a15-9594-cdde170877c7", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[ReplaceAll[Model`Shocks`expr, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === Model`Shocks`expr, {Model`Shocks`expr, 
                Table[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
                 Model`Shocks`t + 1], {
                 Model`Shocks`f, {
                  "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
              Table[ReplaceAll[Model`Shocks`expr, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === Model`Shocks`expr, {Model`Shocks`expr, 
                Table[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps[
                  ToExpression[Model`Shocks`f]][Model`Shocks`t], {
                 Model`Shocks`f, {
                  "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
              Table[ReplaceAll[Model`Shocks`expr, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === Model`Shocks`expr, {
               Model`Shocks`expr, {
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                 Model`Shocks`t + 1, Model`Shocks`i], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`dd][
                 Model`Shocks`t, Model`Shocks`i]}}]}]]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000401`2.753659370452176, "CPUTimeUsed" -> 0.00040099999999965164`,
          "MemoryUsed" -> 6432, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 915300920081087698 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768759255104`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "d03b32c5-9e56-4c37-ad49-64b2b60e7581", "TestID" -> 
         "Shocks_20231007-GN2PEF", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "26956f6a-336c-4844-b03b-9e24ef9202dd", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[ReplaceAll[Model`Shocks`expr, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === Model`Shocks`expr, {Model`Shocks`expr, 
                Table[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps[
                 Model`Shocks`f], {
                 Model`Shocks`f, {
                  "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
              Table[ReplaceAll[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"], {
               Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000205`2.462268858887748, "CPUTimeUsed" -> 0.00020500000000023277`,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 8838831205038851960 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90587687592595*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "f668cbdb-751f-4547-ae89-9eb43c35b863", "TestID" -> 
         "Shocks_20231007-Y35BZB", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "4b51ea3a-0ea6-408b-b8ec-161fd0d74c29", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[ReplaceAll[Model`Shocks`expr, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === Model`Shocks`expr, {Model`Shocks`expr, 
                Table[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps[
                 Model`Shocks`f], {
                 Model`Shocks`f, {
                  "xx", "adc", "p", "rhobar", "ssg", "ssx", "sdc", "spi"}}]}], 
              Table[ReplaceAll[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["ddd"], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["ddd"], {
               Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000209`2.4706612839430475, "CPUTimeUsed" -> 0.0002090000000003478, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 120920125707645672 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90587687592642*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "75564554-e441-45ba-8fb7-e6cabc433f3e", "TestID" -> 
         "Shocks_20231007-DGPHWZ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "3bbddcf4-054c-484c-9f30-23d86809a0d2", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[ReplaceAll[Model`Shocks`expr, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === Model`Shocks`expr, {Model`Shocks`expr, 
                Table[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
                 Model`Shocks`tt], {
                 Model`Shocks`f, {
                  "xx", "adc", "p", "rhobar", "ssg", "ssx", "sdc", "spi"}}, {
                 Model`Shocks`tt, {
                  Model`Shocks`t + 1, Model`Shocks`t - 1, Model`Shocks`s, 
                   Model`Shocks`t + Model`Shocks`h}}]}], 
              Table[ReplaceAll[Model`Shocks`expr, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === Model`Shocks`expr, {Model`Shocks`expr, 
                Table[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                 Model`Shocks`tt, Model`Shocks`ii], {
                 Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}, {
                 Model`Shocks`tt, {
                  Model`Shocks`t + 1, Model`Shocks`t - 1, Model`Shocks`s, 
                   Model`Shocks`t + Model`Shocks`h}}]}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000286`2.606881030961037, "CPUTimeUsed" -> 0.00028600000000000847`,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7705255476431305035 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768759269323`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "b6f99826-3594-4fd4-9860-64433366e1db", "TestID" -> 
         "Shocks_20231007-GZIC0T", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "3f1faf3f-3242-4510-9aa0-b9099643f029", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[ReplaceAll[
                 NewContext`eps[Model`Shocks`f][Model`Shocks`t], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 0, {
               Model`Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
              Table[ReplaceAll[
                 NewContext`eps["dd"][Model`Shocks`t, Model`Shocks`ii], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 0, {
               Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000176`2.3960276656461437, "CPUTimeUsed" -> 0.0001770000000003158, 
         "MemoryUsed" -> 3616, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4762761509233040292 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876875927331*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "0cd22169-bb2c-418d-93fc-baf8880dd1b2", "TestID" -> 
         "Shocks_20231007-JPYKSE", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "576cb825-0862-4b8c-8fd7-c56195a78786", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[
              ReplaceAll[
                FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps[
                  Model`Shocks`f][Model`Shocks`t]^2, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 1, {
               Model`Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
              Table[
              ReplaceAll[
                FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps["dd"][
                  Model`Shocks`t, Model`Shocks`ii]^2, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 1, {
               Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.002868`3.6080941448277564, "CPUTimeUsed" -> 0.0029009999999995983`,
          "MemoryUsed" -> 3736, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>]|>, "FailureResults" -> <||>, 
    "TestsNotEvaluatedKeys" -> {}, "TestsFailedWrongResultsKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {1764433617783076012, 5258064412168254447, 
     5637892560928079061, 5687172716764804728, 9113408839664430910, 
     734919844142289492, 7126296162574748734, 2891331413106450629, 
     3483436457341517779, 5033473043376772072, 915300920081087698, 
     8838831205038851960, 120920125707645672, 7705255476431305035, 
     4762761509233040292}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.905876822585781*^9, 3.9058768759375887`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"3ed2fcad-7777-45ec-a5f8-7f2fc3664d92"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.905876822585781*^9, 3.9058768759406843`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"753e4419-9c8a-4d2c-ba16-2d1d239dcf0d"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.905876822585781*^9, 3.905876875941284*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"d9318813-72e8-426d-92bb-5b3d97386b5c"],

Cell[BoxData[{
 RowBox[{"tr", "=", 
  RowBox[{
  "TestReport", "[", 
   "\"\</Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expected", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
        ")"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.895362797280583*^9, 3.895362797460813*^9}, {
   3.895362883185739*^9, 3.8953628833320417`*^9}, {3.895362914081757*^9, 
   3.895362914242923*^9}, {3.895363069271865*^9, 3.895363069433126*^9}, {
   3.895364934971695*^9, 3.89536493511489*^9}, {3.8954190984559937`*^9, 
   3.895419107713436*^9}, {3.895431466385002*^9, 3.8954314730424356`*^9}, {
   3.901503471271722*^9, 3.901503477273381*^9}, {3.9056875299945927`*^9, 
   3.9056875374263973`*^9}, 3.905698900385931*^9, 3.9058766319140873`*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"07d47c72-3650-48cf-bae5-d9151c59339e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: ExogenousEq.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["7", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: ExogenousEq.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["7", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["7", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0.0410439999999999999`3.9186666367556904", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                   "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: ExogenousEq.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     1528044329417392441 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768759525223`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "f3287e61-3c7a-4fe9-95e2-e35517803887", "TestID" -> 
         "ExogenousEq_20231007-NIGA55", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "EvaluationID" -> 
         "c19879f9-fcdf-4e4f-862f-2ef710f04705", "Input" -> 
         HoldForm[
          Needs["FernandoDuarte`LongRunRisk`Model`ExogenousEq`"]; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000032`1.6556649761518993, "CPUTimeUsed" -> 0.000032000000000032, 
         "MemoryUsed" -> 2832, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4851097352369736769 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768759528103`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "f9453806-8cf1-4fb3-942d-d43b73bb2ec9", "TestID" -> 
         "ExogenousEq_20231007-E0I1JF", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "EvaluationID" -> 
         "98c07086-52fa-456d-97ee-a32f9d77a596", "Input" -> HoldForm[
           Not[Names["*xeq"] === {}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.022887`4.510103867447028, "CPUTimeUsed" -> 
         0.022816999999999865`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 2180167300455239238 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876875976222*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "008de8e8-902b-4f65-8d7c-530f321462d5", "TestID" -> 
         "ExogenousEq_20231007-7R20E8", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "EvaluationID" -> 
         "2162fe91-ea99-41df-b751-b411614ecf4b", "Input" -> HoldForm[
           Apply[And, {
             MemberQ[
              DeleteDuplicates[
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[
                 Model`ExogenousEq`t], PatternTest[
                   Pattern[Model`ExogenousEq`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "x"]& ][
                   BlankNullSequence[]] :> Model`ExogenousEq`var, Infinity]]],
               "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
             MemberQ[
              DeleteDuplicates[
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`pieq[
                 Model`ExogenousEq`t], PatternTest[
                   Pattern[Model`ExogenousEq`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "pi"]& ][
                   BlankNullSequence[]] :> Model`ExogenousEq`var, Infinity]]],
               "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
             MemberQ[
              DeleteDuplicates[
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`pibareq[
                 Model`ExogenousEq`t], PatternTest[
                   Pattern[Model`ExogenousEq`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "pibar"]& ][
                   BlankNullSequence[]] :> Model`ExogenousEq`var, Infinity]]],
               "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
             MemberQ[
              DeleteDuplicates[
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`sgeq[
                 Model`ExogenousEq`t], PatternTest[
                   Pattern[Model`ExogenousEq`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "sg"]& ][
                   BlankNullSequence[]] :> Model`ExogenousEq`var, Infinity]]],
               "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
             MemberQ[
              DeleteDuplicates[
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`sxeq[
                 Model`ExogenousEq`t], PatternTest[
                   Pattern[Model`ExogenousEq`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "sx"]& ][
                   BlankNullSequence[]] :> Model`ExogenousEq`var, Infinity]]],
               "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
             MemberQ[
              DeleteDuplicates[
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`sceq[
                 Model`ExogenousEq`t], PatternTest[
                   Pattern[Model`ExogenousEq`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "sc"]& ][
                   BlankNullSequence[]] :> Model`ExogenousEq`var, Infinity]]],
               "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
             MemberQ[
              DeleteDuplicates[
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`speq[
                 Model`ExogenousEq`t], PatternTest[
                   Pattern[Model`ExogenousEq`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "sp"]& ][
                   BlankNullSequence[]] :> Model`ExogenousEq`var, Infinity]]],
               "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
             Not[{} === Cases[
                Map[Symbol, 
                 Names[
                 "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*"]], 
                PatternTest[
                  Pattern[Model`ExogenousEq`var, 
                   Blank[Symbol]], MatchQ[
                   SymbolName[#], "dc"]& ] :> Model`ExogenousEq`var, 
                Infinity]], 
             Not[{} === Cases[
                Map[Symbol, 
                 Names[
                 "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*"]], 
                PatternTest[
                  Pattern[Model`ExogenousEq`var, 
                   Blank[Symbol]], MatchQ[
                   SymbolName[#], "dd"]& ] :> Model`ExogenousEq`var, 
                Infinity]], 
             MemberQ[
              DeleteDuplicates[
               Map[Context, 
                Cases[
                 Map[Symbol, 
                  Names[
                  "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*"]], 
                 PatternTest[
                   Pattern[Model`ExogenousEq`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "dc"]& ] :> Model`ExogenousEq`var, 
                 Infinity]]], 
              "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
             MemberQ[
              DeleteDuplicates[
               Map[Context, 
                Cases[
                 Map[Symbol, 
                  Names[
                  "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*"]], 
                 PatternTest[
                   Pattern[Model`ExogenousEq`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "dd"]& ] :> Model`ExogenousEq`var, 
                 Infinity]]], 
              "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.016725`4.373881124271854, "CPUTimeUsed" -> 0.016728000000000076`, 
         "MemoryUsed" -> 5248, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7811492566956658311 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90587687599331*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "7ba00e7c-3215-426b-b3b3-fbb6ade9d83e", "TestID" -> 
         "ExogenousEq_20231007-NBIB7Y", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "EvaluationID" -> 
         "0e57f643-ee68-4219-add3-6586fb516242", "Input" -> HoldForm[
           Apply[And, 
            
            Map[# === 
             "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
             Map[Context, 
              Cases[
               Map[#[Model`ExogenousEq`t]& , 
                Map[
                Symbol, 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]]\
, PatternTest[
                 Pattern[Model`ExogenousEq`var, 
                  Blank[Symbol]], MemberQ[
                  Map[
                  StringDrop[#, -2]& , 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                  SymbolName[#]]& ][
                 BlankSequence[]] :> Model`ExogenousEq`var, Infinity]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000811`3.05953585204315, "CPUTimeUsed" -> 0.0008119999999998129, 
         "MemoryUsed" -> 5200, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 6019127652674834418 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876875994378*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "d28dc906-1123-4c34-a8bb-7bb16e266eb5", "TestID" -> 
         "ExogenousEq_20231007-YFUEVW", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "EvaluationID" -> 
         "8be167bf-7bb5-4276-b7de-36085ba24a2c", "Input" -> HoldForm[
           Apply[And, 
            Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
             Map[Context, 
              Cases[
               Map[#[Model`ExogenousEq`t]& , 
                Map[
                Symbol, 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]]\
, PatternTest[
                 Pattern[Model`ExogenousEq`var, 
                  Blank[Symbol]], MatchQ[
                  SymbolName[#], "eps"]& ][
                 BlankSequence[]][
                 BlankSequence[]] :> Model`ExogenousEq`var, Infinity]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000169`2.378401702445667, "CPUTimeUsed" -> 0.00016899999999964166`,
          "MemoryUsed" -> 3048, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4670779920912594127 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768759947743`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "5fa9bba7-39d3-4a61-96ed-cecc547f9225", "TestID" -> 
         "ExogenousEq_20231007-TNAM0Y", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "EvaluationID" -> 
         "875704a5-18f7-4a21-a703-5e18198f685f", "Input" -> HoldForm[
           Apply[And, 
            Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
             Map[Context, 
              Cases[
               Map[#[Model`ExogenousEq`t]& , 
                Map[
                Symbol, 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]]\
, PatternTest[
                 Pattern[Model`ExogenousEq`var, 
                  Blank[Symbol]], MemberQ[
                 FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                  SymbolName[#]]& ] :> Model`ExogenousEq`var, Infinity]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000337`2.6781448987033327, "CPUTimeUsed" -> 0.0003370000000000317, 
         "MemoryUsed" -> 2664, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 8387503198936879102 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768759953394`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "f75bd9d9-3152-40d3-82ca-9afca6261fd3", "TestID" -> 
         "ExogenousEq_20231007-924CFO", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "EvaluationID" -> 
         "574ae37b-fc44-4274-bc1e-f15005745ee7", "Input" -> HoldForm[
           Apply[And, {
             FreeQ[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[
              Model`ExogenousEq`t], foo`t], 
             Not[
              FreeQ[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[
               Model`ExogenousEq`t], Model`ExogenousEq`t]], 
             FreeQ[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[foo`t], 
              Model`ExogenousEq`t], 
             Not[
              FreeQ[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[foo`t], 
               foo`t]], 
             Not[
             foo`xeq[Model`ExogenousEq`t] === 
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[
               Model`ExogenousEq`t]], 
             Not[
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[
               Model`ExogenousEq`t] === 
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[foo`t]]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000083`2.069593090208068, "CPUTimeUsed" -> 0.00008400000000019503, 
         "MemoryUsed" -> 2800, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>]|>, "FailureResults" -> <||>, 
    "TestsNotEvaluatedKeys" -> {}, "TestsFailedWrongResultsKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {1528044329417392441, 4851097352369736769, 
     2180167300455239238, 7811492566956658311, 6019127652674834418, 
     4670779920912594127, 8387503198936879102}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.9058768226770287`*^9, 3.905876876001979*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"62c13107-6d79-4e28-aaaf-7c9eaad7277d"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.9058768226770287`*^9, 3.90587687600518*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"32ff1fb0-6167-475c-a888-aa825ade7201"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.9058768226770287`*^9, 3.905876876005742*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"a48a3b6f-f9d7-45ec-81ea-9ad319415fb2"],

Cell[BoxData[{
 RowBox[{"tr", "=", 
  RowBox[{
  "TestReport", "[", 
   "\"\</Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expected", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
        ")"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.895362797280583*^9, 3.895362797460813*^9}, {
   3.895362883185739*^9, 3.8953628833320417`*^9}, {3.895362914081757*^9, 
   3.895362914242923*^9}, {3.895363069271865*^9, 3.895363069433126*^9}, {
   3.895364934971695*^9, 3.89536493511489*^9}, {3.8954190984559937`*^9, 
   3.895419107713436*^9}, {3.895431466385002*^9, 3.8954314730424356`*^9}, {
   3.901503471271722*^9, 3.901503477273381*^9}, {3.9056875299945927`*^9, 
   3.9056875374263973`*^9}, 3.905698903142271*^9, 3.90587663191434*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"a92fbc3b-b353-4e75-8ee9-b61e11404d6b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: EndogenousEq.wlt\"", "SummaryItem"]}],
                "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["10", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: EndogenousEq.wlt\"", "SummaryItem"]}],
                "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["10", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["10", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0.027014`3.582103893359989", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: EndogenousEq.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     14560831812152056 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876876016652*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "ef58c5ea-6865-492b-b47c-9e0394f1cf53", "TestID" -> 
         "EndogenousEq_20231007-Q9SEK1", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "EvaluationID" -> 
         "6fb4178c-8882-499b-b048-8cf80133df2b", "Input" -> 
         HoldForm[
          Needs["FernandoDuarte`LongRunRisk`Model`EndogenousEq`"]; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00003`1.6276362525516566, "CPUTimeUsed" -> 
         0.000030999999999448136`, "MemoryUsed" -> 2832, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 1170445967930709807 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768760169373`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "8db6e270-448c-4334-9adb-f7a9c1a28353", "TestID" -> 
         "EndogenousEq_20231007-XU08RC", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "EvaluationID" -> 
         "7b37e181-0fb8-44a1-ac0c-fad1ac2bca93", "Input" -> HoldForm[
           Not[Names["*pdeq"] === {}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.023809`4.527256152850391, "CPUTimeUsed" -> 
         0.023759000000000086`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 110491053210733789 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876876041158*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "8aa1e06f-396a-469b-8b5b-4ed28d6f4db4", "TestID" -> 
         "EndogenousEq_20231007-KPJDHK", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "EvaluationID" -> 
         "200ec847-6f2a-404a-acca-5bbf7f7f46d8", "Input" -> HoldForm[
           Apply[And, 
            
            Map[# === 
             "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
             Map[Context, 
              Cases[
               Map[#[Model`EndogenousEq`t]& , 
                Map[
                Symbol, 
                 FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars]], PatternTest[
                 Pattern[Model`EndogenousEq`var, 
                  Blank[Symbol]], MemberQ[
                  Map[
                  StringDrop[#, -2]& , 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                  SymbolName[#]]& ][
                 BlankSequence[]] :> Model`EndogenousEq`var, Infinity]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000536`2.879679787524764, "CPUTimeUsed" -> 0.0005370000000004538, 
         "MemoryUsed" -> 8048, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 8018661913536331952 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768760419784`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "c69d732d-1c48-4b21-b454-dd87cb9cb6d7", "TestID" -> 
         "EndogenousEq_20231007-LIXVR2", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "EvaluationID" -> 
         "e58535bb-f311-49f8-889b-c538a4660354", "Input" -> HoldForm[
           Apply[And, 
            Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
             Map[Context, 
              Cases[
               Map[#[Model`EndogenousEq`t]& , 
                Map[
                Symbol, 
                 FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars]], PatternTest[
                 Pattern[Model`EndogenousEq`var, 
                  Blank[Symbol]], MatchQ[
                  SymbolName[#], "eps"]& ][
                 BlankSequence[]][
                 BlankSequence[]] :> Model`EndogenousEq`var, Infinity]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000147`2.3178323325801697, "CPUTimeUsed" -> 
         0.00014899999999951064`, "MemoryUsed" -> 3464, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 2806178800762596501 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876876042356*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "36f59a32-434d-4085-af83-9a05f4b1068f", "TestID" -> 
         "EndogenousEq_20231007-FQ06I5", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "EvaluationID" -> 
         "ac189620-fed8-43a4-bc9c-811428a8baba", "Input" -> HoldForm[
           Apply[And, 
            Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
             Map[Context, 
              Cases[
               Map[#[Model`EndogenousEq`t]& , 
                Map[
                Symbol, 
                 FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars]], PatternTest[
                 Pattern[Model`EndogenousEq`var, 
                  Blank[Symbol]], MemberQ[
                 FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                  SymbolName[#]]& ] :> Model`EndogenousEq`var, Infinity]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000258`2.5621347037952242, "CPUTimeUsed" -> 
         0.00025900000000023127`, "MemoryUsed" -> 3752, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 4968890547337963177 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768760428433`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "ffa89ce2-eda5-40de-95ff-c0a43cff61f7", "TestID" -> 
         "EndogenousEq_20231007-AC6YZU", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "EvaluationID" -> 
         "e9164e72-616f-457e-be07-319a12ccc94b", "Input" -> HoldForm[
           Apply[And, 
            
            Map[# === 
             "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"& , 
             Map[Context, 
              Cases[
               Map[#[Model`EndogenousEq`t]& , 
                Map[
                Symbol, 
                 FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars]], PatternTest[
                 Pattern[Model`EndogenousEq`var, 
                  Blank[Symbol]], MemberQ[
                  Map[
                  StringDrop[#, -2]& , 
                   FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                  SymbolName[#]]& ][
                 BlankSequence[]] :> Model`EndogenousEq`var, Infinity]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000899`3.104274689565223, "CPUTimeUsed" -> 0.0008999999999996788, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7216561524393382704 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876876043988*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "ad1108b0-325f-4960-aafb-f6c985f0f730", "TestID" -> 
         "EndogenousEq_20231007-A63EXY", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "EvaluationID" -> 
         "327a7998-4d79-44e6-b186-d8f1dbb0b710", "Input" -> HoldForm[
           Apply[And, {
             FreeQ[
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
              Model`EndogenousEq`t, Model`EndogenousEq`m], foo`t], 
             Not[
              FreeQ[
               FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
               Model`EndogenousEq`t, Model`EndogenousEq`m], 
               Model`EndogenousEq`t]], 
             FreeQ[
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
              foo`t, Model`EndogenousEq`m], Model`EndogenousEq`t], 
             Not[
              FreeQ[
               FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
               foo`t, Model`EndogenousEq`m], foo`t]], 
             Not[
             foo`bondyieldeq[Model`EndogenousEq`t, Model`EndogenousEq`m] === 
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
               Model`EndogenousEq`t, Model`EndogenousEq`m]], 
             Not[
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
               Model`EndogenousEq`t, Model`EndogenousEq`m] === 
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
               foo`t, Model`EndogenousEq`m]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000034`1.6819939148742489, "CPUTimeUsed" -> 0.00003500000000000725,
          "MemoryUsed" -> 2664, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 1196152411795104123 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90587687604425*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "278e1037-dfd6-4b44-a18b-bbeba911026e", "TestID" -> 
         "EndogenousEq_20231007-1XJ1EX", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "EvaluationID" -> 
         "b9d52451-8409-455e-8c0d-049112d40836", "Input" -> HoldForm[
           Apply[And, {
             FreeQ[
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
              Model`EndogenousEq`t, Model`EndogenousEq`m], foo`m], 
             Not[
              FreeQ[
               FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
               Model`EndogenousEq`t, Model`EndogenousEq`m], 
               Model`EndogenousEq`m]], 
             FreeQ[
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
              Model`EndogenousEq`t, foo`m], Model`EndogenousEq`m], 
             Not[
              FreeQ[
               FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
               Model`EndogenousEq`t, foo`m], foo`m]], 
             Not[
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
               Model`EndogenousEq`t, Model`EndogenousEq`m] === 
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
               Model`EndogenousEq`t, foo`m]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000031`1.6418766916662664, "CPUTimeUsed" -> 
         0.000029999999999752447`, "MemoryUsed" -> 2800, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 412363642430351881 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876876044513*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "db0ebd99-13d4-4d82-92f1-c06b0da58132", "TestID" -> 
         "EndogenousEq_20231007-4YPA5Y", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "EvaluationID" -> 
         "761c9a2d-1b62-4a21-a9d6-b099eae307cc", "Input" -> HoldForm[
           Apply[
           And, {FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondfweq[
              Model`EndogenousEq`t, Model`EndogenousEq`m] === 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondfweq[
              Model`EndogenousEq`t, Model`EndogenousEq`m, 1], 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondreteq[
              Model`EndogenousEq`t, Model`EndogenousEq`m] === 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondreteq[
              Model`EndogenousEq`t, Model`EndogenousEq`m, 1], 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondfwspreadeq[
              Model`EndogenousEq`t, Model`EndogenousEq`m] === 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondfwspreadeq[
              Model`EndogenousEq`t, Model`EndogenousEq`m, 1], 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondexcreteq[
              Model`EndogenousEq`t, Model`EndogenousEq`m] === 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondexcreteq[
              Model`EndogenousEq`t, Model`EndogenousEq`m, 1]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000034`1.6819939148742489, "CPUTimeUsed" -> 0.00003299999999972769,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 5432929916612429149 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876876044998*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "7793a694-0c68-4de7-b579-14556a40fbab", "TestID" -> 
         "EndogenousEq_20231007-9MSXSQ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "EvaluationID" -> 
         "68a75c3e-31b5-4bae-849f-90fd364acceb", "Input" -> 
         HoldForm[
          Model`EndogenousEq`coefwc = 
            FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc; 
           Model`EndogenousEq`coefpd = 
            FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd; 
           Model`EndogenousEq`coefb = 
            FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb; 
           Model`EndogenousEq`coefnb = 
            FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb; 
           Model`EndogenousEq`hpd = Head[Model`EndogenousEq`coefpd]; 
           Model`EndogenousEq`hb = Head[Model`EndogenousEq`coefb]; 
           Model`EndogenousEq`hnb = Head[Model`EndogenousEq`coefnb]; 
           Model`EndogenousEq`ch = Flatten[{{
                Model`EndogenousEq`coefwc[0], 
                N[
                 Model`EndogenousEq`coefwc[0]], 
                N[
                 Model`EndogenousEq`coefwc[0]], 
                Model`EndogenousEq`coefwc[0.], 
                N[
                 Model`EndogenousEq`coefwc[0.]], 
                N[
                 Model`EndogenousEq`coefwc[0.]]}, 
               Table[{
                 Model`EndogenousEq`c[0], 
                 N[
                  Model`EndogenousEq`c[0]], 
                 N[
                  Model`EndogenousEq`c[0]], 
                 Model`EndogenousEq`c[0.], 
                 N[
                  Model`EndogenousEq`c[0.]], 
                 N[
                  Model`EndogenousEq`c[0.]]}, {
                Model`EndogenousEq`c, {
                 Model`EndogenousEq`coefpd, Model`EndogenousEq`coefb, 
                  Model`EndogenousEq`coefnb}}], 
               Table[
                ReplaceAll[
                 ReplaceAll[{
                   Model`EndogenousEq`h[1][0], 
                   N[
                    Model`EndogenousEq`h[1][0]], 
                   N[
                    Model`EndogenousEq`h[1][0]], 
                   Model`EndogenousEq`h[1][0.], 
                   N[
                    Model`EndogenousEq`h[1][0.]], 
                   N[
                    Model`EndogenousEq`h[1][0.]], 
                   Model`EndogenousEq`h[0][1], 
                   N[
                    Model`EndogenousEq`h[0][1]], 
                   N[
                    Model`EndogenousEq`h[0][1]], 
                   Model`EndogenousEq`h[0.][1], 
                   N[
                    Model`EndogenousEq`h[0.][1]], 
                   N[
                    Model`EndogenousEq`h[0.][1]], 
                   Model`EndogenousEq`h[1.][0], 
                   N[
                    Model`EndogenousEq`h[1.][0]], 
                   N[
                    Model`EndogenousEq`h[1.][0]], 
                   Model`EndogenousEq`h[1.][0.], 
                   N[
                    Model`EndogenousEq`h[1.][0.]], 
                   N[
                    Model`EndogenousEq`h[1.][0.]], 
                   Model`EndogenousEq`h[0][1.], 
                   N[
                    Model`EndogenousEq`h[0][1.]], 
                   N[
                    Model`EndogenousEq`h[0]][1.], 
                   Model`EndogenousEq`h[0.][1.], 
                   N[
                    Model`EndogenousEq`h[0.][1.]], 
                   N[
                    Model`EndogenousEq`h[0.][1.]], 
                   Model`EndogenousEq`h[0][Model`EndogenousEq`j], 
                   N[
                    Model`EndogenousEq`h[0][Model`EndogenousEq`j]], 
                   N[
                    Model`EndogenousEq`h[0][Model`EndogenousEq`j]], 
                   Model`EndogenousEq`h[0.][Model`EndogenousEq`j], 
                   N[
                    Model`EndogenousEq`h[0.][Model`EndogenousEq`j]], 
                   N[
                    Model`EndogenousEq`h[0.][Model`EndogenousEq`j]], 
                   Model`EndogenousEq`h[Model`EndogenousEq`j][0], 
                   N[
                    Model`EndogenousEq`h[Model`EndogenousEq`j][0]], 
                   N[
                    Model`EndogenousEq`h[Model`EndogenousEq`j][0]], 
                   Model`EndogenousEq`h[Model`EndogenousEq`j][0.], 
                   N[
                    Model`EndogenousEq`h[Model`EndogenousEq`j][0.]], 
                   N[
                    Model`EndogenousEq`h[Model`EndogenousEq`j][0.]], 
                   Model`EndogenousEq`h[0][Model`EndogenousEq`jj], 
                   N[
                    Model`EndogenousEq`h[0][Model`EndogenousEq`jj]], 
                   N[
                    Model`EndogenousEq`h[0][Model`EndogenousEq`jj]], 
                   Model`EndogenousEq`h[0.][Model`EndogenousEq`jj], 
                   N[
                    Model`EndogenousEq`h[0.][Model`EndogenousEq`jj]], 
                   N[
                    Model`EndogenousEq`h[0.][Model`EndogenousEq`jj]], 
                   Model`EndogenousEq`h[Model`EndogenousEq`jj][0], 
                   N[
                    Model`EndogenousEq`h[Model`EndogenousEq`jj][0]], 
                   N[
                    Model`EndogenousEq`h[Model`EndogenousEq`jj][0]], 
                   Model`EndogenousEq`h[Model`EndogenousEq`jj][0.], 
                   N[
                    Model`EndogenousEq`h[Model`EndogenousEq`jj][0.]], 
                   N[
                    Model`EndogenousEq`h[Model`EndogenousEq`jj][0.]], 
                   Model`EndogenousEq`h[Model`EndogenousEq`jj][
                   Model`EndogenousEq`kk], 
                   N[
                    Model`EndogenousEq`h[Model`EndogenousEq`jj][
                    Model`EndogenousEq`kk]], 
                   N[
                    Model`EndogenousEq`h[Model`EndogenousEq`jj][
                    Model`EndogenousEq`kk]], 
                   N[
                    Table[{
                    Model`EndogenousEq`h[Model`EndogenousEq`ii][
                    Model`EndogenousEq`qq], 
                    N[
                    Model`EndogenousEq`h[Model`EndogenousEq`ii][
                    Model`EndogenousEq`qq]], 
                    N[
                    Model`EndogenousEq`h[Model`EndogenousEq`ii][
                    Model`EndogenousEq`qq]]}, {Model`EndogenousEq`ii, 0, 1}, {
                    Model`EndogenousEq`qq, 2, 3}]]}, Model`EndogenousEq`jj -> 
                  2], Model`EndogenousEq`kk -> 3], {Model`EndogenousEq`h, {
                  Head[Model`EndogenousEq`coefpd], 
                  Head[Model`EndogenousEq`coefb], 
                  Head[Model`EndogenousEq`coefnb]}}]}]; Apply[And, 
             Flatten[{{
                Map[Not, 
                 Map[InexactNumberQ, 
                  Select[
                   Flatten[
                    Cases[Model`EndogenousEq`ch, Pattern[Model`EndogenousEq`x, 
                    Blank[]][
                    Pattern[Model`EndogenousEq`i, 
                    Blank[]]] :> Model`EndogenousEq`i]], NumberQ]]], 
                Map[Not, 
                 Map[InexactNumberQ, 
                  Select[
                   Flatten[
                    Cases[Model`EndogenousEq`ch, Pattern[Model`EndogenousEq`x, 
                    Blank[]][
                    Pattern[Model`EndogenousEq`i, 
                    Blank[]]][
                    Pattern[Model`EndogenousEq`j, 
                    Blank[]]] :> {
                    Model`EndogenousEq`i, Model`EndogenousEq`j}]], 
                   NumberQ]]]}}]]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.001236`3.242533468584791, "CPUTimeUsed" -> 
         0.0012359999999995708`, "MemoryUsed" -> 58000, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>]|>, 
    "FailureResults" -> <||>, "TestsNotEvaluatedKeys" -> {}, 
    "TestsFailedWrongResultsKeys" -> {}, "TestsFailedWithMessagesKeys" -> {}, 
    "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {14560831812152056, 1170445967930709807, 
     110491053210733789, 8018661913536331952, 2806178800762596501, 
     4968890547337963177, 7216561524393382704, 1196152411795104123, 
     412363642430351881, 5432929916612429149}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.905876822740081*^9, 3.905876876053144*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"f0c9d610-c417-41f0-a800-8a8a5dfcb2ca"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.905876822740081*^9, 3.905876876056651*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"74a50bbe-7cfb-49f6-a9cd-f8466ec77257"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.905876822740081*^9, 3.905876876057253*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"32d7b3f7-bfbe-4a5b-8582-6afff05193ac"],

Cell[BoxData[{
 RowBox[{"tr", "=", 
  RowBox[{
  "TestReport", "[", 
   "\"\</Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt\>\"\
", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expected", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
        ")"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.895362797280583*^9, 3.895362797460813*^9}, {
   3.895362883185739*^9, 3.8953628833320417`*^9}, {3.895362914081757*^9, 
   3.895362914242923*^9}, {3.895363069271865*^9, 3.895363069433126*^9}, {
   3.895364934971695*^9, 3.89536493511489*^9}, {3.8954190984559937`*^9, 
   3.895419107713436*^9}, {3.895431466385002*^9, 3.8954314730424356`*^9}, {
   3.901503471271722*^9, 3.901503477273381*^9}, {3.901549113211192*^9, 
   3.901549114083599*^9}, {3.905687541215014*^9, 3.9056875415057697`*^9}, 
   3.905699453862289*^9, 3.9058766319146214`*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"16b4a727-0558-4183-a2f8-e2e1a7b3a611"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: ComputeConditionalExpectations.wlt\"", 
                  "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["12", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: ComputeConditionalExpectations.wlt\"", 
                  "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["12", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["12", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "5.802324`5.834935727799346", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: ComputeConditionalExpectations.wlt", "Aborted" -> 
    False, "TestResults" -> <|
     2852883574650700766 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768760746202`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "8f585e62-731f-4b29-a2f4-eca0c5517dd5", "TestID" -> 
         "ComputeConditionalExpectations_20231009-D0TBST", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt", 
         "EvaluationID" -> "3ff4a96f-f408-48db-aa92-a72cb8046e40", "Input" -> 
         HoldForm[
          Needs["FernandoDuarte`LongRunRisk`"]; 
           Needs["PacletizedResourceFunctions`"]; True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         4.207401`6.774528903665943, "CPUTimeUsed" -> 2.8197560000000004`, 
         "MemoryUsed" -> 147045072, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 2772509242916083883 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768802825184`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "4d99ea3b-d122-46c3-8583-d7020d3e48be", "TestID" -> 
         "ComputeConditionalExpectations_20231009-JWMJDA", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt", 
         "EvaluationID" -> "57b07b85-d3e6-46dd-9c0f-4f0b8278fb8f", "Input" -> 
         HoldForm[
          Needs["FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`"]; $ContextAliases["ce`"] = 
            "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`"; True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00735`4.0168023369161885, "CPUTimeUsed" -> 0.0073539999999994166`, 
         "MemoryUsed" -> 3392, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 2678642691162782523 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876880290317*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "98484bfe-4f64-4c4e-bc47-1385360a3617", "TestID" -> 
         "ComputeConditionalExpectations_20231009-80KMEI", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt", 
         "EvaluationID" -> "38853173-98fc-40d3-9cce-7983ba931b3d", "Input" -> 
         HoldForm[
           Apply[And, {
             
             MemberQ[$ContextPath, 
              "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`"]}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000026`1.5654883458028115, "CPUTimeUsed" -> 
         0.000026999999999333113`, "MemoryUsed" -> 2760, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 1723486883450208463 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876880290665*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "499f4a2b-0c2e-4193-9245-aff2162caeae", "TestID" -> 
         "ComputeConditionalExpectations_20231009-1QW6RG", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt", 
         "EvaluationID" -> "2faf6168-e876-4474-8c51-f7516fe5c4cc", "Input" -> 
         HoldForm[
           Apply[And, {
             Not[Names["*ev"] === {}], 
             Not[Names["ce`lagStateVarst"] === {}]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.026585`4.575151662482192, "CPUTimeUsed" -> 0.026613000000001108`, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 1138892140118358871 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768803175993`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "f8aa7122-4a60-4955-8712-fca894f92ebb", "TestID" -> 
         "ComputeConditionalExpectations_20231009-2MME05", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt", 
         "EvaluationID" -> "18c4c5c7-34bc-4488-aec6-71dbf767ceb2", "Input" -> 
         HoldForm[Get[
             Get[
              FileNameJoin[{"FernandoDuarte/LongRunRisk", "Models.wl"}]]]; 
           ComputationalEngine`Cond`msp = FernandoDuarte`LongRunRisk`Models; 
           ComputationalEngine`Cond`modBY = 
            ComputationalEngine`Cond`msp["BY"]; 
           ComputationalEngine`Cond`modNRC = 
            ComputationalEngine`Cond`msp["NRC"]; True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         1.01832`6.158399271310215, "CPUTimeUsed" -> 1.0348219999999992`, 
         "MemoryUsed" -> -5392, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 3171213925180987879 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768813363624`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a70daf6e-0916-4909-b53d-93e4838aae33", "TestID" -> 
         "ComputeConditionalExpectations_20231009-WLC7ZF", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt", 
         "EvaluationID" -> "e5d87266-a35a-460e-80dd-22cf326b92fa", "Input" -> 
         HoldForm[
          FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
            FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1] 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
             ComputationalEngine`Cond`modNRC] === 
           FernandoDuarte`LongRunRisk`Model`Parameters`phip], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.004154`3.768981490031074, "CPUTimeUsed" -> 0.004229000000000482, 
         "MemoryUsed" -> 92424, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 6073057104067227268 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768813426104`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "64c30b5e-dfef-4f73-a92e-d2463476d793", "TestID" -> 
         "ComputeConditionalExpectations_20231009-9YTG4G", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt", 
         "EvaluationID" -> "50b995d5-66fd-4751-a3dd-0eb24ed27956", "Input" -> 
         HoldForm[
           Apply[And, {0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dd[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1,
                     FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i] 
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC]], (
                 FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + 
                  FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                   FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t])) \
(FernandoDuarte`LongRunRisk`Model`Parameters`mud[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i] + (
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i] (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`xid[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i] 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1]) FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]))]\
], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dd[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1,
                     FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i] 
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC]], (
                  FernandoDuarte`LongRunRisk`Model`Parameters`mud[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i] + (
                   FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i] (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`xid[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i] 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1]) FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t])) \
(FernandoDuarte`LongRunRisk`Model`Parameters`muc + (
                   FernandoDuarte`LongRunRisk`Model`Parameters`rhocp (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`xic 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1]) FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t])) + 
                FernandoDuarte`LongRunRisk`Model`Parameters`phic 
                 FernandoDuarte`LongRunRisk`Model`Parameters`phidc[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i]]], 
             0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[(
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    3] FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
dc[FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 2]) 
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC]], (
                 FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
                 FernandoDuarte`LongRunRisk`Model`Parameters`rhog^3 (
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                   FernandoDuarte`LongRunRisk`Model`Parameters`Esg)) ((
                   FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + 
                    FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t])) \
(FernandoDuarte`LongRunRisk`Model`Parameters`muc + ((
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhocp 
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhop) (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhocp 
                    FernandoDuarte`LongRunRisk`Model`Parameters`xip) 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t])) + \
(FernandoDuarte`LongRunRisk`Model`Parameters`rhocp 
                   FernandoDuarte`LongRunRisk`Model`Parameters`phip^2 + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`xic 
                    FernandoDuarte`LongRunRisk`Model`Parameters`phip) 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]))]\
], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 2]
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC]], (
                  FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                   FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + 
                   FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t])) \
(FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                   FernandoDuarte`LongRunRisk`Model`Parameters`rhop^2 (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhop 
                    FernandoDuarte`LongRunRisk`Model`Parameters`xip) 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t])) + \
(FernandoDuarte`LongRunRisk`Model`Parameters`rhop 
                  FernandoDuarte`LongRunRisk`Model`Parameters`phip^2 + 
                 FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                  FernandoDuarte`LongRunRisk`Model`Parameters`phip)]], 0 === 
             Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 2]
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t + 1, ComputationalEngine`Cond`modNRC]], 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1] 
                PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    2], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t + 1, ComputationalEngine`Cond`modNRC]]]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 2]
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC]], (
                  FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                   FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + 
                   FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t])) \
(FernandoDuarte`LongRunRisk`Model`Parameters`muc + ((
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhocp 
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhop) (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhocp 
                    FernandoDuarte`LongRunRisk`Model`Parameters`xip) 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t])) + \
(FernandoDuarte`LongRunRisk`Model`Parameters`rhocp 
                  FernandoDuarte`LongRunRisk`Model`Parameters`phip^2 + (
                   FernandoDuarte`LongRunRisk`Model`Parameters`xic 
                   FernandoDuarte`LongRunRisk`Model`Parameters`phip) 
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t])]],
              0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1]
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC]], (
                 FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + 
                  FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                   FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t])) \
(FernandoDuarte`LongRunRisk`Model`Parameters`muc + (
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhocp (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`xic 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1]) FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]))]\
], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                  ComputationalEngine`Cond`modNRC]], 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] (
                 FernandoDuarte`LongRunRisk`Model`Parameters`muc + (
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhocp (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) + ((
                    FernandoDuarte`LongRunRisk`Model`Parameters`xic 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2]) FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1] + FernandoDuarte`LongRunRisk`Model`Parameters`phic 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t])))\
]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1]
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC]], 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1] (
                 FernandoDuarte`LongRunRisk`Model`Parameters`muc + (
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhocp (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) + ((
                    FernandoDuarte`LongRunRisk`Model`Parameters`xic 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    3]) FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2] + FernandoDuarte`LongRunRisk`Model`Parameters`phic 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1])))]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 2]
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC]], 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 2] (
                 FernandoDuarte`LongRunRisk`Model`Parameters`muc + (
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhocp (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    3] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) + ((
                    FernandoDuarte`LongRunRisk`Model`Parameters`xic 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    4]) FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    3] + FernandoDuarte`LongRunRisk`Model`Parameters`phic 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2])))]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 2]
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`\
Private`t, ComputationalEngine`Cond`modNRC]], ((1 - 
                   FernandoDuarte`LongRunRisk`Model`Parameters`rhog) 
                  FernandoDuarte`LongRunRisk`Model`Parameters`Esg) 
                 PacletizedResourceFunctions`SetSymbolsContext[
                   
                   FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`\
Private`t, ComputationalEngine`Cond`modNRC]] + 
                FernandoDuarte`LongRunRisk`Model`Parameters`rhog 
                 PacletizedResourceFunctions`SetSymbolsContext[
                   
                   FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1]^3, FernandoDuarte`LongRunRisk`Model`ExogenousEq`\
Private`t, ComputationalEngine`Cond`modNRC]]]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 2]
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`\
Private`t, ComputationalEngine`Cond`modNRC]], (1 - 
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhog) (
                  FernandoDuarte`LongRunRisk`Model`Parameters`Esg ((
                    FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhog (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`Esg))^2 + 
                   FernandoDuarte`LongRunRisk`Model`Parameters`phig^2)) + 
                FernandoDuarte`LongRunRisk`Model`Parameters`rhog ((
                    FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhog (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`Esg))^3 + 
                  3 (FernandoDuarte`LongRunRisk`Model`Parameters`phig^2 (
                    FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhog (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`Esg))))]], 0 === 
             Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 3]
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`\
Private`t, ComputationalEngine`Cond`modNRC]], ((1 - 
                   FernandoDuarte`LongRunRisk`Model`Parameters`rhog^2) 
                  FernandoDuarte`LongRunRisk`Model`Parameters`Esg) 
                 PacletizedResourceFunctions`SetSymbolsContext[
                   
                   FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`\
Private`t, ComputationalEngine`Cond`modNRC]] + 
                FernandoDuarte`LongRunRisk`Model`Parameters`rhog^2 
                 PacletizedResourceFunctions`SetSymbolsContext[
                   
                   FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1]^3, FernandoDuarte`LongRunRisk`Model`ExogenousEq`\
Private`t, ComputationalEngine`Cond`modNRC]]]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 3]
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`\
Private`t, ComputationalEngine`Cond`modNRC]], (1 - 
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhog^2) (
                  FernandoDuarte`LongRunRisk`Model`Parameters`Esg ((
                    FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhog (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`Esg))^2 + 
                   FernandoDuarte`LongRunRisk`Model`Parameters`phig^2)) + 
                FernandoDuarte`LongRunRisk`Model`Parameters`rhog^2 ((
                    FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhog (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`Esg))^3 + 
                  3 (FernandoDuarte`LongRunRisk`Model`Parameters`phig^2 (
                    FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhog (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`Esg))))]], 0 === 
             Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 2]
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC]], (
                  FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhog^2 (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`Esg)) (
                  FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhog (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`Esg)) + 
                FernandoDuarte`LongRunRisk`Model`Parameters`rhog 
                 FernandoDuarte`LongRunRisk`Model`Parameters`phig^2]], 0 === 
             Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 3]
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC]], (
                  FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhog^3 (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`Esg)) (
                  FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhog (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`Esg)) + 
                FernandoDuarte`LongRunRisk`Model`Parameters`rhog^2 
                 FernandoDuarte`LongRunRisk`Model`Parameters`phig^2]], 0 === 
             Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 2]
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 1, ComputationalEngine`Cond`modNRC]], (
                  FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhog^3 (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg)) (
                  FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhog^2 (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg)) + (
                 FernandoDuarte`LongRunRisk`Model`Parameters`rhog^3 
                  FernandoDuarte`LongRunRisk`Model`Parameters`phig^2 + 
                 FernandoDuarte`LongRunRisk`Model`Parameters`rhog 
                  FernandoDuarte`LongRunRisk`Model`Parameters`phig^2)]], 0 === 
             Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 3]
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 1, ComputationalEngine`Cond`modNRC]], (
                  FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhog^4 (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg)) (
                  FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhog^2 (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg)) + (
                 FernandoDuarte`LongRunRisk`Model`Parameters`rhog^4 
                  FernandoDuarte`LongRunRisk`Model`Parameters`phig^2 + 
                 FernandoDuarte`LongRunRisk`Model`Parameters`rhog^2 
                  FernandoDuarte`LongRunRisk`Model`Parameters`phig^2)]], 0 === 
             Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1]
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC]], (
                 FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
                 FernandoDuarte`LongRunRisk`Model`Parameters`rhog (
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                   FernandoDuarte`LongRunRisk`Model`Parameters`Esg)) (
                 FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + 
                  FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                   FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]))]\
], 0 === Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                  ComputationalEngine`Cond`modNRC]] - 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]], 0 === 
             Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1]
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC]], 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1] 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                  1]]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 2]
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC]], 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 2] 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                  2]]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1]
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t + 1, ComputationalEngine`Cond`modNRC]], 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1] 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                  1]]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1]
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC]], (
                 FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
                 FernandoDuarte`LongRunRisk`Model`Parameters`rhog (
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                   FernandoDuarte`LongRunRisk`Model`Parameters`Esg)) (
                 FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + 
                  FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                   FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]))]\
], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1]
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 1, ComputationalEngine`Cond`modNRC]], (
                 FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
                 FernandoDuarte`LongRunRisk`Model`Parameters`rhog^2 (
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg)) (
                 FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhop^2 (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhop 
                    FernandoDuarte`LongRunRisk`Model`Parameters`xip) 
                   FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1]))]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1]
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 2, ComputationalEngine`Cond`modNRC]], (
                 FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
                 FernandoDuarte`LongRunRisk`Model`Parameters`rhog^3 (
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg)) (
                 FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhop^3 (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhop^2 
                    FernandoDuarte`LongRunRisk`Model`Parameters`xip) 
                   FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2]))]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`\
Private`t, ComputationalEngine`Cond`modNRC]], (
                  FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhog (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`Esg))^2 + 
                FernandoDuarte`LongRunRisk`Model`Parameters`phig^2]], 0 === 
             Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]^2, 
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                  ComputationalEngine`Cond`modNRC]] - 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]^2], 0 === 
             Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`\
Private`t, ComputationalEngine`Cond`modNRC]] - 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                 1]^2], 0 === 
             Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`\
Private`t, ComputationalEngine`Cond`modNRC]] - 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                 2]^2], 0 === 
             Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`\
Private`t + 1, ComputationalEngine`Cond`modNRC]] - 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                 1]^2], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`\
Private`t, ComputationalEngine`Cond`modNRC]], (
                  FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhog (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`Esg))^2 + 
                FernandoDuarte`LongRunRisk`Model`Parameters`phig^2]], 0 === 
             Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`\
Private`t - 1, ComputationalEngine`Cond`modNRC]], (
                  FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhog^2 (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg))^2 + \
(FernandoDuarte`LongRunRisk`Model`Parameters`rhog^2 + 1) 
                 FernandoDuarte`LongRunRisk`Model`Parameters`phig^2]], 0 === 
             Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`\
Private`t - 2, ComputationalEngine`Cond`modNRC]], (
                  FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhog^3 (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg))^2 + \
(FernandoDuarte`LongRunRisk`Model`Parameters`rhog^4 + 
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhog^2 + 1) 
                 FernandoDuarte`LongRunRisk`Model`Parameters`phig^2]], 0 === 
             Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1],
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                  ComputationalEngine`Cond`modNRC]] - (
               FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
               FernandoDuarte`LongRunRisk`Model`Parameters`rhog (
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                 FernandoDuarte`LongRunRisk`Model`Parameters`Esg))], 0 === 
             Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                  ComputationalEngine`Cond`modNRC]] - 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]], 0 === 
             Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1],
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                  ComputationalEngine`Cond`modNRC]] - 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1]], 
             0 === Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 2],
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                  ComputationalEngine`Cond`modNRC]] - 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 2]], 
             0 === Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1],
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1,
                   ComputationalEngine`Cond`modNRC]] - 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1]], 
             0 === Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1],
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                  ComputationalEngine`Cond`modNRC]] - (
               FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
               FernandoDuarte`LongRunRisk`Model`Parameters`rhog (
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                 FernandoDuarte`LongRunRisk`Model`Parameters`Esg))], 0 === 
             Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1],
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1,
                   ComputationalEngine`Cond`modNRC]], 
                FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
                FernandoDuarte`LongRunRisk`Model`Parameters`rhog^2 (
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg)]], 
             0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1],
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1,
                   ComputationalEngine`Cond`modNRC]], 
                FernandoDuarte`LongRunRisk`Model`Parameters`muc + ((
                   FernandoDuarte`LongRunRisk`Model`Parameters`rhocp 
                   FernandoDuarte`LongRunRisk`Model`Parameters`rhop) (
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                   FernandoDuarte`LongRunRisk`Model`Parameters`rhocp 
                   FernandoDuarte`LongRunRisk`Model`Parameters`xip) 
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1])]], 0 === Simplify[
               Subtract[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
                  ComputationalEngine`Cond`modNRC]], 
                FernandoDuarte`LongRunRisk`Model`Parameters`muc + (
                 FernandoDuarte`LongRunRisk`Model`Parameters`rhocp (
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                   FernandoDuarte`LongRunRisk`Model`Parameters`xic 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2]) FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1])]]}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.143221`5.306521699570986, "CPUTimeUsed" -> 
         0.14627400000000002`, "MemoryUsed" -> 338456, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 6753366265904977421 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876881488059*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "8e6a7935-9a68-4995-ba44-56bfa9401c9c", "TestID" -> 
         "ComputeConditionalExpectations_20231009-K1TX8C", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt", 
         "EvaluationID" -> "e35236ec-695e-4d33-a06f-b2f4881048c8", "Input" -> 
         HoldForm[
          ComputationalEngine`Cond`dc1 = 
            PacletizedResourceFunctions`SetSymbolsContext[
              ReplaceAll[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1], 
               Normal[
                ComputationalEngine`Cond`modNRC["exogenousEq"]]]]; 
           ComputationalEngine`Cond`dc2 = 
            PacletizedResourceFunctions`SetSymbolsContext[
              ReplaceAll[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 2], 
               Normal[
                ComputationalEngine`Cond`modNRC["exogenousEq"]]]]; Apply[And, {
              Simplify[
              ComputationalEngine`Cond`dc1 === 
               FernandoDuarte`LongRunRisk`Model`Parameters`muc + (
                 FernandoDuarte`LongRunRisk`Model`Parameters`rhocp (
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) + ((
                    FernandoDuarte`LongRunRisk`Model`Parameters`xic 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    3]) FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2] + FernandoDuarte`LongRunRisk`Model`Parameters`phic 
                   FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1]))], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 1, ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Parameters`muc + (
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhocp (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) + ((
                    FernandoDuarte`LongRunRisk`Model`Parameters`xic 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    3]) FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2] + FernandoDuarte`LongRunRisk`Model`Parameters`phic 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1]))]], 
              Simplify[
              ComputationalEngine`Cond`dc2 === 
               FernandoDuarte`LongRunRisk`Model`Parameters`muc + (
                 FernandoDuarte`LongRunRisk`Model`Parameters`rhocp (
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    3] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) + ((
                    FernandoDuarte`LongRunRisk`Model`Parameters`xic 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    4]) FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    3] + FernandoDuarte`LongRunRisk`Model`Parameters`phic 
                   FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2]))], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 1, ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Parameters`muc + (
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhocp (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    3] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) + ((
                    FernandoDuarte`LongRunRisk`Model`Parameters`xic 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    4]) FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    3] + FernandoDuarte`LongRunRisk`Model`Parameters`phic 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2]))]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Parameters`muc + (
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhocp (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`xic 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1]) FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t])]]\
, 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 1, ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Parameters`muc + ((
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhocp 
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhop) (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhocp 
                    FernandoDuarte`LongRunRisk`Model`Parameters`xip) 
                   FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1])]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 2, ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Parameters`muc + ((
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhocp 
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhop^2) (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) + ((
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhocp 
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhop) 
                    FernandoDuarte`LongRunRisk`Model`Parameters`xip) 
                   FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2])]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    2] FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
pi[FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1,
                    ComputationalEngine`Cond`modNRC]], 0]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1] FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
pi[FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1,
                    ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Parameters`phip]], 0 === 
              Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 1, ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Parameters`rhop 
                  FernandoDuarte`LongRunRisk`Model`Parameters`phip + 
                 FernandoDuarte`LongRunRisk`Model`Parameters`xip]], 0 === 
              Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1] FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
pi[FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1,
                    ComputationalEngine`Cond`modNRC]], (
                  FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                   FernandoDuarte`LongRunRisk`Model`Parameters`rhop^2 (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhop 
                    FernandoDuarte`LongRunRisk`Model`Parameters`xip) 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1])) FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                   1]]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2] FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
pi[FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1,
                    ComputationalEngine`Cond`modNRC]], (
                  FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                   FernandoDuarte`LongRunRisk`Model`Parameters`rhop^2 (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhop 
                    FernandoDuarte`LongRunRisk`Model`Parameters`xip) 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1])) FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                   2]]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    2] FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
pi[FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                   ComputationalEngine`Cond`modNRC]], 0]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1] FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
pi[FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                   ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Parameters`phip]], 0 === 
              Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC]], (
                  FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                   FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + 
                   FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t])) 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]]], 
              0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1] FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
pi[FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                   ComputationalEngine`Cond`modNRC]], (
                  FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                   FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + 
                   FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t])) 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                   1]]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2] FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
pi[FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                   ComputationalEngine`Cond`modNRC]], (
                  FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                   FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + 
                   FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t])) 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                   2]]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    2] FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
pi[FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1,
                    ComputationalEngine`Cond`modNRC]], 0]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1] FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
pi[FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1,
                    ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1] 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t + 1, ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1] FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
pi[FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1,
                    ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1] 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2] FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
pi[FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1,
                    ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 2] 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    2], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 2, ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhop 
                   FernandoDuarte`LongRunRisk`Model`Parameters`phip + 
                  FernandoDuarte`LongRunRisk`Model`Parameters`xip)]], 0 === 
              Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 2, ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Parameters`rhop 
                  FernandoDuarte`LongRunRisk`Model`Parameters`phip + 
                 FernandoDuarte`LongRunRisk`Model`Parameters`xip]], 0 === 
              Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 2,
                    ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Parameters`phip]], 0 === 
              Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 2, ComputationalEngine`Cond`modNRC]], 0]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 2, ComputationalEngine`Cond`modNRC]], 0]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    2], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 1, ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhop 
                   FernandoDuarte`LongRunRisk`Model`Parameters`phip + 
                  FernandoDuarte`LongRunRisk`Model`Parameters`xip)]], 0 === 
              Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 1, ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Parameters`rhop 
                  FernandoDuarte`LongRunRisk`Model`Parameters`phip + 
                 FernandoDuarte`LongRunRisk`Model`Parameters`xip]], 0 === 
              Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1,
                    ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Parameters`phip]], 0 === 
              Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 1, ComputationalEngine`Cond`modNRC]], 0]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 1, ComputationalEngine`Cond`modNRC]], 0]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    2], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC]], (
                  FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                   FernandoDuarte`LongRunRisk`Model`Parameters`rhop^2 (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhop 
                    FernandoDuarte`LongRunRisk`Model`Parameters`xip) 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t])) 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]]], 
              0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC]], (
                  FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                   FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + 
                   FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t])) 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]]], 
              0 === Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                   ComputationalEngine`Cond`modNRC]] - 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]], 0 === 
              Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                   1]]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                   2]]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    2], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t + 1, ComputationalEngine`Cond`modNRC]], (
                  FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                   FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) + 
                   FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1])) FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]]], 
              0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t + 1, ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1,
                    ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]]], 
              0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t + 1, ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                   1]]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t + 1, ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                   2]]], 0 === 
              Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    2], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t + 2, ComputationalEngine`Cond`modNRC]] - 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 2]], 
              0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    2], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t + 1, ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) + 
                  FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                   FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1])]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    2], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhop^2 (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhop 
                    FernandoDuarte`LongRunRisk`Model`Parameters`xip) 
                   FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t])]]\
, 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    2], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 1, ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhop^3 (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhop^2 
                    FernandoDuarte`LongRunRisk`Model`Parameters`xip) 
                   FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1])]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    2], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 2, ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhop^4 (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhop^3 
                    FernandoDuarte`LongRunRisk`Model`Parameters`xip) 
                   FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2])]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + 
                  FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                   FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t])]]\
, 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 1, ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhop^2 (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhop 
                    FernandoDuarte`LongRunRisk`Model`Parameters`xip) 
                   FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1])]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 2, ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhop^3 (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhop^2 
                    FernandoDuarte`LongRunRisk`Model`Parameters`xip) 
                   FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    2])]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + 
                  FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                   FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t])]]\
, 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Parameters`muc + (
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhocp (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`xic 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1]) FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t])]]\
, 0 === Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC]] - (
                FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
                FernandoDuarte`LongRunRisk`Model`Parameters`rhog (
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                  FernandoDuarte`LongRunRisk`Model`Parameters`Esg))], 0 === 
              Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dd[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1,
                     FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i], 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                   ComputationalEngine`Cond`modNRC]], 
                 FernandoDuarte`LongRunRisk`Model`Parameters`mud[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i] + (
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i] (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`xid[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i] 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1]) FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t])]]\
, 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`\
Private`t, ComputationalEngine`Cond`modNRC]], (
                   FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + 
                    FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]))^\
2 + FernandoDuarte`LongRunRisk`Model`Parameters`phip^2]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`\
Private`t, ComputationalEngine`Cond`modNRC]], (
                   FernandoDuarte`LongRunRisk`Model`Parameters`muc + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhocp (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`xic 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1]) FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]))^\
2 + FernandoDuarte`LongRunRisk`Model`Parameters`phic^2]], 0 === Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`\
Private`t, ComputationalEngine`Cond`modNRC]], (
                   FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
                   FernandoDuarte`LongRunRisk`Model`Parameters`rhog (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`Esg))^2 + 
                 FernandoDuarte`LongRunRisk`Model`Parameters`phig^2]], 0 === 
              Simplify[
                Subtract[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dd[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i]\
^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                   ComputationalEngine`Cond`modNRC]], (
                   FernandoDuarte`LongRunRisk`Model`Parameters`mud[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i] + \
(FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i] (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`xid[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i] 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1]) FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]))^\
2 + FernandoDuarte`LongRunRisk`Model`Parameters`phidc[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i]^2]]\
, 0 === Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`var[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC]] - 
                FernandoDuarte`LongRunRisk`Model`Parameters`phip^2], 0 === 
              Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`var[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC]] - 
                FernandoDuarte`LongRunRisk`Model`Parameters`phic^2], 0 === 
              Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`var[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC]] - 
                FernandoDuarte`LongRunRisk`Model`Parameters`phig^2], 0 === 
              Simplify[PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`var[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dd[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1,
                     FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i], 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                   ComputationalEngine`Cond`modNRC]] - 
                FernandoDuarte`LongRunRisk`Model`Parameters`phidc[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i]^2]}]]\
, "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.118972`5.225959760263728, "CPUTimeUsed" -> 0.12053400000000014`, 
         "MemoryUsed" -> 196848, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 9002872947419073291 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876881608746*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "710d058f-f104-4ec3-8c7b-84f640f1b10e", "TestID" -> 
         "ComputeConditionalExpectations_20231009-YSFBG5", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt", 
         "EvaluationID" -> "3e9613b0-45f9-4526-bc27-158ecd8e32fa", "Input" -> 
         HoldForm[
           Apply[And, {0 === Simplify[
               Subtract[
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
                 ComputationalEngine`Cond`modNRC], 
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1],
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                  ComputationalEngine`Cond`modNRC], 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
                 ComputationalEngine`Cond`modNRC]]], 0 === Simplify[
               Subtract[
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
                 ComputationalEngine`Cond`modNRC], 
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1],
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                  ComputationalEngine`Cond`modNRC], 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
                 ComputationalEngine`Cond`modNRC]]], 0 === Simplify[
               Subtract[
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
                 ComputationalEngine`Cond`modNRC], 
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1],
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                  ComputationalEngine`Cond`modNRC], 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
                 ComputationalEngine`Cond`modNRC]]], 0 === Simplify[
               Subtract[
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dd[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1, 
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i], 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
                 ComputationalEngine`Cond`modNRC], 
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dd[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1, 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i], 
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                  ComputationalEngine`Cond`modNRC], 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
                 ComputationalEngine`Cond`modNRC]]], 0 === Simplify[
               Subtract[
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1] 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1],
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
                 ComputationalEngine`Cond`modNRC], 
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1]
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC], 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
                 ComputationalEngine`Cond`modNRC]]], 0 === Simplify[
               Subtract[
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1] 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1],
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
                 ComputationalEngine`Cond`modNRC], 
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1]
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC], 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
                 ComputationalEngine`Cond`modNRC]]], 0 === Simplify[
               Subtract[
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 1, ComputationalEngine`Cond`modNRC], 
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                    1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`\
Private`t, ComputationalEngine`Cond`modNRC], 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
                 ComputationalEngine`Cond`modNRC]]], 0 === Simplify[
               Subtract[
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dd[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 2, 
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i], 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
                 ComputationalEngine`Cond`modNRC], 
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dd[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 2, 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i], 
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                  ComputationalEngine`Cond`modNRC], 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
                 ComputationalEngine`Cond`modNRC]]], 0 === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC], 0 === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC], 0 === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["sg"][
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["sg"][
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC], 0 === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC], 0 === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC], 0 === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["sg"][
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["sg"][
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC], 0 === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]^2 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 2], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]^2 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 2], 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC], 0 === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]^2 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 2], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]^2 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 2], 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC], 0 === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]^2 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["sg"][
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 2], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]^2 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["sg"][
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 2], 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC], 0 === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]^2 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 2], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]^2 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 2], 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC], 0 === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]^2 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 2], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]^2 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 2], 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC], 0 === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]^2 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["sg"][
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 2], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]^2 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["sg"][
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 2], 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                  1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 1, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["sg"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["sg"][
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                  1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 1, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["sg"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                  1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 1, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                  1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 1, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["sg"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["sg"][
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                  1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 1, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["sg"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                  1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 1, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                  1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 1, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["sg"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["sg"][
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                  1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 1, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["sg"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                  1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 1, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dd[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dd[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i] 
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dd[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i] 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                  1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 1, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dd[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i] 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dd[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dd[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i] 
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["sg"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dd[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i] 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["sg"][
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                  1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 1, ComputationalEngine`Cond`modNRC] === 
             
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dd[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i] 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["sg"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dd[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dd[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i] 
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dd[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i] 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                  1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t - 1, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dd[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`i] 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 
                   1]^2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
t, ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.248822`5.546403774398211, "CPUTimeUsed" -> 0.25201799999999963`, 
         "MemoryUsed" -> 248696, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 7492895956607547391 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876881857971*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "9e28b396-eed4-494a-8f94-0439412e0fbb", "TestID" -> 
         "ComputeConditionalExpectations_20231009-PO8NUC", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt", 
         "EvaluationID" -> "63de3099-ff7f-43a8-856b-04f2c6cd6ef7", "Input" -> 
         HoldForm[
           Apply[
           And, {FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               foo`pi[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
               ComputationalEngine`Cond`modNRC] === ReplaceAll[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
                foo`pi[foo`t + 1], foo`t, ComputationalEngine`Cond`modNRC], 
               foo`t -> 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
               foo`t + 1], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
              1 + foo`t], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
               foo`t, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
              1 + FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               foo`pi[foo`t + 1], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
              1 + foo`t], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               foo`pi[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
               foo`t, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
              1 + FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               foo`pi[bar`t + 1], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
              1 + bar`t], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               foo`pi[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
               bar`t, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
              1 + FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev[
               foo`pi[bar`t + 1], goo`t, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
              1 + bar`t]}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.010757`4.18220616645714, "CPUTimeUsed" -> 
         0.010855000000000281`, "MemoryUsed" -> 57952, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 2584578298536600556 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768818694663`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "4c0f919e-a55f-4c16-b0a2-f4ed923fa768", "TestID" -> 
         "ComputeConditionalExpectations_20231009-BJF97S", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt", 
         "EvaluationID" -> "89e8ff59-7c87-4739-a10d-2bd1c48ed392", "Input" -> 
         HoldForm[
           Apply[
           And, {FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
               FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1] - 
                 FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1] + 
                FernandoDuarte`LongRunRisk`Model`Parameters`phip 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t])), 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
               ComputationalEngine`Cond`modNRC] === ReplaceAll[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
                ComputationalEngine`Cond`modNRC], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t -> 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
               FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] + (
                FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                   FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1] + FernandoDuarte`LongRunRisk`Model`Parameters`phip 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t])) + 
                FernandoDuarte`LongRunRisk`Model`Parameters`phip 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  1 + FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t])\
), FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 2], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
              FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
               2 + FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] (
               FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                 FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 
                    1] + FernandoDuarte`LongRunRisk`Model`Parameters`phip 
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]))),
              FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
              FernandoDuarte`LongRunRisk`Model`Parameters`delta, 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`Parameters`delta, 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
               FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[0], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[0], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
               FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`R[
               FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`m - 1][
               0], FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1,
                ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`R[
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`m - 1][0],
              FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`pieq[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`m], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`pieq[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
               FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`m], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
               FernandoDuarte`LongRunRisk`Model`EndogenousEq`wceq[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t + 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`wceq[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[{
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]}, 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === {
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
                ComputationalEngine`Cond`modNRC], 
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
                ComputationalEngine`Cond`modNRC], 
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dc[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, 
                ComputationalEngine`Cond`modNRC]}, 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
               foo`pi[FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t],
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
              foo`pi[FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
              foo`pi[FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]^\
2, FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]^2, 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[(
                foo`pi[FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]) 
               bar`delta, 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[(
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
                foo`eps["pi"][
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]) 
               FernandoDuarte`LongRunRisk`Model`Parameters`delta, 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[foo`t],
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[foo`t], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t - 1, 
               ComputationalEngine`Cond`modNRC] === ReplaceAll[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                foo`t], foo`t - 1, ComputationalEngine`Cond`modNRC], foo`t -> 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
             ExpandAll[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[foo`t] 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
                foo`t - 1, ComputationalEngine`Cond`modNRC]] === 
             ExpandAll[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t] 
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                 foo`t], foo`t - 1, ComputationalEngine`Cond`modNRC]], 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`Private`lagStateVarst[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                foo`t - 1] 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
               foo`t - 1, ComputationalEngine`Cond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
               foo`t - 1] 
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.016692`4.373023373871665, "CPUTimeUsed" -> 0.01686000000000032, 
         "MemoryUsed" -> 64752, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 1571869097329448339 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876881886432*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "b8bfb4b7-177f-4f18-9b2c-7a990c35d84d", "TestID" -> 
         "ComputeConditionalExpectations_20231009-PLM37U", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeConditionalExpectations.wlt", 
         "EvaluationID" -> "5a6589f9-4f8c-4f07-91e9-cd86c42efd62", "Input" -> 
         HoldForm[Unset[
             $ContextAliases["ce`"]]; True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000024`1.5307262395435999, "CPUTimeUsed" -> 
         0.000025999999999193335`, "MemoryUsed" -> 2392, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>]|>, 
    "FailureResults" -> <||>, "TestsNotEvaluatedKeys" -> {}, 
    "TestsFailedWrongResultsKeys" -> {}, "TestsFailedWithMessagesKeys" -> {}, 
    "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {2852883574650700766, 2772509242916083883, 
     2678642691162782523, 1723486883450208463, 1138892140118358871, 
     3171213925180987879, 6073057104067227268, 6753366265904977421, 
     9002872947419073291, 7492895956607547391, 2584578298536600556, 
     1571869097329448339}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.905876824829773*^9, 3.905876881899961*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"f650b332-37a7-4e78-9747-24f0c5362836"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.905876824829773*^9, 3.9058768819097137`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"2a5e7e6b-76cf-4912-a538-ed81f263c4a9"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.905876824829773*^9, 3.905876881910356*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"c4c72f08-9d40-48de-93f8-b687a2f67462"],

Cell[BoxData[{
 RowBox[{"tr", "=", 
  RowBox[{
  "TestReport", "[", 
   "\"\</Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt\>\
\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expected", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
        ")"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.905687542874485*^9, 3.905687543055066*^9}, 
   3.90570079251503*^9, 3.905876631914846*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"e330a50a-d51d-4861-9e79-8ecbadd6a684"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: ComputeUnconditionalExpectations.wlt\"", 
                  "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["18", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: ComputeUnconditionalExpectations.wlt\"", 
                  "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["18", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["18", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "1.364012`5.030060683804909", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: ComputeUnconditionalExpectations.wlt", "Aborted" -> 
    False, "TestResults" -> <|
     8001047828715550898 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768820261054`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "2b1f12df-cab9-4f6f-90ea-5fc78867ca16", "TestID" -> 
         "ComputeUnconditionalExpectations_20231009-DGPUWV", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "cc4182f8-cc28-424d-9014-81d248c7b2be", "Input" -> 
         HoldForm[ComputationalEngine`Uncond`longTest = False; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000032`1.6556649761518998, "CPUTimeUsed" -> 0.00003300000000105996,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 3749294226594468954 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876882026422*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "619998ae-a442-4d5e-b39c-0f6943f3f123", "TestID" -> 
         "ComputeUnconditionalExpectations_20231009-IPY7CS", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "75780645-da91-4e57-9c2e-9da651c4b8d4", "Input" -> 
         HoldForm[Needs["PacletizedResourceFunctions`"]; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000023`1.512242833849586, "CPUTimeUsed" -> 
         0.000024000000000690136`, "MemoryUsed" -> 2800, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 4917318838447304226 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876882026675*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "71c1cf50-93dc-452c-9c86-7e6d86d38172", "TestID" -> 
         "ComputeUnconditionalExpectations_20231009-NKUGMU", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "676bec59-1e59-4479-bc63-8e3d99aa3f19", "Input" -> 
         HoldForm[
          Needs["FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`"]; $ContextAliases["ce`"] = 
            "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`"; True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.008672`4.088634267026306, "CPUTimeUsed" -> 0.00867299999999993, 
         "MemoryUsed" -> 3424, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 513155689653067479 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876882035723*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "994ce1b6-5502-4ffd-8944-1b33bfbc37ca", "TestID" -> 
         "ComputeUnconditionalExpectations_20231009-QDSLFW", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "74fcfb48-ae2a-4c3b-b855-49d444b723ad", "Input" -> 
         HoldForm[
           
           MemberQ[$ContextPath, 
            "FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`"]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000024`1.5307262395436003, "CPUTimeUsed" -> 
         0.000024000000000690136`, "MemoryUsed" -> 2736, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 6382560270382889009 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768820359993`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "4fe1a902-d593-4e1f-8531-31e51d7f9bbf", "TestID" -> 
         "ComputeUnconditionalExpectations_20231009-0QCCUR", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "cd682369-c95e-4f33-a94f-fa3fec5919f0", "Input" -> 
         HoldForm[
           Not[Names["*uncondE"] === {}]], "ExpectedMessages" -> HoldForm[{}],
          "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.029175`4.615525862549402, "CPUTimeUsed" -> 
         0.029196999999999917`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 174828268331918503 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768820656204`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "50d6ecd7-d01e-4e4c-b88d-a3b7cdee2d9e", "TestID" -> 
         "ComputeUnconditionalExpectations_20231009-7P4OS1", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "b38a2898-a02b-40bd-a07a-b4fcb90ed8ff", "Input" -> 
         HoldForm[Get[
             Get[
              FileNameJoin[{"FernandoDuarte/LongRunRisk", "Models.wl"}]]]; 
           ComputationalEngine`Uncond`msp = FernandoDuarte`LongRunRisk`Models; 
           ComputationalEngine`Uncond`modBY = 
            ComputationalEngine`Uncond`msp["BY"]; 
           ComputationalEngine`Uncond`modNRC = 
            ComputationalEngine`Uncond`msp["NRC"]; 
           ComputationalEngine`Uncond`createSystem = 
            FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`createSystem; 
           ComputationalEngine`Uncond`evNoEpsStateVarsProduct = 
            FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`evNoEpsStateVarsProduct; 
           ComputationalEngine`Uncond`uncondEStep = 
            FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`uncondEStep; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.948885`6.12772857918261, "CPUTimeUsed" -> 0.9575830000000005, 
         "MemoryUsed" -> 107891360, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 3759753435123310618 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768830150924`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "5d99e597-891a-46ef-a083-b5aa38a303c5", "TestID" -> 
         "ComputeUnconditionalExpectations_20231009-G2EFO6", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "c4f05fa0-6165-414f-89b6-f999f9a9adfe", "Input" -> 
         HoldForm[
           If[
           ComputationalEngine`Uncond`longTest, {
              ComputationalEngine`Uncond`nameRules1, 
               ComputationalEngine`Uncond`system1, 
               ComputationalEngine`Uncond`unknowns1} = 
             ComputationalEngine`Uncond`createSystem[
              1, ComputationalEngine`Uncond`modNRC]; {
              ComputationalEngine`Uncond`nameRules2, 
               ComputationalEngine`Uncond`system2, 
               ComputationalEngine`Uncond`unknowns2} = 
             ComputationalEngine`Uncond`createSystem[
              2, ComputationalEngine`Uncond`modNRC]; {
              ComputationalEngine`Uncond`nameRules3, 
               ComputationalEngine`Uncond`system3, 
               ComputationalEngine`Uncond`unknowns3} = 
             ComputationalEngine`Uncond`createSystem[
              3, ComputationalEngine`Uncond`modNRC]; {
              ComputationalEngine`Uncond`nameRules4, 
               ComputationalEngine`Uncond`system4, 
               ComputationalEngine`Uncond`unknowns4} = 
             ComputationalEngine`Uncond`createSystem[
              4, ComputationalEngine`Uncond`modNRC]; 
            ComputationalEngine`Uncond`sol1 = Flatten[
               Solve[
               ComputationalEngine`Uncond`system1, 
                ComputationalEngine`Uncond`unknowns1]]; 
            ComputationalEngine`Uncond`sol2 = Flatten[
               Solve[
               ComputationalEngine`Uncond`system2, 
                ComputationalEngine`Uncond`unknowns2]]; 
            ComputationalEngine`Uncond`sol3 = Flatten[
               Solve[
               ComputationalEngine`Uncond`system3, 
                ComputationalEngine`Uncond`unknowns3]]; 
            ComputationalEngine`Uncond`sol4 = Flatten[
               Solve[
               ComputationalEngine`Uncond`system4, 
                ComputationalEngine`Uncond`unknowns4]]; Apply[And, {
               Apply[And, {
                 Not[ComputationalEngine`Uncond`nameRules1 === $Failed], 
                 Not[ComputationalEngine`Uncond`system1 === $Failed], 
                 Not[ComputationalEngine`Uncond`unknowns1 === $Failed]}], 
               Apply[And, {
                 Not[ComputationalEngine`Uncond`nameRules2 === $Failed], 
                 Not[ComputationalEngine`Uncond`system2 === $Failed], 
                 Not[ComputationalEngine`Uncond`unknowns2 === $Failed]}], 
               Apply[And, {
                 Not[ComputationalEngine`Uncond`nameRules3 === $Failed], 
                 Not[ComputationalEngine`Uncond`system3 === $Failed], 
                 Not[ComputationalEngine`Uncond`unknowns3 === $Failed]}], 
               Apply[And, {
                 Not[ComputationalEngine`Uncond`nameRules4 === $Failed], 
                 Not[ComputationalEngine`Uncond`system4 === $Failed], 
                 Not[ComputationalEngine`Uncond`unknowns4 === $Failed]}], 
               Apply[And, {
                 Not[ComputationalEngine`Uncond`sol1 === {}], 
                 Not[ComputationalEngine`Uncond`sol2 === {}], 
                 Not[ComputationalEngine`Uncond`sol3 === {}], 
                 Not[ComputationalEngine`Uncond`sol4 === {}]}], 
               Apply[And, {
                 Apply[MatchQ, 
                  ReplaceAll[
                   Intersection[
                   ComputationalEngine`Uncond`unknowns1, 
                    ComputationalEngine`Uncond`unknowns3], {
                   ComputationalEngine`Uncond`sol1, 
                    ComputationalEngine`Uncond`sol3}]], 
                 Apply[MatchQ, 
                  ReplaceAll[
                   Intersection[
                   ComputationalEngine`Uncond`unknowns2, 
                    ComputationalEngine`Uncond`unknowns3], {
                   ComputationalEngine`Uncond`sol2, 
                    ComputationalEngine`Uncond`sol3}]], 
                 Apply[MatchQ, 
                  ReplaceAll[
                   Intersection[
                   ComputationalEngine`Uncond`unknowns1, 
                    ComputationalEngine`Uncond`unknowns4], {
                   ComputationalEngine`Uncond`sol1, 
                    ComputationalEngine`Uncond`sol4}]], 
                 Apply[MatchQ, 
                  ReplaceAll[
                   Intersection[
                   ComputationalEngine`Uncond`unknowns2, 
                    ComputationalEngine`Uncond`unknowns4], {
                   ComputationalEngine`Uncond`sol2, 
                    ComputationalEngine`Uncond`sol4}]], 
                 Apply[MatchQ, 
                  ReplaceAll[
                   Intersection[
                   ComputationalEngine`Uncond`unknowns3, 
                    ComputationalEngine`Uncond`unknowns4], {
                   ComputationalEngine`Uncond`sol3, 
                    ComputationalEngine`Uncond`sol4}]]}]}], True]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000026`1.5654883458028115, "CPUTimeUsed" -> 0.00002600000000185787,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 9011123663001365963 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90587688301546*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "0d6b9971-42dc-47b8-9903-ac90d6a5d00c", "TestID" -> 
         "ComputeUnconditionalExpectations_20231009-KSU86I", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "9649f0d1-a3dd-42ac-8cf8-b69acc5f616f", "Input" -> 
         HoldForm[
           If[ComputationalEngine`Uncond`longTest, 
            Apply[
            And, {ReplaceAll[
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`pi1, 
                ComputationalEngine`Uncond`sol1] === 
              FernandoDuarte`LongRunRisk`Model`Parameters`mup, 
              ReplaceAll[
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`sg1, 
                ComputationalEngine`Uncond`sol1] === 
              FernandoDuarte`LongRunRisk`Model`Parameters`Esg, FullSimplify[
                ExpandAll[
                 ReplaceAll[
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`pi2, 
                  ComputationalEngine`Uncond`sol2]]] === FullSimplify[
                ExpandAll[
                FernandoDuarte`LongRunRisk`Model`Parameters`mup^2 + 
                 Divide[FernandoDuarte`LongRunRisk`Model`Parameters`xip^2 + ((
                    2 FernandoDuarte`LongRunRisk`Model`Parameters`rhop) 
                    FernandoDuarte`LongRunRisk`Model`Parameters`xip) 
                    FernandoDuarte`LongRunRisk`Model`Parameters`phip + 
                   FernandoDuarte`LongRunRisk`Model`Parameters`phip^2, 1 - 
                   FernandoDuarte`LongRunRisk`Model`Parameters`rhop^2]]], 
              Simplify[
                ReplaceAll[
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`sg2, 
                 ComputationalEngine`Uncond`sol2]] === 
              Simplify[
               FernandoDuarte`LongRunRisk`Model`Parameters`Esg^2 + 
                FernandoDuarte`LongRunRisk`Model`Parameters`phig^2/(1 - 
                 FernandoDuarte`LongRunRisk`Model`Parameters`rhog^2)], 
              Simplify[
                ReplaceAll[
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`Private`pi1sg1, 
                 ComputationalEngine`Uncond`sol2]] === 
              Simplify[
               FernandoDuarte`LongRunRisk`Model`Parameters`Esg 
                FernandoDuarte`LongRunRisk`Model`Parameters`mup]}], True]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00002`1.451544993495975, "CPUTimeUsed" -> 0.000020000000001019203`,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 1559132820405955604 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876883015809*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "309dac54-4034-48e4-bf41-066a24ade135", "TestID" -> 
         "ComputeUnconditionalExpectations_20231009-DNRBU1", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "681b59e0-d6b1-4555-a0e9-46e4e23fd81e", "Input" -> 
         HoldForm[
           Apply[
           And, {FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
               ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t], 
               ComputationalEngine`Uncond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`Parameters`mup, 
             FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
               ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t], 
               ComputationalEngine`Uncond`modNRC] === 
             FernandoDuarte`LongRunRisk`Model`Parameters`Esg, FullSimplify[
               ExpandAll[
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t]^2,
                  ComputationalEngine`Uncond`modNRC]]] === FullSimplify[
               ExpandAll[
               FernandoDuarte`LongRunRisk`Model`Parameters`mup^2 + 
                Divide[FernandoDuarte`LongRunRisk`Model`Parameters`xip^2 + ((
                    2 FernandoDuarte`LongRunRisk`Model`Parameters`rhop) 
                    FernandoDuarte`LongRunRisk`Model`Parameters`xip) 
                   FernandoDuarte`LongRunRisk`Model`Parameters`phip + 
                  FernandoDuarte`LongRunRisk`Model`Parameters`phip^2, 1 - 
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhop^2]]], 
             Simplify[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
               ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t]^2, 
                ComputationalEngine`Uncond`modNRC]] === 
             Simplify[
              FernandoDuarte`LongRunRisk`Model`Parameters`Esg^2 + 
               FernandoDuarte`LongRunRisk`Model`Parameters`phig^2/(1 - 
                FernandoDuarte`LongRunRisk`Model`Parameters`rhog^2)], Simplify[
               
               FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
               ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t], 
                ComputationalEngine`Uncond`modNRC]] === 
             Simplify[
              FernandoDuarte`LongRunRisk`Model`Parameters`Esg 
               FernandoDuarte`LongRunRisk`Model`Parameters`mup]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.035354`4.698953555417544, "CPUTimeUsed" -> 0.0354770000000002, 
         "MemoryUsed" -> 1290712, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 8444149036901329782 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876883051472*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "18c9be64-fcca-44fa-9224-ece541f676d6", "TestID" -> 
         "ComputeUnconditionalExpectations_20231009-IK5FRD", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "a0a38deb-c9b2-4e32-a556-1f1348e95566", "Input" -> 
         HoldForm[
           If[ComputationalEngine`Uncond`longTest, 
            Apply[And, {
              Apply[And, 
               Map[NumberQ, 
                ReplaceRepeated[
                 Values[ComputationalEngine`Uncond`sol1], 
                 ComputationalEngine`Uncond`modNRC["parameters"]]]], 
              Apply[And, 
               Map[NumberQ, 
                ReplaceRepeated[
                 Values[ComputationalEngine`Uncond`sol2], 
                 ComputationalEngine`Uncond`modNRC["parameters"]]]], 
              Apply[And, 
               Map[NumberQ, 
                ReplaceRepeated[
                 Values[ComputationalEngine`Uncond`sol3], 
                 ComputationalEngine`Uncond`modNRC["parameters"]]]], 
              Apply[And, 
               Map[NumberQ, 
                ReplaceRepeated[
                 Values[ComputationalEngine`Uncond`sol4], 
                 ComputationalEngine`Uncond`modNRC["parameters"]]]]}], True]],
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000022`1.4929376786542, "CPUTimeUsed" -> 0.0000219999999995224, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 2543973251173800148 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768830520444`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "c344d34f-55c5-420d-9e63-1f76507b0a12", "TestID" -> 
         "ComputeUnconditionalExpectations_20231009-V71CVX", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "aea320b4-8edd-4844-ab7d-49dec75f210e", "Input" -> 
         HoldForm[
          ComputationalEngine`Uncond`stateVarsNoEps = {
             ComputationalEngine`Uncond`sg, ComputationalEngine`Uncond`pi}; 
           ComputationalEngine`Uncond`model = 
            ComputationalEngine`Uncond`modNRC; 
           Apply[And, {
             ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                ComputationalEngine`Uncond`eps["pi"][
                 ComputationalEngine`Uncond`t - 1], 
                ComputationalEngine`Uncond`model, 
                ComputationalEngine`Uncond`stateVarsNoEps] === 
              ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`eps["pi"][
                 ComputationalEngine`Uncond`t - 1] 
                ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t], 
                ComputationalEngine`Uncond`model, 
                ComputationalEngine`Uncond`stateVarsNoEps], 
              ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
                ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t], 
                ComputationalEngine`Uncond`model, 
                ComputationalEngine`Uncond`stateVarsNoEps] === 
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
               ComputationalEngine`Uncond`t], 
              ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t], 
                ComputationalEngine`Uncond`model, 
                ComputationalEngine`Uncond`stateVarsNoEps] === 
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                ComputationalEngine`Uncond`t] 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                ComputationalEngine`Uncond`t], ExpandAll[
                ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
                ComputationalEngine`Uncond`pi[
                  ComputationalEngine`Uncond`t - 1] 
                 ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t], 
                 ComputationalEngine`Uncond`model, 
                 ComputationalEngine`Uncond`stateVarsNoEps]] === ExpandAll[
                Subtract[
                FernandoDuarte`LongRunRisk`Model`Parameters`Esg 
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   ComputationalEngine`Uncond`t - 1] + ((
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhog 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    ComputationalEngine`Uncond`t - 1]) 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    ComputationalEngine`Uncond`t - 1] + (
                    FernandoDuarte`LongRunRisk`Model`Parameters`phig 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    ComputationalEngine`Uncond`t - 1]) 
                   FernandoDuarte`LongRunRisk`Model`Shocks`eps["sg"][
                    ComputationalEngine`Uncond`t]), (
                  FernandoDuarte`LongRunRisk`Model`Parameters`Esg 
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhog) 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                  ComputationalEngine`Uncond`t - 1]]], ExpandAll[
                ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
                ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                 ComputationalEngine`Uncond`eps["pi"][
                  ComputationalEngine`Uncond`t], 
                 ComputationalEngine`Uncond`model, 
                 ComputationalEngine`Uncond`stateVarsNoEps]] === ExpandAll[
                Subtract[
                FernandoDuarte`LongRunRisk`Model`Parameters`mup 
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                   ComputationalEngine`Uncond`t] + ((
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhop 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    ComputationalEngine`Uncond`t - 1]) 
                   FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    ComputationalEngine`Uncond`t] + ((
                    FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    ComputationalEngine`Uncond`t - 1]) 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    ComputationalEngine`Uncond`t] + 
                   FernandoDuarte`LongRunRisk`Model`Parameters`phip 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    ComputationalEngine`Uncond`t]^2)), (
                  FernandoDuarte`LongRunRisk`Model`Parameters`mup 
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhop) 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  ComputationalEngine`Uncond`t]]], 
              ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                ComputationalEngine`Uncond`eps["pi"][
                 ComputationalEngine`Uncond`t + 1], 
                ComputationalEngine`Uncond`model, 
                ComputationalEngine`Uncond`stateVarsNoEps] === 
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                ComputationalEngine`Uncond`t] 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                1 + ComputationalEngine`Uncond`t], ExpandAll[
                ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
                ComputationalEngine`Uncond`eps["pi"][
                  ComputationalEngine`Uncond`t] 
                 ComputationalEngine`Uncond`dd[
                  ComputationalEngine`Uncond`t, ComputationalEngine`Uncond`i],
                  ComputationalEngine`Uncond`model, 
                 ComputationalEngine`Uncond`stateVarsNoEps]] === 
              ExpandAll[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`dd[
                 ComputationalEngine`Uncond`t, ComputationalEngine`Uncond`i] 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                 ComputationalEngine`Uncond`t]], ExpandAll[
                ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
                ComputationalEngine`Uncond`eps["pi"][
                  ComputationalEngine`Uncond`t] 
                 ComputationalEngine`Uncond`dd[
                  ComputationalEngine`Uncond`t, ComputationalEngine`Uncond`i],
                  ComputationalEngine`Uncond`model, 
                 Append[
                 ComputationalEngine`Uncond`stateVarsNoEps, 
                  ComputationalEngine`Uncond`dd]]] === ExpandAll[
                Subtract[
                FernandoDuarte`LongRunRisk`Model`Parameters`mud[
                   ComputationalEngine`Uncond`i] 
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                   ComputationalEngine`Uncond`t] + ((
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                    ComputationalEngine`Uncond`t - 1] 
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[
                    ComputationalEngine`Uncond`i]) 
                   FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    ComputationalEngine`Uncond`t] + ((
                    FernandoDuarte`LongRunRisk`Model`Parameters`phidc[
                    ComputationalEngine`Uncond`i] 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                    ComputationalEngine`Uncond`t]) 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    ComputationalEngine`Uncond`t] + ((
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    ComputationalEngine`Uncond`t - 2] 
                    FernandoDuarte`LongRunRisk`Model`Parameters`xid[
                    ComputationalEngine`Uncond`i]) 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    ComputationalEngine`Uncond`t - 1]) 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    ComputationalEngine`Uncond`t])), (
                  FernandoDuarte`LongRunRisk`Model`Parameters`mup 
                  FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[
                   ComputationalEngine`Uncond`i]) 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                  ComputationalEngine`Uncond`t]]], 
              ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                ComputationalEngine`Uncond`eps["pi"][
                 ComputationalEngine`Uncond`t - 1], 
                ComputationalEngine`Uncond`model, 
                ComputationalEngine`Uncond`stateVarsNoEps] === 
              ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`eps["pi"][
                 ComputationalEngine`Uncond`t - 1] 
                ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t], 
                ComputationalEngine`Uncond`model, 
                ComputationalEngine`Uncond`stateVarsNoEps], 
              ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                ComputationalEngine`Uncond`sg[
                 ComputationalEngine`Uncond`t - 1], 
                ComputationalEngine`Uncond`model, 
                ComputationalEngine`Uncond`stateVarsNoEps] === 
              ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t - 1]
                  ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t],
                 ComputationalEngine`Uncond`model, 
                ComputationalEngine`Uncond`stateVarsNoEps]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.02184`4.4897676318646935, "CPUTimeUsed" -> 0.021979999999999222`, 
         "MemoryUsed" -> 69000, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4189086287516105041 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876883074261*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "0413e25d-3207-48e7-815a-969271c0ca68", "TestID" -> 
         "ComputeUnconditionalExpectations_20231009-H6QK1J", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "9b48dc67-3ebb-4d21-9844-f8a1ca62084a", "Input" -> 
         HoldForm[
           Apply[And, {
             Apply[And, 
              Map[MatchQ[#, "FernandoDuarte`LongRunRisk`Model`Shocks`"]& , 
               DeleteDuplicates[
                Cases[
                 
                 ComputationalEngine`Uncond`evNoEpsStateVarsProduct[(
                   ComputationalEngine`Uncond`pi[
                    ComputationalEngine`Uncond`t - 1] 
                   ComputationalEngine`Uncond`dd[
                    ComputationalEngine`Uncond`t, 
                    ComputationalEngine`Uncond`i]) 
                  ComputationalEngine`Uncond`eps["pi"][
                   ComputationalEngine`Uncond`t - 1], 
                  ComputationalEngine`Uncond`model, 
                  Append[
                  ComputationalEngine`Uncond`stateVarsNoEps, 
                   ComputationalEngine`Uncond`dd]], PatternTest[
                   Pattern[ComputationalEngine`Uncond`x, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                   BlankSequence[]][
                   BlankSequence[], 
                   BlankNullSequence[]] :> 
                 Context[ComputationalEngine`Uncond`x], Infinity]]]], 
             Apply[And, 
              Map[MatchQ[#, "FernandoDuarte`LongRunRisk`Model`Shocks`"]& , 
               DeleteDuplicates[
                Cases[
                 ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
                 ComputationalEngine`Uncond`pi[
                   ComputationalEngine`Uncond`t - 1] ((
                    ComputationalEngine`Uncond`dd[
                    ComputationalEngine`Uncond`t, 
                    ComputationalEngine`Uncond`i] 
                    ComputationalEngine`Uncond`eps["pi"][
                    ComputationalEngine`Uncond`t]) 
                   ComputationalEngine`Uncond`eps["pi"][
                    ComputationalEngine`Uncond`t - 1]), 
                  ComputationalEngine`Uncond`model, 
                  Append[
                  ComputationalEngine`Uncond`stateVarsNoEps, 
                   ComputationalEngine`Uncond`dd]], PatternTest[
                   Pattern[ComputationalEngine`Uncond`x, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                   BlankSequence[]][
                   BlankSequence[], 
                   BlankNullSequence[]] :> 
                 Context[ComputationalEngine`Uncond`x], Infinity]]]], 
             Apply[And, 
              Map[MatchQ[#, "FernandoDuarte`LongRunRisk`Model`Shocks`"]& , 
               DeleteDuplicates[
                Cases[
                 
                 ComputationalEngine`Uncond`evNoEpsStateVarsProduct[((
                    ComputationalEngine`Uncond`pi[
                    ComputationalEngine`Uncond`t - 1] 
                    ComputationalEngine`Uncond`sg[
                    ComputationalEngine`Uncond`t]) 
                   ComputationalEngine`Uncond`dd[
                    ComputationalEngine`Uncond`t, 
                    ComputationalEngine`Uncond`i]) 
                  ComputationalEngine`Uncond`eps["pi"][
                   ComputationalEngine`Uncond`t - 1], 
                  ComputationalEngine`Uncond`model, 
                  Append[
                  ComputationalEngine`Uncond`stateVarsNoEps, 
                   ComputationalEngine`Uncond`dd]], PatternTest[
                   Pattern[ComputationalEngine`Uncond`x, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                   BlankSequence[]][
                   BlankSequence[], 
                   BlankNullSequence[]] :> 
                 Context[ComputationalEngine`Uncond`x], Infinity]]]]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.053619`4.879833707916533, "CPUTimeUsed" -> 0.05394399999999955, 
         "MemoryUsed" -> 119872, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 2990256213070272985 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768831282783`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "7f5da2a3-9263-4f2c-877b-e38c30ed2672", "TestID" -> 
         "ComputeUnconditionalExpectations_20231009-WS3A6I", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "567c3f95-1f4a-4c00-bbfe-c9da0bba31e4", "Input" -> 
         HoldForm[
           Apply[And, {{} === Cases[
               ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                ComputationalEngine`Uncond`sg[
                 ComputationalEngine`Uncond`t - 1], 
                ComputationalEngine`Uncond`model, 
                ComputationalEngine`Uncond`stateVarsNoEps], 
               PatternTest[
                Blank[Symbol], MatchQ[
                 SymbolName[#], "pi"]& ][ComputationalEngine`Uncond`t], 
               Infinity], 
             Not[{} === Cases[
                ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
                ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                 ComputationalEngine`Uncond`sg[
                  ComputationalEngine`Uncond`t - 1], 
                 ComputationalEngine`Uncond`model, 
                 ComputationalEngine`Uncond`stateVarsNoEps], 
                PatternTest[
                 Blank[Symbol], MatchQ[
                  SymbolName[#], "sg"]& ][ComputationalEngine`Uncond`t - 1], 
                Infinity]], {} === Cases[
               ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                 ComputationalEngine`Uncond`sg[
                  ComputationalEngine`Uncond`t - 1] + 
                ComputationalEngine`Uncond`pi[
                  ComputationalEngine`Uncond`t - 1] 
                 ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t], 
                ComputationalEngine`Uncond`model, 
                ComputationalEngine`Uncond`stateVarsNoEps], 
               PatternTest[
                Blank[Symbol], MatchQ[
                 SymbolName[#], "pi"]& ][ComputationalEngine`Uncond`t], 
               Infinity], {} === Cases[
               ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                 ComputationalEngine`Uncond`sg[
                  ComputationalEngine`Uncond`t - 1] + 
                ComputationalEngine`Uncond`pi[
                  ComputationalEngine`Uncond`t - 1] 
                 ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t], 
                ComputationalEngine`Uncond`model, 
                ComputationalEngine`Uncond`stateVarsNoEps], 
               PatternTest[
                Blank[Symbol], MatchQ[
                 SymbolName[#], "sg"]& ][ComputationalEngine`Uncond`t], 
               Infinity], 
             Not[{} === Cases[
                ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
                ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                  ComputationalEngine`Uncond`sg[
                   ComputationalEngine`Uncond`t - 1] + 
                 ComputationalEngine`Uncond`pi[
                   ComputationalEngine`Uncond`t - 1] 
                  ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t],
                  ComputationalEngine`Uncond`model, 
                 ComputationalEngine`Uncond`stateVarsNoEps], 
                PatternTest[
                 Blank[Symbol], MatchQ[
                  SymbolName[#], "pi"]& ][ComputationalEngine`Uncond`t - 1], 
                Infinity]], 
             Not[{} === Cases[
                ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
                ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                  ComputationalEngine`Uncond`sg[
                   ComputationalEngine`Uncond`t - 1] + 
                 ComputationalEngine`Uncond`pi[
                   ComputationalEngine`Uncond`t - 1] 
                  ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t],
                  ComputationalEngine`Uncond`model, 
                 ComputationalEngine`Uncond`stateVarsNoEps], 
                PatternTest[
                 Blank[Symbol], MatchQ[
                  SymbolName[#], "sg"]& ][ComputationalEngine`Uncond`t - 1], 
                Infinity]]}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.026859`4.579604837044567, "CPUTimeUsed" -> 
         0.02706300000000006, "MemoryUsed" -> 71840, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 8102588007710451542 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768831554394`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "b41ea3e0-cac0-45c0-b7af-332824ea8fe1", "TestID" -> 
         "ComputeUnconditionalExpectations_20231009-MQBJ7D", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "41145cea-cef8-4bd1-890e-36431c9b6013", "Input" -> 
         HoldForm[
           Apply[
           And, {ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
              ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
               ComputationalEngine`Uncond`foo[
                ComputationalEngine`Uncond`t - 1], 
               ComputationalEngine`Uncond`model, 
               ComputationalEngine`Uncond`stateVarsNoEps] === 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
               ComputationalEngine`Uncond`t] 
              ComputationalEngine`Uncond`foo[
               ComputationalEngine`Uncond`t - 1], ExpandAll[
               
               ComputationalEngine`Uncond`evNoEpsStateVarsProduct[(
                 ComputationalEngine`Uncond`eps["pi"][
                  ComputationalEngine`Uncond`t + 1] 
                 ComputationalEngine`Uncond`eps["pi"][
                  ComputationalEngine`Uncond`t]) 
                ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t], 
                ComputationalEngine`Uncond`model, 
                ComputationalEngine`Uncond`stateVarsNoEps]] === 
             ExpandAll[
              FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                ComputationalEngine`Uncond`t + 1] 
               ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
                ComputationalEngine`Uncond`eps["pi"][
                  ComputationalEngine`Uncond`t] 
                 ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t], 
                 ComputationalEngine`Uncond`model, 
                 ComputationalEngine`Uncond`stateVarsNoEps]]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00349`3.693340424791174, "CPUTimeUsed" -> 0.003510000000000346, 
         "MemoryUsed" -> 9104, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4878187047190166115 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90587688315923*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "aa35aba0-8a14-46bb-b9bd-c2403b8467c6", "TestID" -> 
         "ComputeUnconditionalExpectations_20231009-P14MXG", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "de8dc862-356f-4adc-825e-a63ee9f07705", "Input" -> 
         HoldForm[
           Apply[
           And, {ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
              ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
               ComputationalEngine`Uncond`eps["pi"][
                ComputationalEngine`Uncond`t - 1], 
               ComputationalEngine`Uncond`model, 
               Append[
               ComputationalEngine`Uncond`stateVarsNoEps, 
                ComputationalEngine`Uncond`myVariable]] === 
             ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
              ComputationalEngine`Uncond`eps["pi"][
                ComputationalEngine`Uncond`t - 1] 
               ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t], 
               ComputationalEngine`Uncond`model, 
               Append[
               ComputationalEngine`Uncond`stateVarsNoEps, 
                ComputationalEngine`Uncond`dd]], 
             ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t], 
               ComputationalEngine`Uncond`model, 
               Append[
               ComputationalEngine`Uncond`stateVarsNoEps, 
                ComputationalEngine`Uncond`irrelevantVar]] === 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
              ComputationalEngine`Uncond`t], 
             ComputationalEngine`Uncond`evNoEpsStateVarsProduct[(
                ComputationalEngine`Uncond`anotherIrrelevantVar 
                ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t]) 
               ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t], 
               ComputationalEngine`Uncond`model, 
               Append[
               ComputationalEngine`Uncond`stateVarsNoEps, 
                ComputationalEngine`Uncond`anotherIrrelevantVar]] === (
               ComputationalEngine`Uncond`anotherIrrelevantVar 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                ComputationalEngine`Uncond`t]) 
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
               ComputationalEngine`Uncond`t]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.004369`3.7908970425415625, "CPUTimeUsed" -> 0.004397000000000872, 
         "MemoryUsed" -> 8240, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 8281207869120163955 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90587688316406*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "7d4e3e23-d67d-4461-9de1-fa5e49dafe25", "TestID" -> 
         "ComputeUnconditionalExpectations_20231009-734G39", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "d24ad79e-b8c9-4cd9-9cdf-b194cd3992e5", "Input" -> 
         HoldForm[
           Apply[And, {
             FreeQ[
              ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
              ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t - 1] 
               ComputationalEngine`Uncond`dd[
                ComputationalEngine`Uncond`t, ComputationalEngine`Uncond`i], 
               ComputationalEngine`Uncond`model, 
               Append[
               ComputationalEngine`Uncond`stateVarsNoEps, 
                ComputationalEngine`Uncond`dd]], 
              PatternTest[
               Blank[Symbol], MatchQ[
                SymbolName[#], "dd"]& ][
              ComputationalEngine`Uncond`t, ComputationalEngine`Uncond`i]], 
             FreeQ[
              ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
              ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
               ComputationalEngine`Uncond`dd[
                ComputationalEngine`Uncond`t - 1, 
                 ComputationalEngine`Uncond`i], 
               ComputationalEngine`Uncond`model, 
               Append[
               ComputationalEngine`Uncond`stateVarsNoEps, 
                ComputationalEngine`Uncond`dd]], 
              PatternTest[
               Blank[Symbol], MatchQ[
                SymbolName[#], "pi"]& ][ComputationalEngine`Uncond`t]], 
             FreeQ[
              ComputationalEngine`Uncond`evNoEpsStateVarsProduct[(
                ComputationalEngine`Uncond`pi[
                 ComputationalEngine`Uncond`t - 1] 
                ComputationalEngine`Uncond`dd[
                 ComputationalEngine`Uncond`t, ComputationalEngine`Uncond`i]) 
               ComputationalEngine`Uncond`eps["pi"][
                ComputationalEngine`Uncond`t - 1], 
               ComputationalEngine`Uncond`model, 
               Append[
               ComputationalEngine`Uncond`stateVarsNoEps, 
                ComputationalEngine`Uncond`dd]], 
              PatternTest[
               Blank[Symbol], MatchQ[
                SymbolName[#], "dd"]& ][
              ComputationalEngine`Uncond`t - 1, 
               ComputationalEngine`Uncond`i]], 
             Not[
              FreeQ[
               
               ComputationalEngine`Uncond`evNoEpsStateVarsProduct[(
                 ComputationalEngine`Uncond`pi[
                  ComputationalEngine`Uncond`t - 1] 
                 ComputationalEngine`Uncond`dd[
                  ComputationalEngine`Uncond`t, ComputationalEngine`Uncond`i])
                  ComputationalEngine`Uncond`eps["pi"][
                 ComputationalEngine`Uncond`t - 1], 
                ComputationalEngine`Uncond`model, 
                Append[
                ComputationalEngine`Uncond`stateVarsNoEps, 
                 ComputationalEngine`Uncond`dd]], 
               PatternTest[
                Blank[Symbol], MatchQ[
                 SymbolName[#], "eps"]& ]["pi"][
               ComputationalEngine`Uncond`t - 1]]], 
             FreeQ[
              
              ComputationalEngine`Uncond`evNoEpsStateVarsProduct[(
                ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                ComputationalEngine`Uncond`dd[
                 ComputationalEngine`Uncond`t - 1, 
                  ComputationalEngine`Uncond`i]) 
               ComputationalEngine`Uncond`eps["pi"][
                ComputationalEngine`Uncond`t - 1], 
               ComputationalEngine`Uncond`model, 
               Append[
               ComputationalEngine`Uncond`stateVarsNoEps, 
                ComputationalEngine`Uncond`dd]], 
              PatternTest[
               Blank[Symbol], MatchQ[
                SymbolName[#], "pi"]& ][
              ComputationalEngine`Uncond`t, ComputationalEngine`Uncond`i]], 
             FreeQ[
              
              ComputationalEngine`Uncond`evNoEpsStateVarsProduct[(
                ComputationalEngine`Uncond`pi[
                 ComputationalEngine`Uncond`t - 1] 
                ComputationalEngine`Uncond`dd[
                 ComputationalEngine`Uncond`t, ComputationalEngine`Uncond`i]) 
               ComputationalEngine`Uncond`eps["dd"][
                ComputationalEngine`Uncond`t - 1, 
                 ComputationalEngine`Uncond`i], 
               ComputationalEngine`Uncond`model, 
               Append[
               ComputationalEngine`Uncond`stateVarsNoEps, 
                ComputationalEngine`Uncond`dd]], 
              PatternTest[
               Blank[Symbol], MatchQ[
                SymbolName[#], "dd"]& ][
              ComputationalEngine`Uncond`t - 1, 
               ComputationalEngine`Uncond`i]], 
             Not[
              FreeQ[
               
               ComputationalEngine`Uncond`evNoEpsStateVarsProduct[(
                 ComputationalEngine`Uncond`pi[
                  ComputationalEngine`Uncond`t - 1] 
                 ComputationalEngine`Uncond`dd[
                  ComputationalEngine`Uncond`t, ComputationalEngine`Uncond`i])
                  ComputationalEngine`Uncond`eps["dd"][
                 ComputationalEngine`Uncond`t - 1, 
                  ComputationalEngine`Uncond`i], 
                ComputationalEngine`Uncond`model, 
                Append[
                ComputationalEngine`Uncond`stateVarsNoEps, 
                 ComputationalEngine`Uncond`dd]], 
               PatternTest[
                Blank[Symbol], MatchQ[
                 SymbolName[#], "eps"]& ]["dd"][
               ComputationalEngine`Uncond`t - 1, 
                ComputationalEngine`Uncond`i]]], 
             FreeQ[
              ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
              ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] (
                ComputationalEngine`Uncond`dd[
                 ComputationalEngine`Uncond`t - 1, 
                  ComputationalEngine`Uncond`i] 
                ComputationalEngine`Uncond`eps["dd"][
                 ComputationalEngine`Uncond`t - 1, 
                  ComputationalEngine`Uncond`i]), 
               ComputationalEngine`Uncond`model, 
               Append[
               ComputationalEngine`Uncond`stateVarsNoEps, 
                ComputationalEngine`Uncond`dd]], 
              PatternTest[
               Blank[Symbol], MatchQ[
                SymbolName[#], "pi"]& ][ComputationalEngine`Uncond`t]], 
             Not[
              FreeQ[
               ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] (
                 ComputationalEngine`Uncond`dd[
                  ComputationalEngine`Uncond`t - 1, 
                   ComputationalEngine`Uncond`i] 
                 ComputationalEngine`Uncond`eps["dd"][
                  ComputationalEngine`Uncond`t - 1, 
                   ComputationalEngine`Uncond`i]), 
                ComputationalEngine`Uncond`model, 
                Append[
                ComputationalEngine`Uncond`stateVarsNoEps, 
                 ComputationalEngine`Uncond`dd]], 
               PatternTest[
                Blank[Symbol], MatchQ[
                 SymbolName[#], "pi"]& ][
                Blank[]]]], 
             FreeQ[
              ComputationalEngine`Uncond`uncondEStep[
              ComputationalEngine`Uncond`dc[ComputationalEngine`Uncond`t - 1] 
               ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t], 
               ComputationalEngine`Uncond`modNRC], 
              PatternTest[
               Blank[Symbol], MatchQ[
                SymbolName[#], "dc"]& ], Infinity], 
             FreeQ[
              ComputationalEngine`Uncond`uncondEStep[
              ComputationalEngine`Uncond`dc[ComputationalEngine`Uncond`t - 1] 
               ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t], 
               ComputationalEngine`Uncond`modNRC], 
              PatternTest[
               Blank[Symbol], MatchQ[
                SymbolName[#], "pi"]& ][ComputationalEngine`Uncond`t], 
              Infinity]}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.192818`5.435662571671531, "CPUTimeUsed" -> 
         0.19388500000000164`, "MemoryUsed" -> 400368, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 3677843902876492138 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876883357427*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "8f578551-6066-4667-beee-dfc12cbc6c8a", "TestID" -> 
         "ComputeUnconditionalExpectations_20231009-TY51RS", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "e321645b-945e-48ba-ac39-7d57aed2633f", "Input" -> 
         HoldForm[
           Apply[
           And, {ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
              ComputationalEngine`Uncond`wc[ComputationalEngine`Uncond`t] 
               ComputationalEngine`Uncond`eps["pi"][
                ComputationalEngine`Uncond`t - 1], 
               ComputationalEngine`Uncond`model, 
               ComputationalEngine`Uncond`stateVarsNoEps] === 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`wc[
               ComputationalEngine`Uncond`t] 
              FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
               ComputationalEngine`Uncond`t - 1], Coefficient[
               ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`wc[ComputationalEngine`Uncond`t] 
                ComputationalEngine`Uncond`eps["pi"][
                 ComputationalEngine`Uncond`t], 
                ComputationalEngine`Uncond`model, {
                ComputationalEngine`Uncond`wc}], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
               ComputationalEngine`Uncond`t - 1]] === (
               FernandoDuarte`LongRunRisk`Model`Parameters`rhop 
               FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[1]) 
              FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
               ComputationalEngine`Uncond`t], DeleteDuplicates[
               Cases[
                
                ComputationalEngine`Uncond`evNoEpsStateVarsProduct[(
                  ComputationalEngine`Uncond`A[0] 
                  ComputationalEngine`Uncond`wc[ComputationalEngine`Uncond`t])
                   ComputationalEngine`Uncond`eps["pi"][
                  ComputationalEngine`Uncond`t - 1], 
                 ComputationalEngine`Uncond`model, 
                 ComputationalEngine`Uncond`stateVarsNoEps], PatternTest[
                  Pattern[ComputationalEngine`Uncond`x, 
                   Blank[Symbol]], MatchQ[
                   SymbolName[#], "A"]& ][
                  Blank[]] :> Context[ComputationalEngine`Uncond`x], 
                Infinity]] === {
              "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"}, 
             DeleteDuplicates[
               Cases[
                
                ComputationalEngine`Uncond`evNoEpsStateVarsProduct[(
                  ComputationalEngine`Uncond`A[0] 
                  ComputationalEngine`Uncond`wc[ComputationalEngine`Uncond`t])
                   ComputationalEngine`Uncond`eps["pi"][
                  ComputationalEngine`Uncond`t - 1], 
                 ComputationalEngine`Uncond`model, {
                 ComputationalEngine`Uncond`wc}], PatternTest[
                  Pattern[ComputationalEngine`Uncond`x, 
                   Blank[Symbol]], MatchQ[
                   SymbolName[#], "A"]& ][
                  Blank[]] :> Context[ComputationalEngine`Uncond`x], 
                Infinity]] === {
              "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"}, 
             ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
              ComputationalEngine`Uncond`pd[
                ComputationalEngine`Uncond`t, ComputationalEngine`Uncond`i] 
               ComputationalEngine`Uncond`eps["pi"][
                ComputationalEngine`Uncond`t - 1], 
               ComputationalEngine`Uncond`model, 
               ComputationalEngine`Uncond`stateVarsNoEps] === 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`pd[
               ComputationalEngine`Uncond`t, ComputationalEngine`Uncond`i] 
              FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
               ComputationalEngine`Uncond`t - 1], Coefficient[
               ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
               ComputationalEngine`Uncond`pd[
                 ComputationalEngine`Uncond`t, ComputationalEngine`Uncond`i] 
                ComputationalEngine`Uncond`eps["pi"][
                 ComputationalEngine`Uncond`t], 
                ComputationalEngine`Uncond`model, {
                ComputationalEngine`Uncond`pd}], 
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
               ComputationalEngine`Uncond`t - 1]] === (
               FernandoDuarte`LongRunRisk`Model`Parameters`rhop 
               FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
                ComputationalEngine`Uncond`i][1]) 
              FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
               ComputationalEngine`Uncond`t], DeleteDuplicates[
               Cases[
                ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
                ComputationalEngine`Uncond`A[
                  0] ((ComputationalEngine`Uncond`B[
                    ComputationalEngine`Uncond`i][1] 
                   ComputationalEngine`Uncond`pd[
                    ComputationalEngine`Uncond`t, 
                    ComputationalEngine`Uncond`i]) 
                  ComputationalEngine`Uncond`eps["pi"][
                   ComputationalEngine`Uncond`t - 1]), 
                 ComputationalEngine`Uncond`model, 
                 ComputationalEngine`Uncond`stateVarsNoEps], PatternTest[
                  Pattern[ComputationalEngine`Uncond`x, 
                   Blank[Symbol]], MatchQ[
                   SymbolName[#], "A"]& ][
                  Blank[]] :> Context[ComputationalEngine`Uncond`x], 
                Infinity]] === {
              "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"}, 
             DeleteDuplicates[
               Cases[
                ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
                ComputationalEngine`Uncond`A[
                  0] ((ComputationalEngine`Uncond`B[
                    ComputationalEngine`Uncond`i][1] 
                   ComputationalEngine`Uncond`pd[
                    ComputationalEngine`Uncond`t, 
                    ComputationalEngine`Uncond`i]) 
                  ComputationalEngine`Uncond`eps["pi"][
                   ComputationalEngine`Uncond`t - 1]), 
                 ComputationalEngine`Uncond`model, 
                 ComputationalEngine`Uncond`stateVarsNoEps], PatternTest[
                  Pattern[ComputationalEngine`Uncond`x, 
                   Blank[Symbol]], MatchQ[
                   SymbolName[#], "B"]& ][
                  Blank[]][
                  Blank[]] :> Context[ComputationalEngine`Uncond`x], 
                Infinity]] === {
              "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"}, 
             DeleteDuplicates[
               Cases[
                ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
                ComputationalEngine`Uncond`A[
                  0] ((ComputationalEngine`Uncond`B[
                    ComputationalEngine`Uncond`i][1] 
                   ComputationalEngine`Uncond`pd[
                    ComputationalEngine`Uncond`t, 
                    ComputationalEngine`Uncond`i]) 
                  ComputationalEngine`Uncond`eps["pi"][
                   ComputationalEngine`Uncond`t - 1]), 
                 ComputationalEngine`Uncond`model, {
                 ComputationalEngine`Uncond`pd}], PatternTest[
                  Pattern[ComputationalEngine`Uncond`x, 
                   Blank[Symbol]], MatchQ[
                   SymbolName[#], "A"]& ][
                  Blank[]] :> Context[ComputationalEngine`Uncond`x], 
                Infinity]] === {
              "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"}, 
             DeleteDuplicates[
               Cases[
                ComputationalEngine`Uncond`evNoEpsStateVarsProduct[
                ComputationalEngine`Uncond`A[
                  0] ((ComputationalEngine`Uncond`B[
                    ComputationalEngine`Uncond`i][1] 
                   ComputationalEngine`Uncond`pd[
                    ComputationalEngine`Uncond`t, 
                    ComputationalEngine`Uncond`i]) 
                  ComputationalEngine`Uncond`eps["pi"][
                   ComputationalEngine`Uncond`t - 1]), 
                 ComputationalEngine`Uncond`model, {
                 ComputationalEngine`Uncond`pd}], PatternTest[
                  Pattern[ComputationalEngine`Uncond`x, 
                   Blank[Symbol]], MatchQ[
                   SymbolName[#], "B"]& ][
                  Blank[]][
                  Blank[]] :> Context[ComputationalEngine`Uncond`x], 
                Infinity]] === {
              "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"}}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.028853`4.610705973580573, "CPUTimeUsed" -> 0.029072999999998572`, 
         "MemoryUsed" -> 26704, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 2775444338745311500 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768833870873`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "4b44dec1-7b3b-47c9-aa2b-e59cc62483b8", "TestID" -> 
         "ComputeUnconditionalExpectations_20231009-5WBQ1Q", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ComputeUnconditionalExpectations.wlt",
          "EvaluationID" -> "26d887ab-929a-4a96-8df4-14c5da9a2faa", "Input" -> 
         HoldForm[
           If[ComputationalEngine`Uncond`longTest, 
            Apply[And, {Simplify[
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                 ComputationalEngine`Uncond`wc[ComputationalEngine`Uncond`t], 
                 ComputationalEngine`Uncond`modNRC]] === 
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[0], 
              Simplify[
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                 ComputationalEngine`Uncond`wc[ComputationalEngine`Uncond`t], 
                 ComputationalEngine`Uncond`modBY]] === 
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[0], 0 === 
              Simplify[
                Subtract[
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                  ComputationalEngine`Uncond`pi[
                    ComputationalEngine`Uncond`t]^3, 
                   ComputationalEngine`Uncond`modNRC] 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                   ComputationalEngine`Uncond`sg[
                   ComputationalEngine`Uncond`t], 
                   ComputationalEngine`Uncond`modNRC], 
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                 ComputationalEngine`Uncond`pi[
                    ComputationalEngine`Uncond`t]^3 
                  ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t],
                   ComputationalEngine`Uncond`modNRC]]], 0 === Simplify[
                Subtract[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                 ComputationalEngine`Uncond`pi[
                    ComputationalEngine`Uncond`t]^3 
                  ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t],
                   ComputationalEngine`Uncond`modNRC], 
                 FernandoDuarte`LongRunRisk`Model`Parameters`Esg (
                  FernandoDuarte`LongRunRisk`Model`Parameters`mup 
                  Subtract[
                   FernandoDuarte`LongRunRisk`Model`Parameters`mup^2, 
                    Divide[
                    3 (FernandoDuarte`LongRunRisk`Model`Parameters`phip^2 + ((
                    2 FernandoDuarte`LongRunRisk`Model`Parameters`phip) 
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhop) 
                    FernandoDuarte`LongRunRisk`Model`Parameters`xip + 
                    FernandoDuarte`LongRunRisk`Model`Parameters`xip^2), 
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhop^2 - 
                    1]])]], Simplify[
                PacletizedResourceFunctions`SetSymbolsContext[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                  ComputationalEngine`Uncond`dc[ComputationalEngine`Uncond`t],
                   ComputationalEngine`Uncond`modNRC]]] === 
              ComputationalEngine`Uncond`muc, FullSimplify[
                Expand[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                  ComputationalEngine`Uncond`dc[
                    ComputationalEngine`Uncond`t]^2, 
                   ComputationalEngine`Uncond`modNRC]]]] === FullSimplify[
                Expand[
                ComputationalEngine`Uncond`muc^2 + (
                  ComputationalEngine`Uncond`phic^2 + ((((2 
                    ComputationalEngine`Uncond`Esg) 
                    ComputationalEngine`Uncond`phip) 
                    ComputationalEngine`Uncond`rhocp) 
                    ComputationalEngine`Uncond`xic + (
                    ComputationalEngine`Uncond`xic^2 (
                    ComputationalEngine`Uncond`Esg^2 + 
                    ComputationalEngine`Uncond`phig^2/(1 - 
                    ComputationalEngine`Uncond`rhog^2)) + 
                    Divide[ComputationalEngine`Uncond`rhocp^2 (
                    ComputationalEngine`Uncond`phip^2 + ((2 
                    ComputationalEngine`Uncond`phip) 
                    ComputationalEngine`Uncond`rhop) 
                    ComputationalEngine`Uncond`xip + 
                    ComputationalEngine`Uncond`xip^2), 1 - 
                    ComputationalEngine`Uncond`rhop^2])))]], FullSimplify[
                Expand[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                  ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                   ComputationalEngine`Uncond`dc[
                    ComputationalEngine`Uncond`t], 
                   ComputationalEngine`Uncond`modNRC]]]] === FullSimplify[
                Expand[
                ComputationalEngine`Uncond`muc 
                  ComputationalEngine`Uncond`mup + ((
                    ComputationalEngine`Uncond`rhocp 
                    ComputationalEngine`Uncond`xip) 
                   ComputationalEngine`Uncond`phip + (((
                    ComputationalEngine`Uncond`xic 
                    ComputationalEngine`Uncond`rhop) 
                    ComputationalEngine`Uncond`phip) 
                    ComputationalEngine`Uncond`Esg + ((
                    ComputationalEngine`Uncond`xic 
                    ComputationalEngine`Uncond`xip) 
                    ComputationalEngine`Uncond`Esg + 
                    Divide[(ComputationalEngine`Uncond`rhocp 
                    ComputationalEngine`Uncond`rhop) (
                    ComputationalEngine`Uncond`xip^2 + ((2 
                    ComputationalEngine`Uncond`rhop) 
                    ComputationalEngine`Uncond`xip) 
                    ComputationalEngine`Uncond`phip + 
                    ComputationalEngine`Uncond`phip^2), 1 - 
                    ComputationalEngine`Uncond`rhop^2])))]], FullSimplify[
                Expand[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                  ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t] 
                   ComputationalEngine`Uncond`dc[
                    ComputationalEngine`Uncond`t], 
                   ComputationalEngine`Uncond`modNRC]]]] === FullSimplify[
                Expand[
                ComputationalEngine`Uncond`muc 
                 ComputationalEngine`Uncond`Esg]], FullSimplify[
                Expand[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                  ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t] 
                   ComputationalEngine`Uncond`sg[
                    ComputationalEngine`Uncond`t + 1], 
                   ComputationalEngine`Uncond`modNRC]]]] === FullSimplify[
                Expand[
                ComputationalEngine`Uncond`Esg^2 + (
                   ComputationalEngine`Uncond`rhog/(1 - 
                   ComputationalEngine`Uncond`rhog^2)) 
                  ComputationalEngine`Uncond`phig^2]], FullSimplify[
                Expand[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                  ComputationalEngine`Uncond`sg[ComputationalEngine`Uncond`t] 
                   ComputationalEngine`Uncond`sg[
                    ComputationalEngine`Uncond`t - 1], 
                   ComputationalEngine`Uncond`modNRC]]]] === FullSimplify[
                Expand[
                ComputationalEngine`Uncond`Esg^2 + (
                   ComputationalEngine`Uncond`rhog/(1 - 
                   ComputationalEngine`Uncond`rhog^2)) 
                  ComputationalEngine`Uncond`phig^2]], FullSimplify[
                Expand[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                  ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                   ComputationalEngine`Uncond`pi[
                    ComputationalEngine`Uncond`t + 1], 
                   ComputationalEngine`Uncond`modNRC]]]] === FullSimplify[
                Expand[
                ComputationalEngine`Uncond`mup^2 + (
                  ComputationalEngine`Uncond`phip 
                   ComputationalEngine`Uncond`xip + 
                  Divide[ComputationalEngine`Uncond`rhop (
                    ComputationalEngine`Uncond`phip^2 + ((2 
                    ComputationalEngine`Uncond`rhop) 
                    ComputationalEngine`Uncond`xip) 
                    ComputationalEngine`Uncond`phip + 
                    ComputationalEngine`Uncond`xip^2), 1 - 
                    ComputationalEngine`Uncond`rhop^2])]], FullSimplify[
                Expand[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                  ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                   ComputationalEngine`Uncond`pi[
                    ComputationalEngine`Uncond`t - 1], 
                   ComputationalEngine`Uncond`modNRC]]]] === FullSimplify[
                Expand[
                ComputationalEngine`Uncond`mup^2 + (
                  ComputationalEngine`Uncond`phip 
                   ComputationalEngine`Uncond`xip + 
                  Divide[ComputationalEngine`Uncond`rhop (
                    ComputationalEngine`Uncond`phip^2 + ((2 
                    ComputationalEngine`Uncond`rhop) 
                    ComputationalEngine`Uncond`xip) 
                    ComputationalEngine`Uncond`phip + 
                    ComputationalEngine`Uncond`xip^2), 1 - 
                    ComputationalEngine`Uncond`rhop^2])]], FullSimplify[
                Expand[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                  ComputationalEngine`Uncond`pi[ComputationalEngine`Uncond`t] 
                   ComputationalEngine`Uncond`sg[
                    ComputationalEngine`Uncond`t + 1], 
                   ComputationalEngine`Uncond`modNRC]]]] === FullSimplify[
                Expand[
                ComputationalEngine`Uncond`Esg 
                 ComputationalEngine`Uncond`mup]], FullSimplify[
                Expand[
                 PacletizedResourceFunctions`SetSymbolsContext[
                  
                  FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                  ComputationalEngine`Uncond`pi[
                    ComputationalEngine`Uncond`t - 1] 
                   ComputationalEngine`Uncond`dc[
                    ComputationalEngine`Uncond`t], 
                   ComputationalEngine`Uncond`modNRC]]]] === FullSimplify[
                Expand[
                ComputationalEngine`Uncond`muc 
                  ComputationalEngine`Uncond`mup + ((
                    ComputationalEngine`Uncond`Esg 
                    ComputationalEngine`Uncond`phip) 
                   ComputationalEngine`Uncond`xic + 
                  Divide[ComputationalEngine`Uncond`rhocp (
                    ComputationalEngine`Uncond`phip^2 + ((2 
                    ComputationalEngine`Uncond`phip) 
                    ComputationalEngine`Uncond`rhop) 
                    ComputationalEngine`Uncond`xip + 
                    ComputationalEngine`Uncond`xip^2), 1 - 
                    ComputationalEngine`Uncond`rhop^2])]]}], 
            Apply[And, {Simplify[
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                 ComputationalEngine`Uncond`wc[ComputationalEngine`Uncond`t], 
                 ComputationalEngine`Uncond`modNRC]] === 
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[0], 
              Simplify[
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE[
                 ComputationalEngine`Uncond`wc[ComputationalEngine`Uncond`t], 
                 ComputationalEngine`Uncond`modBY]] === 
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[0]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.009931`4.1475079797226995, "CPUTimeUsed" -> 0.009957999999999245, 
         "MemoryUsed" -> 12280, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>]|>, "FailureResults" -> <||>, 
    "TestsNotEvaluatedKeys" -> {}, "TestsFailedWrongResultsKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {8001047828715550898, 3749294226594468954, 
     4917318838447304226, 513155689653067479, 6382560270382889009, 
     174828268331918503, 3759753435123310618, 9011123663001365963, 
     1559132820405955604, 8444149036901329782, 2543973251173800148, 
     4189086287516105041, 2990256213070272985, 8102588007710451542, 
     4878187047190166115, 8281207869120163955, 3677843902876492138, 
     2775444338745311500}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.90587682627818*^9, 3.905876883406753*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"b3bb5f7a-13f0-4f80-bd9f-eb9241d25e79"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.90587682627818*^9, 3.905876883410081*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"a2928624-f9fb-4c59-a1d5-058851b75208"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.90587682627818*^9, 3.9058768834106417`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"938f16b0-7798-4103-af88-21fae26197fd"],

Cell[BoxData[{
 RowBox[{"tr", "=", 
  RowBox[{
  "TestReport", "[", 
   "\"\</Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/CreateEulerEq.wlt\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expected", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
        ")"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.9056875447746487`*^9, 3.90568754503517*^9}, {
   3.9057687796612167`*^9, 3.9057687896852217`*^9}, 3.905876631915039*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"ab52a8a9-6ba0-4c63-83a5-96864da8b71f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: CreateEulerEq.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["11", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: CreateEulerEq.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["11", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["11", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "12.4695950000000000001`6.2049746609300565", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                   "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: CreateEulerEq.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     233970411266558511 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876883452329*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a1b683fb-4506-4933-a0a5-35fa1d8eff4a", "TestID" -> 
         "CreateEulerEq_20231009-JS9Q9P", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/CreateEulerEq.wlt", "EvaluationID" -> 
         "90703109-ec8f-4e80-bae1-7f57073fa074", "Input" -> 
         HoldForm[ComputationalEngine`CreateEulerEq`longTest = False; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000027`1.581878761990981, "CPUTimeUsed" -> 
         0.000026999999997556756`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 4619335206370866771 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876883452629*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "480389ce-d22e-4c7c-a411-231d4f178ae1", "TestID" -> 
         "CreateEulerEq_20231009-E61KRF", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/CreateEulerEq.wlt", "EvaluationID" -> 
         "85d209ae-606d-4533-b5bf-ec76b78aaa61", "Input" -> HoldForm[Get[
             Get[
              FileNameJoin[{"FernandoDuarte/LongRunRisk", "Models.wl"}]]]; 
           ComputationalEngine`CreateEulerEq`msp = 
            FernandoDuarte`LongRunRisk`Models; 
           ComputationalEngine`CreateEulerEq`modBY = 
            ComputationalEngine`CreateEulerEq`msp["BY"]; 
           ComputationalEngine`CreateEulerEq`modNRC = 
            ComputationalEngine`CreateEulerEq`msp["NRC"]; 
           ComputationalEngine`CreateEulerEq`modDES = 
            ComputationalEngine`CreateEulerEq`msp["DES"]; 
           ComputationalEngine`CreateEulerEq`mods = {
             ComputationalEngine`CreateEulerEq`modBY, 
              ComputationalEngine`CreateEulerEq`modNRC, 
              ComputationalEngine`CreateEulerEq`modDES}; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.937774`6.122613185487267, "CPUTimeUsed" -> 0.9473599999999998, 
         "MemoryUsed" -> 107898208, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 4830649624329874435 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768843909373`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "19fca1e6-15a3-4f9a-b7dd-cd2764d12d52", "TestID" -> 
         "CreateEulerEq_20231009-P3UDOV", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/CreateEulerEq.wlt", "EvaluationID" -> 
         "70435f59-86b3-481f-9c60-734003a4b55c", "Input" -> 
         HoldForm[
          Needs["FernandoDuarte`LongRunRisk`ComputationalEngine`CreateEulerEq`\
"]; ComputationalEngine`CreateEulerEq`eulereq = 
            FernandoDuarte`LongRunRisk`ComputationalEngine`CreateEulerEq`\
eulereq; ComputationalEngine`CreateEulerEq`nomeulereq = 
            FernandoDuarte`LongRunRisk`ComputationalEngine`CreateEulerEq`\
nomeulereq; 
           ComputationalEngine`CreateEulerEq`findEulerEqConstants = 
            FernandoDuarte`LongRunRisk`ComputationalEngine`CreateEulerEq`\
findEulerEqConstants; ComputationalEngine`CreateEulerEq`ee[
              Pattern[ComputationalEngine`CreateEulerEq`model, 
               Blank[]]] := {
              ComputationalEngine`CreateEulerEq`eulereq[
               ComputationalEngine`CreateEulerEq`retc[
               ComputationalEngine`CreateEulerEq`t + 1], 
               ComputationalEngine`CreateEulerEq`t, 
               ComputationalEngine`CreateEulerEq`model], 
              ComputationalEngine`CreateEulerEq`eulereq[
               ComputationalEngine`CreateEulerEq`ret[
               ComputationalEngine`CreateEulerEq`t + 1, 
                ComputationalEngine`CreateEulerEq`j], 
               ComputationalEngine`CreateEulerEq`t, 
               ComputationalEngine`CreateEulerEq`model], 
              ComputationalEngine`CreateEulerEq`eulereq[
               ComputationalEngine`CreateEulerEq`bondret[
               ComputationalEngine`CreateEulerEq`t + 1, 
                ComputationalEngine`CreateEulerEq`m], 
               ComputationalEngine`CreateEulerEq`t, 
               ComputationalEngine`CreateEulerEq`model], 
              ComputationalEngine`CreateEulerEq`nomeulereq[
               ComputationalEngine`CreateEulerEq`nombondret[
               ComputationalEngine`CreateEulerEq`t + 1, 
                ComputationalEngine`CreateEulerEq`m], 
               ComputationalEngine`CreateEulerEq`t, 
               ComputationalEngine`CreateEulerEq`model]}; 
           ComputationalEngine`CreateEulerEq`eeAll = 
            Map[ComputationalEngine`CreateEulerEq`ee, 
              ComputationalEngine`CreateEulerEq`mods]; 
           ComputationalEngine`CreateEulerEq`coeffWc[
              Pattern[ComputationalEngine`CreateEulerEq`model, 
               Blank[]]] := Table[
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc[
              ComputationalEngine`CreateEulerEq`i], {
              ComputationalEngine`CreateEulerEq`i, 
               Length[
                ComputationalEngine`CreateEulerEq`model["stateVars"][
                ComputationalEngine`CreateEulerEq`t]]}]; 
           ComputationalEngine`CreateEulerEq`coeffPd[
              Pattern[ComputationalEngine`CreateEulerEq`model, 
               Blank[]]] := Table[
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd[
              ComputationalEngine`CreateEulerEq`i], {
              ComputationalEngine`CreateEulerEq`i, 
               Length[
                ComputationalEngine`CreateEulerEq`model["stateVars"][
                ComputationalEngine`CreateEulerEq`t]]}]; 
           ComputationalEngine`CreateEulerEq`coeffBond[
              Pattern[ComputationalEngine`CreateEulerEq`model, 
               Blank[]]] := Table[
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb[
              ComputationalEngine`CreateEulerEq`i], {
              ComputationalEngine`CreateEulerEq`i, 
               Length[
                ComputationalEngine`CreateEulerEq`model["stateVars"][
                ComputationalEngine`CreateEulerEq`t]]}]; 
           ComputationalEngine`CreateEulerEq`coeffNomBond[
              Pattern[ComputationalEngine`CreateEulerEq`model, 
               Blank[]]] := Table[
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb[
              ComputationalEngine`CreateEulerEq`i], {
              ComputationalEngine`CreateEulerEq`i, 
               Length[
                ComputationalEngine`CreateEulerEq`model["stateVars"][
                ComputationalEngine`CreateEulerEq`t]]}]; 
           ComputationalEngine`CreateEulerEq`coeffWcAll = 
            Map[ComputationalEngine`CreateEulerEq`coeffWc, 
              ComputationalEngine`CreateEulerEq`mods]; 
           ComputationalEngine`CreateEulerEq`coeffPdAll = 
            Map[ComputationalEngine`CreateEulerEq`coeffPd, 
              ComputationalEngine`CreateEulerEq`mods]; 
           ComputationalEngine`CreateEulerEq`coeffBondAll = 
            Map[ComputationalEngine`CreateEulerEq`coeffBond, 
              ComputationalEngine`CreateEulerEq`mods]; 
           ComputationalEngine`CreateEulerEq`coeffNomBondAll = 
            Map[ComputationalEngine`CreateEulerEq`coeffNomBond, 
              ComputationalEngine`CreateEulerEq`mods]; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         4.716769`6.824159605372614, "CPUTimeUsed" -> 4.785848000000001, 
         "MemoryUsed" -> 1729560, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 5233513941890050007 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768891081324`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "196c86ca-7b38-4e62-b160-5d9341cc0723", "TestID" -> 
         "CreateEulerEq_20231009-ZCEAB1", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/CreateEulerEq.wlt", "EvaluationID" -> 
         "a5588495-010e-4089-a4bd-bd910824b321", "Input" -> HoldForm[
           Not[Names["*eulereq"] === {}]], "ExpectedMessages" -> HoldForm[{}],
          "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.033518`4.675793094458569, "CPUTimeUsed" -> 
         0.033516000000000545`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 8297045936041069823 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876889142178*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "bee2957c-41df-407c-a3c1-3505911d26f7", "TestID" -> 
         "CreateEulerEq_20231009-W710HJ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/CreateEulerEq.wlt", "EvaluationID" -> 
         "0181bcdc-659a-4f49-92b2-161af80c0261", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Map[Max[
                 Keys[
                  CoefficientRules[#, 
                   DeleteDuplicates[
                    Cases[
                    ComputationalEngine`CreateEulerEq`modBY["stateVars"][
                    ComputationalEngine`CreateEulerEq`t], 
                    Blank[Symbol][ComputationalEngine`CreateEulerEq`t]^
                    Optional[
                    Pattern[ComputationalEngine`CreateEulerEq`p, 
                    Blank[]]], Infinity]]]]] == 1& , 
               ComputationalEngine`CreateEulerEq`ee[
               ComputationalEngine`CreateEulerEq`modBY]], 
              Map[Max[
                 Keys[
                  CoefficientRules[#, 
                   DeleteDuplicates[
                    Cases[
                    ComputationalEngine`CreateEulerEq`modNRC["stateVars"][
                    ComputationalEngine`CreateEulerEq`t], 
                    Blank[Symbol][ComputationalEngine`CreateEulerEq`t]^
                    Optional[
                    Pattern[ComputationalEngine`CreateEulerEq`p, 
                    Blank[]]], Infinity]]]]] == 1& , 
               ComputationalEngine`CreateEulerEq`ee[
               ComputationalEngine`CreateEulerEq`modNRC]], 
              Map[Max[
                 Keys[
                  CoefficientRules[#, 
                   DeleteDuplicates[
                    Cases[
                    ComputationalEngine`CreateEulerEq`modDES["stateVars"][
                    ComputationalEngine`CreateEulerEq`t], 
                    Blank[Symbol][ComputationalEngine`CreateEulerEq`t]^
                    Optional[
                    Pattern[ComputationalEngine`CreateEulerEq`p, 
                    Blank[]]], Infinity]]]]] == 1& , 
               ComputationalEngine`CreateEulerEq`ee[
               ComputationalEngine`CreateEulerEq`modDES]]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         4.845949`6.835893837031927, "CPUTimeUsed" -> 4.9255280000000035`, 
         "MemoryUsed" -> 564056, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 2376432739815585121 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768939887342`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "97a87c35-f51b-45f1-a9a3-80e32a566d6c", "TestID" -> 
         "CreateEulerEq_20231009-7O5MG6", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/CreateEulerEq.wlt", "EvaluationID" -> 
         "f5b9a232-f907-49ce-8f96-cf2f128ca0d4", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[
               Map[Not[
                 FreeQ[
                  Part[
                   Part[ComputationalEngine`CreateEulerEq`eeAll, 
                    Span[1, All], 1], 
                   ComputationalEngine`CreateEulerEq`n], #]]& , 
                Part[
                ComputationalEngine`CreateEulerEq`coeffWcAll, 
                 ComputationalEngine`CreateEulerEq`n]], {
               ComputationalEngine`CreateEulerEq`n, 1, 
                Length[ComputationalEngine`CreateEulerEq`mods]}], 
              Table[
               Map[Not[
                 FreeQ[
                  Part[
                   Part[ComputationalEngine`CreateEulerEq`eeAll, 
                    Span[1, All], 2], 
                   ComputationalEngine`CreateEulerEq`n], #]]& , 
                Part[
                ComputationalEngine`CreateEulerEq`coeffPdAll, 
                 ComputationalEngine`CreateEulerEq`n]], {
               ComputationalEngine`CreateEulerEq`n, 1, 
                Length[ComputationalEngine`CreateEulerEq`mods]}], 
              Table[
               Map[Not[
                 FreeQ[
                  Part[
                   Part[ComputationalEngine`CreateEulerEq`eeAll, 
                    Span[1, All], 3], 
                   ComputationalEngine`CreateEulerEq`n], #]]& , 
                Part[
                ComputationalEngine`CreateEulerEq`coeffBondAll, 
                 ComputationalEngine`CreateEulerEq`n]], {
               ComputationalEngine`CreateEulerEq`n, 1, 
                Length[ComputationalEngine`CreateEulerEq`mods]}], 
              Table[
               Map[Not[
                 FreeQ[
                  Part[
                   Part[ComputationalEngine`CreateEulerEq`eeAll, 
                    Span[1, All], 4], 
                   ComputationalEngine`CreateEulerEq`n], #]]& , 
                Part[
                ComputationalEngine`CreateEulerEq`coeffNomBondAll, 
                 ComputationalEngine`CreateEulerEq`n]], {
               ComputationalEngine`CreateEulerEq`n, 1, 
                Length[ComputationalEngine`CreateEulerEq`mods]}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.001035`3.1654553476249307, "CPUTimeUsed" -> 0.0010349999999981208`,
          "MemoryUsed" -> 23688, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 6282411185614798469 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90587689399026*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "93d055f5-7f29-451f-b95b-1196e202dc19", "TestID" -> 
         "CreateEulerEq_20231009-PUV4QV", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/CreateEulerEq.wlt", "EvaluationID" -> 
         "912dc13d-ef66-4952-8dd2-f3466057edeb", "Input" -> HoldForm[
           If[ComputationalEngine`CreateEulerEq`longTest, 
            Apply[And, 
             Flatten[{
               Map[Count[
                  Cases[
                   First[
                    
                    FernandoDuarte`LongRunRisk`ComputationalEngine`\
CreateEulerEq`findEulerEqConstants[
                    ComputationalEngine`CreateEulerEq`retc[
                    ComputationalEngine`CreateEulerEq`t], #]], 
                   0 == Pattern[ComputationalEngine`CreateEulerEq`x, 
                    BlankSequence[]] :> True], True] === Length[
                   #["stateVars"][ComputationalEngine`CreateEulerEq`t]] + 1& ,
                 ComputationalEngine`CreateEulerEq`mods], 
               Map[Count[
                  Cases[
                   First[
                    
                    FernandoDuarte`LongRunRisk`ComputationalEngine`\
CreateEulerEq`findEulerEqConstants[
                    ComputationalEngine`CreateEulerEq`ret[
                    ComputationalEngine`CreateEulerEq`t, 
                    ComputationalEngine`CreateEulerEq`j], #]], 
                   0 == Pattern[ComputationalEngine`CreateEulerEq`x, 
                    BlankSequence[]] :> True], True] === Length[
                   #["stateVars"][ComputationalEngine`CreateEulerEq`t]] + 1& ,
                 ComputationalEngine`CreateEulerEq`mods], 
               Map[Count[
                  Cases[
                   First[
                    
                    FernandoDuarte`LongRunRisk`ComputationalEngine`\
CreateEulerEq`findEulerEqConstants[
                    ComputationalEngine`CreateEulerEq`bondret[
                    ComputationalEngine`CreateEulerEq`t, 
                    ComputationalEngine`CreateEulerEq`m], #]], 
                   0 == Pattern[ComputationalEngine`CreateEulerEq`x, 
                    BlankSequence[]] :> True], True] === Length[
                   #["stateVars"][ComputationalEngine`CreateEulerEq`t]] + 1& ,
                 ComputationalEngine`CreateEulerEq`mods], 
               Map[Count[
                  Cases[
                   First[
                    
                    FernandoDuarte`LongRunRisk`ComputationalEngine`\
CreateEulerEq`findEulerEqConstants[
                    ComputationalEngine`CreateEulerEq`nombondret[
                    ComputationalEngine`CreateEulerEq`t, 
                    ComputationalEngine`CreateEulerEq`m], #, True]], 
                   0 == Pattern[ComputationalEngine`CreateEulerEq`x, 
                    BlankSequence[]] :> True], True] === Length[
                   #["stateVars"][ComputationalEngine`CreateEulerEq`t]] + 1& ,
                 ComputationalEngine`CreateEulerEq`mods]}]], True]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00002`1.451544993495975, "CPUTimeUsed" -> 0.000021999999997746045`,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 153253179446703035 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768939905753`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "8019d8cc-3825-4569-8773-fe2af5a7f7ce", "TestID" -> 
         "CreateEulerEq_20231009-QFPCG1", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/CreateEulerEq.wlt", "EvaluationID" -> 
         "9ad5f708-ae9d-4f2f-9171-1ca88b6ca4cc", "Input" -> HoldForm[
           If[ComputationalEngine`CreateEulerEq`longTest, 
            Apply[And, 
             Flatten[{
               Map[FreeQ[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`CreateEulerEq`\
findEulerEqConstants[
                  ComputationalEngine`CreateEulerEq`retc[
                  ComputationalEngine`CreateEulerEq`t], #], 
                 ComputationalEngine`CreateEulerEq`t]& , 
                ComputationalEngine`CreateEulerEq`mods], 
               Map[FreeQ[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`CreateEulerEq`\
findEulerEqConstants[
                  ComputationalEngine`CreateEulerEq`ret[
                  ComputationalEngine`CreateEulerEq`t, 
                   ComputationalEngine`CreateEulerEq`j], #], 
                 ComputationalEngine`CreateEulerEq`t]& , 
                ComputationalEngine`CreateEulerEq`mods], 
               Map[FreeQ[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`CreateEulerEq`\
findEulerEqConstants[
                  ComputationalEngine`CreateEulerEq`bondret[
                  ComputationalEngine`CreateEulerEq`t, 
                   ComputationalEngine`CreateEulerEq`m], #], 
                 ComputationalEngine`CreateEulerEq`t]& , 
                ComputationalEngine`CreateEulerEq`mods], 
               Map[FreeQ[
                 
                 FernandoDuarte`LongRunRisk`ComputationalEngine`CreateEulerEq`\
findEulerEqConstants[
                  ComputationalEngine`CreateEulerEq`nombondret[
                  ComputationalEngine`CreateEulerEq`t, 
                   ComputationalEngine`CreateEulerEq`m], #, True], 
                 ComputationalEngine`CreateEulerEq`t]& , 
                ComputationalEngine`CreateEulerEq`mods]}]], True]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000018`1.4057875029353, "CPUTimeUsed" -> 0.00001800000000429236, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 3815497213448085843 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768939908943`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "4048d2a8-6d70-4e7e-8979-6279530728fc", "TestID" -> 
         "CreateEulerEq_20231009-8B03L0", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/CreateEulerEq.wlt", "EvaluationID" -> 
         "7c1eb642-5092-4d20-84dd-b1f66acd7029", "Input" -> HoldForm[
           If[ComputationalEngine`CreateEulerEq`longTest, 
            Apply[And, 
             
             Flatten[{
              Map[FernandoDuarte`LongRunRisk`ComputationalEngine`\
CreateEulerEq`findEulerEqConstants[
                  ComputationalEngine`CreateEulerEq`retc[
                  ComputationalEngine`CreateEulerEq`t], #]& , 
                 ComputationalEngine`CreateEulerEq`mods] === 
               Map[FernandoDuarte`LongRunRisk`ComputationalEngine`\
CreateEulerEq`findEulerEqConstants[
                  ComputationalEngine`CreateEulerEq`retc[
                  ComputationalEngine`CreateEulerEq`t + 1], #]& , 
                 ComputationalEngine`CreateEulerEq`mods], 
               Map[FernandoDuarte`LongRunRisk`ComputationalEngine`\
CreateEulerEq`findEulerEqConstants[
                  ComputationalEngine`CreateEulerEq`ret[
                  ComputationalEngine`CreateEulerEq`t, 
                   ComputationalEngine`CreateEulerEq`j], #]& , 
                 ComputationalEngine`CreateEulerEq`mods] === 
               Map[FernandoDuarte`LongRunRisk`ComputationalEngine`\
CreateEulerEq`findEulerEqConstants[
                  ComputationalEngine`CreateEulerEq`ret[
                  ComputationalEngine`CreateEulerEq`t + 1, 
                   ComputationalEngine`CreateEulerEq`j], #]& , 
                 ComputationalEngine`CreateEulerEq`mods], 
               Map[FernandoDuarte`LongRunRisk`ComputationalEngine`\
CreateEulerEq`findEulerEqConstants[
                  ComputationalEngine`CreateEulerEq`bondret[
                  ComputationalEngine`CreateEulerEq`t, 
                   ComputationalEngine`CreateEulerEq`m], #]& , 
                 ComputationalEngine`CreateEulerEq`mods] === 
               Map[FernandoDuarte`LongRunRisk`ComputationalEngine`\
CreateEulerEq`findEulerEqConstants[
                  ComputationalEngine`CreateEulerEq`bondret[
                  ComputationalEngine`CreateEulerEq`t + 1, 
                   ComputationalEngine`CreateEulerEq`m], #]& , 
                 ComputationalEngine`CreateEulerEq`mods], 
               Map[FernandoDuarte`LongRunRisk`ComputationalEngine`\
CreateEulerEq`findEulerEqConstants[
                  ComputationalEngine`CreateEulerEq`nombondret[
                  ComputationalEngine`CreateEulerEq`t, 
                   ComputationalEngine`CreateEulerEq`m], #, True]& , 
                 ComputationalEngine`CreateEulerEq`mods] === 
               Map[FernandoDuarte`LongRunRisk`ComputationalEngine`\
CreateEulerEq`findEulerEqConstants[
                  ComputationalEngine`CreateEulerEq`nombondret[
                  ComputationalEngine`CreateEulerEq`t + 1, 
                   ComputationalEngine`CreateEulerEq`m], #, True]& , 
                 ComputationalEngine`CreateEulerEq`mods]}]], True]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000017`1.3809639192102687, "CPUTimeUsed" -> 
         0.000019000000001767603`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 7783190168533229791 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876893991205*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "ef2f6a22-6b6d-42e2-92a7-12d0fb8b04b4", "TestID" -> 
         "CreateEulerEq_20231009-A7HZBV", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/CreateEulerEq.wlt", "EvaluationID" -> 
         "ae636b4a-897f-457d-b8d5-7dd275584822", "Input" -> HoldForm[
           If[
           ComputationalEngine`CreateEulerEq`longTest, {
             "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"} === 
            DeleteDuplicates[
              Flatten[{
                Map[Context[
                  Evaluate[#]]& , 
                 Flatten[
                  Map[Part[
                    Flatten[
                    Rest[
                    
                    FernandoDuarte`LongRunRisk`ComputationalEngine`\
CreateEulerEq`findEulerEqConstants[
                    ComputationalEngine`CreateEulerEq`retc[
                    ComputationalEngine`CreateEulerEq`t], #]]], 
                    Span[1, All], 0]& , 
                   ComputationalEngine`CreateEulerEq`mods]]], 
                Map[Context[
                  Evaluate[#]]& , 
                 Flatten[
                  Map[Part[
                    Flatten[
                    Rest[
                    
                    FernandoDuarte`LongRunRisk`ComputationalEngine`\
CreateEulerEq`findEulerEqConstants[
                    ComputationalEngine`CreateEulerEq`ret[
                    ComputationalEngine`CreateEulerEq`t, 
                    ComputationalEngine`CreateEulerEq`j], #]]], 
                    Span[1, All], 0, 0]& , 
                   ComputationalEngine`CreateEulerEq`mods]]], 
                Map[Context[
                  Evaluate[#]]& , 
                 Flatten[
                  Map[Part[
                    Flatten[
                    Rest[
                    
                    FernandoDuarte`LongRunRisk`ComputationalEngine`\
CreateEulerEq`findEulerEqConstants[
                    ComputationalEngine`CreateEulerEq`bondret[
                    ComputationalEngine`CreateEulerEq`t, 
                    ComputationalEngine`CreateEulerEq`m], #]]], 
                    Span[1, All], 0, 0]& , 
                   ComputationalEngine`CreateEulerEq`mods]]], 
                Map[Context[
                  Evaluate[#]]& , 
                 Flatten[
                  Map[Part[
                    Flatten[
                    Rest[
                    
                    FernandoDuarte`LongRunRisk`ComputationalEngine`\
CreateEulerEq`findEulerEqConstants[
                    ComputationalEngine`CreateEulerEq`nombondret[
                    ComputationalEngine`CreateEulerEq`t, 
                    ComputationalEngine`CreateEulerEq`m], #, True]]], 
                    Span[1, All], 0, 0]& , 
                   ComputationalEngine`CreateEulerEq`mods]]]}]], True]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000017`1.3809639192102687, "CPUTimeUsed" -> 
         0.000018000000000739647`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 1494862492671525146 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768939915934`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "837f27b9-ce80-4f9b-b403-ee9460cd39e0", "TestID" -> 
         "CreateEulerEq_20231009-DUWLJS", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/CreateEulerEq.wlt", "EvaluationID" -> 
         "6aaa6b01-bd20-402f-85c4-5d9022b38385", "Input" -> 
         HoldForm[ComputationalEngine`CreateEulerEq`checkBoolean[
              Pattern[ComputationalEngine`CreateEulerEq`model, 
               Blank[]]] := 
            Module[{ComputationalEngine`CreateEulerEq`e0, 
               ComputationalEngine`CreateEulerEq`e1, 
               ComputationalEngine`CreateEulerEq`e2, 
               ComputationalEngine`CreateEulerEq`e3, 
               ComputationalEngine`CreateEulerEq`e0p, 
               ComputationalEngine`CreateEulerEq`e1p, 
               ComputationalEngine`CreateEulerEq`e2p, 
               ComputationalEngine`CreateEulerEq`e3p}, 
              ComputationalEngine`CreateEulerEq`e0 = 
               FernandoDuarte`LongRunRisk`ComputationalEngine`CreateEulerEq`\
findEulerEqConstants[
                 ComputationalEngine`CreateEulerEq`retc[
                 ComputationalEngine`CreateEulerEq`t], 
                 ComputationalEngine`CreateEulerEq`model]; 
              ComputationalEngine`CreateEulerEq`e1 = 
               FernandoDuarte`LongRunRisk`ComputationalEngine`CreateEulerEq`\
findEulerEqConstants[
                 ComputationalEngine`CreateEulerEq`ret[
                 ComputationalEngine`CreateEulerEq`t, 1], 
                 ComputationalEngine`CreateEulerEq`model]; 
              ComputationalEngine`CreateEulerEq`e2 = 
               FernandoDuarte`LongRunRisk`ComputationalEngine`CreateEulerEq`\
findEulerEqConstants[
                 ComputationalEngine`CreateEulerEq`bondret[
                 ComputationalEngine`CreateEulerEq`t, 
                  ComputationalEngine`CreateEulerEq`m], 
                 ComputationalEngine`CreateEulerEq`model]; 
              ComputationalEngine`CreateEulerEq`e3 = 
               FernandoDuarte`LongRunRisk`ComputationalEngine`CreateEulerEq`\
findEulerEqConstants[
                 ComputationalEngine`CreateEulerEq`nombondret[
                 ComputationalEngine`CreateEulerEq`t, 
                  ComputationalEngine`CreateEulerEq`m], 
                 ComputationalEngine`CreateEulerEq`model, True]; 
              ComputationalEngine`CreateEulerEq`e0p = Flatten[{
                  Normal[
                   ComputationalEngine`CreateEulerEq`model["parameters"]], 
                  Thread[Part[ComputationalEngine`CreateEulerEq`e0, 2] -> 4], 
                  FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`Ewc -> 
                  4}]; ComputationalEngine`CreateEulerEq`e1p = 
               Flatten[{
                 ComputationalEngine`CreateEulerEq`e0p, 
                  FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd[
                    Blank[]] -> 4, 
                  FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`Epd[
                    Blank[]] -> 4}]; 
              ComputationalEngine`CreateEulerEq`e2p = 
               Flatten[{
                 ComputationalEngine`CreateEulerEq`e0p, 
                  FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb[
                   
                    Pattern[ComputationalEngine`CreateEulerEq`m, 
                    Blank[]]] -> 4}]; 
              ComputationalEngine`CreateEulerEq`e3p = 
               Flatten[{
                 ComputationalEngine`CreateEulerEq`e0p, 
                  FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb[
                    Pattern[ComputationalEngine`CreateEulerEq`m, 
                    Blank[]]] -> 4}]; {
                ReplaceAll[
                 Part[ComputationalEngine`CreateEulerEq`e0, 1], 
                 ComputationalEngine`CreateEulerEq`e0p], 
                ReplaceAll[
                 Part[ComputationalEngine`CreateEulerEq`e1, 1], 
                 ComputationalEngine`CreateEulerEq`e1p], 
                ReplaceAll[
                 Part[ComputationalEngine`CreateEulerEq`e2, 1], 
                 ComputationalEngine`CreateEulerEq`e2p], 
                ReplaceAll[
                 Part[ComputationalEngine`CreateEulerEq`e3, 1], 
                 ComputationalEngine`CreateEulerEq`e3p]}]; Apply[And, 
             Map[BooleanQ, 
              Flatten[
               ComputationalEngine`CreateEulerEq`checkBoolean[
               ComputationalEngine`CreateEulerEq`modBY]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         1.934451`6.437072731269392, "CPUTimeUsed" -> 1.961354, "MemoryUsed" -> 
         12784392, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>]|>, "FailureResults" -> <||>, 
    "TestsNotEvaluatedKeys" -> {}, "TestsFailedWrongResultsKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {233970411266558511, 4619335206370866771, 
     4830649624329874435, 5233513941890050007, 8297045936041069823, 
     2376432739815585121, 6282411185614798469, 153253179446703035, 
     3815497213448085843, 7783190168533229791, 1494862492671525146}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.9058768385110483`*^9, 3.9058768959430113`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"45d29583-e6e9-405b-9389-f6764bf908e0"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.9058768385110483`*^9, 3.905876895946787*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"b26bf99f-ef14-48f3-9f08-d1ba3d9e50ef"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.9058768385110483`*^9, 3.905876895947373*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"8955a267-5f1c-4522-a398-2cf03e65b17b"],

Cell[BoxData[{
 RowBox[{"tr", "=", 
  RowBox[{
  "TestReport", "[", 
   "\"\</Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/SolveEulerEq.wlt\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expected", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
        ")"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.905097131309546*^9, 3.905097132763056*^9}, {
   3.905687546464522*^9, 3.905687548255028*^9}, 3.9057687992907124`*^9, 
   3.905876631915248*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"2f5705e2-54a0-49dc-bed2-96972ce91fe4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: SolveEulerEq.wlt\"", "SummaryItem"]}],
                "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: SolveEulerEq.wlt\"", "SummaryItem"]}],
                "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "1.413368`5.999740256416601", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: SolveEulerEq.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     6794615700785760804 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90590464710232*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "713673cb-0366-4c5a-a350-ab5daa88906c", "TestID" -> 
         "SolveEulerEq_20231010-M465RI", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/SolveEulerEq.wlt", "EvaluationID" -> 
         "53d7e405-052f-4d56-9810-e6047ec84ba0", "Input" -> 
         HoldForm[ComputationalEngine`SolveEulerEq`longTest = False; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000038`1.730298594448804, "CPUTimeUsed" -> 0.00003899999999967818, 
         "MemoryUsed" -> 2760, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 6771516488851705289 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905904647104528*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "088fc529-2131-49bb-9696-75e93aeb850b", "TestID" -> 
         "SolveEulerEq_20231010-OEH87E", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/SolveEulerEq.wlt", "EvaluationID" -> 
         "975dbaa8-e24b-48ec-8190-b44a33e4fdb1", "Input" -> HoldForm[Off[
             MessageName[General, "stop"]]; If[
             Not[ComputationalEngine`SolveEulerEq`longTest], 
             Off[
              MessageName[FindRoot, "cvmit"]]]; 
           Needs["FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
"]; $ContextPath = DeleteDuplicates[
              
              Prepend[$ContextPath, 
               "FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`"]]; Get[
             Get[
              FileNameJoin[{"FernandoDuarte/LongRunRisk", "Models.wl"}]]]; 
           ComputationalEngine`SolveEulerEq`msp = 
            FernandoDuarte`LongRunRisk`Models; 
           ComputationalEngine`SolveEulerEq`modBY = 
            ComputationalEngine`SolveEulerEq`msp["BY"]; 
           ComputationalEngine`SolveEulerEq`modBKY = 
            ComputationalEngine`SolveEulerEq`msp["BKY"]; 
           ComputationalEngine`SolveEulerEq`modNRC = 
            ComputationalEngine`SolveEulerEq`msp["NRC"]; 
           ComputationalEngine`SolveEulerEq`modDES = 
            ComputationalEngine`SolveEulerEq`msp["DES"]; 
           ComputationalEngine`SolveEulerEq`modNRCStochVol = 
            ComputationalEngine`SolveEulerEq`msp["NRCStochVol"]; 
           ComputationalEngine`SolveEulerEq`mods = 
            If[ComputationalEngine`SolveEulerEq`longTest, {
              ComputationalEngine`SolveEulerEq`modBY, 
               ComputationalEngine`SolveEulerEq`modBKY, 
               ComputationalEngine`SolveEulerEq`modNRC, 
               ComputationalEngine`SolveEulerEq`modDES, 
               ComputationalEngine`SolveEulerEq`modNRCStochVol}, {
              ComputationalEngine`SolveEulerEq`modBKY, 
               ComputationalEngine`SolveEulerEq`modDES}]; 
           ComputationalEngine`SolveEulerEq`coeffsQ[
              Pattern[ComputationalEngine`SolveEulerEq`sol, 
               Blank[]], 
              Pattern[ComputationalEngine`SolveEulerEq`coeffName, 
               Blank[]], 
              Pattern[ComputationalEngine`SolveEulerEq`numStateVars, 
               Blank[]], 
              Optional[
               Pattern[ComputationalEngine`SolveEulerEq`numAssets, 
                Blank[]], 0], 
              Optional[
               Pattern[ComputationalEngine`SolveEulerEq`bond, 
                Blank[]], 0]] := Apply[And, {
               If[ComputationalEngine`SolveEulerEq`numAssets == 0, Sort[
                  Cases[
                   Map[Keys, ComputationalEngine`SolveEulerEq`sol], 
                   ComputationalEngine`SolveEulerEq`coeffName[
                    Pattern[ComputationalEngine`SolveEulerEq`i, 
                    Blank[Integer]]] :> ComputationalEngine`SolveEulerEq`i]] === 
                Range[ComputationalEngine`SolveEulerEq`numStateVars + 1] - 1, 
                Sort[
                  
                  Tuples[{
                   Range[ComputationalEngine`SolveEulerEq`numAssets] - 
                    ComputationalEngine`SolveEulerEq`bond, 
                    Range[ComputationalEngine`SolveEulerEq`numStateVars + 1] - 
                    1}]] == Sort[
                  Cases[
                   Map[Keys, ComputationalEngine`SolveEulerEq`sol], 
                   ComputationalEngine`SolveEulerEq`coeffName[
                    Pattern[ComputationalEngine`SolveEulerEq`i, 
                    Blank[Integer]]][
                    Pattern[ComputationalEngine`SolveEulerEq`j, 
                    Blank[Integer]]] :> {
                    ComputationalEngine`SolveEulerEq`i, 
                    ComputationalEngine`SolveEulerEq`j}]]], 
               Apply[And, 
                Map[MatchQ[#, ComputationalEngine`SolveEulerEq`coeffName]& , 
                 Cases[
                  Map[Keys, ComputationalEngine`SolveEulerEq`sol], 
                  Pattern[ComputationalEngine`SolveEulerEq`var, 
                    Blank[]][
                    Pattern[ComputationalEngine`SolveEulerEq`i, 
                    Blank[Integer]]][
                    Pattern[ComputationalEngine`SolveEulerEq`j, 
                    Blank[Integer]]] :> 
                  ComputationalEngine`SolveEulerEq`var]]], 
               Apply[And, 
                Map[MatchQ[#, 
                  StringDrop[
                   ToString[
                   ComputationalEngine`SolveEulerEq`coeffName], -1]]& , 
                 Cases[
                  Map[Keys, ComputationalEngine`SolveEulerEq`sol], 
                  Pattern[ComputationalEngine`SolveEulerEq`var, 
                    Blank[]][
                    Pattern[ComputationalEngine`SolveEulerEq`i, 
                    Blank[Integer]]][
                    Pattern[ComputationalEngine`SolveEulerEq`j, 
                    Blank[Integer]]] :> 
                  Context[ComputationalEngine`SolveEulerEq`var]]]], 
               Apply[And, 
                Map[NumberQ, 
                 Map[Values, ComputationalEngine`SolveEulerEq`sol]]]}]; 
           ComputationalEngine`SolveEulerEq`opts = {{
              "initialGuess" -> <|"Ewc" -> {4.6}, "Epd" -> {{5.6}}|>}, {
              "PrintResidualsNorm" -> False}, {"MaxIterations" -> 1}, {
              "FindRootOptions" -> {"MaxIterations" -> 1}}, {
              "initialGuess" -> <|"Ewc" -> {4.6}, "Epd" -> {{5.6}}|>, 
               "PrintResidualsNorm" -> False}, {
              "initialGuess" -> <|"Ewc" -> {4.6}, "Epd" -> {{5.6}}|>, 
               "PrintResidualsNorm" -> False, "MaxIterations" -> 1}, {
              "initialGuess" -> <|"Ewc" -> {4.6}, "Epd" -> {{5.6}}|>, 
               "MaxIterations" -> 1}, {
              "PrintResidualsNorm" -> False, "MaxIterations" -> 1}, {
              "initialGuess" -> <|"Ewc" -> {4.6}, "Epd" -> {{5.6}}|>, 
               "PrintResidualsNorm" -> False, 
               "FindRootOptions" -> {
                WorkingPrecision -> $MachinePrecision}}, {
              "initialGuess" -> <|"Ewc" -> {4.6}, "Epd" -> {{5.6}}|>, 
               "PrintResidualsNorm" -> False, "MaxIterations" -> 1, 
               "FindRootOptions" -> {
                WorkingPrecision -> $MachinePrecision}}, {
              "initialGuess" -> <|"Ewc" -> {4.6}, "Epd" -> {{5.6}}|>, 
               "MaxIterations" -> 1, 
               "FindRootOptions" -> {
                WorkingPrecision -> $MachinePrecision}}, {
              "PrintResidualsNorm" -> False, "MaxIterations" -> 1, 
               "FindRootOptions" -> {WorkingPrecision -> $MachinePrecision}}}; 
           ComputationalEngine`SolveEulerEq`optsRepeated = {{
              "initialGuess" -> <|"Ewc" -> {4.6}, "Epd" -> {{5.6}}|>, 
               "PrintResidualsNorm" -> False, 
               "FindRootOptions" -> {WorkingPrecision -> $MachinePrecision}, 
               WorkingPrecision -> $MachinePrecision}, {
              "initialGuess" -> <|"Ewc" -> {4.6}, "Epd" -> {{5.6}}|>, 
               "PrintResidualsNorm" -> False, "MaxIterations" -> 1, 
               "FindRootOptions" -> {WorkingPrecision -> $MachinePrecision}, 
               WorkingPrecision -> $MachinePrecision}, {
              "initialGuess" -> <|"Ewc" -> {4.6}, "Epd" -> {{5.6}}|>, 
               "MaxIterations" -> 1, 
               "FindRootOptions" -> {WorkingPrecision -> $MachinePrecision}, 
               WorkingPrecision -> $MachinePrecision}, {
              "PrintResidualsNorm" -> False, "MaxIterations" -> 1, 
               "FindRootOptions" -> {WorkingPrecision -> $MachinePrecision}, 
               WorkingPrecision -> $MachinePrecision}, {
              "PrintResidualsNorm" -> False, "MaxIterations" -> 1, 
               "FindRootOptions" -> {"MaxIterations" -> 5}}, {
               "PrintResidualsNorm" -> False, "MaxIterations" -> 1, 
                "FindRootOptions" -> {
                 "MaxIterations" -> 5, 
                  WorkingPrecision -> $MachinePrecision}}; {
               "PrintResidualsNorm" -> False, "MaxIterations" -> 1, 
                "FindRootOptions" -> {
                 "MaxIterations" -> 5, WorkingPrecision -> $MachinePrecision},
                 WorkingPrecision -> $MachinePrecision}}; 
           If[ComputationalEngine`SolveEulerEq`longTest, 
             ComputationalEngine`SolveEulerEq`optsMany = Join[
                Part[ComputationalEngine`SolveEulerEq`opts, 
                 Span[5, -1]], ComputationalEngine`SolveEulerEq`optsRepeated]; 
             Null, ComputationalEngine`SolveEulerEq`optsMany = Join[
                Part[ComputationalEngine`SolveEulerEq`opts, 
                 Span[5, 6]], 
                Part[ComputationalEngine`SolveEulerEq`optsRepeated, 
                 Span[1, 2]]]; Null]; 
           Do[ComputationalEngine`SolveEulerEq`ind = 0; 
             ComputationalEngine`SolveEulerEq`numStateVars = Length[
                ComputationalEngine`SolveEulerEq`model["stateVars"][
                ComputationalEngine`SolveEulerEq`t]]; 
             ComputationalEngine`SolveEulerEq`numStocks = 
              ComputationalEngine`SolveEulerEq`model["numStocks"]; 
             ComputationalEngine`SolveEulerEq`coeffsQWc[
                Pattern[ComputationalEngine`SolveEulerEq`sol, 
                 Blank[]]] := 
              ComputationalEngine`SolveEulerEq`coeffsQ[
               ComputationalEngine`SolveEulerEq`sol, 
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, 
                ComputationalEngine`SolveEulerEq`numStateVars]; 
             ComputationalEngine`SolveEulerEq`coeffsQPd[
                Pattern[ComputationalEngine`SolveEulerEq`sol, 
                 Blank[]]] := 
              ComputationalEngine`SolveEulerEq`coeffsQ[
               ComputationalEngine`SolveEulerEq`sol, 
                Head[
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd],
                 ComputationalEngine`SolveEulerEq`numStateVars, 
                ComputationalEngine`SolveEulerEq`numStocks]; 
             ComputationalEngine`SolveEulerEq`coeffsQBond[
                Pattern[ComputationalEngine`SolveEulerEq`sol, 
                 Blank[]], 
                Pattern[ComputationalEngine`SolveEulerEq`maxMaturity, 
                 Blank[]]] := 
              ComputationalEngine`SolveEulerEq`coeffsQ[
               ComputationalEngine`SolveEulerEq`sol, 
                Head[
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb], 
                ComputationalEngine`SolveEulerEq`numStateVars, 
                ComputationalEngine`SolveEulerEq`maxMaturity + 1, 1]; 
             ComputationalEngine`SolveEulerEq`coeffsQNomBond[
                Pattern[ComputationalEngine`SolveEulerEq`sol, 
                 Blank[]], 
                Pattern[ComputationalEngine`SolveEulerEq`maxMaturity, 
                 Blank[]]] := 
              ComputationalEngine`SolveEulerEq`coeffsQ[
               ComputationalEngine`SolveEulerEq`sol, 
                Head[
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb],
                 ComputationalEngine`SolveEulerEq`numStateVars, 
                ComputationalEngine`SolveEulerEq`maxMaturity + 1, 1]; 
             ComputationalEngine`SolveEulerEq`updateCoeffs = 
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
updateCoeffs; 
             ComputationalEngine`SolveEulerEq`updateCoeffsSol = 
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`updateCoeffsSol; 
             ComputationalEngine`SolveEulerEq`updateCoeffsWc = 
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`updateCoeffsWc; 
             ComputationalEngine`SolveEulerEq`updateCoeffsPd = 
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`updateCoeffsPd; 
             ComputationalEngine`SolveEulerEq`updateCoeffsBond = 
              FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`updateCoeffsBond; 
             ComputationalEngine`SolveEulerEq`newParameters = {
               ComputationalEngine`SolveEulerEq`delta -> 0.99}; 
             ComputationalEngine`SolveEulerEq`guessCoeffsSolution = {
               ComputationalEngine`SolveEulerEq`A[0] -> 4.6}; 
             If[ComputationalEngine`SolveEulerEq`longTest, 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = 
                Apply[And, {
                  ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model] == 
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, {}] == 
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, {}, {}] == 
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, {}, {}, {}] == 
                   ComputationalEngine`SolveEulerEq`updateCoeffsSol[
                    ComputationalEngine`SolveEulerEq`model, {}, {}], 
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    ComputationalEngine`SolveEulerEq`newParameters] == 
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    ComputationalEngine`SolveEulerEq`newParameters, {}] == 
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    ComputationalEngine`SolveEulerEq`newParameters, {}, {}] == 
                   ComputationalEngine`SolveEulerEq`updateCoeffsSol[
                    ComputationalEngine`SolveEulerEq`model, 
                    ComputationalEngine`SolveEulerEq`newParameters, {}], 
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    ComputationalEngine`SolveEulerEq`newParameters, 
                    ComputationalEngine`SolveEulerEq`guessCoeffsSolution] == 
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    ComputationalEngine`SolveEulerEq`newParameters, 
                    ComputationalEngine`SolveEulerEq`guessCoeffsSolution] == 
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    ComputationalEngine`SolveEulerEq`newParameters, 
                    ComputationalEngine`SolveEulerEq`guessCoeffsSolution, {}, \
{}] == ComputationalEngine`SolveEulerEq`updateCoeffsSol[
                    ComputationalEngine`SolveEulerEq`model, 
                    ComputationalEngine`SolveEulerEq`newParameters, 
                    ComputationalEngine`SolveEulerEq`guessCoeffsSolution]}]; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; Null]; 
             If[
              ComputationalEngine`SolveEulerEq`longTest, 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = Quiet[
                  Apply[And, 
                   Flatten[{
                    Map[ComputationalEngine`SolveEulerEq`coeffsQWc, 
                    Map[{
                    ComputationalEngine`SolveEulerEq`updateCoeffsSol[
                    ComputationalEngine`SolveEulerEq`model, {}, {}, #], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, {}, {}, 
                    Sequence[#]], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, {}, {}, 
                    Apply[Sequence, #]], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, {}, #], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    Sequence[{}], #], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    Apply[Sequence, {}], #], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, #], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    Sequence[#]], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    Apply[Sequence, #]], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    Most[#], 
                    Last[#]], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    Sequence[
                    Most[#]], 
                    Last[#]]}& , 
                    Part[ComputationalEngine`SolveEulerEq`opts, 
                    Span[1, 4]]], {2}], 
                    Map[ComputationalEngine`SolveEulerEq`coeffsQWc, 
                    Map[{
                    ComputationalEngine`SolveEulerEq`updateCoeffsSol[
                    ComputationalEngine`SolveEulerEq`model, {}, {}, #], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    First[#], 
                    Rest[#]], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    First[#], 
                    Sequence[
                    Rest[#]]], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    Sequence[
                    First[#], 
                    Rest[#]]], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    Most[#], {
                    Last[#]}], 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, {
                    First[#]}, 
                    Rest[#]]}& , ComputationalEngine`SolveEulerEq`optsMany], {
                    2}]}]]]; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; Null]; 
             ComputationalEngine`SolveEulerEq`optsWc = {
               "MaxIterations" -> 100}; 
             ComputationalEngine`SolveEulerEq`solWc = 
              ComputationalEngine`SolveEulerEq`updateCoeffs[
               ComputationalEngine`SolveEulerEq`model, 
                ComputationalEngine`SolveEulerEq`optsWc]; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = 
              ComputationalEngine`SolveEulerEq`solWc == 
               ComputationalEngine`SolveEulerEq`updateCoeffsSol[
                ComputationalEngine`SolveEulerEq`model, {}, {}, 
                 ComputationalEngine`SolveEulerEq`optsWc] == 
               ComputationalEngine`SolveEulerEq`updateCoeffsWc[
                 ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                 "wc"], 
                 ComputationalEngine`SolveEulerEq`model["params"], {}, 
                 ComputationalEngine`SolveEulerEq`optsWc]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             If[ComputationalEngine`SolveEulerEq`longTest, 
               ComputationalEngine`SolveEulerEq`solWc1 = 
                ComputationalEngine`SolveEulerEq`updateCoeffs[
                 ComputationalEngine`SolveEulerEq`model, "MaxIterations" -> 1,
                   "initialGuess" -> <|"Ewc" -> {3}|>]; 
               ComputationalEngine`SolveEulerEq`solWc2 = 
                ComputationalEngine`SolveEulerEq`updateCoeffs[
                 ComputationalEngine`SolveEulerEq`model, "MaxIterations" -> 1,
                   "initialGuess" -> <|"Ewc" -> {1}|>]; 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = ReplaceAll[
                   FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[0],
                    ComputationalEngine`SolveEulerEq`solWc1] > ReplaceAll[
                   FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[0],
                    ComputationalEngine`SolveEulerEq`solWc2]; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; 
               ComputationalEngine`SolveEulerEq`solWc1 = 
                ComputationalEngine`SolveEulerEq`updateCoeffs[
                 ComputationalEngine`SolveEulerEq`model, 
                  "FindRootOptions" -> {"MaxIterations" -> 1}, 
                  "initialGuess" -> <|"Ewc" -> {3}|>]; 
               ComputationalEngine`SolveEulerEq`solWc2 = 
                ComputationalEngine`SolveEulerEq`updateCoeffs[
                 ComputationalEngine`SolveEulerEq`model, 
                  "FindRootOptions" -> {"MaxIterations" -> 1}, 
                  "initialGuess" -> <|"Ewc" -> {1}|>]; 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = ReplaceAll[
                   FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[0],
                    ComputationalEngine`SolveEulerEq`solWc1] > ReplaceAll[
                   FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[0],
                    ComputationalEngine`SolveEulerEq`solWc2]; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; 
               ComputationalEngine`SolveEulerEq`m1 = 
                Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
                  Reap[
                  Module[{}, 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, "MaxIterations" -> 
                    1, "initialGuess" -> <|"Ewc" -> {4}|>]; 
                    Null]; $MessageList]]; 
               ComputationalEngine`SolveEulerEq`m2 = 
                Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
                  Reap[
                  Module[{}, 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, "MaxIterations" -> 
                    3, "initialGuess" -> <|"Ewc" -> {4}|>]; 
                    Null]; $MessageList]]; 
               ComputationalEngine`SolveEulerEq`m3 = 
                Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
                  Reap[
                  Module[{}, 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    "FindRootOptions" -> {"MaxIterations" -> 1}, 
                    "initialGuess" -> <|"Ewc" -> {4}|>]; 
                    Null]; $MessageList]]; 
               ComputationalEngine`SolveEulerEq`m4 = 
                Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
                  Reap[
                  Module[{}, 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    "FindRootOptions" -> {"MaxIterations" -> 3}, 
                    "initialGuess" -> <|"Ewc" -> {4}|>]; 
                    Null]; $MessageList]]; 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = 
                Apply[And, {ReleaseHold[
                    Last[ComputationalEngine`SolveEulerEq`m1]] == {{1}}, 
                   ReleaseHold[
                    Last[ComputationalEngine`SolveEulerEq`m2]] == {{3}}, 
                   ReleaseHold[
                    Last[ComputationalEngine`SolveEulerEq`m3]] == {{1}}, 
                   ReleaseHold[
                    Last[ComputationalEngine`SolveEulerEq`m4]] == {{3}}}]; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; 
               ComputationalEngine`SolveEulerEq`m1 = 
                Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
                  Reap[
                  Module[{}, 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, "MaxIterations" -> 
                    3, "FindRootOptions" -> {"MaxIterations" -> 1}, 
                    "initialGuess" -> <|"Ewc" -> {4}|>]; 
                    Null]; $MessageList]]; 
               ComputationalEngine`SolveEulerEq`m2 = 
                Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
                  Reap[
                  Module[{}, 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    "FindRootOptions" -> {"MaxIterations" -> 1}, 
                    "MaxIterations" -> 3, "initialGuess" -> <|"Ewc" -> {4}|>]; 
                    Null]; $MessageList]]; 
               ComputationalEngine`SolveEulerEq`m3 = 
                Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
                  Reap[
                  Module[{}, 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, "MaxIterations" -> 
                    1, "FindRootOptions" -> {"MaxIterations" -> 3}, 
                    "initialGuess" -> <|"Ewc" -> {4}|>]; 
                    Null]; $MessageList]]; 
               ComputationalEngine`SolveEulerEq`m4 = 
                Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
                  Reap[
                  Module[{}, 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    "FindRootOptions" -> {"MaxIterations" -> 3}, 
                    "MaxIterations" -> 1, "initialGuess" -> <|"Ewc" -> {4}|>]; 
                    Null]; $MessageList]]; 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = 
                Apply[And, {ReleaseHold[
                    Last[ComputationalEngine`SolveEulerEq`m1]] == {{3}}, 
                   ReleaseHold[
                    Last[ComputationalEngine`SolveEulerEq`m2]] == {{3}}, 
                   ReleaseHold[
                    Last[ComputationalEngine`SolveEulerEq`m3]] == {{1}}, 
                   ReleaseHold[
                    Last[ComputationalEngine`SolveEulerEq`m4]] == {{1}}}]; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; 
               ComputationalEngine`SolveEulerEq`m1 = 
                Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
                  Reap[
                  Module[{}, 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    "PrintResidualsNorm" -> False]; Null]; $MessageList]]; 
               ComputationalEngine`SolveEulerEq`m2 = 
                Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
                  Reap[
                  Module[{}, 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    "PrintResidualsNorm" -> True]; Null]; $MessageList]]; 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = 
                ReleaseHold[ComputationalEngine`SolveEulerEq`m1] == {{}, {}}; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = 
                First[ComputationalEngine`SolveEulerEq`m2] == {
                   HoldForm[
                    MessageName[
                    FernandoDuarte`LongRunRisk`ComputationalEngine`\
SolveEulerEq`Private`checks, "norm"]]}; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = NumberQ[
                  ReleaseHold[
                   First[
                    Flatten[
                    Last[ComputationalEngine`SolveEulerEq`m2]]]]]; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; 
               ComputationalEngine`SolveEulerEq`c1 = Not[
                  TrueQ[
                   CheckAbort[
                    Check[
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, "CheckResiduals" -> 
                    False], 
                    Abort[], 
                    MessageName[
                    FernandoDuarte`LongRunRisk`ComputationalEngine`\
SolveEulerEq`Private`checks, "largeresid"]], True]]]; 
               ComputationalEngine`SolveEulerEq`c2 = TrueQ[
                  CheckAbort[
                   Check[
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, "CheckResiduals" -> 
                    True], 
                    Abort[], 
                    MessageName[
                    FernandoDuarte`LongRunRisk`ComputationalEngine`\
SolveEulerEq`Private`checks, "largeresid"]], True]]; 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = 
                Apply[And, {
                  ComputationalEngine`SolveEulerEq`c1, 
                   ComputationalEngine`SolveEulerEq`c2}]; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; 
               ComputationalEngine`SolveEulerEq`c1 = Not[
                  TrueQ[
                   CheckAbort[
                    Check[
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, "CheckResiduals" -> 
                    True, "Tol" -> 1], 
                    Abort[], 
                    MessageName[
                    FernandoDuarte`LongRunRisk`ComputationalEngine`\
SolveEulerEq`Private`checks, "largeresid"]], True]]]; 
               ComputationalEngine`SolveEulerEq`c2 = TrueQ[
                  CheckAbort[
                   Check[
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, "CheckResiduals" -> 
                    True, "Tol" -> 10.^(-20)], 
                    Abort[], 
                    MessageName[
                    FernandoDuarte`LongRunRisk`ComputationalEngine`\
SolveEulerEq`Private`checks, "largeresid"]], True]]; 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = 
                Apply[And, {
                  ComputationalEngine`SolveEulerEq`c1, 
                   ComputationalEngine`SolveEulerEq`c2}]; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; Null]; 
             ComputationalEngine`SolveEulerEq`Ewc0 = 4.6; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = 
              ComputationalEngine`SolveEulerEq`coeffsQWc[
                ComputationalEngine`SolveEulerEq`updateCoeffs[
                ComputationalEngine`SolveEulerEq`model, "UpdatePd" -> False, 
                 "initialGuess" -> <|
                  "Ewc" -> {ComputationalEngine`SolveEulerEq`Ewc0}, 
                   "Epd" -> {{5.5}}|>]]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`coeffsWcPd = 
              ComputationalEngine`SolveEulerEq`updateCoeffs[
               ComputationalEngine`SolveEulerEq`model, "UpdatePd" -> True, 
                "initialGuess" -> <|
                 "Ewc" -> {ComputationalEngine`SolveEulerEq`Ewc0}, 
                  "Epd" -> {{5.5}}|>]; 
             ComputationalEngine`SolveEulerEq`coeffsWc = 
              FilterRules[ComputationalEngine`SolveEulerEq`coeffsWcPd, 
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc[
                 Blank[Integer]]]; 
             ComputationalEngine`SolveEulerEq`coeffsPd = 
              FilterRules[ComputationalEngine`SolveEulerEq`coeffsWcPd, 
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd[
                 Blank[Integer]]]; ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = 
              ComputationalEngine`SolveEulerEq`coeffsQWc[
               ComputationalEngine`SolveEulerEq`coeffsWc]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = 
              ComputationalEngine`SolveEulerEq`coeffsQPd[
               ComputationalEngine`SolveEulerEq`coeffsPd]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             If[ComputationalEngine`SolveEulerEq`longTest, 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = 
                ComputationalEngine`SolveEulerEq`updateCoeffs[
                  ComputationalEngine`SolveEulerEq`model, 
                   "initialGuess" -> <|
                    "Ewc" -> {ComputationalEngine`SolveEulerEq`Ewc0}|>] == 
                 ComputationalEngine`SolveEulerEq`updateCoeffs[
                  ComputationalEngine`SolveEulerEq`model, "UpdatePd" -> False,
                    "initialGuess" -> <|
                    "Ewc" -> {ComputationalEngine`SolveEulerEq`Ewc0}, 
                    "Epd" -> {{5.5}}|>]; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = Apply[And, {
                   SubsetQ[
                    Options[ComputationalEngine`SolveEulerEq`updateCoeffs], 
                    Options[
                    FernandoDuarte`LongRunRisk`ComputationalEngine`\
SolveEulerEq`Private`updateCoeffsSol]], 
                   SubsetQ[
                    Options[ComputationalEngine`SolveEulerEq`updateCoeffs], 
                    Options[
                    FernandoDuarte`LongRunRisk`ComputationalEngine`\
SolveEulerEq`Private`checks]]}]; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; 
               ComputationalEngine`SolveEulerEq`oldOptions = 
                Options[ComputationalEngine`SolveEulerEq`updateCoeffs]; 
               ComputationalEngine`SolveEulerEq`oldOptionsSol = 
                Options[
                 FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`updateCoeffsSol]; 
               ComputationalEngine`SolveEulerEq`oldOptionsWc = 
                Options[
                 FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`updateCoeffsWc]; ComputationalEngine`SolveEulerEq`ig = 1; 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = 
                ComputationalEngine`SolveEulerEq`updateCoeffs[
                  ComputationalEngine`SolveEulerEq`model, 
                   "initialGuess" -> <|
                    "Ewc" -> {ComputationalEngine`SolveEulerEq`ig}|>] == 
                 ComputationalEngine`SolveEulerEq`updateCoeffsSol[
                  ComputationalEngine`SolveEulerEq`model, {}, {}, 
                   "initialGuess" -> <|
                    "Ewc" -> {ComputationalEngine`SolveEulerEq`ig}|>] == 
                 ComputationalEngine`SolveEulerEq`updateCoeffsWc[
                   ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                   "wc"], 
                   ComputationalEngine`SolveEulerEq`model["parameters"], {}, 
                   "Ewc0" -> ComputationalEngine`SolveEulerEq`ig]; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; 
               SetOptions[
                ComputationalEngine`SolveEulerEq`updateCoeffs, 
                 "initialGuess" -> <|
                  "Ewc" -> {ComputationalEngine`SolveEulerEq`ig}|>]; 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = 
                ComputationalEngine`SolveEulerEq`updateCoeffs[
                  ComputationalEngine`SolveEulerEq`model, 
                   "initialGuess" -> <|
                    "Ewc" -> {ComputationalEngine`SolveEulerEq`ig}|>] == 
                 ComputationalEngine`SolveEulerEq`updateCoeffs[
                  ComputationalEngine`SolveEulerEq`model]; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; 
               Options[ComputationalEngine`SolveEulerEq`updateCoeffs] = 
                ComputationalEngine`SolveEulerEq`oldOptions; 
               SetOptions[
                FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`updateCoeffsSol, 
                 "initialGuess" -> <|
                  "Ewc" -> {ComputationalEngine`SolveEulerEq`ig}|>]; 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = 
                ComputationalEngine`SolveEulerEq`updateCoeffsSol[
                  ComputationalEngine`SolveEulerEq`model, {}, {}] == 
                 ComputationalEngine`SolveEulerEq`updateCoeffsSol[
                  ComputationalEngine`SolveEulerEq`model, {}, {}, 
                   "initialGuess" -> <|
                    "Ewc" -> {ComputationalEngine`SolveEulerEq`ig}|>] == 
                 ComputationalEngine`SolveEulerEq`updateCoeffs[
                  ComputationalEngine`SolveEulerEq`model, 
                   "initialGuess" -> <|
                    "Ewc" -> {ComputationalEngine`SolveEulerEq`ig}|>]; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = Not[
                  TrueQ[
                  ComputationalEngine`SolveEulerEq`updateCoeffsSol[
                    ComputationalEngine`SolveEulerEq`model, {}, {}, 
                    MaxIterations -> 1] == 
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, MaxIterations -> 
                    1]]]; ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; 
               Options[
                 FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`updateCoeffsSol] = ComputationalEngine`SolveEulerEq`oldOptionsSol; 
               SetOptions[
                FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`updateCoeffsWc, "Ewc0" -> ComputationalEngine`SolveEulerEq`ig]; 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = 
                ComputationalEngine`SolveEulerEq`updateCoeffsWc[
                   ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                   "wc"], 
                   ComputationalEngine`SolveEulerEq`model["parameters"], {}] == 
                 ComputationalEngine`SolveEulerEq`updateCoeffsWc[
                   ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                   "wc"], 
                   ComputationalEngine`SolveEulerEq`model["parameters"], {}, 
                   "Ewc0" -> ComputationalEngine`SolveEulerEq`ig] == 
                 ComputationalEngine`SolveEulerEq`updateCoeffs[
                  ComputationalEngine`SolveEulerEq`model, 
                   "initialGuess" -> <|
                    "Ewc" -> {ComputationalEngine`SolveEulerEq`ig}|>]; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = Not[
                  TrueQ[ComputationalEngine`SolveEulerEq`updateCoeffsWc[
                    ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                    "wc"], 
                    ComputationalEngine`SolveEulerEq`model["parameters"], {}, 
                    MaxIterations -> 1] == 
                   ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, MaxIterations -> 
                    1]]]; ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; 
               Options[
                 FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`updateCoeffsWc] = ComputationalEngine`SolveEulerEq`oldOptionsWc; 
               ComputationalEngine`SolveEulerEq`oldOptions = 
                Options[ComputationalEngine`SolveEulerEq`updateCoeffs]; 
               ComputationalEngine`SolveEulerEq`optsUpdateCoeff = {{
                  "initialGuess" -> <|"Ewc" -> {4.6}, "Epd" -> {{4.6}}|>}, {
                  "PrintResidualsNorm" -> True}}; 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = Apply[And, 
                  Flatten[
                   
                   Map[{SetOptions[
                    ComputationalEngine`SolveEulerEq`updateCoeffs, #]; 
                    ComputationalEngine`SolveEulerEq`out = 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, #] == 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model]; 
                    Options[ComputationalEngine`SolveEulerEq`updateCoeffs] = 
                    ComputationalEngine`SolveEulerEq`oldOptions; 
                    ComputationalEngine`SolveEulerEq`out}& , 
                    ComputationalEngine`SolveEulerEq`optsUpdateCoeff]]]; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; 
               ComputationalEngine`SolveEulerEq`optsBad = {{
                  MaxIterations -> 100}, {
                  PrecisionGoal -> $MachinePrecision}}; 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = Apply[And, 
                  Flatten[
                   
                   Map[{ComputationalEngine`SolveEulerEq`m = 
                    Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
                    Reap[Module[{}, 
                    SetOptions[
                    ComputationalEngine`SolveEulerEq`updateCoeffs, #]]; \
$MessageList]]; Options[ComputationalEngine`SolveEulerEq`updateCoeffs] = 
                    ComputationalEngine`SolveEulerEq`oldOptions; First[
                    First[ComputationalEngine`SolveEulerEq`m]] == HoldForm[
                    MessageName[SetOptions, "optnf"]]}& , 
                    ComputationalEngine`SolveEulerEq`optsBad]]]; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; 
               ComputationalEngine`SolveEulerEq`optsFindRoot = {
                 "FindRootOptions" -> {MaxIterations -> 1}, 
                  "FindRootOptions" -> {AccuracyGoal -> 2}}; 
               ComputationalEngine`SolveEulerEq`oldFindRootOpts = 
                Options[FindRoot]; 
               ComputationalEngine`SolveEulerEq`withFindRootOptionDefault = 
                Keys[
                  ReplaceAll["FindRootOptions", 
                   Options[ComputationalEngine`SolveEulerEq`updateCoeffs]]]; 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = Apply[And, 
                  Flatten[
                   
                   Map[{SetOptions[
                    ComputationalEngine`SolveEulerEq`updateCoeffs, #]; 
                    ComputationalEngine`SolveEulerEq`out1 = 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, #] == 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model]; 
                    Options[ComputationalEngine`SolveEulerEq`updateCoeffs] = 
                    ComputationalEngine`SolveEulerEq`oldOptions; 
                    Unprotect[FindRoot]; SetOptions[FindRoot, 
                    Last[#]]; 
                    ComputationalEngine`SolveEulerEq`out2 = 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, #] == 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model]; 
                    ComputationalEngine`SolveEulerEq`out2 = If[
                    MemberQ[
                    ComputationalEngine`SolveEulerEq`\
withFindRootOptionDefault, 
                    First[
                    First[
                    Last[#]]]], 
                    Not[
                    TrueQ[ComputationalEngine`SolveEulerEq`out2]], 
                    ComputationalEngine`SolveEulerEq`out2]; 
                    Options[FindRoot] = 
                    ComputationalEngine`SolveEulerEq`oldFindRootOpts; 
                    Protect[FindRoot]; {
                    ComputationalEngine`SolveEulerEq`out1, 
                    ComputationalEngine`SolveEulerEq`out2}}& , 
                    ComputationalEngine`SolveEulerEq`optsFindRoot]]]; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; Null]; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = Apply[And, {
                 ComputationalEngine`SolveEulerEq`coeffsQWc[
                  ComputationalEngine`SolveEulerEq`updateCoeffs[
                  ComputationalEngine`SolveEulerEq`model, 
                   "initialGuess" -> <|"Ewc" -> {1, 8}|>]], 
                 ComputationalEngine`SolveEulerEq`coeffsQWc[
                  ComputationalEngine`SolveEulerEq`updateCoeffs[
                  ComputationalEngine`SolveEulerEq`model, 
                   "initialGuess" -> <|"Ewc" -> {4, 1, 8}|>]]}]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             If[ComputationalEngine`SolveEulerEq`longTest, 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = 
                Apply[And, {ComputationalEngine`SolveEulerEq`coeffsQWc[
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    "initialGuess" -> <|"Ewc" -> {4.}|>]] == 
                   ComputationalEngine`SolveEulerEq`coeffsQWc[
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    "initialGuess" -> <|"Ewc" -> {4}|>]], 
                   ComputationalEngine`SolveEulerEq`coeffsQWc[
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    "initialGuess" -> <|"Ewc" -> {1., 8.}|>]] == 
                   ComputationalEngine`SolveEulerEq`coeffsQWc[
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    "initialGuess" -> <|"Ewc" -> {1, 8}|>]], 
                   ComputationalEngine`SolveEulerEq`coeffsQWc[
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    "initialGuess" -> <|"Ewc" -> {4., 1., 8.}|>]] == 
                   ComputationalEngine`SolveEulerEq`coeffsQWc[
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, 
                    "initialGuess" -> <|"Ewc" -> {4, 1, 8}|>]]}]; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; Null]; 
             ComputationalEngine`SolveEulerEq`maxMaturity = 12; 
             ComputationalEngine`SolveEulerEq`solBond = 
              ComputationalEngine`SolveEulerEq`updateCoeffsBond[
                ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                "bond"], 
                ComputationalEngine`SolveEulerEq`model["params"], {}, 
                ComputationalEngine`SolveEulerEq`maxMaturity, 
                ComputationalEngine`SolveEulerEq`solWc]; 
             ComputationalEngine`SolveEulerEq`solNomBond = 
              ComputationalEngine`SolveEulerEq`updateCoeffsBond[
                ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                "nombond"], 
                ComputationalEngine`SolveEulerEq`model["params"], {}, 
                ComputationalEngine`SolveEulerEq`maxMaturity, 
                ComputationalEngine`SolveEulerEq`solWc]; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = Apply[And, {
                 ComputationalEngine`SolveEulerEq`coeffsQBond[
                 ComputationalEngine`SolveEulerEq`solBond, 
                  ComputationalEngine`SolveEulerEq`maxMaturity], 
                 ComputationalEngine`SolveEulerEq`coeffsQNomBond[
                 ComputationalEngine`SolveEulerEq`solNomBond, 
                  ComputationalEngine`SolveEulerEq`maxMaturity]}]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`newBondParams = {
               FernandoDuarte`LongRunRisk`Model`Parameters`psi -> 
                ReplaceAll[
                 0.1 + FernandoDuarte`LongRunRisk`Model`Parameters`psi, 
                  ComputationalEngine`SolveEulerEq`model["params"]]}; 
             ComputationalEngine`SolveEulerEq`solWcNewBondParams = 
              ComputationalEngine`SolveEulerEq`updateCoeffs[
               ComputationalEngine`SolveEulerEq`model, 
                ComputationalEngine`SolveEulerEq`newBondParams, 
                ComputationalEngine`SolveEulerEq`optsWc]; 
             ComputationalEngine`SolveEulerEq`solBondNew = 
              ComputationalEngine`SolveEulerEq`updateCoeffsBond[
                ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                "bond"], 
                ComputationalEngine`SolveEulerEq`model["params"], 
                ComputationalEngine`SolveEulerEq`newBondParams, 
                ComputationalEngine`SolveEulerEq`maxMaturity, 
                ComputationalEngine`SolveEulerEq`solWcNewBondParams]; 
             ComputationalEngine`SolveEulerEq`solNomBondNew = 
              ComputationalEngine`SolveEulerEq`updateCoeffsBond[
                ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                "nombond"], 
                ComputationalEngine`SolveEulerEq`model["params"], 
                ComputationalEngine`SolveEulerEq`newBondParams, 
                ComputationalEngine`SolveEulerEq`maxMaturity, 
                ComputationalEngine`SolveEulerEq`solWcNewBondParams]; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = Apply[And, {
                 ComputationalEngine`SolveEulerEq`coeffsQBond[
                 ComputationalEngine`SolveEulerEq`solBondNew, 
                  ComputationalEngine`SolveEulerEq`maxMaturity], 
                 ComputationalEngine`SolveEulerEq`coeffsQNomBond[
                 ComputationalEngine`SolveEulerEq`solNomBondNew, 
                  ComputationalEngine`SolveEulerEq`maxMaturity], 
                 Not[
                 ComputationalEngine`SolveEulerEq`solBond === 
                  ComputationalEngine`SolveEulerEq`solBondNew], 
                 Not[
                 ComputationalEngine`SolveEulerEq`solNomBond === 
                  ComputationalEngine`SolveEulerEq`solNomBondNew]}]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`oldMaxMaturity = 
              ComputationalEngine`SolveEulerEq`maxMaturity; 
             ComputationalEngine`SolveEulerEq`maxMaturity = 2; 
             ComputationalEngine`SolveEulerEq`solBond = 
              ComputationalEngine`SolveEulerEq`updateCoeffsBond[
                ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                "bond"], 
                ComputationalEngine`SolveEulerEq`model["params"], {}, 
                ComputationalEngine`SolveEulerEq`maxMaturity, 
                ComputationalEngine`SolveEulerEq`solWc]; 
             ComputationalEngine`SolveEulerEq`solNomBond = 
              ComputationalEngine`SolveEulerEq`updateCoeffsBond[
                ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                "nombond"], 
                ComputationalEngine`SolveEulerEq`model["params"], {}, 
                ComputationalEngine`SolveEulerEq`maxMaturity, 
                ComputationalEngine`SolveEulerEq`solWc]; 
             ComputationalEngine`SolveEulerEq`outTests[
                ComputationalEngine`SolveEulerEq`model["shortname"]][
               ComputationalEngine`SolveEulerEq`ind] = Apply[And, {
                 ComputationalEngine`SolveEulerEq`coeffsQBond[
                 ComputationalEngine`SolveEulerEq`solBond, 
                  ComputationalEngine`SolveEulerEq`maxMaturity], 
                 ComputationalEngine`SolveEulerEq`coeffsQNomBond[
                 ComputationalEngine`SolveEulerEq`solNomBond, 
                  ComputationalEngine`SolveEulerEq`maxMaturity], 
                 Range[0, ComputationalEngine`SolveEulerEq`maxMaturity] == 
                 Sort[
                   DeleteDuplicates[
                    Cases[
                    Keys[ComputationalEngine`SolveEulerEq`solBond], 
                    Pattern[ComputationalEngine`SolveEulerEq`x, 
                    Blank[]][
                    Pattern[ComputationalEngine`SolveEulerEq`i, 
                    Blank[]]][
                    Pattern[ComputationalEngine`SolveEulerEq`j, 
                    Blank[]]] :> ComputationalEngine`SolveEulerEq`i]]], 
                 Range[0, ComputationalEngine`SolveEulerEq`maxMaturity] == 
                 Sort[
                   DeleteDuplicates[
                    Cases[
                    Keys[ComputationalEngine`SolveEulerEq`solNomBond], 
                    Pattern[ComputationalEngine`SolveEulerEq`x, 
                    Blank[]][
                    Pattern[ComputationalEngine`SolveEulerEq`i, 
                    Blank[]]][
                    Pattern[ComputationalEngine`SolveEulerEq`j, 
                    Blank[]]] :> ComputationalEngine`SolveEulerEq`i]]]}]; 
             ComputationalEngine`SolveEulerEq`ind = 
              ComputationalEngine`SolveEulerEq`ind + 1; 
             ComputationalEngine`SolveEulerEq`maxMaturity = 
              ComputationalEngine`SolveEulerEq`oldMaxMaturity; 
             If[ComputationalEngine`SolveEulerEq`longTest, 
               ComputationalEngine`SolveEulerEq`solBond = 
                ComputationalEngine`SolveEulerEq`updateCoeffsBond[
                  ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                  "bond"], 
                  ComputationalEngine`SolveEulerEq`model["params"], {}, 
                  ComputationalEngine`SolveEulerEq`maxMaturity, 
                  ComputationalEngine`SolveEulerEq`solWc, "Method" -> 
                  Automatic, "Precision" -> 1]; 
               ComputationalEngine`SolveEulerEq`solNomBond = 
                ComputationalEngine`SolveEulerEq`updateCoeffsBond[
                  ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                  "nombond"], 
                  ComputationalEngine`SolveEulerEq`model["params"], {}, 
                  ComputationalEngine`SolveEulerEq`maxMaturity, 
                  ComputationalEngine`SolveEulerEq`solWc, "Method" -> 
                  Automatic, "Precision" -> 1]; 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = Apply[And, {
                   ComputationalEngine`SolveEulerEq`coeffsQBond[
                   ComputationalEngine`SolveEulerEq`solBond, 
                    ComputationalEngine`SolveEulerEq`maxMaturity], 
                   ComputationalEngine`SolveEulerEq`coeffsQNomBond[
                   ComputationalEngine`SolveEulerEq`solNomBond, 
                    ComputationalEngine`SolveEulerEq`maxMaturity]}]; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = 
                Apply[And, {FilterRules[
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, "UpdateBond" -> 
                    True, "MaxMaturity" -> 
                    ComputationalEngine`SolveEulerEq`maxMaturity], 
                    
                    FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\
coefb[
                    Blank[]]] === 
                   ComputationalEngine`SolveEulerEq`updateCoeffsBond[
                    ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                    "bond"], 
                    ComputationalEngine`SolveEulerEq`model["params"], {}, 
                    ComputationalEngine`SolveEulerEq`maxMaturity, 
                    ComputationalEngine`SolveEulerEq`solWc], FilterRules[
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, "UpdateNomBond" -> 
                    True, "MaxMaturity" -> 
                    ComputationalEngine`SolveEulerEq`maxMaturity], 
                    
                    FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\
coefnb[
                    Blank[]]] === 
                   ComputationalEngine`SolveEulerEq`updateCoeffsBond[
                    ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                    "nombond"], 
                    ComputationalEngine`SolveEulerEq`model["params"], {}, 
                    ComputationalEngine`SolveEulerEq`maxMaturity, 
                    ComputationalEngine`SolveEulerEq`solWc]}]; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = Apply[And, {Sort[
                    FilterRules[
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, "UpdateBonds" -> 
                    True, "MaxMaturity" -> 
                    ComputationalEngine`SolveEulerEq`maxMaturity], 
                    Alternatives[
                    
                    FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\
coefb[
                    Blank[]], 
                    
                    FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\
coefnb[
                    Blank[]]]]] === Sort[
                    Join[
                    ComputationalEngine`SolveEulerEq`updateCoeffsBond[
                    ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                    "bond"], 
                    ComputationalEngine`SolveEulerEq`model["params"], {}, 
                    ComputationalEngine`SolveEulerEq`maxMaturity, 
                    ComputationalEngine`SolveEulerEq`solWc], 
                    ComputationalEngine`SolveEulerEq`updateCoeffsBond[
                    ComputationalEngine`SolveEulerEq`model["coeffsSolution"][
                    "nombond"], 
                    ComputationalEngine`SolveEulerEq`model["params"], {}, 
                    ComputationalEngine`SolveEulerEq`maxMaturity, 
                    ComputationalEngine`SolveEulerEq`solWc]]]}]; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; 
               ComputationalEngine`SolveEulerEq`m1 = 
                Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
                  Reap[
                  Module[{}, 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, "UpdateBond" -> 
                    True, "PrintResidualsNorm" -> False]; 
                    Null]; $MessageList]]; 
               ComputationalEngine`SolveEulerEq`m2 = 
                Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
                  Reap[
                  Module[{}, 
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, "UpdateBond" -> 
                    True, "PrintResidualsNorm" -> True]; 
                    Null]; $MessageList]]; 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = 
                ReleaseHold[ComputationalEngine`SolveEulerEq`m1] == {{}, {}}; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = MemberQ[
                  ReleaseHold[
                   First[ComputationalEngine`SolveEulerEq`m2]], 
                  MessageName[
                  FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
Private`checks, "norm"]]; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = NumberQ[
                  ReleaseHold[
                   First[
                    Flatten[
                    Last[ComputationalEngine`SolveEulerEq`m2]]]]]; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; 
               ComputationalEngine`SolveEulerEq`c1 = Not[
                  TrueQ[
                   CheckAbort[
                    Check[
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, "UpdateBond" -> 
                    True, "CheckResiduals" -> False], 
                    Abort[], 
                    MessageName[
                    FernandoDuarte`LongRunRisk`ComputationalEngine`\
SolveEulerEq`Private`checks, "largeresid"]], True]]]; 
               ComputationalEngine`SolveEulerEq`c2 = TrueQ[
                  CheckAbort[
                   Check[
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, "UpdateBond" -> 
                    True, "CheckResiduals" -> True], 
                    Abort[], 
                    MessageName[
                    FernandoDuarte`LongRunRisk`ComputationalEngine`\
SolveEulerEq`Private`checks, "largeresid"]], True]]; 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = 
                Apply[And, {
                  ComputationalEngine`SolveEulerEq`c1, 
                   ComputationalEngine`SolveEulerEq`c2}]; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; 
               ComputationalEngine`SolveEulerEq`c1 = Not[
                  TrueQ[
                   CheckAbort[
                    Check[
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, "UpdateBond" -> 
                    True, "CheckResiduals" -> True, "Tol" -> 1], 
                    Abort[], 
                    MessageName[
                    FernandoDuarte`LongRunRisk`ComputationalEngine`\
SolveEulerEq`Private`checks, "largeresid"]], True]]]; 
               ComputationalEngine`SolveEulerEq`c2 = TrueQ[
                  CheckAbort[
                   Check[
                    ComputationalEngine`SolveEulerEq`updateCoeffs[
                    ComputationalEngine`SolveEulerEq`model, "UpdateBond" -> 
                    True, "CheckResiduals" -> True, "Tol" -> 10.^(-20)], 
                    Abort[], 
                    MessageName[
                    FernandoDuarte`LongRunRisk`ComputationalEngine`\
SolveEulerEq`Private`checks, "largeresid"]], True]]; 
               ComputationalEngine`SolveEulerEq`outTests[
                  ComputationalEngine`SolveEulerEq`model["shortname"]][
                 ComputationalEngine`SolveEulerEq`ind] = 
                Apply[And, {
                  ComputationalEngine`SolveEulerEq`c1, 
                   ComputationalEngine`SolveEulerEq`c2}]; 
               ComputationalEngine`SolveEulerEq`ind = 
                ComputationalEngine`SolveEulerEq`ind + 1; Null]; Null, {
             ComputationalEngine`SolveEulerEq`model, 
              ComputationalEngine`SolveEulerEq`mods}]; 
           ComputationalEngine`SolveEulerEq`noMissingTest = {}; 
           Do[ComputationalEngine`SolveEulerEq`testNumber = Sort[
                Cases[
                 Keys[
                  SubValues[ComputationalEngine`SolveEulerEq`outTests]], 
                 Verbatim[HoldPattern][
                   ComputationalEngine`SolveEulerEq`outTests[
                    ComputationalEngine`SolveEulerEq`model["shortname"]][
                    Pattern[ComputationalEngine`SolveEulerEq`i, 
                    Blank[Integer]]]] :> ComputationalEngine`SolveEulerEq`i]]; 
             AppendTo[ComputationalEngine`SolveEulerEq`noMissingTest, Range[0, 
                 Max[ComputationalEngine`SolveEulerEq`testNumber]] == 
               ComputationalEngine`SolveEulerEq`testNumber]; Null, {
             ComputationalEngine`SolveEulerEq`model, 
              ComputationalEngine`SolveEulerEq`mods}]; 
           ComputationalEngine`SolveEulerEq`out = Apply[And, {
               Apply[And, ComputationalEngine`SolveEulerEq`noMissingTest], 
               Apply[And, 
                Values[
                 SubValues[ComputationalEngine`SolveEulerEq`outTests]]]}]; 
           On[
             MessageName[General, "stop"]]; On[
             MessageName[FindRoot, "cvmit"]]; 
           ComputationalEngine`SolveEulerEq`out], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         1.41333`6.300758575424418, "CPUTimeUsed" -> 1.418637, "MemoryUsed" -> 
         126628784, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>]|>, "FailureResults" -> <||>, 
    "TestsNotEvaluatedKeys" -> {}, "TestsFailedWrongResultsKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {6794615700785760804, 6771516488851705289}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.905876839784266*^9, 3.905876897172636*^9, 
  3.90590332662742*^9, 3.905904648694932*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"257e00c5-740d-47cf-9016-de95ef04e7f1"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.905876839784266*^9, 3.905876897172636*^9, 
  3.90590332662742*^9, 3.905904648698213*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"822ae4e2-d2f9-4361-b08e-baebcefe7385"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.905876839784266*^9, 3.905876897172636*^9, 
  3.90590332662742*^9, 3.905904648698771*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"0c59fa45-a4e6-4ffd-b823-bf4247e1527c"],

Cell[BoxData[{
 RowBox[{"tr", "=", 
  RowBox[{
  "TestReport", "[", 
   "\"\</Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expected", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
        ")"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.905687550054834*^9, 3.9056875503351927`*^9}, 
   3.905768801700536*^9, 3.9058766319154367`*^9},
 CellLabel->"In[45]:=",ExpressionUUID->"7c47fece-e37b-46a8-a1f5-f66cb52faf00"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: TimeAggregation.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["35", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: TimeAggregation.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["35", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["35", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "4.3537599999999999999`5.2453114384650545", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                   "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: TimeAggregation.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     504112095077122838 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876897221432*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "35093141-218c-46ba-8720-081ca9ff3a81", "TestID" -> 
         "TimeAggregation_20231009-RD9VP6", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "1d452ded-f2aa-4cd8-bfb7-df79f7a5798b", "Input" -> 
         HoldForm[Tools`TimeAggregation`longTest = False; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000029`1.6129129957309503, "CPUTimeUsed" -> 
         0.000029000000001389026`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 2566115563828966509 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876897221735*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "e887c32c-f8aa-4e84-b732-8e324cc8e675", "TestID" -> 
         "TimeAggregation_20231009-UKFDOJ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "c7ba7f3e-1fec-462f-8b1d-87fb0dd80deb", "Input" -> HoldForm[Off[
             MessageName[General, "stop"]]; 
           Needs["FernandoDuarte`LongRunRisk`Tools`TimeAggregation`"]; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000025`1.5484550065040317, "CPUTimeUsed" -> 
         0.000025000000000829914`, "MemoryUsed" -> 2944, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 9220035676145757850 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768972219763`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "69c3105a-e455-4ab7-93ae-3d1b712e4af4", "TestID" -> 
         "TimeAggregation_20231009-W5UXDJ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "15f5b3e0-e516-4681-a7e1-9120ab5e1ef5", "Input" -> 
         HoldForm[
          MemberQ[$ContextPath, 
             "FernandoDuarte`LongRunRisk`Tools`TimeAggregation`"]; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000021`1.4727342925659124, "CPUTimeUsed" -> 
         0.000021000000003823516`, "MemoryUsed" -> 2752, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 2889653163248587675 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768972222023`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "8fb8c55b-6d5d-42fe-b2a2-ffdd040ca1f1", "TestID" -> 
         "TimeAggregation_20231009-FDWOHC", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "aeea401a-816b-4863-9c41-28544883b097", "Input" -> HoldForm[
           Not[Names["*growth"] === {}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.027264`4.5861045709186, "CPUTimeUsed" -> 
         0.027288999999999675`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 3497528220531365073 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876897249831*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "8f38cd24-56df-4248-9c5f-5810c0f60bbd", "TestID" -> 
         "TimeAggregation_20231009-8T668J", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "23994660-d9ac-46aa-825d-d4fa578f88ca", "Input" -> HoldForm[
           Apply[
           And, {FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t] == 
             Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
             FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 1, "numPeriods" -> 1] == 
             Tools`TimeAggregation`dc[Tools`TimeAggregation`t]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.008513`4.080597631224365, "CPUTimeUsed" -> 0.008551999999998117, 
         "MemoryUsed" -> 2897880, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 4514264187619322406 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876897258724*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "b05833fb-c634-4c84-ab8f-54fcf9513571", "TestID" -> 
         "TimeAggregation_20231009-ZIXI4M", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "6a25607b-4e85-42e8-bc7a-bdb4afa13e23", "Input" -> HoldForm[
           Apply[
           And, {FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 3, "numPeriods" -> 1] == (1/3) (
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4] + (
                2 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] + (
                 3 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + 
                 2 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t]))), 
             ReplaceAll[
               ReplaceAll[
                ReplaceAll[
                 ReplaceAll[
                  FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                  Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                   "TimeAggregation" -> 12, "numPeriods" -> 1], Plus -> List],
                  Times -> List], Tools`TimeAggregation`dc[{
                   Pattern[Tools`TimeAggregation`x, 
                    BlankSequence[]], Tools`TimeAggregation`t}] -> -
                 Tools`TimeAggregation`x], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t] -> 0] == {{
               1/12, 22}, {1/6, 21}, {1/4, 20}, {1/3, 19}, {5/12, 18}, {
               1/2, 17}, {7/12, 16}, {2/3, 15}, {3/4, 14}, {5/6, 13}, {
               11/12, 12}, 11, {11/12, 10}, {5/6, 9}, {3/4, 8}, {2/3, 7}, {
               7/12, 6}, {1/2, 5}, {5/12, 4}, {1/3, 3}, {1/4, 2}, {1/6, 1}, {
               1/12, 0}}}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.053594`4.879631169749624, "CPUTimeUsed" -> 
         0.05433999999999983, "MemoryUsed" -> 598568, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 5109966061449958230 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90587689731284*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "1fcae553-80e0-4163-b376-2dae63176814", "TestID" -> 
         "TimeAggregation_20231009-X8ZLLO", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "faed61a7-0161-4cf6-90d5-72db7362345e", "Input" -> HoldForm[
           Apply[
           And, {FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
               Function[{
                 Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                  Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                  Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                 0.0015]] == 
             0. + (0.3328334585207629 
                Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4] + (
                0.6661665418542368 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                  0.6671665414792372 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
                  0.33383345814576315` 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t])))), 
             FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
               Function[{
                 Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                  Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                  Tools`TimeAggregation`v}, 0.0015]] == 
             0. + (0.3328334585207629 
                Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4] + (
                0.6661665418542368 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                  0.6671665414792372 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
                  0.33383345814576315` 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t])))), 
             FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
               Function[{
                 Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                  Tools`TimeAggregation`h, Tools`TimeAggregation`k}, 0.0015]] == 
             0. + (0.3328334585207629 
                Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4] + (
                0.6661665418542368 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                  0.6671665414792372 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
                  0.33383345814576315` 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t])))), 
             FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
               Function[{
                 Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                  Tools`TimeAggregation`h}, 0.0015]] == 
             0. + (0.3328334585207629 
                Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4] + (
                0.6661665418542368 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                  0.6671665414792372 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
                  0.33383345814576315` 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t])))), 
             FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
               Function[{Tools`TimeAggregation`t, Tools`TimeAggregation`j}, 
                 0.0015]] == 
             0. + (0.3328334585207629 
                Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4] + (
                0.6661665418542368 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                  0.6671665414792372 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
                  0.33383345814576315` 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t])))), 
             FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
               Function[{Tools`TimeAggregation`t}, 0.0015]] == 
             0. + (0.3328334585207629 
                Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4] + (
                0.6661665418542368 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                  0.6671665414792372 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
                  0.33383345814576315` 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t])))), 
             FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
               Function[{}, 0.0015]] == 
             0. + (0.3328334585207629 
                Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4] + (
                0.6661665418542368 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                  0.6671665414792372 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
                  0.33383345814576315` 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t]))))}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.019064`4.430729027170393, "CPUTimeUsed" -> 0.019967999999998653`, 
         "MemoryUsed" -> 437576, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 3845137246524504833 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876897332253*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "d93519e2-407e-4108-9581-956a84d42ca8", "TestID" -> 
         "TimeAggregation_20231009-70M78H", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "8c170a98-d655-4262-9daa-57b94576539e", "Input" -> HoldForm[
           Apply[And, {Simplify[
               FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
               Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
                Function[{
                  Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                   Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                   Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                  Tools`TimeAggregation`t]]] == (1/(1 + 
               E^Tools`TimeAggregation`t + E^(2 Tools`TimeAggregation`t))) (
               Tools`TimeAggregation`dc[
                Tools`TimeAggregation`t - 
                 4] + ((1 + E^Tools`TimeAggregation`t) 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                  E^Tools`TimeAggregation`t 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                   E^(2 Tools`TimeAggregation`t) 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                    E^Tools`TimeAggregation`t 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + (
                    E^(2 Tools`TimeAggregation`t) 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
                    E^(2 Tools`TimeAggregation`t) 
                    Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t])))))))}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.068507`4.986249947514964, "CPUTimeUsed" -> 0.06927299999999903, 
         "MemoryUsed" -> 603968, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 7295170849031143801 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90587689740109*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "701bd18f-973f-4e4b-a2a5-c78bac45d8ab", "TestID" -> 
         "TimeAggregation_20231009-CC4ITP", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "3a9572c5-edc7-42eb-b57c-325ef8e5695d", "Input" -> HoldForm[
           Apply[And, {
             FreeQ[
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
               Function[{
                 Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                  Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                  Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                 If[
                 Tools`TimeAggregation`h == 12, Tools`TimeAggregation`h12, 
                  Tools`TimeAggregation`hnot12]]], Tools`TimeAggregation`h12], 
             FreeQ[
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 12, "numPeriods" -> 1, "v0" -> 
               Function[{
                 Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                  Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                  Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                 If[
                 Tools`TimeAggregation`h == 12, Tools`TimeAggregation`h12, 
                  Tools`TimeAggregation`hnot12]]], 
              Tools`TimeAggregation`hnot12]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         1.590327`6.352001430136237, "CPUTimeUsed" -> 1.5925709999999995`, 
         "MemoryUsed" -> 9456472, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 5470162074015251616 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058768989920893`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "b273b676-0653-4f07-b015-992a0025860d", "TestID" -> 
         "TimeAggregation_20231009-0V1KVW", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "eb074e13-2712-4c5e-94f2-074d849b541a", "Input" -> HoldForm[
           Apply[And, {0 === FullSimplify[
               Coefficient[
                ReplaceAll[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                  "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
                  Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, (-1)/(
                    Tools`TimeAggregation`h + 1)]], Tools`TimeAggregation`dc[
                   BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                Tools`TimeAggregation`dcX, 0]], 0 === FullSimplify[
               Coefficient[
                ReplaceAll[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                  "TimeAggregation" -> 3, "numPeriods" -> 3, "v0" -> 
                  Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`h^2]], Tools`TimeAggregation`dc[
                   BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                Tools`TimeAggregation`dcX, 0]], 0 === FullSimplify[
               Coefficient[
                ReplaceAll[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                  "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
                  Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`im]], Tools`TimeAggregation`dc[
                   BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                Tools`TimeAggregation`dcX, 0]], 0 === FullSimplify[
               Coefficient[
                ReplaceAll[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                  "TimeAggregation" -> 3, "numPeriods" -> 3, "v0" -> 
                  Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`v]], Tools`TimeAggregation`dc[
                   BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                Tools`TimeAggregation`dcX, 0]], 0 === FullSimplify[
               Coefficient[
                ReplaceAll[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                  Tools`TimeAggregation`i, "TimeAggregation" -> 3, 
                  "numPeriods" -> 1, "v0" -> 
                  Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`im]], Tools`TimeAggregation`dd[
                   BlankSequence[], Tools`TimeAggregation`i] -> 
                 Tools`TimeAggregation`ddX], Tools`TimeAggregation`ddX, 
                0]]}]], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.267823`5.578362868283061, "CPUTimeUsed" -> 0.26364699999999885`, 
         "MemoryUsed" -> 1333712, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 863943928340910266 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876899260766*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "1728cec9-5020-4139-b6f8-0f4b9c48aec2", "TestID" -> 
         "TimeAggregation_20231009-04X8ZO", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "cc1508cf-cf42-4a1d-992d-bd1dffc7c298", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`arbitraryFun1 = 
            Function[{
              Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
               Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
               Tools`TimeAggregation`v}, 
              Sqrt[Tools`TimeAggregation`h]]; 
           Tools`TimeAggregation`arbitraryFun2 = 
            Function[{
              Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
               Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
               Tools`TimeAggregation`v}, 
              If[Tools`TimeAggregation`v == Tools`TimeAggregation`dd, 
               Sqrt[Tools`TimeAggregation`h], 
               Cos[Tools`TimeAggregation`h]]]; 
           Tools`TimeAggregation`arbitraryFun3 = 
            Function[{
              Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
               Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
               Tools`TimeAggregation`v}, -Tools`TimeAggregation`h]; 
           Tools`TimeAggregation`arbitraryFun4 = 
            Function[{
              Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
               Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
               Tools`TimeAggregation`v}, 
              Sqrt[Tools`TimeAggregation`h] Tools`TimeAggregation`t - 
              Tools`TimeAggregation`k^2]; 
           Tools`TimeAggregation`arbitraryFun5 = 
            Function[{
              Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
               Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
               Tools`TimeAggregation`v}, 
              If[
              Tools`TimeAggregation`v == Tools`TimeAggregation`dd, 
               Sqrt[Tools`TimeAggregation`h] Sqrt[Tools`TimeAggregation`t], 
               Exp[Tools`TimeAggregation`t] Cos[Tools`TimeAggregation`h]]]; 
           Tools`TimeAggregation`arbitraryFun6 = 
            Function[{
              Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
               Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
               Tools`TimeAggregation`v}, ((-Tools`TimeAggregation`h) 
               Tools`TimeAggregation`t) Tools`TimeAggregation`k]; 
           Apply[And, {
              N[
               ReplaceAll[0 === FullSimplify[
                  Coefficient[
                   ReplaceAll[
                    FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                    Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                    "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
                    Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`F[
                    Tools`TimeAggregation`h, Tools`TimeAggregation`v, 
                    Tools`TimeAggregation`im]]], Tools`TimeAggregation`dc[
                    BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                   Tools`TimeAggregation`dcX, 0]], Tools`TimeAggregation`F -> 
                Tools`TimeAggregation`arbitraryFun1]], 
              N[
               ReplaceAll[0 === FullSimplify[
                  Coefficient[
                   ReplaceAll[
                    FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                    Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                    "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
                    Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`F[
                    Tools`TimeAggregation`h, Tools`TimeAggregation`v, 
                    Tools`TimeAggregation`im]]], Tools`TimeAggregation`dc[
                    BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                   Tools`TimeAggregation`dcX, 0]], Tools`TimeAggregation`F -> 
                Tools`TimeAggregation`arbitraryFun2]], 
              N[
               ReplaceAll[0 === FullSimplify[
                  Coefficient[
                   ReplaceAll[
                    FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                    Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                    "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
                    Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`F[
                    Tools`TimeAggregation`h, Tools`TimeAggregation`v, 
                    Tools`TimeAggregation`im]]], Tools`TimeAggregation`dc[
                    BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                   Tools`TimeAggregation`dcX, 0]], Tools`TimeAggregation`F -> 
                Tools`TimeAggregation`arbitraryFun3]], 
              N[
               ReplaceAll[0 === FullSimplify[
                  Coefficient[
                   ReplaceAll[
                    FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                    Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                    "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
                    Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`F[
                    Tools`TimeAggregation`h, Tools`TimeAggregation`v, 
                    Tools`TimeAggregation`im]]], Tools`TimeAggregation`dc[
                    BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                   Tools`TimeAggregation`dcX, 0]], Tools`TimeAggregation`F -> 
                Tools`TimeAggregation`arbitraryFun4]], 
              N[
               ReplaceAll[0 === FullSimplify[
                  Coefficient[
                   ReplaceAll[
                    FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                    Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                    "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
                    Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`F[
                    Tools`TimeAggregation`h, Tools`TimeAggregation`v, 
                    Tools`TimeAggregation`im]]], Tools`TimeAggregation`dc[
                    BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                   Tools`TimeAggregation`dcX, 0]], Tools`TimeAggregation`F -> 
                Tools`TimeAggregation`arbitraryFun5]], 
              N[
               ReplaceAll[0 === FullSimplify[
                  Coefficient[
                   ReplaceAll[
                    FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                    Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                    "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
                    Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`F[
                    Tools`TimeAggregation`h, Tools`TimeAggregation`v, 
                    Tools`TimeAggregation`im]]], Tools`TimeAggregation`dc[
                    BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                   Tools`TimeAggregation`dcX, 0]], Tools`TimeAggregation`F -> 
                Tools`TimeAggregation`arbitraryFun6]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.13282`5.2737784737348194, "CPUTimeUsed" -> 0.1345049999999972, 
         "MemoryUsed" -> 452536, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 96654258670521231 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876899394134*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "514cc7ec-e007-4e05-8c34-0b5fa7c44a24", "TestID" -> 
         "TimeAggregation_20231009-OHEKC5", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "75e92dd7-2e87-457f-a85a-36a384303de6", "Input" -> HoldForm[
           Apply[And, {
             Not[
              N[0 === Coefficient[
                 ReplaceAll[
                  FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                  Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                   "TimeAggregation" -> 3, "numPeriods" -> 3, "v0" -> 
                   Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`j]], Tools`TimeAggregation`dc[
                    BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                 Tools`TimeAggregation`dcX, 0]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.013375`4.27680878852526, "CPUTimeUsed" -> 0.013590000000000657`, 
         "MemoryUsed" -> 252904, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 851848156878253526 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876899407876*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "52186f00-7ce8-4dbc-9d75-04791e6d6fa8", "TestID" -> 
         "TimeAggregation_20231009-NOAMID", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "ef647b64-9f87-413e-a6ee-7ea3c7fd7409", "Input" -> HoldForm[
           Apply[
           And, {FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
               Function[{Tools`TimeAggregation`t, Tools`TimeAggregation`j}, 
                 Tools`TimeAggregation`j]] == Subtract[Divide[
                 Subtract[
                  Subtract[
                  Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4] + 
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] + 
                   E^4 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3], 
                   7], 3 E^4], 1 + E^4 + E^7] + (
                Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + (
                  Tools`TimeAggregation`dc[Tools`TimeAggregation`t] + (
                   Divide[((1 - E 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t]) - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t]) - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1], 1 + 
                    2 E] + Log[2 + 1/E])))), 
               Log[1 + 1/E^7 + 1/E^3]]}]], "ExpectedMessages" -> HoldForm[{}],
          "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.009842`4.143598358530056, "CPUTimeUsed" -> 
         0.010031000000005008`, "MemoryUsed" -> 174848, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 6112142521427799646 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876899418232*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "703a13a3-848b-418f-850d-d1982156b232", "TestID" -> 
         "TimeAggregation_20231009-4YHV7X", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "ecd8cf17-e97f-455a-a526-3fd240a07c3d", "Input" -> HoldForm[
           Apply[And, {
             Not[
              FreeQ[
               FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
               Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
                Function[{
                  Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                   Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                   Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                  If[
                  Tools`TimeAggregation`v === Tools`TimeAggregation`dc, 
                   Tools`TimeAggregation`Edc, 0]]], 
               Tools`TimeAggregation`Edc]], 
             FreeQ[
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`pi, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
               Function[{
                 Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                  Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                  Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                 If[
                 Tools`TimeAggregation`v === Tools`TimeAggregation`dc, 
                  Tools`TimeAggregation`Edc, 0]]], Tools`TimeAggregation`Edc], 
             Not[
              FreeQ[
               FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
               Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                Tools`TimeAggregation`i, "TimeAggregation" -> 12, 
                "numPeriods" -> 1, "v0" -> 
                Function[{
                  Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                   Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                   Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                  If[
                  Tools`TimeAggregation`v === Tools`TimeAggregation`dd, 
                   Tools`TimeAggregation`Edd, 0]]], 
               Tools`TimeAggregation`Edd]], 
             FreeQ[
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 12, "numPeriods" -> 1, "v0" -> 
               Function[{
                 Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                  Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                  Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                 If[
                 Tools`TimeAggregation`v === Tools`TimeAggregation`dd, 
                  Tools`TimeAggregation`Edd, 0]]], 
              Tools`TimeAggregation`Edd]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         1.651984`6.368520834554032, "CPUTimeUsed" -> 1.6558019999999978`, 
         "MemoryUsed" -> 1733776, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 5965472594581665555 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876901070835*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "6f1edf83-12c5-4d34-8a3c-9914e45e75ca", "TestID" -> 
         "TimeAggregation_20231009-4MR1ER", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "f39ec45c-89ee-4902-a061-6790173443e0", "Input" -> HoldForm[
           Apply[And, {ReplaceAll[
               FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
               Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                "TimeAggregation" -> 3, "numPeriods" -> 1, "v0" -> 
                Function[{
                  Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                   Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                   Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                  Evaluate[
                   Tools`TimeAggregation`uncondE[
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t]]]]], 
               Tools`TimeAggregation`uncondE[
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t]] -> 0] == 
             FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 3, "numPeriods" -> 1]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.081976`5.064201721030463, "CPUTimeUsed" -> 0.08256599999999992, 
         "MemoryUsed" -> 249304, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 7343042216729638482 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058769011533184`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "5f28d47c-9843-425b-bae2-7c4d0b9314c5", "TestID" -> 
         "TimeAggregation_20231009-GM4JLX", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "d331af5c-29cc-4ffa-a3d8-0fb3935077f3", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 1; Tools`TimeAggregation`k = 1; 
           Apply[And, {
              Simplify[0 === Coefficient[
                 ReplaceAll[
                  FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                  Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                   "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                   Tools`TimeAggregation`k, "v0" -> 
                   Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`F[Tools`TimeAggregation`t]]], 
                  Tools`TimeAggregation`dc[
                    BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                 Tools`TimeAggregation`dcX, 0]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000317`2.6515742600497454, "CPUTimeUsed" -> 0.0003279999999996619, 
         "MemoryUsed" -> 5088, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 9218477832854821547 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876901154002*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "d86a6de3-9e2e-480a-900f-209d2557b1d0", "TestID" -> 
         "TimeAggregation_20231009-8LETO6", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "3f24f916-8f35-4e12-8e6c-b71028010d94", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 2; Tools`TimeAggregation`k = 1; 
           Tools`TimeAggregation`rulej = 
            Table[Tools`TimeAggregation`F[Tools`TimeAggregation`i] -> 
              Tools`TimeAggregation`F[
               Tools`TimeAggregation`h Tools`TimeAggregation`k + 
                Tools`TimeAggregation`i], {
              Tools`TimeAggregation`i, 0, Tools`TimeAggregation`h - 2}]; 
           Apply[And, {
              FullSimplify[0 === Coefficient[
                 ReplaceAll[
                  ReplaceAll[
                   FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                   Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                    "TimeAggregation" -> Tools`TimeAggregation`h, 
                    "numPeriods" -> Tools`TimeAggregation`k, "v0" -> 
                    Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`F[Tools`TimeAggregation`j]]], 
                   Tools`TimeAggregation`rulej], Tools`TimeAggregation`dc[
                    BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                 Tools`TimeAggregation`dcX, 0]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.022506`4.50281331236636, "CPUTimeUsed" -> 0.022801999999995104`, 
         "MemoryUsed" -> 156968, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 1831064073550609933 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90587690117707*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "fd929c8e-ae5b-4b72-ad5d-d621da271ff5", "TestID" -> 
         "TimeAggregation_20231009-34LHKW", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "3f6764b3-bc78-4c2d-9b89-3e5df6a599db", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 3; Tools`TimeAggregation`k = 1; 
           Tools`TimeAggregation`rulej = 
            Table[Tools`TimeAggregation`F[Tools`TimeAggregation`i] -> 
              Tools`TimeAggregation`F[
               Tools`TimeAggregation`h Tools`TimeAggregation`k + 
                Tools`TimeAggregation`i], {
              Tools`TimeAggregation`i, 0, Tools`TimeAggregation`h - 2}]; 
           Apply[And, {
              FullSimplify[0 === Coefficient[
                 ReplaceAll[
                  ReplaceAll[
                   FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                   Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                    "TimeAggregation" -> Tools`TimeAggregation`h, 
                    "numPeriods" -> Tools`TimeAggregation`k, "v0" -> 
                    Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`F[Tools`TimeAggregation`j]]], 
                   Tools`TimeAggregation`rulej], Tools`TimeAggregation`dc[
                    BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                 Tools`TimeAggregation`dcX, 0]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.082965`5.06940991535684, "CPUTimeUsed" -> 0.08343500000000148, 
         "MemoryUsed" -> 409704, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 4602147350953548299 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058769012606*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "cf983d04-6837-4249-b979-23a18f5964e1", "TestID" -> 
         "TimeAggregation_20231009-POEGBB", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "ae76d880-2cc6-4785-805f-2e9566a34b5b", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 4; Tools`TimeAggregation`k = 1; 
           Tools`TimeAggregation`rulej = 
            Table[Tools`TimeAggregation`F[Tools`TimeAggregation`i] -> 
              Tools`TimeAggregation`F[
               Tools`TimeAggregation`h Tools`TimeAggregation`k + 
                Tools`TimeAggregation`i], {
              Tools`TimeAggregation`i, 0, Tools`TimeAggregation`h - 2}]; 
           Apply[And, {
              FullSimplify[0 === Coefficient[
                 ReplaceAll[
                  ReplaceAll[
                   FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                   Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                    "TimeAggregation" -> Tools`TimeAggregation`h, 
                    "numPeriods" -> Tools`TimeAggregation`k, "v0" -> 
                    Function[{
                    Tools`TimeAggregation`t, Tools`TimeAggregation`j, 
                    Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                    Tools`TimeAggregation`v, Tools`TimeAggregation`im}, 
                    Tools`TimeAggregation`F[Tools`TimeAggregation`j]]], 
                   Tools`TimeAggregation`rulej], Tools`TimeAggregation`dc[
                    BlankSequence[]] -> Tools`TimeAggregation`dcX], 
                 Tools`TimeAggregation`dcX, 0]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.290445`5.61357890234505, "CPUTimeUsed" -> 0.2912510000000026, 
         "MemoryUsed" -> 859904, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 9049454229432921585 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876901551616*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "14ebd2fc-d889-4e09-9d5b-95b57a3a3c92", "TestID" -> 
         "TimeAggregation_20231009-UMQNT0", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "4f5f0beb-d5a0-4990-a600-b02ae6694fca", "Input" -> HoldForm[
           Apply[And, {Cases[
               Expand[
                FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                 "TimeAggregation" -> 3, "numPeriods" -> 1, "Order" -> 0]], 
               Optional[
                  Pattern[Tools`TimeAggregation`coef, 
                   Blank[]]] Tools`TimeAggregation`dc[
                   BlankSequence[]]^Optional[
                   Pattern[Tools`TimeAggregation`p, 
                    Blank[]]] :> Tools`TimeAggregation`p] === {}, Max[
               Cases[
                Expand[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                  "TimeAggregation" -> 3, "numPeriods" -> 1, "Order" -> 1]], 
                Optional[
                   Pattern[Tools`TimeAggregation`coef, 
                    Blank[]]] Tools`TimeAggregation`dc[
                    BlankSequence[]]^Optional[
                    Pattern[Tools`TimeAggregation`p, 
                    Blank[]]] :> Tools`TimeAggregation`p]] === 1, Max[
               Cases[
                Expand[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                  "TimeAggregation" -> 3, "numPeriods" -> 1, "Order" -> 2]], 
                Optional[
                   Pattern[Tools`TimeAggregation`coef, 
                    Blank[]]] Tools`TimeAggregation`dc[
                    BlankSequence[]]^Optional[
                    Pattern[Tools`TimeAggregation`p, 
                    Blank[]]] :> Tools`TimeAggregation`p]] === 2, Max[
               Cases[
                Expand[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                  "TimeAggregation" -> 3, "numPeriods" -> 1, "Order" -> 3]], 
                Optional[
                   Pattern[Tools`TimeAggregation`coef, 
                    Blank[]]] Tools`TimeAggregation`dc[
                    BlankSequence[]]^Optional[
                    Pattern[Tools`TimeAggregation`p, 
                    Blank[]]] :> Tools`TimeAggregation`p]] === 3}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.014197`4.3027115801662035, "CPUTimeUsed" -> 0.014806000000000097`, 
         "MemoryUsed" -> 127064, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 6541792049118670468 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058769015662494`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "62e3348f-9353-42f1-9b09-513739cae212", "TestID" -> 
         "TimeAggregation_20231009-54VB4M", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "539ff6a7-6686-4abb-9976-1ca1728d5872", "Input" -> HoldForm[
           Apply[And, {Cases[
               Expand[
                FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                 Tools`TimeAggregation`i, "TimeAggregation" -> 3, 
                 "numPeriods" -> 1, "Order" -> 0]], Optional[
                  Pattern[Tools`TimeAggregation`coef, 
                   Blank[]]] Tools`TimeAggregation`dd[
                   BlankSequence[], Tools`TimeAggregation`i]^Optional[
                   Pattern[Tools`TimeAggregation`p, 
                    Blank[]]] :> Tools`TimeAggregation`p] === {}, Max[
               Cases[
                Expand[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                  Tools`TimeAggregation`i, "TimeAggregation" -> 3, 
                  "numPeriods" -> 1, "Order" -> 1]], Optional[
                   Pattern[Tools`TimeAggregation`coef, 
                    Blank[]]] Tools`TimeAggregation`dd[
                    BlankSequence[], Tools`TimeAggregation`i]^Optional[
                    Pattern[Tools`TimeAggregation`p, 
                    Blank[]]] :> Tools`TimeAggregation`p]] === 1, Max[
               Cases[
                Expand[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                  Tools`TimeAggregation`i, "TimeAggregation" -> 3, 
                  "numPeriods" -> 1, "Order" -> 2]], Optional[
                   Pattern[Tools`TimeAggregation`coef, 
                    Blank[]]] Tools`TimeAggregation`dd[
                    BlankSequence[], Tools`TimeAggregation`i]^Optional[
                    Pattern[Tools`TimeAggregation`p, 
                    Blank[]]] :> Tools`TimeAggregation`p]] === 2, Max[
               Cases[
                Expand[
                 FernandoDuarte`LongRunRisk`Tools`TimeAggregation`growth[
                 Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                  Tools`TimeAggregation`i, "TimeAggregation" -> 3, 
                  "numPeriods" -> 1, "Order" -> 3]], Optional[
                   Pattern[Tools`TimeAggregation`coef, 
                    Blank[]]] Tools`TimeAggregation`dd[
                    BlankSequence[], Tools`TimeAggregation`i]^Optional[
                    Pattern[Tools`TimeAggregation`p, 
                    Blank[]]] :> Tools`TimeAggregation`p]] === 3}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0151320000000000001`4.3304113304527005, "CPUTimeUsed" -> 
         0.015703999999999496`, "MemoryUsed" -> 121096, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 8878521527630345672 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058769015817823`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a3aebcbc-8b5c-471c-a72a-4034acf5c306", "TestID" -> 
         "TimeAggregation_20231009-JPR8MC", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "4aa1b6ed-bc18-4017-8f98-3d47e2d0f6bd", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`f = 
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`f; 
           Tools`TimeAggregation`g = 
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`g; 
           Tools`TimeAggregation`s = 
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`s; 
           Tools`TimeAggregation`timeSeriesVector = 
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`\
timeSeriesVector; 
           Tools`TimeAggregation`gt = 
            FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`gt; 
           True], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000024`1.5307262395436003, "CPUTimeUsed" -> 
         0.000023999999999801958`, "MemoryUsed" -> 2592, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 5973698046646056949 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058769015824513`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "0a394272-4cee-4d43-9ff4-ab371468821b", "TestID" -> 
         "TimeAggregation_20231009-KAL047", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "4344b083-826d-4172-8815-4e097c2d0cad", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 3; Tools`TimeAggregation`k = 2; 
           Apply[And, {
             Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dc, Tools`TimeAggregation`t] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dc, Tools`TimeAggregation`t, {
                "TimeAggregation" -> 3, "numPeriods" -> 
                 Tools`TimeAggregation`k}] == 
              Subtract[
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 5] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4] + (
                  Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] + (
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + (
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t] + 
                    Log[1 + (
                    E^(-Tools`TimeAggregation`dc[Tools`TimeAggregation`t] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1]) + 
                    E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t]))]))))), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 6] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 7]) + 
                  E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t - 6]))]], 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                "TimeAggregation" -> 3, "numPeriods" -> 
                Tools`TimeAggregation`k] == 
              Subtract[
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 5] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4] + (
                  Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] + (
                   Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + (
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t] + 
                    Log[1 + (
                    E^(-Tools`TimeAggregation`dc[Tools`TimeAggregation`t] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1]) + 
                    E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t]))]))))), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 6] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 7]) + 
                  E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t - 6]))]], 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                Tools`TimeAggregation`i, {
                "TimeAggregation" -> 3, "numPeriods" -> 
                 Tools`TimeAggregation`k}] == 
              Subtract[
               Tools`TimeAggregation`dd[
                 Tools`TimeAggregation`t - 5, Tools`TimeAggregation`i] + (
                 Tools`TimeAggregation`dd[
                  Tools`TimeAggregation`t - 4, Tools`TimeAggregation`i] + (
                  Tools`TimeAggregation`dd[
                   Tools`TimeAggregation`t - 3, Tools`TimeAggregation`i] + (
                   Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 2, Tools`TimeAggregation`i] + (
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 1, Tools`TimeAggregation`i] + (
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`i] + 
                    Log[1 + (
                    E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`i] - 
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 1, Tools`TimeAggregation`i]) + 
                    E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`i]))]))))), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 6, Tools`TimeAggregation`i] - 
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 7, Tools`TimeAggregation`i]) + 
                  E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 6, Tools`TimeAggregation`i]))]],
               Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                Tools`TimeAggregation`i, "TimeAggregation" -> 3, "numPeriods" -> 
                Tools`TimeAggregation`k] == 
              Subtract[
               Tools`TimeAggregation`dd[
                 Tools`TimeAggregation`t - 5, Tools`TimeAggregation`i] + (
                 Tools`TimeAggregation`dd[
                  Tools`TimeAggregation`t - 4, Tools`TimeAggregation`i] + (
                  Tools`TimeAggregation`dd[
                   Tools`TimeAggregation`t - 3, Tools`TimeAggregation`i] + (
                   Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 2, Tools`TimeAggregation`i] + (
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 1, Tools`TimeAggregation`i] + (
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`i] + 
                    Log[1 + (
                    E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`i] - 
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 1, Tools`TimeAggregation`i]) + 
                    E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`i]))]))))), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 6, Tools`TimeAggregation`i] - 
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 7, Tools`TimeAggregation`i]) + 
                  E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 6, Tools`TimeAggregation`i]))]],
               Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 1, {
                "TimeAggregation" -> 3, "numPeriods" -> 
                 Tools`TimeAggregation`k}] == 
              Subtract[
               Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 5, 1] + (
                 Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 4, 1] + (
                  Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 3, 1] + (
                   Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 2, 1] + (
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 1, 1] + (
                    Tools`TimeAggregation`dd[Tools`TimeAggregation`t, 1] + 
                    Log[1 + (
                    E^(-Tools`TimeAggregation`dd[Tools`TimeAggregation`t, 1] - 
                    Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 1, 1]) + 
                    E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t, 1]))]))))), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 6, 1] - 
                    Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 7, 1]) + 
                  E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 6, 1]))]], 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 2, 
                "TimeAggregation" -> 3, "numPeriods" -> 
                Tools`TimeAggregation`k] == 
              Subtract[
               Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 5, 2] + (
                 Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 4, 2] + (
                  Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 3, 2] + (
                   Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 2, 2] + (
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 1, 2] + (
                    Tools`TimeAggregation`dd[Tools`TimeAggregation`t, 2] + 
                    Log[1 + (
                    E^(-Tools`TimeAggregation`dd[Tools`TimeAggregation`t, 2] - 
                    Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 1, 2]) + 
                    E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t, 2]))]))))), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 6, 2] - 
                    Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 7, 2]) + 
                  E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 6, 2]))]]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000582`2.915437982481883, "CPUTimeUsed" -> 0.00058299999999889, 
         "MemoryUsed" -> 2648, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 774074211028486959 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058769015833693`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "3644fee8-2797-4820-813b-b650be0b74bb", "TestID" -> 
         "TimeAggregation_20231009-O0J56T", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "37906a4f-b0f2-45ab-a10c-b8bd78ac0a20", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 3; Tools`TimeAggregation`k = 2; 
           Apply[And, {
             Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dc, Tools`TimeAggregation`t] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                "flowVariable" -> False] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                "TimeAggregation" -> 3, "flowVariable" -> False] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                Tools`TimeAggregation`i, {
                "numPeriods" -> Tools`TimeAggregation`k}, "flowVariable" -> 
                False] == Tools`TimeAggregation`dd[
                Tools`TimeAggregation`t - 1, Tools`TimeAggregation`i] + 
               Tools`TimeAggregation`dd[
                Tools`TimeAggregation`t, Tools`TimeAggregation`i], 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                Tools`TimeAggregation`i, "flowVariable" -> False] == 
              Tools`TimeAggregation`dd[
               Tools`TimeAggregation`t, Tools`TimeAggregation`i], 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 1, {
                "TimeAggregation" -> 3}, "flowVariable" -> False] == 
              Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 2, 1] + 
               Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 1, 1] + 
               Tools`TimeAggregation`dd[Tools`TimeAggregation`t, 1], 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 2, 
                "flowVariable" -> False] == 
              Tools`TimeAggregation`dd[Tools`TimeAggregation`t, 2]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000266`2.5753966344630608, "CPUTimeUsed" -> 0.0002670000000009054, 
         "MemoryUsed" -> 2592, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 3387124744034269850 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876901584051*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "650e5d6a-9bad-4b17-aec5-6153ffce4168", "TestID" -> 
         "TimeAggregation_20231009-NM8WP5", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "f3e74902-8e18-41e0-99cb-7167a87195f2", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 3; Tools`TimeAggregation`k = 2; 
           Apply[And, {
             Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dc, Tools`TimeAggregation`t] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dc, Tools`TimeAggregation`t, {
                "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                 Tools`TimeAggregation`k}, "flowVariable" -> False] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 5] + (
                Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] + 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t])), 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                Tools`TimeAggregation`k, "flowVariable" -> False] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 5] + (
                Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] + 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t])), 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                Tools`TimeAggregation`i, {
                "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                 Tools`TimeAggregation`k}, "flowVariable" -> False] == 
              Tools`TimeAggregation`dd[
                Tools`TimeAggregation`t - 5, Tools`TimeAggregation`i] + (
                Tools`TimeAggregation`dd[
                 Tools`TimeAggregation`t - 4, Tools`TimeAggregation`i] + (
                 Tools`TimeAggregation`dd[
                  Tools`TimeAggregation`t - 3, Tools`TimeAggregation`i] + (
                  Tools`TimeAggregation`dd[
                   Tools`TimeAggregation`t - 2, Tools`TimeAggregation`i] + 
                  Tools`TimeAggregation`dd[
                   Tools`TimeAggregation`t - 1, Tools`TimeAggregation`i] + 
                  Tools`TimeAggregation`dd[
                   Tools`TimeAggregation`t, Tools`TimeAggregation`i]))), 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                Tools`TimeAggregation`i, "TimeAggregation" -> 
                Tools`TimeAggregation`h, "numPeriods" -> 
                Tools`TimeAggregation`k, "flowVariable" -> False] == 
              Tools`TimeAggregation`dd[
                Tools`TimeAggregation`t - 5, Tools`TimeAggregation`i] + (
                Tools`TimeAggregation`dd[
                 Tools`TimeAggregation`t - 4, Tools`TimeAggregation`i] + (
                 Tools`TimeAggregation`dd[
                  Tools`TimeAggregation`t - 3, Tools`TimeAggregation`i] + (
                  Tools`TimeAggregation`dd[
                   Tools`TimeAggregation`t - 2, Tools`TimeAggregation`i] + 
                  Tools`TimeAggregation`dd[
                   Tools`TimeAggregation`t - 1, Tools`TimeAggregation`i] + 
                  Tools`TimeAggregation`dd[
                   Tools`TimeAggregation`t, Tools`TimeAggregation`i]))), 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 1, {
                "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                 Tools`TimeAggregation`k}, "flowVariable" -> False] == 
              Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 5, 1] + (
                Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 4, 1] + (
                 Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 3, 1] + (
                  Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 2, 1] + 
                  Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 1, 1] + 
                  Tools`TimeAggregation`dd[Tools`TimeAggregation`t, 1]))), 
              Tools`TimeAggregation`gt[
               Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 2, 
                "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                Tools`TimeAggregation`k, "flowVariable" -> False] == 
              Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 5, 2] + (
                Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 4, 2] + (
                 Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 3, 2] + (
                  Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 2, 2] + 
                  Tools`TimeAggregation`dd[Tools`TimeAggregation`t - 1, 2] + 
                  Tools`TimeAggregation`dd[Tools`TimeAggregation`t, 2])))}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000358`2.7043980244758683, "CPUTimeUsed" -> 
         0.00035799999999852616`, "MemoryUsed" -> 2592, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 4063015906617818263 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876901584791*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "cf1debc7-d41b-4dbd-b1b9-b596a19f0c6c", "TestID" -> 
         "TimeAggregation_20231009-IC7NYD", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "0205848e-782d-414c-bd2a-ca292fbe912e", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 3; Tools`TimeAggregation`k = 1; 
           Apply[And, {Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                 "TimeAggregation" -> Tools`TimeAggregation`h], 
                Tools`TimeAggregation`h] == 
              Subtract[
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + (
                  Tools`TimeAggregation`dc[Tools`TimeAggregation`t] + 
                  Log[1 + (
                    E^(-Tools`TimeAggregation`dc[Tools`TimeAggregation`t] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1]) + 
                    E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t]))])), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4]) + 
                  E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t - 3]))]], 
              Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                 "numPeriods" -> Tools`TimeAggregation`k], 1, 
                Tools`TimeAggregation`k] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
              Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t, {
                 "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                  Tools`TimeAggregation`k}], Tools`TimeAggregation`h, 
                Tools`TimeAggregation`k] == 
              Subtract[
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + (
                  Tools`TimeAggregation`dc[Tools`TimeAggregation`t] + 
                  Log[1 + (
                    E^(-Tools`TimeAggregation`dc[Tools`TimeAggregation`t] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1]) + 
                    E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t]))])), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4]) + 
                  E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t - 3]))]], 
              Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                 "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                 Tools`TimeAggregation`k], Tools`TimeAggregation`h, 
                Tools`TimeAggregation`k] == 
              Subtract[
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + (
                  Tools`TimeAggregation`dc[Tools`TimeAggregation`t] + 
                  Log[1 + (
                    E^(-Tools`TimeAggregation`dc[Tools`TimeAggregation`t] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1]) + 
                    E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t]))])), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4]) + 
                  E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t - 3]))]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000264`2.5721189247018246, "CPUTimeUsed" -> 0.0002649999999988495, 
         "MemoryUsed" -> 2648, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 3498043170601089443 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058769015853953`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "33509736-0b96-4c37-8136-b9ad7f806758", "TestID" -> 
         "TimeAggregation_20231009-DKVTXR", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "df42b5f3-71e7-4412-a90b-cd4e3e48df28", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 3; Tools`TimeAggregation`k = 1; 
           Apply[And, {Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t], 
                Tools`TimeAggregation`h] == 
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`g[{
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t]}, 3], 
              Tools`TimeAggregation`g[
                Part[
                 Tools`TimeAggregation`timeSeriesVector[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                  "TimeAggregation" -> Tools`TimeAggregation`h], 
                 Span[1, -2]], Tools`TimeAggregation`h] == 
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`g[{
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3]}, 3], 
              Tools`TimeAggregation`g[
                Part[
                 Tools`TimeAggregation`timeSeriesVector[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                  "numPeriods" -> Tools`TimeAggregation`k], 
                 Span[1, -2]], 1, Tools`TimeAggregation`k] == 
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`g[{}, 
                1, 1], Tools`TimeAggregation`g[
                Part[
                 Tools`TimeAggregation`timeSeriesVector[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, {
                  "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                   Tools`TimeAggregation`k}], 
                 Span[1, -2]], Tools`TimeAggregation`h, 
                Tools`TimeAggregation`k] == 
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`g[{
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3]}, 3, 
                1], Tools`TimeAggregation`g[
                Part[
                 Tools`TimeAggregation`timeSeriesVector[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                  "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                  Tools`TimeAggregation`k], 
                 Span[1, -2]], Tools`TimeAggregation`h, 
                Tools`TimeAggregation`k] == 
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`g[{
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3]}, 3, 
                1]}]], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000153`2.3352064286495926, "CPUTimeUsed" -> 0.0001549999999959084, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 1118738624924089701 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058769015859203`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "e32c9e5a-9b16-4ae1-8691-4a5a1b2cce4b", "TestID" -> 
         "TimeAggregation_20231009-DWOTZZ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "5821d88f-4631-43d2-90b6-a39400a56b4c", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 3; Tools`TimeAggregation`k = 1; 
           Apply[And, {Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                 "TimeAggregation" -> Tools`TimeAggregation`h], 
                Tools`TimeAggregation`h, "flowVariable" -> True] == 
              Subtract[
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + (
                  Tools`TimeAggregation`dc[Tools`TimeAggregation`t] + 
                  Log[1 + (
                    E^(-Tools`TimeAggregation`dc[Tools`TimeAggregation`t] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1]) + 
                    E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t]))])), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4]) + 
                  E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t - 3]))]], 
              Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                 "numPeriods" -> Tools`TimeAggregation`k], 1, 
                Tools`TimeAggregation`k, "flowVariable" -> True] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
              Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t, {
                 "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                  Tools`TimeAggregation`k}], Tools`TimeAggregation`h, 
                Tools`TimeAggregation`k, "flowVariable" -> True] == 
              Subtract[
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + (
                  Tools`TimeAggregation`dc[Tools`TimeAggregation`t] + 
                  Log[1 + (
                    E^(-Tools`TimeAggregation`dc[Tools`TimeAggregation`t] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1]) + 
                    E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t]))])), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4]) + 
                  E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t - 3]))]], 
              Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                 "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                 Tools`TimeAggregation`k], Tools`TimeAggregation`h, 
                Tools`TimeAggregation`k, "flowVariable" -> True] == 
              Subtract[
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + (
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + (
                  Tools`TimeAggregation`dc[Tools`TimeAggregation`t] + 
                  Log[1 + (
                    E^(-Tools`TimeAggregation`dc[Tools`TimeAggregation`t] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1]) + 
                    E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t]))])), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3] - 
                    Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4]) + 
                  E^(-Tools`TimeAggregation`dc[
                    Tools`TimeAggregation`t - 3]))]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000277`2.592994766896443, "CPUTimeUsed" -> 0.00027700000000407954`,
          "MemoryUsed" -> 2592, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 8795635433462634652 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058769015865054`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "71bfb4f5-25ce-4ea3-8ad8-9d136e02ac1f", "TestID" -> 
         "TimeAggregation_20231009-DESM0O", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "a8170031-275f-4bff-a75c-096673747e32", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 3; Tools`TimeAggregation`k = 1; 
           Apply[And, {Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                 "TimeAggregation" -> Tools`TimeAggregation`h], 
                Tools`TimeAggregation`h, "flowVariable" -> False] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
              Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                 "numPeriods" -> Tools`TimeAggregation`k], 1, 
                Tools`TimeAggregation`k, "flowVariable" -> False] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
              Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t, {
                 "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                  Tools`TimeAggregation`k}], Tools`TimeAggregation`h, 
                Tools`TimeAggregation`k, "flowVariable" -> False] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
              Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                 "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                 Tools`TimeAggregation`k], Tools`TimeAggregation`h, 
                Tools`TimeAggregation`k, "flowVariable" -> False] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000138`2.29039408423323, "CPUTimeUsed" -> 0.00013799999999619672`, 
         "MemoryUsed" -> 2592, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4623437377773954302 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058769015869584`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "dfdc55b7-c0ff-4932-adf2-b5670f663606", "TestID" -> 
         "TimeAggregation_20231009-M98FX9", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "f30b3751-0a1a-4950-aa4b-de268946e7d0", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 3; Tools`TimeAggregation`k = 1; 
           Apply[And, {Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t], 1, 
                "flowVariable" -> False] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
              Tools`TimeAggregation`g[
                Part[
                 Tools`TimeAggregation`timeSeriesVector[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                  "TimeAggregation" -> Tools`TimeAggregation`h], 
                 Span[1, Tools`TimeAggregation`h Tools`TimeAggregation`k]], 
                Tools`TimeAggregation`h, "flowVariable" -> False] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
              Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                 "numPeriods" -> Tools`TimeAggregation`k], 1, 
                Tools`TimeAggregation`k, "flowVariable" -> False] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
              Tools`TimeAggregation`g[
                Part[
                 Tools`TimeAggregation`timeSeriesVector[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, {
                  "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                   Tools`TimeAggregation`k}], 
                 Span[1, Tools`TimeAggregation`h Tools`TimeAggregation`k]], 
                Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                "flowVariable" -> False] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
              Tools`TimeAggregation`g[
                Part[
                 Tools`TimeAggregation`timeSeriesVector[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                  "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                  Tools`TimeAggregation`k], 
                 Span[1, Tools`TimeAggregation`h Tools`TimeAggregation`k]], 
                Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                "flowVariable" -> False] == 
              Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2] + 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1] + 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000122`2.236874828506742, "CPUTimeUsed" -> 0.00012300000000209366`,
          "MemoryUsed" -> 2592, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4333401954478586147 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876901587405*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "19365508-8a94-48b9-af70-fd77629ae00b", "TestID" -> 
         "TimeAggregation_20231009-CRS55A", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "09f3183b-458f-4d7e-aa10-12d9a2580fbb", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 3; Tools`TimeAggregation`k = 1; 
           Apply[And, {Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dc, Tools`TimeAggregation`t], 
                "flowVariable" -> False] == 
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`g[{
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t]}, 
                "flowVariable" -> False], Tools`TimeAggregation`g[
                Part[
                 Tools`TimeAggregation`timeSeriesVector[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                  "TimeAggregation" -> Tools`TimeAggregation`h], 
                 Span[
                 1, Tools`TimeAggregation`h Tools`TimeAggregation`k + 1]], 
                Tools`TimeAggregation`h, "flowVariable" -> False] == 
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`g[{
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3]}, 3, 
                "flowVariable" -> False], Tools`TimeAggregation`g[
                Part[
                 Tools`TimeAggregation`timeSeriesVector[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, {
                  "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                   Tools`TimeAggregation`k}], 
                 Span[
                 1, Tools`TimeAggregation`h Tools`TimeAggregation`k + 1]], 
                Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                "flowVariable" -> False] == 
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`g[{
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3]}, 3, 1,
                 "flowVariable" -> False], Tools`TimeAggregation`g[
                Part[
                 Tools`TimeAggregation`timeSeriesVector[
                 Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
                  "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                  Tools`TimeAggregation`k], 
                 Span[
                 1, Tools`TimeAggregation`h Tools`TimeAggregation`k + 1]], 
                Tools`TimeAggregation`h, Tools`TimeAggregation`k, 
                "flowVariable" -> False] == 
              FernandoDuarte`LongRunRisk`Tools`TimeAggregation`Private`g[{
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2], 
                 Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3]}, 3, 1,
                 "flowVariable" -> False]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000133`2.2743666387990795, "CPUTimeUsed" -> 
         0.00013299999999816237`, "MemoryUsed" -> 2592, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 8555013829855506953 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876901588027*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "ee03f4ab-ef39-4d7f-a574-d80945a7bd37", "TestID" -> 
         "TimeAggregation_20231009-4M86RO", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "23439fd3-a7f5-4e2c-a081-9730fef0400e", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 3; Tools`TimeAggregation`k = 1; 
           Apply[And, {Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                 Tools`TimeAggregation`i], 1] == 
              Tools`TimeAggregation`dd[
               Tools`TimeAggregation`t, Tools`TimeAggregation`i], 
              Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                 Tools`TimeAggregation`i, "TimeAggregation" -> 
                 Tools`TimeAggregation`h], Tools`TimeAggregation`h] == 
              Subtract[
               Tools`TimeAggregation`dd[
                 Tools`TimeAggregation`t - 2, Tools`TimeAggregation`i] + (
                 Tools`TimeAggregation`dd[
                  Tools`TimeAggregation`t - 1, Tools`TimeAggregation`i] + (
                  Tools`TimeAggregation`dd[
                   Tools`TimeAggregation`t, Tools`TimeAggregation`i] + 
                  Log[1 + (
                    E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`i] - 
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 1, Tools`TimeAggregation`i]) + 
                    E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`i]))])), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 3, Tools`TimeAggregation`i] - 
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 4, Tools`TimeAggregation`i]) + 
                  E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 3, Tools`TimeAggregation`i]))]],
               Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                 Tools`TimeAggregation`i, "numPeriods" -> 
                 Tools`TimeAggregation`k], 1, Tools`TimeAggregation`k] == 
              Tools`TimeAggregation`dd[
               Tools`TimeAggregation`t, Tools`TimeAggregation`i], 
              Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                 Tools`TimeAggregation`i, {
                 "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                  Tools`TimeAggregation`k}], Tools`TimeAggregation`h, 
                Tools`TimeAggregation`k] == 
              Subtract[
               Tools`TimeAggregation`dd[
                 Tools`TimeAggregation`t - 2, Tools`TimeAggregation`i] + (
                 Tools`TimeAggregation`dd[
                  Tools`TimeAggregation`t - 1, Tools`TimeAggregation`i] + (
                  Tools`TimeAggregation`dd[
                   Tools`TimeAggregation`t, Tools`TimeAggregation`i] + 
                  Log[1 + (
                    E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`i] - 
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 1, Tools`TimeAggregation`i]) + 
                    E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`i]))])), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 3, Tools`TimeAggregation`i] - 
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 4, Tools`TimeAggregation`i]) + 
                  E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 3, Tools`TimeAggregation`i]))]],
               Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`dd, Tools`TimeAggregation`t, 
                 Tools`TimeAggregation`i, "TimeAggregation" -> 
                 Tools`TimeAggregation`h, "numPeriods" -> 
                 Tools`TimeAggregation`k], Tools`TimeAggregation`h, 
                Tools`TimeAggregation`k] == 
              Subtract[
               Tools`TimeAggregation`dd[
                 Tools`TimeAggregation`t - 2, Tools`TimeAggregation`i] + (
                 Tools`TimeAggregation`dd[
                  Tools`TimeAggregation`t - 1, Tools`TimeAggregation`i] + (
                  Tools`TimeAggregation`dd[
                   Tools`TimeAggregation`t, Tools`TimeAggregation`i] + 
                  Log[1 + (
                    E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`i] - 
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 1, Tools`TimeAggregation`i]) + 
                    E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`i]))])), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 3, Tools`TimeAggregation`i] - 
                    Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 4, Tools`TimeAggregation`i]) + 
                  E^(-Tools`TimeAggregation`dd[
                    Tools`TimeAggregation`t - 3, 
                    Tools`TimeAggregation`i]))]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000289`2.6114128405885415, "CPUTimeUsed" -> 
         0.00028899999999865145`, "MemoryUsed" -> 2592, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 8918519897241073288 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876901588808*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "7ab6eddc-8fd0-4e75-bacb-5863664836b0", "TestID" -> 
         "TimeAggregation_20231009-CVO1NB", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "142eef75-ba15-4bd2-8a96-19480b0334b9", "Input" -> 
         HoldForm[
          Tools`TimeAggregation`h = 3; Tools`TimeAggregation`k = 1; 
           Apply[And, {Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`bondret, Tools`TimeAggregation`t, 
                 Tools`TimeAggregation`m, "TimeAggregation" -> 
                 Tools`TimeAggregation`h], Tools`TimeAggregation`h] == 
              Subtract[
               Tools`TimeAggregation`bondret[
                 Tools`TimeAggregation`t - 2, Tools`TimeAggregation`m] + (
                 Tools`TimeAggregation`bondret[
                  Tools`TimeAggregation`t - 1, Tools`TimeAggregation`m] + (
                  Tools`TimeAggregation`bondret[
                   Tools`TimeAggregation`t, Tools`TimeAggregation`m] + 
                  Log[1 + (
                    E^(-Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`m] - 
                    Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t - 1, Tools`TimeAggregation`m]) + 
                    E^(-Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`m]))])), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t - 3, Tools`TimeAggregation`m] - 
                    Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t - 4, Tools`TimeAggregation`m]) + 
                  E^(-Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t - 3, Tools`TimeAggregation`m]))]],
               Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`bondret, Tools`TimeAggregation`t, 
                 Tools`TimeAggregation`m, "numPeriods" -> 
                 Tools`TimeAggregation`k], 1, Tools`TimeAggregation`k] == 
              Tools`TimeAggregation`bondret[
               Tools`TimeAggregation`t, Tools`TimeAggregation`m], 
              Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`bondret, Tools`TimeAggregation`t, 
                 Tools`TimeAggregation`m, {
                 "TimeAggregation" -> Tools`TimeAggregation`h, "numPeriods" -> 
                  Tools`TimeAggregation`k}], Tools`TimeAggregation`h, 
                Tools`TimeAggregation`k] == 
              Subtract[
               Tools`TimeAggregation`bondret[
                 Tools`TimeAggregation`t - 2, Tools`TimeAggregation`m] + (
                 Tools`TimeAggregation`bondret[
                  Tools`TimeAggregation`t - 1, Tools`TimeAggregation`m] + (
                  Tools`TimeAggregation`bondret[
                   Tools`TimeAggregation`t, Tools`TimeAggregation`m] + 
                  Log[1 + (
                    E^(-Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`m] - 
                    Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t - 1, Tools`TimeAggregation`m]) + 
                    E^(-Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`m]))])), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t - 3, Tools`TimeAggregation`m] - 
                    Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t - 4, Tools`TimeAggregation`m]) + 
                  E^(-Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t - 3, Tools`TimeAggregation`m]))]],
               Tools`TimeAggregation`g[
                Tools`TimeAggregation`timeSeriesVector[
                Tools`TimeAggregation`bondret, Tools`TimeAggregation`t, 
                 Tools`TimeAggregation`m, "TimeAggregation" -> 
                 Tools`TimeAggregation`h, "numPeriods" -> 
                 Tools`TimeAggregation`k], Tools`TimeAggregation`h, 
                Tools`TimeAggregation`k] == 
              Subtract[
               Tools`TimeAggregation`bondret[
                 Tools`TimeAggregation`t - 2, Tools`TimeAggregation`m] + (
                 Tools`TimeAggregation`bondret[
                  Tools`TimeAggregation`t - 1, Tools`TimeAggregation`m] + (
                  Tools`TimeAggregation`bondret[
                   Tools`TimeAggregation`t, Tools`TimeAggregation`m] + 
                  Log[
                   1 + (E^(-
                    Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`m] - 
                    Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t - 1, Tools`TimeAggregation`m]) + 
                    E^(-Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t, Tools`TimeAggregation`m]))])), 
                Log[
                1 + (E^(-
                    Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t - 3, Tools`TimeAggregation`m] - 
                    Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t - 4, Tools`TimeAggregation`m]) + 
                  E^(-Tools`TimeAggregation`bondret[
                    Tools`TimeAggregation`t - 3, 
                    Tools`TimeAggregation`m]))]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000246`2.541450104935373, "CPUTimeUsed" -> 0.0002460000000006346, 
         "MemoryUsed" -> 2592, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 1754298464371600480 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058769015895653`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "9caff621-fab9-4ac9-a752-3fc6a94f9cf9", "TestID" -> 
         "TimeAggregation_20231009-IFUR3D", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "f85132d6-6f87-4498-b08f-f22d57b71897", "Input" -> HoldForm[
           Apply[
           And, {Tools`TimeAggregation`timeSeriesVector[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t] == {
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t]}, 
             Tools`TimeAggregation`timeSeriesVector[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 3] == {
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4]}, 
             Tools`TimeAggregation`timeSeriesVector[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, "numPeriods" -> 
               6] == {
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 5]}, 
             Tools`TimeAggregation`timeSeriesVector[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, {
               "TimeAggregation" -> 12, "numPeriods" -> 3}] == {
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 5], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 6], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 7], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 8], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 9], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 10], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 11], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 12], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 13], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 14], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 15], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 16], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 17], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 18], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 19], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 20], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 21], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 22], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 23], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 24], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 25], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 26], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 27], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 28], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 29], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 30], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 31], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 32], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 33], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 34], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 35], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 36], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 37], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 38], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 39], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 40], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 41], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 42], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 43], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 44], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 45], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 46]}, 
             Tools`TimeAggregation`timeSeriesVector[
              Tools`TimeAggregation`dc, Tools`TimeAggregation`t, 
               "TimeAggregation" -> 12, "numPeriods" -> 3] == {
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 1], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 2], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 3], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 4], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 5], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 6], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 7], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 8], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 9], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 10], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 11], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 12], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 13], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 14], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 15], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 16], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 17], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 18], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 19], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 20], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 21], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 22], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 23], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 24], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 25], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 26], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 27], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 28], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 29], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 30], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 31], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 32], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 33], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 34], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 35], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 36], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 37], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 38], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 39], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 40], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 41], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 42], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 43], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 44], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 45], 
               Tools`TimeAggregation`dc[Tools`TimeAggregation`t - 46]}}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00016`2.3546349804879183, "CPUTimeUsed" -> 0.00016099999999852344`,
          "MemoryUsed" -> 7840, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 6335141955420932238 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90587690158996*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "ceaa64e1-bba0-4c59-9479-01285bd3a0e5", "TestID" -> 
         "TimeAggregation_20231009-Y8XITT", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/TimeAggregation.wlt", "EvaluationID" -> 
         "eeb896f8-e7ab-4969-96a9-4a711c190672", "Input" -> HoldForm[On[
             MessageName[General, "stop"]]; True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000022`1.492937678654201, "CPUTimeUsed" -> 0.00002200000000129876, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>]|>, "FailureResults" -> <||>, 
    "TestsNotEvaluatedKeys" -> {}, "TestsFailedWrongResultsKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {504112095077122838, 2566115563828966509, 
     9220035676145757850, 2889653163248587675, 3497528220531365073, 
     4514264187619322406, 5109966061449958230, 3845137246524504833, 
     7295170849031143801, 5470162074015251616, 863943928340910266, 
     96654258670521231, 851848156878253526, 6112142521427799646, 
     5965472594581665555, 7343042216729638482, 9218477832854821547, 
     1831064073550609933, 4602147350953548299, 9049454229432921585, 
     6541792049118670468, 8878521527630345672, 5973698046646056949, 
     774074211028486959, 3387124744034269850, 4063015906617818263, 
     3498043170601089443, 1118738624924089701, 8795635433462634652, 
     4623437377773954302, 4333401954478586147, 8555013829855506953, 
     8918519897241073288, 1754298464371600480, 6335141955420932238}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.905876842572145*^9, 3.905876901610744*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"dfc994d2-860a-4c74-b4bf-e1fc5d32c2c9"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.905876842572145*^9, 3.905876901615028*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"c2d13972-7f44-4ad6-a49f-eb4eeb1a2598"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.905876842572145*^9, 3.905876901615719*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"7aee93b3-cca8-4ce9-8bcf-02c8100e0cc8"],

Cell[BoxData[{
 RowBox[{"tr", "=", 
  RowBox[{
  "TestReport", "[", 
   "\"\</Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/PacletizeResources.wlt\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expected", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
        ")"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.905687551834566*^9, 3.905687552056076*^9}, 
   3.905768804249631*^9, 3.905876807415079*^9},
 CellLabel->"In[50]:=",ExpressionUUID->"ad7fda5b-fb52-4ad1-8d3f-dceb74f45182"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: PacletizeResources.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: PacletizeResources.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0.074502`4.721652933672079", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: PacletizeResources.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     6535212844253578027 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876901650894*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "2df50737-a8a4-4c70-9b4d-7ae0db482451", "TestID" -> 
         "PacletizeResources_20231008-U7OMIY", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/PacletizeResources.wlt", 
         "EvaluationID" -> "f5b158c9-fd5d-43ae-9822-745eae4c0d88", "Input" -> 
         HoldForm[{Needs["FernandoDuarte`LongRunRisk`"]; True}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{True}], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000031`1.6418766916662664, "CPUTimeUsed" -> 0.00003200000000092018,
          "MemoryUsed" -> 2848, "ExpectedOutput" -> HoldForm[{True}], 
         "Outcome" -> "Success"|>], 4173830028527584479 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876901651202*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "ceafe194-8922-4988-896c-65f7a2d94408", "TestID" -> 
         "PacletizeResources_20231008-FOD064", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/PacletizeResources.wlt", 
         "EvaluationID" -> "0c99e396-7be0-4172-ba1d-e401dda92d68", "Input" -> 
         HoldForm[
           Apply[And, {
             Not[PacletFind["MaTeX"] === {}], 
             Not[PacletFind["PacletizedResourceFunctions"] === {}], 
             MemberQ[$Packages, "MaTeX`"], Part[
               PacletFind["MaTeX"], 1]["Version"] === "1.7.9", 
             Not[PacletFind[
                Names["*NeedsDefinitions"]] === {}], 
             Not[PacletFind[
                Names["*SetSymbolsContext"]] === {}]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.074471`5.022502183440718, "CPUTimeUsed" -> 0.07452599999999876, 
         "MemoryUsed" -> -272, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>]|>, "FailureResults" -> <||>, 
    "TestsNotEvaluatedKeys" -> {}, "TestsFailedWrongResultsKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {6535212844253578027, 4173830028527584479}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.905876842702032*^9, 3.905876901731648*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"f53b708b-a5f4-42bc-b508-aa4b9579ed42"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.905876842702032*^9, 3.9058769017349854`*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"a3940690-a310-4790-af1a-1759671c358b"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.905876842702032*^9, 3.905876901735558*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"6c8e2266-e28a-4605-ad58-0b7a891a57a2"],

Cell[BoxData[{
 RowBox[{"tr", "=", 
  RowBox[{
  "TestReport", "[", 
   "\"\</Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expected", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
        ")"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.905175313001898*^9, {3.905687553635509*^9, 3.905687553886095*^9}, 
   3.905768806011248*^9, 3.905876807415263*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"479fb483-095c-47a5-b63a-afec0a7f6185"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: NiceOutput.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["10", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: NiceOutput.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["10", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["10", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "6.435534`5.95909958693275", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: NiceOutput.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     5583627844603177603 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905902363325683*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "9eadcc37-66e5-4954-be64-4c0c3b7b7a9c", "TestID" -> 
         "NiceOutput_20231010-CSDOMC", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "EvaluationID" -> 
         "03735ac7-59eb-4440-902c-9e387ade5792", "Input" -> 
         HoldForm[Tools`NiceOutput`longTest = False; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00003`1.627636252551654, "CPUTimeUsed" -> 0.000030000000000196536`,
          "MemoryUsed" -> 2760, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4273995173578002822 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905902363326011*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "5ac33b3c-818d-460b-91a1-7e3f444b7550", "TestID" -> 
         "NiceOutput_20231010-SZ1YXW", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "EvaluationID" -> 
         "8de57a2f-caf8-4aad-bd53-048c1d953ee4", "Input" -> HoldForm[Get[
             Get[
              FileNameJoin[{"FernandoDuarte/LongRunRisk", "Models.wl"}]]]; 
           Tools`NiceOutput`msp = 
            If[Tools`NiceOutput`longTest, FernandoDuarte`LongRunRisk`Models, 
              KeyTake[
              FernandoDuarte`LongRunRisk`Models, {
               "BY", "BKY", "NRC", "DES", "NRCStochVol"}]]; 
           Tools`NiceOutput`modBY = Tools`NiceOutput`msp["BY"]; 
           Tools`NiceOutput`modBKY = Tools`NiceOutput`msp["BKY"]; 
           Tools`NiceOutput`modNRC = Tools`NiceOutput`msp["NRC"]; 
           Tools`NiceOutput`modDES = Tools`NiceOutput`msp["DES"]; 
           Tools`NiceOutput`modNRCStochVol = 
            Tools`NiceOutput`msp["NRCStochVol"]; True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         1.23915`6.243638879050065, "CPUTimeUsed" -> 1.2440290000000003`, 
         "MemoryUsed" -> 125493008, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 3352551398069747843 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905902364565511*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "ccd2ef92-debd-4428-b2fa-e538654193a9", "TestID" -> 
         "NiceOutput_20231010-W3EDPT", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "EvaluationID" -> 
         "836b680b-db9c-4457-872e-e17898ab46df", "Input" -> 
         HoldForm[
          Needs["FernandoDuarte`LongRunRisk`Tools`NiceOutput`"]; $ContextPath = 
            DeleteDuplicates[
              
              Prepend[$ContextPath, 
               "FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`"]]; 
           True], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         2.918928`6.615738380388233, "CPUTimeUsed" -> 1.6272069999999998`, 
         "MemoryUsed" -> 74151560, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 2524053312824594692 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905902367484972*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "675bc284-bb38-4910-a7b5-c295c23265e4", "TestID" -> 
         "NiceOutput_20231010-XBKBUS", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "EvaluationID" -> 
         "e858e413-5f5c-46ad-9fc9-dbf873975e7a", "Input" -> HoldForm[
           Apply[And, {
             
             MemberQ[$ContextPath, 
              "FernandoDuarte`LongRunRisk`Tools`NiceOutput`"]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000028`1.5976730291742114, "CPUTimeUsed" -> 0.00002799999999947289,
          "MemoryUsed" -> 2760, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7006634315744856903 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905902367485353*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "5b69db3b-9ce1-4432-8764-5f5cea440676", "TestID" -> 
         "NiceOutput_20231010-BFL7AF", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "EvaluationID" -> 
         "4d06b323-3be6-4e31-8236-6d975ccc5f02", "Input" -> HoldForm[
           Not[Names["*info"] === {}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.029432`4.61933477265506, "CPUTimeUsed" -> 
         0.02940100000000001, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 5552220702215414426 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905902367515213*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "8002db71-4724-4fb3-9719-b43075cb1581", "TestID" -> 
         "NiceOutput_20231010-08E57N", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "EvaluationID" -> 
         "a2aa24c4-4bbb-44ab-9ad3-e18bb07c6563", "Input" -> 
         HoldForm[
          Tools`NiceOutput`myModelsInfo = 
            PacletizedResourceFunctions`SetSymbolsContext[
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`info[
              Tools`NiceOutput`msp]]; 
           Apply[And, {Head[Tools`NiceOutput`myModelsInfo] === Column, Head[
                Part[Tools`NiceOutput`myModelsInfo, 1]] === List, Head[
                Part[Tools`NiceOutput`myModelsInfo, 1, 1]] === OpenerView, 
              Apply[And, 
               Map[MatchQ[#, Grid]& , 
                Map[Head, 
                 Part[Tools`NiceOutput`myModelsInfo, 1, 
                  Span[1, All], 1, 2]]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         2.015405`6.45487732949588, "CPUTimeUsed" -> 0.8597770000000002, 
         "MemoryUsed" -> 3131840, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 3923831081934713553 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905902369531349*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "8d7172a9-d79b-4d13-9e49-80f0dbf19ef9", "TestID" -> 
         "NiceOutput_20231010-2ALCRK", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "EvaluationID" -> 
         "785c8e2c-0d4c-43c5-9848-6a18239e2cbb", "Input" -> 
         HoldForm[
          Tools`NiceOutput`justBY = <|"BY" -> Tools`NiceOutput`msp["BY"]|>; 
           Tools`NiceOutput`infoBY = 
            PacletizedResourceFunctions`SetSymbolsContext[
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`info[
              Tools`NiceOutput`justBY]]; 
           Tools`NiceOutput`newBY = <|
             "myModel" -> Tools`NiceOutput`msp["BY"]|>; 
           Tools`NiceOutput`infoNewBY = 
            PacletizedResourceFunctions`SetSymbolsContext[
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`info[
              Tools`NiceOutput`newBY]]; 
           Apply[And, {
             Part[Tools`NiceOutput`infoBY, 1, 1, 1, 1] == "BY", 
              Part[Tools`NiceOutput`infoBY, 1, 1, 1, 2, 1, 4, 1, 1, 2, 1, 1, 
                1, 1] === Tools`NiceOutput`x[Tools`NiceOutput`t], 
              Part[Tools`NiceOutput`infoNewBY, 1, 1, 1, 1] == "BY", 
              Part[Tools`NiceOutput`infoNewBY, 1, 1, 1, 2, 1, 4, 1, 1, 2, 1, 
                1, 1, 1] === Tools`NiceOutput`x[Tools`NiceOutput`t]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.231549`5.5151579075608685, "CPUTimeUsed" -> 0.2317910000000003, 
         "MemoryUsed" -> 59632, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 1629881821200695586 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9059023697634993`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "5252044f-0940-4a70-985b-0d6e65770ae6", "TestID" -> 
         "NiceOutput_20231010-WRGBND", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "EvaluationID" -> 
         "e481e945-e8ce-4d28-9405-49038e68c555", "Input" -> HoldForm[
           Apply[And, {Head[Tools`NiceOutput`infoBY] === Column, Head[
               Part[Tools`NiceOutput`infoBY, 1]] === List, Head[
               Part[Tools`NiceOutput`infoBY, 1, 1]] === OpenerView, 
             Apply[And, 
              Map[MatchQ[#, Grid]& , 
               Map[Head, 
                Part[Tools`NiceOutput`infoBY, 1, 
                 Span[1, All], 1, 2]]]], Head[Tools`NiceOutput`infoNewBY] === 
             Column, Head[
               Part[Tools`NiceOutput`infoNewBY, 1]] === List, Head[
               Part[Tools`NiceOutput`infoNewBY, 1, 1]] === OpenerView, 
             Apply[And, 
              Map[MatchQ[#, Grid]& , 
               Map[Head, 
                Part[Tools`NiceOutput`infoNewBY, 1, 
                 Span[1, All], 1, 2]]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000087`2.0900342504506106, "CPUTimeUsed" -> 0.00008700000000061436,
          "MemoryUsed" -> 8096, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 5040927162311263976 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9059023697639422`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "52e1faee-ef20-44b3-8dfa-d912ca33e82c", "TestID" -> 
         "NiceOutput_20231010-MIKOL2", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "EvaluationID" -> 
         "10b7eae3-88a8-47e1-b062-ca89ae9d294b", "Input" -> 
         HoldForm[With[{Tools`NiceOutput`localPi = 3.14}, {
              
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[3.14], 
              
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[3.14, NumberMarks -> True], 
              
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[3.14, NumberMarks -> False], 
              
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[Tools`NiceOutput`localPi], 
              
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[Tools`NiceOutput`localPi, NumberMarks -> True], 
              
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[Tools`NiceOutput`localPi, NumberMarks -> False], 
              
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[Tools`NiceOutput`\[CapitalPi]], 
              
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[
              Tools`NiceOutput`\[CapitalPi], CharacterEncoding -> "ASCII"], 
              
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[Pi], 
              
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[
               N[Pi]], 
              
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[3.14 10^(-7)], 
              
              FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
numberFormattingTemplate[
               Flatten[{
                 ReplaceAll[
                 FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
stripContext[Tools`NiceOutput`delta]/2, 
                  
                  FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
stripContext[{Tools`NiceOutput`delta -> 0.99}]]}]]}] === {
            "3.14", "3.14`", "3.14", "3.14", "3.14`", "3.14", "\[CapitalPi]", 
             "\\[CapitalPi]", "3.141592653589793", "3.141592653589793", 
             "3.14*^-7", "{0.495}"}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000149`2.323701266244266, "CPUTimeUsed" -> 
         0.0001500000000005386, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 657280856926906934 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905902369764318*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a32309cf-aef2-4c97-b00f-f498d2ca27d1", "TestID" -> 
         "NiceOutput_20231010-BCSCQH", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/NiceOutput.wlt", "EvaluationID" -> 
         "4df3fd91-4007-4c75-8dee-1b83506e20bc", "Input" -> HoldForm[
           Not[
            StringFreeQ[
             
             FernandoDuarte`LongRunRisk`Tools`NiceOutput`Private`\
stringFormattingTemplate[
             "Long-run risk model with stochastic volatility in the original \
2004 paper by Bansal and Yaron"], 
             Alternatives["\t", "\n"]]]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.0007760000000000001`3.04037671909018, 
         "CPUTimeUsed" -> 0.0007770000000002497, "MemoryUsed" -> 22440, 
         "ExpectedOutput" -> HoldForm[True], "Outcome" -> "Success"|>]|>, 
    "FailureResults" -> <||>, "TestsNotEvaluatedKeys" -> {}, 
    "TestsFailedWrongResultsKeys" -> {}, "TestsFailedWithMessagesKeys" -> {}, 
    "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {5583627844603177603, 4273995173578002822, 
     3352551398069747843, 2524053312824594692, 7006634315744856903, 
     5552220702215414426, 3923831081934713553, 1629881821200695586, 
     5040927162311263976, 657280856926906934}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.9058768460003967`*^9, 3.9058769049893007`*^9, 
  3.905901367878785*^9, 3.905902369782295*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"2b7841db-fe0e-41eb-94ad-32593cb93d63"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.9058768460003967`*^9, 3.9058769049893007`*^9, 
  3.905901367878785*^9, 3.9059023697923517`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"59aeed5f-6fe5-4812-bd22-acc9601ded98"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.9058768460003967`*^9, 3.9058769049893007`*^9, 
  3.905901367878785*^9, 3.905902369792913*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"54982e96-0c58-4656-9dbe-25b6e2cb3310"],

Cell[BoxData[{
 RowBox[{"tr", "=", 
  RowBox[{
  "TestReport", "[", 
   "\"\</Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expected", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
        ")"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.90565783725738*^9, {3.905687556358674*^9, 3.9056875566683598`*^9}, 
   3.905768809322749*^9, 3.905876807415436*^9},
 CellLabel->"In[60]:=",ExpressionUUID->"afbf4542-7cc1-4920-8238-b47d7922799b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: ToNumber.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["16", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: ToNumber.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["16", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["16", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "2.2185970000000000001`5.292473436573839", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                   "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: ToNumber.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     2529111612472627007 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058769050501122`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "387e2c58-e3ef-49eb-83b9-95e78ebb7afe", "TestID" -> 
         "ToNumber_20231009-TT8LVS", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "1c07ce74-5953-4288-a488-015438111217", "Input" -> 
         HoldForm[Tools`ToNumber`longTest = False; True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000032`1.6556649761518998, "CPUTimeUsed" -> 
         0.000032999999998395424`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 5086289843463059917 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058769050504093`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "15c20dfc-4db9-4b25-8136-42aabac972e7", "TestID" -> 
         "ToNumber_20231009-VJ2W5F", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "856a4b17-8a21-4e8b-b639-e1ef4e43f7e8", "Input" -> 
         HoldForm[
          Needs["FernandoDuarte`LongRunRisk`Tools`ToNumber`"]; $ContextPath = 
            DeleteDuplicates[
              
              Prepend[$ContextPath, 
               "FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`"]]; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000026`1.5654883458028126, "CPUTimeUsed" -> 
         0.000025000000000829914`, "MemoryUsed" -> 2560, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 6153780975213258289 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876905052265*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "c0a5b944-2ee9-4ef4-9d37-18b2d6b35eea", "TestID" -> 
         "ToNumber_20231009-G8USHV", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "56f6e368-a5ca-484f-9762-a05b770b630b", "Input" -> HoldForm[Off[
             MessageName[General, "stop"]]; Off[
             MessageName[FindRoot, "lstol"]]; 
           Needs["FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`"]; 
           Needs["FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`"]; 
           Needs["FernandoDuarte`LongRunRisk`Model`EndogenousEq`"]; 
           Needs["FernandoDuarte`LongRunRisk`Model`ExogenousEq`"]; 
           Needs["FernandoDuarte`LongRunRisk`Tools`TimeAggregation`"]; 
           Needs["FernandoDuarte`LongRunRisk`ComputationalEngine`SolveEulerEq`\
"]; Get[
             Get[
              FileNameJoin[{"FernandoDuarte/LongRunRisk", "Models.wl"}]]]; 
           Tools`ToNumber`msp = FernandoDuarte`LongRunRisk`Models; 
           Tools`ToNumber`modBY = Tools`ToNumber`msp["BY"]; 
           Tools`ToNumber`modBKY = Tools`ToNumber`msp["BKY"]; 
           Tools`ToNumber`modNRC = Tools`ToNumber`msp["NRC"]; 
           Tools`ToNumber`modDES = Tools`ToNumber`msp["DES"]; 
           Tools`ToNumber`modNRCStochVol = Tools`ToNumber`msp["NRCStochVol"]; 
           Tools`ToNumber`mods = 
            If[Tools`ToNumber`longTest, {
              Tools`ToNumber`modBY, Tools`ToNumber`modBKY, 
               Tools`ToNumber`modNRC, Tools`ToNumber`modDES, 
               Tools`ToNumber`modNRCStochVol}, {Tools`ToNumber`modBKY}]; 
           FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`expr[
              Pattern[Tools`ToNumber`t, 
               Blank[]], 
              Pattern[Tools`ToNumber`m, 
               Blank[]], 
              Pattern[Tools`ToNumber`i, 
               Blank[]], 
              Pattern[Tools`ToNumber`mu, 
               Blank[]]] := {
              Tools`ToNumber`wc[Tools`ToNumber`t], 
              Tools`ToNumber`pd[Tools`ToNumber`t, Tools`ToNumber`i], 
              Tools`ToNumber`bond[Tools`ToNumber`t, Tools`ToNumber`m], 
              Tools`ToNumber`nombond[Tools`ToNumber`t, Tools`ToNumber`m], 
              Tools`ToNumber`bondexcret[Tools`ToNumber`t, Tools`ToNumber`m], 
              Tools`ToNumber`bondfw[Tools`ToNumber`t, Tools`ToNumber`m], 
              Tools`ToNumber`bondfwspread[Tools`ToNumber`t, Tools`ToNumber`m], 
              Tools`ToNumber`bondret[Tools`ToNumber`t, Tools`ToNumber`m], 
              Tools`ToNumber`bondyield[Tools`ToNumber`t, Tools`ToNumber`m], 
              Tools`ToNumber`excretc[Tools`ToNumber`t], 
              Tools`ToNumber`excret[Tools`ToNumber`t, Tools`ToNumber`i], 
              Tools`ToNumber`kappa0[Tools`ToNumber`mu], 
              Tools`ToNumber`kappa1[Tools`ToNumber`mu], 
              Tools`ToNumber`nombondexcret[
              Tools`ToNumber`t, Tools`ToNumber`m], 
              Tools`ToNumber`nombondfw[Tools`ToNumber`t, Tools`ToNumber`m], 
              Tools`ToNumber`nombondfwspread[
              Tools`ToNumber`t, Tools`ToNumber`m], 
              Tools`ToNumber`nombondret[Tools`ToNumber`t, Tools`ToNumber`m], 
              Tools`ToNumber`nombondyield[Tools`ToNumber`t, Tools`ToNumber`m], 
              Tools`ToNumber`nomrf[Tools`ToNumber`t], 
              Tools`ToNumber`nomsdf[Tools`ToNumber`t], 
              Tools`ToNumber`retc[Tools`ToNumber`t], 
              Tools`ToNumber`ret[Tools`ToNumber`t, Tools`ToNumber`i], 
              Tools`ToNumber`rf[Tools`ToNumber`t], 
              Tools`ToNumber`sdf[Tools`ToNumber`t], 
              Tools`ToNumber`pi[Tools`ToNumber`t], 
              Tools`ToNumber`dc[Tools`ToNumber`t], 
              Tools`ToNumber`growth[
              Tools`ToNumber`dc, Tools`ToNumber`t, "TimeAggregation" -> 2, 
               "numPeriods" -> 1], 
              Tools`ToNumber`growth[
              Tools`ToNumber`dd, Tools`ToNumber`t, 1, "TimeAggregation" -> 
               2], (Tools`ToNumber`AA Tools`ToNumber`dc[Tools`ToNumber`t + 1])
                Tools`ToNumber`excret[Tools`ToNumber`t, 1], 
              Tools`ToNumber`AA Tools`ToNumber`excret[Tools`ToNumber`t, 1] + 
              Tools`ToNumber`BB 
               Tools`ToNumber`nombondyield[Tools`ToNumber`t, 2]}; 
           Tools`ToNumber`ee = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`expr[
             Tools`ToNumber`t, 3, 1, 1]; 
           Tools`ToNumber`e1 = Part[Tools`ToNumber`ee, 
              Span[1, 3]]; Tools`ToNumber`e2 = Part[Tools`ToNumber`ee, 
              Span[1, 2]]; 
           Tools`ToNumber`optsList = {{}, {Tools`ToNumber`maxMaturity -> 6}, {
              "FindRootOptions" -> {MaxIterations -> 100}}, {
              MaxIterations -> 100}, {
              "initialGuess" -> <|"Ewc" -> {4}, "Epd" -> {{4}}|>}, {
              "initialGuess" -> <|"Ewc" -> {4}, "Epd" -> {{4}}|>, 
               MaxIterations -> 100}, {
              "initialGuess" -> <|"Ewc" -> {4}, "Epd" -> {{4}}|>, 
               "FindRootOptions" -> {MaxIterations -> 100}}, {
              Tools`ToNumber`maxMaturity -> 6, 
               "initialGuess" -> <|"Ewc" -> {4}, "Epd" -> {{4}}|>, 
               MaxIterations -> 100}, {"PrintResidualsNorm" -> True}, {
              "CheckResiduals" -> True, "Tol" -> 1}, {
              "CheckResiduals" -> True, "Tol" -> 10.^(-20)}, {
              "PrintResidualsNorm" -> True, Tools`ToNumber`maxMaturity -> 6, 
               "initialGuess" -> <|"Ewc" -> {4}, "Epd" -> {{4}}|>, 
               MaxIterations -> 100}, {
              "RecurrenceTableOptions" -> {
                "DependentVariables" -> Automatic}}, {
              DependentVariables -> Automatic}}; 
           FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`opts = 
            If[Tools`ToNumber`longTest, 
              Part[Tools`ToNumber`optsList, 
               Span[1, 5]], 
              Part[Tools`ToNumber`optsList, 
               Span[1, 2]]]; 
           FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`newParameters = {
             Tools`ToNumber`delta -> 0.99}; 
           FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
guessCoeffsSolution = {Tools`ToNumber`A[0] -> 4.6}; 
           Tools`ToNumber`optNewParam = {
             "initialGuess" -> <|"Ewc" -> {4}, "Epd" -> {{4}}|>, 
              MaxIterations -> 100}; 
           Tools`ToNumber`exprNewParam = Tools`ToNumber`uncondE[
              Tools`ToNumber`wc[Tools`ToNumber`t]]; 
           AbortProtect[
            Do[FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind = 0; 
               Tools`ToNumber`stateVars = Map[#[
                   Blank[]]& , 
                  DeleteDuplicates[
                   DeleteCases[
                    Cases[
                    Variables[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model[
                    "stateVars"][Tools`ToNumber`t]], 
                    Pattern[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`x, 
                    Blank[]][
                    Blank[]] :> 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`x], 
                    0]]]; Tools`ToNumber`numModel = Join[
                  Thread[Tools`ToNumber`stateVars -> 1.], {
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps[
                    Blank[]][
                    Blank[]] -> 1, FernandoDuarte`LongRunRisk`Model`Shocks`eps[
                    Blank[]][
                    Blank[], 
                    Blank[]] -> 1., Tools`ToNumber`mu -> 2., 
                   Tools`ToNumber`AA -> -1., Tools`ToNumber`BB -> 3.}]; 
               Tools`ToNumber`toNum = 
                FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum; 
               Tools`ToNumber`toEquation = 
                FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation; 
               Tools`ToNumber`toExogenousVars = 
                FernandoDuarte`LongRunRisk`Tools`ToNumber`toExogenousVars; 
               Tools`ToNumber`toStateVars = 
                FernandoDuarte`LongRunRisk`Tools`ToNumber`toStateVars; 
               Tools`ToNumber`processNewParameters = 
                FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters; 
               Tools`ToNumber`uncondE = 
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondE; 
               Tools`ToNumber`uncondVar = 
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondVar; 
               Tools`ToNumber`uncondCov = 
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondCov; 
               Tools`ToNumber`uncondCorr = 
                
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeUnconditionalExpectations`uncondCorr; 
               Tools`ToNumber`ev = 
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`ev; 
               Tools`ToNumber`var = 
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`var; 
               Tools`ToNumber`cov = 
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`cov; 
               Tools`ToNumber`corr = 
                FernandoDuarte`LongRunRisk`ComputationalEngine`\
ComputeConditionalExpectations`corr; 
               Tools`ToNumber`tn = 
                FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model]; 
               Tools`ToNumber`outTests[
                  FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model[
                  "shortname"]][
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind] = 
                Apply[And, 
                  Flatten[{Head[Tools`ToNumber`tn] === Function, 
                    Map[NumericQ, 
                    Flatten[
                    If[Tools`ToNumber`longTest, {
                    ReplaceRepeated[
                    Tools`ToNumber`tn[Tools`ToNumber`e1], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    Map[Tools`ToNumber`uncondE, Tools`ToNumber`e1]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    Map[Tools`ToNumber`uncondVar, Tools`ToNumber`e1]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    MapThread[
                    Tools`ToNumber`uncondCov[#, #2]& , {Tools`ToNumber`e1, 
                    Reverse[Tools`ToNumber`e1]}]], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    MapThread[Tools`ToNumber`uncondCorr[#, #2]& , {
                    Part[Tools`ToNumber`e1, 
                    Span[1, 2]], 
                    Part[Tools`ToNumber`e1, 
                    Span[-2, -1]]}]], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    Map[
                    Tools`ToNumber`ev[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e1]], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    Map[
                    Tools`ToNumber`var[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e1]], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    MapThread[
                    Tools`ToNumber`cov[#, #2, Tools`ToNumber`t - 1]& , {
                    Tools`ToNumber`e1, 
                    Reverse[Tools`ToNumber`e1]}]], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    MapThread[
                    Tools`ToNumber`corr[#, #2, Tools`ToNumber`t - 1]& , {
                    Part[Tools`ToNumber`e1, 
                    Span[1, 2]], 
                    Part[Tools`ToNumber`e1, 
                    Span[-2, -1]]}]], Tools`ToNumber`numModel]}, {
                    ReplaceRepeated[
                    Tools`ToNumber`tn[Tools`ToNumber`e1], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    Map[Tools`ToNumber`uncondE, Tools`ToNumber`e1]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    Map[Tools`ToNumber`uncondVar, Tools`ToNumber`e1]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    Map[
                    Tools`ToNumber`ev[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e1]], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    Map[
                    Tools`ToNumber`var[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e1]], Tools`ToNumber`numModel]}]]]}]]; 
               FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind = 
                FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind + 1; 
               Tools`ToNumber`outTests[
                  FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model[
                  "shortname"]][
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind] = 
                Apply[And, 
                  Flatten[{Head[Tools`ToNumber`tn] === Function, 
                    Map[NumericQ, 
                    Flatten[
                    If[Tools`ToNumber`longTest, {
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Tools`ToNumber`e1, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Map[Tools`ToNumber`uncondE, Tools`ToNumber`e1], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Map[Tools`ToNumber`uncondVar, Tools`ToNumber`e1], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    MapThread[
                    Tools`ToNumber`uncondCov[#, #2]& , {Tools`ToNumber`e1, 
                    Reverse[Tools`ToNumber`e1]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    MapThread[Tools`ToNumber`uncondCorr[#, #2]& , {
                    Part[Tools`ToNumber`e1, 
                    Span[1, 2]], 
                    Part[Tools`ToNumber`e1, 
                    Span[-2, -1]]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Map[
                    Tools`ToNumber`ev[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e1], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Map[
                    Tools`ToNumber`var[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e1], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    MapThread[
                    Tools`ToNumber`cov[#, #2, Tools`ToNumber`t - 1]& , {
                    Tools`ToNumber`e1, 
                    Reverse[Tools`ToNumber`e1]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    MapThread[
                    Tools`ToNumber`corr[#, #2, Tools`ToNumber`t - 1]& , {
                    Part[Tools`ToNumber`e1, 
                    Span[1, 2]], 
                    Part[Tools`ToNumber`e1, 
                    Span[-2, -1]]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel]}, {
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Tools`ToNumber`e1, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Map[Tools`ToNumber`uncondE, Tools`ToNumber`e1], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Map[Tools`ToNumber`uncondVar, Tools`ToNumber`e1], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Map[
                    Tools`ToNumber`ev[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e1], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Map[
                    Tools`ToNumber`var[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e1], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel]}]]]}]]; 
               FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind = 
                FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind + 1; 
               Tools`ToNumber`outTests[
                  FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model[
                  "shortname"]][
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind] = 
                Apply[And, 
                  Flatten[{Head[Tools`ToNumber`tn] === Function, 
                    Map[NumericQ, 
                    ReplaceRepeated[
                    Flatten[
                    If[Tools`ToNumber`longTest, {
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Tools`ToNumber`e1, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Map[Tools`ToNumber`uncondE, Tools`ToNumber`e1], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Map[Tools`ToNumber`uncondVar, Tools`ToNumber`e1], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    MapThread[
                    Tools`ToNumber`uncondCov[#, #2]& , {Tools`ToNumber`e1, 
                    Reverse[Tools`ToNumber`e1]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    MapThread[Tools`ToNumber`uncondCorr[#, #2]& , {
                    Part[Tools`ToNumber`e1, 
                    Span[1, 2]], 
                    Part[Tools`ToNumber`e1, 
                    Span[-2, -1]]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Map[
                    Tools`ToNumber`ev[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e1], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Map[
                    Tools`ToNumber`var[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e1], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    MapThread[
                    Tools`ToNumber`cov[#, #2, Tools`ToNumber`t - 1]& , {
                    Tools`ToNumber`e1, 
                    Reverse[Tools`ToNumber`e1]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    MapThread[
                    Tools`ToNumber`corr[#, #2, Tools`ToNumber`t - 1]& , {
                    Part[Tools`ToNumber`e1, 
                    Span[1, 2]], 
                    Part[Tools`ToNumber`e1, 
                    Span[-2, -1]]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel]}, {
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Tools`ToNumber`e1, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Map[Tools`ToNumber`uncondE, Tools`ToNumber`e1], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Map[Tools`ToNumber`uncondVar, Tools`ToNumber`e1], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Map[
                    Tools`ToNumber`ev[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e1], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Map[
                    Tools`ToNumber`var[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e1], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel]}]], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    "Rules", 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model]]]\
}]]; FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind = 
                FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind + 1; 
               Do[Tools`ToNumber`tn = 
                  FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                   FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    Apply[Sequence, Tools`ToNumber`opt]]; 
                 Tools`ToNumber`outTests[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model[
                    "shortname"]][
                   FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind] = 
                  Apply[And, 
                    Flatten[{Head[Tools`ToNumber`tn] === Function, 
                    Map[NumericQ, 
                    Flatten[
                    If[Tools`ToNumber`longTest, {
                    ReplaceRepeated[
                    Tools`ToNumber`tn[Tools`ToNumber`e2], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    Map[Tools`ToNumber`uncondE, Tools`ToNumber`e2]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    Map[Tools`ToNumber`uncondVar, Tools`ToNumber`e2]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    MapThread[
                    Tools`ToNumber`uncondCov[#, #2]& , {Tools`ToNumber`e2, 
                    Reverse[Tools`ToNumber`e2]}]], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    MapThread[Tools`ToNumber`uncondCorr[#, #2]& , {
                    Part[Tools`ToNumber`e2, 
                    Span[1, 2]], 
                    Part[Tools`ToNumber`e2, 
                    Span[-2, -1]]}]], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    Map[
                    Tools`ToNumber`ev[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e2]], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    Map[
                    Tools`ToNumber`var[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e2]], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    MapThread[
                    Tools`ToNumber`cov[#, #2, Tools`ToNumber`t - 1]& , {
                    Tools`ToNumber`e2, 
                    Reverse[Tools`ToNumber`e2]}]], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    MapThread[
                    Tools`ToNumber`corr[#, #2, Tools`ToNumber`t - 1]& , {
                    Part[Tools`ToNumber`e2, 
                    Span[1, 2]], 
                    Part[Tools`ToNumber`e2, 
                    Span[-2, -1]]}]], Tools`ToNumber`numModel]}, {
                    ReplaceRepeated[
                    Tools`ToNumber`tn[Tools`ToNumber`e2], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    Map[Tools`ToNumber`uncondE, Tools`ToNumber`e2]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    Map[Tools`ToNumber`uncondVar, Tools`ToNumber`e2]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    Map[
                    Tools`ToNumber`ev[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e2]], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    Tools`ToNumber`tn[
                    Map[
                    Tools`ToNumber`var[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e2]], Tools`ToNumber`numModel]}]]]}]]; 
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind = 
                  FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind + 1; 
                 Tools`ToNumber`outTests[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model[
                    "shortname"]][
                   FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind] = 
                  Apply[And, 
                    Flatten[{Head[Tools`ToNumber`tn] === Function, 
                    Map[NumericQ, 
                    Flatten[
                    If[Tools`ToNumber`longTest, {
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Tools`ToNumber`e2, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    Apply[Sequence, Tools`ToNumber`opt]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Map[Tools`ToNumber`uncondE, Tools`ToNumber`e2], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    Apply[Sequence, Tools`ToNumber`opt]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Map[Tools`ToNumber`uncondVar, Tools`ToNumber`e2], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    Apply[Sequence, Tools`ToNumber`opt]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    MapThread[
                    Tools`ToNumber`uncondCov[#, #2]& , {Tools`ToNumber`e2, 
                    Reverse[Tools`ToNumber`e2]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    Apply[Sequence, Tools`ToNumber`opt]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    MapThread[Tools`ToNumber`uncondCorr[#, #2]& , {
                    Part[Tools`ToNumber`e2, 
                    Span[1, 2]], 
                    Part[Tools`ToNumber`e2, 
                    Span[-2, -1]]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    Apply[Sequence, Tools`ToNumber`opt]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Map[
                    Tools`ToNumber`ev[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e2], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    Apply[Sequence, Tools`ToNumber`opt]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Map[
                    Tools`ToNumber`var[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e2], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    Apply[Sequence, Tools`ToNumber`opt]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    MapThread[
                    Tools`ToNumber`cov[#, #2, Tools`ToNumber`t - 1]& , {
                    Tools`ToNumber`e2, 
                    Reverse[Tools`ToNumber`e2]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    Apply[Sequence, Tools`ToNumber`opt]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    MapThread[
                    Tools`ToNumber`corr[#, #2, Tools`ToNumber`t - 1]& , {
                    Part[Tools`ToNumber`e2, 
                    Span[1, 2]], 
                    Part[Tools`ToNumber`e2, 
                    Span[-2, -1]]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    Apply[Sequence, Tools`ToNumber`opt]], 
                    Tools`ToNumber`numModel]}, {
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Tools`ToNumber`e2, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    Apply[Sequence, Tools`ToNumber`opt]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Map[Tools`ToNumber`uncondE, Tools`ToNumber`e2], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    Apply[Sequence, Tools`ToNumber`opt]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Map[Tools`ToNumber`uncondVar, Tools`ToNumber`e2], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    Apply[Sequence, Tools`ToNumber`opt]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Map[
                    Tools`ToNumber`ev[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e2], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    Apply[Sequence, Tools`ToNumber`opt]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Map[
                    Tools`ToNumber`var[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e2], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    Apply[Sequence, Tools`ToNumber`opt]], 
                    Tools`ToNumber`numModel]}]]]}]]; 
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind = 
                  FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind + 1; 
                 Tools`ToNumber`outTests[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model[
                    "shortname"]][
                   FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind] = 
                  Apply[And, 
                    Flatten[{Head[Tools`ToNumber`tn] === Function, 
                    Map[NumericQ, 
                    ReplaceRepeated[
                    Flatten[
                    If[Tools`ToNumber`longTest, {
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Tools`ToNumber`e2, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Map[Tools`ToNumber`uncondE, Tools`ToNumber`e2], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Map[Tools`ToNumber`uncondVar, Tools`ToNumber`e2], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    MapThread[
                    Tools`ToNumber`uncondCov[#, #2]& , {Tools`ToNumber`e2, 
                    Reverse[Tools`ToNumber`e2]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    MapThread[Tools`ToNumber`uncondCorr[#, #2]& , {
                    Part[Tools`ToNumber`e2, 
                    Span[1, 2]], 
                    Part[Tools`ToNumber`e2, 
                    Span[-2, -1]]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Map[
                    Tools`ToNumber`ev[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e2], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Map[
                    Tools`ToNumber`var[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e2], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    MapThread[
                    Tools`ToNumber`cov[#, #2, Tools`ToNumber`t - 1]& , {
                    Tools`ToNumber`e2, 
                    Reverse[Tools`ToNumber`e2]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    MapThread[
                    Tools`ToNumber`corr[#, #2, Tools`ToNumber`t - 1]& , {
                    Part[Tools`ToNumber`e2, 
                    Span[1, 2]], 
                    Part[Tools`ToNumber`e2, 
                    Span[-2, -1]]}], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel]}, {
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Tools`ToNumber`e2, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Map[Tools`ToNumber`uncondE, Tools`ToNumber`e2], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Map[Tools`ToNumber`uncondVar, Tools`ToNumber`e2], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Map[
                    Tools`ToNumber`ev[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e2], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Map[
                    Tools`ToNumber`var[#, Tools`ToNumber`t - 1]& , 
                    Tools`ToNumber`e2], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    Tools`ToNumber`numModel]}]], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    "Rules", 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    Apply[Sequence, Tools`ToNumber`opt]]]]}]]; 
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind = 
                  FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind + 1; 
                 Null, {Tools`ToNumber`opt, 
                  FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`opts}]; 
               Tools`ToNumber`outTests[
                  FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model[
                  "shortname"]][
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind] = 
                Apply[And, 
                  Map[NumericQ, 
                   Flatten[{
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    "UpdatePd" -> False], Tools`ToNumber`numModel][
                    Tools`ToNumber`pd[Tools`ToNumber`t, 1]], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Tools`ToNumber`pd[Tools`ToNumber`t, 1], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    "UpdatePd" -> False], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Tools`ToNumber`pd[Tools`ToNumber`t, 1], 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    "Rules", 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    "UpdatePd" -> False]], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    "UpdateBonds" -> False], Tools`ToNumber`numModel][{
                    Tools`ToNumber`bondyield[Tools`ToNumber`t, 2], 
                    Tools`ToNumber`nombondyield[Tools`ToNumber`t, 3]}], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[{
                    Tools`ToNumber`bondyield[Tools`ToNumber`t, 2], 
                    Tools`ToNumber`nombondyield[Tools`ToNumber`t, 3]}, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    "UpdateBonds" -> False], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[{
                    Tools`ToNumber`bondyield[Tools`ToNumber`t, 2], 
                    Tools`ToNumber`nombondyield[Tools`ToNumber`t, 3]}, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    "Rules", 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    "UpdateBonds" -> False]], Tools`ToNumber`numModel]}]]]; 
               FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind = 
                FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind + 1; 
               Tools`ToNumber`outTests[
                  FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model[
                  "shortname"]][
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind] = 
                Apply[And, 
                  Map[NumericQ, {
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
newParameters], Tools`ToNumber`numModel][Tools`ToNumber`exprNewParam], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Tools`ToNumber`exprNewParam, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
newParameters], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Tools`ToNumber`exprNewParam, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    "Rules", 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
newParameters]], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, \
{}, FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`guessCoeffsSolution], 
                    Tools`ToNumber`numModel][Tools`ToNumber`exprNewParam], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Tools`ToNumber`exprNewParam, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, \
{}, FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`guessCoeffsSolution], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Tools`ToNumber`exprNewParam, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    "Rules", 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, \
{}, FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`guessCoeffsSolution]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
newParameters, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
guessCoeffsSolution], Tools`ToNumber`numModel][Tools`ToNumber`exprNewParam], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Tools`ToNumber`exprNewParam, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
newParameters, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
guessCoeffsSolution], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Tools`ToNumber`exprNewParam, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    "Rules", 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
newParameters, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
guessCoeffsSolution]], Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
newParameters, 
                    Apply[Sequence, Tools`ToNumber`optNewParam]], 
                    Tools`ToNumber`numModel][Tools`ToNumber`exprNewParam], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Tools`ToNumber`exprNewParam, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
newParameters, 
                    Apply[Sequence, Tools`ToNumber`optNewParam]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Tools`ToNumber`exprNewParam, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    "Rules", 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
newParameters, 
                    Apply[Sequence, Tools`ToNumber`optNewParam]]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, \
{}, FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`guessCoeffsSolution, 
                    Apply[Sequence, Tools`ToNumber`optNewParam]], 
                    Tools`ToNumber`numModel][Tools`ToNumber`exprNewParam], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Tools`ToNumber`exprNewParam, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, \
{}, FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`guessCoeffsSolution, 
                    Apply[Sequence, Tools`ToNumber`optNewParam]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Tools`ToNumber`exprNewParam, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    "Rules", 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, \
{}, FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`guessCoeffsSolution, 
                    Apply[Sequence, Tools`ToNumber`optNewParam]]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
newParameters, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
guessCoeffsSolution, 
                    Apply[Sequence, Tools`ToNumber`optNewParam]], 
                    Tools`ToNumber`numModel][Tools`ToNumber`exprNewParam], 
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    Tools`ToNumber`exprNewParam, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
newParameters, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
guessCoeffsSolution, 
                    Apply[Sequence, Tools`ToNumber`optNewParam]], 
                    Tools`ToNumber`numModel], 
                    ReplaceRepeated[
                    ReplaceRepeated[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toEquation[
                    Tools`ToNumber`exprNewParam, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model], 
                    
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`toNum[
                    "Rules", 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
newParameters, 
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
guessCoeffsSolution, 
                    Apply[Sequence, Tools`ToNumber`optNewParam]]], 
                    Tools`ToNumber`numModel]}]]; 
               FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind = 
                FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`ind + 1; 
               Null, {FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model,
                 Tools`ToNumber`mods}]; Null]; 
           Tools`ToNumber`noMissingTest = {}; 
           Do[Tools`ToNumber`testNumber = Sort[
                Cases[
                 Keys[
                  SubValues[Tools`ToNumber`outTests]], Verbatim[HoldPattern][
                   Tools`ToNumber`outTests[
                    FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model[
                    "shortname"]][
                    Pattern[Tools`ToNumber`i, 
                    Blank[Integer]]]] :> Tools`ToNumber`i]]; 
             AppendTo[Tools`ToNumber`noMissingTest, Range[0, 
                 Max[Tools`ToNumber`testNumber]] == 
               Tools`ToNumber`testNumber]; Null, {
             FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`model, 
              Tools`ToNumber`mods}]; Tools`ToNumber`out = Apply[And, 
              Flatten[{
                Apply[And, Tools`ToNumber`noMissingTest], 
                Apply[And, 
                 Values[
                  SubValues[Tools`ToNumber`outTests]]]}]]; On[
             MessageName[General, "stop"]]; Off[
             MessageName[FindRoot, "lstol"]]; Tools`ToNumber`out], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         2.130799`6.479057482127168, "CPUTimeUsed" -> 2.1435780000000015`, 
         "MemoryUsed" -> 16247528, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 6427411248948607221 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058769071837273`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "fc393fa2-b46f-4423-b46c-35a60154d690", "TestID" -> 
         "ToNumber_20231009-K94SZJ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "c5d957b6-d0bd-4621-bc58-237c353534dd", "Input" -> 
         HoldForm[
          Tools`ToNumber`processNewParameters = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters; 
           SetAttributes[Tools`ToNumber`checkAbrt, HoldAll]; 
           Tools`ToNumber`checkAbrt[
              Pattern[
              FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`expr, 
               Blank[]]] := TrueQ[
              Quiet[
               AbortProtect[
                CheckAbort[
                FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`expr, 
                 True]]]]; SetAttributes[Tools`ToNumber`checkMsg, HoldAll]; 
           Tools`ToNumber`checkMsg[
              Pattern[
              FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`expr, 
               Blank[]], 
              Pattern[Tools`ToNumber`msg, 
               Blank[]]] := 
            CheckAbort[
             Quiet[AbortProtect[
                 Tools`ToNumber`c = 
                   Check[FernandoDuarte`LongRunRisk`Tools`ToNumber`Private`\
expr; Null, True, Tools`ToNumber`msg]; Null]; Null]; TrueQ[Tools`ToNumber`c], 
              
              TrueQ[Tools`ToNumber`c]]; 
           Tools`ToNumber`p = {
             Tools`ToNumber`delta -> 0.998, Tools`ToNumber`Esx -> 0.0078, 
              Tools`ToNumber`gamma -> 10, Tools`ToNumber`muc -> 0.0015, 
              Tools`ToNumber`phisxs -> 2.3 10^(-6), Tools`ToNumber`phix -> 
              0.044, Tools`ToNumber`psi -> 1.5, Tools`ToNumber`rhox -> 0.979, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`vx -> 0.987, 
              Tools`ToNumber`mud[1] -> 0.0015, Tools`ToNumber`phidxd[1] -> 
              4.5, Tools`ToNumber`rhodx[1] -> 3}; 
           Tools`ToNumber`newP = {
             Tools`ToNumber`delta -> 0.998, Tools`ToNumber`Esx -> 0.0078, 
              Tools`ToNumber`gamma -> 10, Tools`ToNumber`muc -> 0.0015, 
              Tools`ToNumber`phisxs -> 2.3 10^(-6), Tools`ToNumber`phix -> 
              0.044, Tools`ToNumber`psi -> 1.5, Tools`ToNumber`rhox -> 0.979, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`vx -> 0.987, 
              Tools`ToNumber`mud[1] -> 0.0015, Tools`ToNumber`phidxd[1] -> 
              4.5, Tools`ToNumber`rhodx[1] -> 3}; 
           Tools`ToNumber`pn = 
            KeyValueMap[# -> ReplaceAll[#2, Tools`ToNumber`p]& , <|
              Tools`ToNumber`p|>]; 
           Tools`ToNumber`newPn = 
            KeyValueMap[# -> ReplaceAll[#2, Tools`ToNumber`newP]& , <|
              Tools`ToNumber`newP|>]; 
           Tools`ToNumber`procP = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newP, Tools`ToNumber`p]; 
           Tools`ToNumber`procPn = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newPn, Tools`ToNumber`pn]; 
           Tools`ToNumber`procPn1 = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newP, Tools`ToNumber`pn]; 
           Tools`ToNumber`procPn2 = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newPn, Tools`ToNumber`p]; 
           Tools`ToNumber`msg = 
            Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
              Reap[
              Module[{}, 
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]; 
                 Null]; $MessageList]]; 
           Apply[And, {
             Sort[Tools`ToNumber`procP] === Sort[Tools`ToNumber`procPn] === 
              Sort[Tools`ToNumber`procPn1] === Sort[Tools`ToNumber`procPn2], 
              Apply[And, 
               Map[NumberQ, 
                Values[Tools`ToNumber`procP]]], Sort[
                Keys[Tools`ToNumber`procP]] === Sort[
                Keys[Tools`ToNumber`newP]], 
              SubsetQ[
               Keys[Tools`ToNumber`p], 
               Keys[Tools`ToNumber`procP]], 
              ReleaseHold[Tools`ToNumber`msg] == {{}, {}}, 
              Not[
               Tools`ToNumber`checkAbrt[
                
                FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]]]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.001704`3.381984588262675, "CPUTimeUsed" -> 0.0017040000000001498`, 
         "MemoryUsed" -> 22360, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 3588262459552076524 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876907185822*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "ea79b64e-9233-47b3-bfb9-1ed2a22082f2", "TestID" -> 
         "ToNumber_20231009-R3BS0K", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "b304ecc7-76b7-4752-9c1e-669b5d95ab22", "Input" -> 
         HoldForm[
          Tools`ToNumber`p = {
             Tools`ToNumber`delta -> 0.998, Tools`ToNumber`Esx -> 0.0078, 
              Tools`ToNumber`gamma -> 10, Tools`ToNumber`muc -> 0.0015, 
              Tools`ToNumber`phisxs -> 2.3 10^(-6), Tools`ToNumber`phix -> 
              0.044, Tools`ToNumber`psi -> 1.5, Tools`ToNumber`rhox -> 0.979, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`vx -> 0.987, 
              Tools`ToNumber`mud[1] -> 0.0015, Tools`ToNumber`phidxd[1] -> 
              4.5, Tools`ToNumber`rhodx[1] -> 3}; 
           Tools`ToNumber`newP = {
             Tools`ToNumber`delta -> 0.9, Tools`ToNumber`Esx -> 1}; 
           Tools`ToNumber`pn = 
            KeyValueMap[# -> ReplaceAll[#2, Tools`ToNumber`p]& , <|
              Tools`ToNumber`p|>]; 
           Tools`ToNumber`newPn = 
            KeyValueMap[# -> ReplaceAll[#2, Tools`ToNumber`newP]& , <|
              Tools`ToNumber`newP|>]; 
           Tools`ToNumber`procP = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newP, Tools`ToNumber`p]; 
           Tools`ToNumber`procPn = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newPn, Tools`ToNumber`pn]; 
           Tools`ToNumber`procPn1 = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newP, Tools`ToNumber`pn]; 
           Tools`ToNumber`procPn2 = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newPn, Tools`ToNumber`p]; 
           Tools`ToNumber`msg = 
            Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
              Reap[
              Module[{}, 
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]; 
                 Null]; $MessageList]]; 
           Apply[And, {
             Sort[Tools`ToNumber`procP] === Sort[Tools`ToNumber`procPn] === 
              Sort[Tools`ToNumber`procPn1] === Sort[Tools`ToNumber`procPn2], 
              Apply[And, 
               Map[NumberQ, 
                Values[Tools`ToNumber`procP]]], Sort[
                Keys[Tools`ToNumber`procP]] === Sort[
                Keys[Tools`ToNumber`newP]], 
              SubsetQ[
               Keys[Tools`ToNumber`p], 
               Keys[Tools`ToNumber`procP]], 
              ReleaseHold[Tools`ToNumber`msg] == {{}, {}}, 
              Not[
               Tools`ToNumber`checkAbrt[
                
                FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]]]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000789`3.0475920010414144, "CPUTimeUsed" -> 0.0007899999999985141, 
         "MemoryUsed" -> -6528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 666895796083017234 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058769071869493`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "6b671fd5-91b3-4924-af98-7b38145e98ea", "TestID" -> 
         "ToNumber_20231009-P8VDFX", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "b1f866c4-212b-4196-b0ee-a73f1d6ad734", "Input" -> 
         HoldForm[
          Tools`ToNumber`p = {
             Tools`ToNumber`delta -> 0.998, Tools`ToNumber`Esx -> 0.0078, 
              Tools`ToNumber`gamma -> 10, Tools`ToNumber`muc -> 0.0015, 
              Tools`ToNumber`phisxs -> 2.3 10^(-6), Tools`ToNumber`phix -> 
              0.044, Tools`ToNumber`psi -> 1.5, Tools`ToNumber`rhox -> 0.979, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`vx -> 0.987, 
              Tools`ToNumber`mud[1] -> 0.0015, Tools`ToNumber`phidxd[1] -> 
              4.5, Tools`ToNumber`rhodx[1] -> 3}; Tools`ToNumber`newP = {}; 
           Tools`ToNumber`pn = 
            KeyValueMap[# -> ReplaceAll[#2, Tools`ToNumber`p]& , <|
              Tools`ToNumber`p|>]; 
           Tools`ToNumber`newPn = 
            KeyValueMap[# -> ReplaceAll[#2, Tools`ToNumber`newP]& , <|
              Tools`ToNumber`newP|>]; 
           Tools`ToNumber`procP = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newP, Tools`ToNumber`p]; 
           Tools`ToNumber`procPn = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newPn, Tools`ToNumber`pn]; 
           Tools`ToNumber`procPn1 = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newP, Tools`ToNumber`pn]; 
           Tools`ToNumber`procPn2 = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newPn, Tools`ToNumber`p]; 
           Tools`ToNumber`msg = 
            Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
              Reap[
              Module[{}, 
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]; 
                 Null]; $MessageList]]; 
           Apply[And, {
             Sort[Tools`ToNumber`procP] === Sort[Tools`ToNumber`procPn] === 
              Sort[Tools`ToNumber`procPn1] === Sort[Tools`ToNumber`procPn2], 
              Apply[And, 
               Map[NumberQ, 
                Values[Tools`ToNumber`procP]]], Sort[
                Keys[Tools`ToNumber`procP]] === Sort[
                Keys[Tools`ToNumber`newP]], 
              SubsetQ[
               Keys[Tools`ToNumber`p], 
               Keys[Tools`ToNumber`procP]], 
              ReleaseHold[Tools`ToNumber`msg] == {{}, {}}, 
              Not[
               Tools`ToNumber`checkAbrt[
                
                FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]]]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000097`2.137286732098239, "CPUTimeUsed" -> 0.00009800000000126374, 
         "MemoryUsed" -> -680, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 3231371256654847765 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058769071873302`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "9151d807-b2ec-425b-b9aa-84bd16ff8d89", "TestID" -> 
         "ToNumber_20231009-01UMIR", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "7d9fcf1b-9acd-4d09-9392-6d88c8dc1dd5", "Input" -> 
         HoldForm[
          Tools`ToNumber`p = {
             Tools`ToNumber`delta -> 0.998, Tools`ToNumber`Esx -> 0.0078, 
              Tools`ToNumber`gamma -> 10, Tools`ToNumber`muc -> 0.0015, 
              Tools`ToNumber`phisxs -> 2.3 10^(-6), Tools`ToNumber`phix -> 
              0.044, Tools`ToNumber`psi -> 1.5, Tools`ToNumber`rhox -> 0.979, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`vx -> 0.987, 
              Tools`ToNumber`mud[1] -> 0.0015, Tools`ToNumber`phidxd[1] -> 
              4.5, Tools`ToNumber`rhodx[1] -> 3}; 
           Tools`ToNumber`newP = {
             Tools`ToNumber`delta -> 0.9, Tools`ToNumber`Esx -> 1, 
              Tools`ToNumber`phip -> 3}; Apply[And, {
              Tools`ToNumber`checkAbrt[
               FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
               Tools`ToNumber`newP, Tools`ToNumber`p]], 
              Tools`ToNumber`checkMsg[
               FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
               Tools`ToNumber`newP, Tools`ToNumber`p], 
               MessageName[
               FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters,
                 "subsetparam"]]}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.028936`4.611953493585557, "CPUTimeUsed" -> 
         0.028949999999998255`, "MemoryUsed" -> 4624, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 3497083803062204214 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058769072167253`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "6100c6f3-f9a8-4e47-b703-190b21035146", "TestID" -> 
         "ToNumber_20231009-DXY97E", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "13222b3e-b327-4874-b4d2-13b7b5bd5d0b", "Input" -> 
         HoldForm[
          Tools`ToNumber`p = {
             Tools`ToNumber`delta -> 0.998, Tools`ToNumber`Esx -> 0.0078, 
              Tools`ToNumber`gamma -> 10, Tools`ToNumber`muc -> 0.0015, 
              Tools`ToNumber`phisxs -> 2.3 10^(-6), Tools`ToNumber`phix -> 
              0.044, Tools`ToNumber`psi -> 1.5, Tools`ToNumber`rhox -> 0.979, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`vx -> 0.987, 
              Tools`ToNumber`mud[1] -> 0.0015, Tools`ToNumber`phidxd[1] -> 
              4.5, Tools`ToNumber`rhodx[1] -> 3}; 
           Tools`ToNumber`newP = {
             Tools`ToNumber`delta -> 0.9, Tools`ToNumber`Esx -> 1, 
              Tools`ToNumber`psi -> 1}; Apply[And, {
              Tools`ToNumber`checkAbrt[
               FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
               Tools`ToNumber`newP, Tools`ToNumber`p]], 
              Tools`ToNumber`checkMsg[
               FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
               Tools`ToNumber`newP, Tools`ToNumber`p], 
               MessageName[
               FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters,
                 "psi"]]}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000361`2.708022199737652, "CPUTimeUsed" -> 
         0.0003619999999990853, "MemoryUsed" -> 2904, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 6188237204983846684 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876907217397*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "1d0dd702-e8d2-418f-a2a5-d54f9d540042", "TestID" -> 
         "ToNumber_20231009-K086R7", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "c305a2b4-f912-46a3-9b00-db95813b516f", "Input" -> 
         HoldForm[
          Tools`ToNumber`p = {
             Tools`ToNumber`delta -> 0.998, Tools`ToNumber`Esx -> 0.0078, 
              Tools`ToNumber`gamma -> 10, Tools`ToNumber`muc -> 0.0015, 
              Tools`ToNumber`phisxs -> 2.3 10^(-6), Tools`ToNumber`phix -> 
              0.044, Tools`ToNumber`psi -> 1.5, Tools`ToNumber`rhox -> 0.979, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`vx -> 0.987, 
              Tools`ToNumber`mud[1] -> 0.0015, Tools`ToNumber`phidxd[1] -> 
              4.5, Tools`ToNumber`rhodx[1] -> 3}; 
           Tools`ToNumber`newP = {
             Tools`ToNumber`delta -> 0.9, Tools`ToNumber`Esx -> 1, 
              Tools`ToNumber`psi -> 1.}; Apply[And, {
              Tools`ToNumber`checkAbrt[
               FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
               Tools`ToNumber`newP, Tools`ToNumber`p]], 
              Tools`ToNumber`checkMsg[
               FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
               Tools`ToNumber`newP, Tools`ToNumber`p], 
               MessageName[
               FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters,
                 "psi"]]}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000301`2.6290814934258373, "CPUTimeUsed" -> 
         0.00030099999999677607`, "MemoryUsed" -> 2792, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 9180807593880070507 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058769072180142`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "25813cc3-21b7-438e-a808-4cf873632c8b", "TestID" -> 
         "ToNumber_20231009-IFZ3CU", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "b345b001-ad87-41b6-8966-df8b6bcb002d", "Input" -> 
         HoldForm[
          Tools`ToNumber`p = {
             Tools`ToNumber`delta -> 0.998, Tools`ToNumber`Esx -> 0.0078, 
              Tools`ToNumber`gamma -> 10, Tools`ToNumber`muc -> 0.0015, 
              Tools`ToNumber`phisxs -> 2.3 10^(-6), Tools`ToNumber`phix -> 
              0.044, Tools`ToNumber`psi -> 1.5, Tools`ToNumber`rhox -> 0.979, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`vx -> 0.987, 
              Tools`ToNumber`mud[1] -> 0.0015, Tools`ToNumber`phidxd[1] -> 
              4.5, Tools`ToNumber`rhodx[1] -> 3}; 
           Tools`ToNumber`newP = {
             Tools`ToNumber`gamma -> 10, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`psi -> 1.5}; 
           Tools`ToNumber`procP = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newP, Tools`ToNumber`p]; 
           Tools`ToNumber`msg = 
            Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
              Reap[
              Module[{}, 
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]; 
                 Null]; $MessageList]]; Apply[And, {
              Apply[And, 
               Map[NumberQ, 
                Values[Tools`ToNumber`procP]]], Sort[
                Keys[Tools`ToNumber`procP]] === Sort[
                Keys[Tools`ToNumber`newP]], 
              SubsetQ[
               Keys[Tools`ToNumber`p], 
               Keys[Tools`ToNumber`procP]], 
              ReleaseHold[Tools`ToNumber`msg] == {{}, {}}, 
              Not[
               Tools`ToNumber`checkAbrt[
                
                FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]]]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000553`2.893240129136692, "CPUTimeUsed" -> 0.0005539999999975009, 
         "MemoryUsed" -> 3488, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 3428500975521933802 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058769072188773`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a279f4b5-7bae-4290-94c0-ff53ba90327c", "TestID" -> 
         "ToNumber_20231009-6ECHSS", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "90488639-aaf6-44f8-843e-1c971e733b27", "Input" -> 
         HoldForm[
          Tools`ToNumber`p = {
             Tools`ToNumber`delta -> 0.998, Tools`ToNumber`Esx -> 0.0078, 
              Tools`ToNumber`gamma -> 10, Tools`ToNumber`muc -> 0.0015, 
              Tools`ToNumber`phisxs -> 2.3 10^(-6), Tools`ToNumber`phix -> 
              0.044, Tools`ToNumber`psi -> 1.5, Tools`ToNumber`rhox -> 0.979, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`vx -> 0.987, 
              Tools`ToNumber`mud[1] -> 0.0015, Tools`ToNumber`phidxd[1] -> 
              4.5, Tools`ToNumber`rhodx[1] -> 3}; 
           Tools`ToNumber`newP = {
             Tools`ToNumber`gamma -> 10, Tools`ToNumber`theta -> 3.23, 
              Tools`ToNumber`psi -> 1.5}; Tools`ToNumber`procP = Quiet[
              FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
              Tools`ToNumber`newP, Tools`ToNumber`p], 
              MessageName[
              FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters, 
               "param"]]; Apply[And, {
              Apply[And, 
               Map[NumberQ, 
                Values[Tools`ToNumber`procP]]], Sort[
                Keys[Tools`ToNumber`procP]] === Sort[
                Keys[Tools`ToNumber`newP]], 
              SubsetQ[
               Keys[Tools`ToNumber`p], 
               Keys[Tools`ToNumber`procP]], 
              Not[
               Tools`ToNumber`checkAbrt[
                
                FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]]], 
              Tools`ToNumber`checkMsg[
               FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
               Tools`ToNumber`newP, Tools`ToNumber`p], 
               MessageName[
               FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters,
                 "param"]], Chop[
                RealAbs[
                ReplaceAll[
                  Tools`ToNumber`theta, 
                   Tools`ToNumber`procP] - -27.]] < $MachineEpsilon}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000503`2.852082982887921, "CPUTimeUsed" -> 0.0005029999999983659, 
         "MemoryUsed" -> 2792, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 5339368379724369703 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058769072196994`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "b13de632-bd63-4144-807b-07f4f7698395", "TestID" -> 
         "ToNumber_20231009-UTQ7NH", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "3cc419d5-a563-42fd-a410-16c21cee4bf1", "Input" -> 
         HoldForm[
          Tools`ToNumber`p = {
             Tools`ToNumber`delta -> 0.998, Tools`ToNumber`Esx -> 0.0078, 
              Tools`ToNumber`gamma -> 10, Tools`ToNumber`muc -> 0.0015, 
              Tools`ToNumber`phisxs -> 2.3 10^(-6), Tools`ToNumber`phix -> 
              0.044, Tools`ToNumber`psi -> 1.5, Tools`ToNumber`rhox -> 0.979, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`vx -> 0.987, 
              Tools`ToNumber`mud[1] -> 0.0015, Tools`ToNumber`phidxd[1] -> 
              4.5, Tools`ToNumber`rhodx[1] -> 3}; 
           Tools`ToNumber`newP = {
             Tools`ToNumber`psi -> 2, Tools`ToNumber`theta -> -3.}; 
           Tools`ToNumber`procP = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newP, Tools`ToNumber`p]; 
           Tools`ToNumber`msg = 
            Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
              Reap[
              Module[{}, 
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]; 
                 Null]; $MessageList]]; Apply[And, {
              Apply[And, 
               Map[NumberQ, 
                Values[Tools`ToNumber`procP]]], Sort[
                Keys[Tools`ToNumber`procP]] === Sort[
                Join[{Tools`ToNumber`gamma}, 
                 Keys[Tools`ToNumber`newP]]], 
              SubsetQ[
               Keys[Tools`ToNumber`p], 
               Keys[Tools`ToNumber`procP]], 
              Not[
               Tools`ToNumber`checkAbrt[
                
                FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]]], 
              ReleaseHold[Tools`ToNumber`msg] == {{}, {}}, Chop[
                RealAbs[
                ReplaceAll[Tools`ToNumber`gamma, Tools`ToNumber`procP] - 
                 2.5]] < $MachineEpsilon}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.001005`3.152681059588502, "CPUTimeUsed" -> 0.0010190000000029897`, 
         "MemoryUsed" -> 4560, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4238332681845631943 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90587690722103*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "1f6e6ac2-c802-404d-9b0f-e41804f3c344", "TestID" -> 
         "ToNumber_20231009-V8BX3I", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "19383bf0-b3de-46d6-aebb-4cf2b6a9dae6", "Input" -> 
         HoldForm[
          Tools`ToNumber`p = {
             Tools`ToNumber`delta -> 0.998, Tools`ToNumber`Esx -> 0.0078, 
              Tools`ToNumber`gamma -> 10, Tools`ToNumber`muc -> 0.0015, 
              Tools`ToNumber`phisxs -> 2.3 10^(-6), Tools`ToNumber`phix -> 
              0.044, Tools`ToNumber`psi -> 1.5, Tools`ToNumber`rhox -> 0.979, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`vx -> 0.987, 
              Tools`ToNumber`mud[1] -> 0.0015, Tools`ToNumber`phidxd[1] -> 
              4.5, Tools`ToNumber`rhodx[1] -> 3}; 
           Tools`ToNumber`newP = {
             Tools`ToNumber`psi -> 2, Tools`ToNumber`gamma -> 2.5}; 
           Tools`ToNumber`procP = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newP, Tools`ToNumber`p]; 
           Tools`ToNumber`msg = 
            Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
              Reap[
              Module[{}, 
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]; 
                 Null]; $MessageList]]; Apply[And, {
              Apply[And, 
               Map[NumberQ, 
                Values[Tools`ToNumber`procP]]], Sort[
                Keys[Tools`ToNumber`procP]] === Sort[
                Join[{Tools`ToNumber`theta}, 
                 Keys[Tools`ToNumber`newP]]], 
              SubsetQ[
               Keys[Tools`ToNumber`p], 
               Keys[Tools`ToNumber`procP]], 
              Not[
               Tools`ToNumber`checkAbrt[
                
                FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]]], 
              ReleaseHold[Tools`ToNumber`msg] == {{}, {}}, 
              RealAbs[ReplaceAll[
                 Tools`ToNumber`theta, 
                  Tools`ToNumber`procP] - -3] < $MachineEpsilon}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000788`3.047041215321549, "CPUTimeUsed" -> 0.0007979999999996323, 
         "MemoryUsed" -> 2984, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 565449878430741238 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876907222134*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "d545e509-0bbe-49a0-8d32-6ed2599e3661", "TestID" -> 
         "ToNumber_20231009-VBD5XJ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "861bbb11-7e27-440b-9d2f-b50d254f0561", "Input" -> 
         HoldForm[
          Tools`ToNumber`p = {
             Tools`ToNumber`delta -> 0.998, Tools`ToNumber`Esx -> 0.0078, 
              Tools`ToNumber`gamma -> 10, Tools`ToNumber`muc -> 0.0015, 
              Tools`ToNumber`phisxs -> 2.3 10^(-6), Tools`ToNumber`phix -> 
              0.044, Tools`ToNumber`psi -> 1.5, Tools`ToNumber`rhox -> 0.979, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`vx -> 0.987, 
              Tools`ToNumber`mud[1] -> 0.0015, Tools`ToNumber`phidxd[1] -> 
              4.5, Tools`ToNumber`rhodx[1] -> 3}; 
           Tools`ToNumber`newP = {
             Tools`ToNumber`gamma -> 2.5, Tools`ToNumber`theta -> -3.}; 
           Tools`ToNumber`procP = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newP, Tools`ToNumber`p]; 
           Tools`ToNumber`msg = 
            Block[{$MessagePrePrint = Sow, $MessageList = {}}, 
              Reap[
              Module[{}, 
                 FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]; 
                 Null]; $MessageList]]; Apply[And, {
              Apply[And, 
               Map[NumberQ, 
                Values[Tools`ToNumber`procP]]], Sort[
                Keys[Tools`ToNumber`procP]] === Sort[
                Join[{Tools`ToNumber`psi}, 
                 Keys[Tools`ToNumber`newP]]], 
              SubsetQ[
               Keys[Tools`ToNumber`p], 
               Keys[Tools`ToNumber`procP]], 
              Not[
               Tools`ToNumber`checkAbrt[
                
                FernandoDuarte`LongRunRisk`Tools`ToNumber`\
processNewParameters[Tools`ToNumber`newP, Tools`ToNumber`p]]], 
              ReleaseHold[Tools`ToNumber`msg] == {{}, {}}, 
              RealAbs[ReplaceAll[Tools`ToNumber`psi, Tools`ToNumber`procP] - 
                2] < $MachineEpsilon}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.001039`3.1671305453891714, "CPUTimeUsed" -> 
         0.0010470000000033508`, "MemoryUsed" -> 3360, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 3241328390363055341 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876907223463*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "bffc9d7a-3da8-4af5-9c82-6c5acee18356", "TestID" -> 
         "ToNumber_20231009-H86HA4", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "a8cc3dd3-79f1-460a-86e7-8a92c755391b", "Input" -> 
         HoldForm[
          Tools`ToNumber`p = {
             Tools`ToNumber`delta -> 0.998, Tools`ToNumber`Esx -> 0.0078, 
              Tools`ToNumber`gamma -> 10, Tools`ToNumber`muc -> 0.0015, 
              Tools`ToNumber`phisxs -> 2.3 10^(-6), Tools`ToNumber`phix -> 
              0.044, Tools`ToNumber`psi -> 1.5, Tools`ToNumber`rhox -> 0.979, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`vx -> 0.987, 
              Tools`ToNumber`mud[1] -> 0.0015, Tools`ToNumber`phidxd[1] -> 
              4.5, Tools`ToNumber`rhodx[1] -> 3}; 
           Tools`ToNumber`newP = {
             Tools`ToNumber`delta -> 0.9, Tools`ToNumber`Esx -> 1, 
              Tools`ToNumber`theta -> 1.}; Apply[And, {
              Tools`ToNumber`checkAbrt[
               FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
               Tools`ToNumber`newP, Tools`ToNumber`p]], 
              Tools`ToNumber`checkMsg[
               FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
               Tools`ToNumber`newP, Tools`ToNumber`p], 
               MessageName[
               FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters,
                 "theta"]]}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.051418`4.861630177765123, "CPUTimeUsed" -> 
         0.05144200000000154, "MemoryUsed" -> 5872, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 3419156907502346119 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876907275349*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "293b2ac5-eb6f-4748-b034-e0f7297b3d23", "TestID" -> 
         "ToNumber_20231009-JS7H1V", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ToNumber.wlt", "EvaluationID" -> 
         "41b0de15-ba7f-4240-a584-860379c6d7c2", "Input" -> 
         HoldForm[
          Tools`ToNumber`p = {
             context1`delta -> 0.998, context1`Esx -> 0.0078, foo`gamma -> 10,
               Tools`ToNumber`muc -> 0.0015, Tools`ToNumber`phisxs -> 
              2.3 10^(-6), Tools`ToNumber`phix -> 0.044, Tools`ToNumber`psi -> 
              1.5, Tools`ToNumber`rhox -> 0.979, 
              Tools`ToNumber`theta -> (1 - Tools`ToNumber`gamma)/(1 - 1/
               Tools`ToNumber`psi), Tools`ToNumber`vx -> 0.987, 
              Tools`ToNumber`mud[1] -> 0.0015, Tools`ToNumber`phidxd[1] -> 
              4.5, Tools`ToNumber`rhodx[1] -> 3}; 
           Tools`ToNumber`newP = {
             context2`delta -> 0.9, Tools`ToNumber`Esx -> 1, bar`gamma -> 2}; 
           Tools`ToNumber`procP = 
            FernandoDuarte`LongRunRisk`Tools`ToNumber`processNewParameters[
             Tools`ToNumber`newP, Tools`ToNumber`p]; 
           Apply[And, {KeyTake[Tools`ToNumber`p, 
                Keys[Tools`ToNumber`newP]] === <||>, Map[Context, 
                Keys[Tools`ToNumber`procP]] === Map[Context, 
                Keys[
                 KeyTake[Tools`ToNumber`p, 
                  Keys[Tools`ToNumber`procP]]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000246`2.541450104935373, "CPUTimeUsed" -> 0.00024699999999810984`,
          "MemoryUsed" -> 2584, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>]|>, "FailureResults" -> <||>, 
    "TestsNotEvaluatedKeys" -> {}, "TestsFailedWrongResultsKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {2529111612472627007, 5086289843463059917, 
     6153780975213258289, 6427411248948607221, 3588262459552076524, 
     666895796083017234, 3231371256654847765, 3497083803062204214, 
     6188237204983846684, 9180807593880070507, 3428500975521933802, 
     5339368379724369703, 4238332681845631943, 565449878430741238, 
     3241328390363055341, 3419156907502346119}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.90587684830486*^9, 3.905876907294396*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"aee6a225-0bb2-4d7e-a340-ed3de5242c89"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.90587684830486*^9, 3.905876907298319*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"3b885dd0-7bd5-48fe-bb43-3b481f8e7436"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.90587684830486*^9, 3.9058769072989893`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"e70961a1-ece7-4541-a465-430e3b76ac1f"],

Cell[BoxData[{
 RowBox[{"tr", "=", 
  RowBox[{
  "TestReport", "[", 
   "\"\</Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expected", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
        ")"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.9058266712878733`*^9, 3.905876807415615*^9},
 CellLabel->"In[65]:=",ExpressionUUID->"ab5399e2-3070-4f2a-b018-73caa2bee83c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: ProcessModels.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["26", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: ProcessModels.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["26", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["26", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "1.0200009999999999998`4.744142247401787", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                   "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: ProcessModels.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     1996687105172878220 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058769073419204`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "fc07daa8-aab3-4eb1-9e2c-9628a0c7fe75", "TestID" -> 
         "ProcessModels_20231009-R5HJU2", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "efce8dad-517d-44d2-ab48-6c01554f409f", "Input" -> 
         HoldForm[Model`ProcessModels`longTest = False; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000034`1.6819939148742484, "CPUTimeUsed" -> 0.00003500000000045134,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7335049122666283223 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876907342217*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "e9bbb57c-acde-4bba-af2f-1ca1d2197b91", "TestID" -> 
         "ProcessModels_20231009-AL60CD", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "7617cd9c-b448-4740-962e-4e6929dc02f1", "Input" -> 
         HoldForm[
          Needs["FernandoDuarte`LongRunRisk`Model`Catalog`"]; 
           Needs["FernandoDuarte`LongRunRisk`Model`ProcessModels`"]; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000025`1.5484550065040306, "CPUTimeUsed" -> 
         0.000025000000000829914`, "MemoryUsed" -> 2992, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 3877581151076263803 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058769073424673`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "9da051e3-90db-4e1a-89f3-766366d08f73", "TestID" -> 
         "ProcessModels_20231009-CJVIPL", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "bb12b855-28d3-4134-9aef-b263451e8f73", "Input" -> HoldForm[
           Apply[And, {
             
             MemberQ[$ContextPath, 
              "FernandoDuarte`LongRunRisk`Model`Catalog`"], 
             
             MemberQ[$ContextPath, 
              "FernandoDuarte`LongRunRisk`Model`ProcessModels`"]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000021`1.4727342925659124, "CPUTimeUsed" -> 0.00002000000000279556,
          "MemoryUsed" -> 2896, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 8188983420481538457 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058769073426933`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "e55e447f-06af-4286-8426-4b81811cc169", "TestID" -> 
         "ProcessModels_20231009-KVWGF8", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "c87bd633-4898-4b8b-b778-d7fb552f6a0a", "Input" -> HoldForm[
           Apply[And, {
             Not[Names["*processModels"] === {}], 
             Not[Names["*models"] === {}]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.052481`4.870517099549145, "CPUTimeUsed" -> 0.05252699999999777, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4692876653772974370 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90587690739552*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "27e38bcb-953c-4474-9713-954f7821bce9", "TestID" -> 
         "ProcessModels_20231009-IYB2I2", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "7d5d06ae-6f15-498b-9f87-686e7d93f4a7", "Input" -> HoldForm[Get[
             Get[
              FileNameJoin[{"FernandoDuarte/LongRunRisk", "Models.wl"}]]]; 
           FernandoDuarte`LongRunRisk`Model`Catalog`models = 
            If[Model`ProcessModels`longTest, 
              FernandoDuarte`LongRunRisk`Model`Catalog`models, 
              KeyTake[
              FernandoDuarte`LongRunRisk`Model`Catalog`models, {
               "BY", "BKY", "NRC"}]]; 
           Model`ProcessModels`modelsP = 
            If[Model`ProcessModels`longTest, 
              FernandoDuarte`LongRunRisk`Models, 
              KeyTake[
              FernandoDuarte`LongRunRisk`Models, {"BY", "BKY", "NRC"}]]; 
           True], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.945729`6.126281704354665, "CPUTimeUsed" -> 0.9542900000000003, 
         "MemoryUsed" -> 107772552, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 732332038150039360 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876908341637*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "6cca031d-5601-41bb-8236-78aa22427bf5", "TestID" -> 
         "ProcessModels_20231009-RVRGTN", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "42e9b31b-98b2-4bc3-bd71-3efaae5e6cd6", "Input" -> HoldForm[
           Apply[And, 
            Map[StringQ, 
             Keys[Model`ProcessModels`modelsP]]]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000026`1.5654883458028115, "CPUTimeUsed" -> 
         0.000026000000005410584`, "MemoryUsed" -> 2560, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 5830111586900330547 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876908341927*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "64ab6f1e-9f17-4621-9889-7cd7b222913a", "TestID" -> 
         "ProcessModels_20231009-CVYQ4C", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "b139f7f3-0492-4107-b486-827ffb1250b3", "Input" -> HoldForm[
           Apply[And, 
            Map[StringQ, 
             Flatten[
              Map[{
                Model`ProcessModels`modelsP[#]["name"], 
                Model`ProcessModels`modelsP[#]["shortname"], 
                Model`ProcessModels`modelsP[#]["bibRef"], 
                Model`ProcessModels`modelsP[#]["desc"], 
                Model`ProcessModels`modelsP[#]["exogenousVars"], 
                Model`ProcessModels`modelsP[#]["endogenousVars"]}& , 
               Keys[Model`ProcessModels`modelsP]]]]]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000046`1.8132728295135683, "CPUTimeUsed" -> 0.00004600000000465343,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 8863351620970684619 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876908342216*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "0b829f30-5517-4c0f-a1b5-f7498c798ed5", "TestID" -> 
         "ProcessModels_20231009-FBVLEQ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "417fff6b-ba84-47bf-b924-22b5c6dd1337", "Input" -> HoldForm[
           Apply[And, {
             Apply[And, 
              Map[NumberQ, 
               Flatten[
                Map[Values[
                  N[
                   ReplaceRepeated[<|
                    FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                    "parameters"]|>, 
                    FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                    "parameters"]]]]& , 
                 Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]], 
             Apply[And, 
              Map[NumberQ, 
               Flatten[
                Map[Values[
                  N[
                   ReplaceRepeated[<|
                    Model`ProcessModels`modelsP[#]["parameters"]|>, 
                    Model`ProcessModels`modelsP[#]["parameters"]]]]& , 
                 Keys[Model`ProcessModels`modelsP]]]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.001711`3.3837650073730945, "CPUTimeUsed" -> 0.0017120000000048208`,
          "MemoryUsed" -> 45168, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 7052160064996364580 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876908344169*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "88dc02b2-37b8-4176-8669-e5f915525702", "TestID" -> 
         "ProcessModels_20231009-C6375Q", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "5ba3068b-4036-4fde-971a-2647492c7b5a", "Input" -> HoldForm[
           Apply[And, {
             Apply[And, 
              Map[MemberQ[
                Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]& , {
               "BY", "BKY"}]], 
             Apply[And, 
              Map[MemberQ[
                Keys[Model`ProcessModels`modelsP], #]& , 
               Keys[Model`ProcessModels`modelsP]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000027`1.5818787619909807, "CPUTimeUsed" -> 
         0.000027000000002885827`, "MemoryUsed" -> 3208, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 2234131079493316597 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876908344425*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "2152767d-c72e-4d7b-acec-850a357b7bb3", "TestID" -> 
         "ProcessModels_20231009-8SOO28", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "f9df7c14-0b8d-4d77-8024-9ac925d295ed", "Input" -> HoldForm[
           Apply[And, {
             AllTrue[
             FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ], 
             AllTrue[Model`ProcessModels`modelsP, AssociationQ], 
             AllTrue[
              Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]& , 
               Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]], 
              AssociationQ], 
             AllTrue[
              Map[Model`ProcessModels`modelsP[#]& , 
               Keys[Model`ProcessModels`modelsP]], AssociationQ]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000026`1.5654883458028115, "CPUTimeUsed" -> 
         0.000025000000000829914`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 6876208160125089852 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058769083447733`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "3ed8cc0d-2908-45d3-8283-c0f0c14c6677", "TestID" -> 
         "ProcessModels_20231009-JN81BX", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "d0d0a17f-ebd1-49fe-9bc3-706a1d3f07e1", "Input" -> HoldForm[
           If[Model`ProcessModels`longTest, 
            Apply[And, {
              Apply[And, 
               Map[Apply[And, 
                 
                 Map[# === 
                  "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["stateVars"], PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                    SymbolName[#]]& ][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]], 
              Apply[And, 
               Map[Apply[And, 
                 
                 Map[# === 
                  "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["modelAssumptions"], 
                    PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                    SymbolName[#]]& ][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]], 
              Apply[And, 
               Map[Apply[And, 
                 
                 Map[# === 
                  "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["exogenousEq"], PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                    SymbolName[#]]& ][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]], 
              Apply[And, 
               Map[Apply[And, 
                 
                 Map[# === 
                  "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["endogenousEq"], 
                    PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                    SymbolName[#]]& ][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]]}], True]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0000179999999999999`1.4057875029352989, "CPUTimeUsed" -> 
         0.000017999999997186933`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 6982566034968502303 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876908345084*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "634b3b1a-186c-49f3-8f3d-459d8938764a", "TestID" -> 
         "ProcessModels_20231009-S0821D", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "5d3f7693-e6a7-4003-ba7f-aa9ebcfc7708", "Input" -> HoldForm[
           If[Model`ProcessModels`longTest, 
            Apply[And, {
              Apply[And, 
               Map[Apply[And, 
                 Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["stateVars"], PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                    BlankSequence[]][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]], 
              Apply[And, 
               Map[Apply[And, 
                 Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["modelAssumptions"], 
                    PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                    BlankSequence[]][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]], 
              Apply[And, 
               Map[Apply[And, 
                 Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["exogenousEq"], PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                    BlankSequence[]][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]], 
              Apply[And, 
               Map[Apply[And, 
                 Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["endogenousEq"], 
                    PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                    BlankSequence[]][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]]}], True]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000018`1.4057875029353, "CPUTimeUsed" -> 0.00001699999999971169, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 5677935275793512486 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058769083454094`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "48701f40-10b0-43b9-bdda-afb444818b23", "TestID" -> 
         "ProcessModels_20231009-3FNYJ8", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "6812866f-b9ca-4beb-a29b-5d536cc23b88", "Input" -> HoldForm[
           If[Model`ProcessModels`longTest, 
            Apply[And, {
              Apply[And, 
               Map[Apply[And, 
                 Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["parameters"], 
                    PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]], 
              Apply[And, 
               Map[Apply[And, 
                 Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["stateVars"], PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]], 
              Apply[And, 
               Map[Apply[And, 
                 Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["modelAssumptions"], 
                    PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]], 
              Apply[And, 
               Map[Apply[And, 
                 Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["exogenousEq"], PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]], 
              Apply[And, 
               Map[Apply[And, 
                 Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["endogenousEq"], 
                    PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]]}], True]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000016`1.3546349804879187, "CPUTimeUsed" -> 0.00001699999999971169,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 6961358929524763449 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876908345674*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "38222d26-8ead-438b-881b-ac205c5173a6", "TestID" -> 
         "ProcessModels_20231009-MQFL2O", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "b4b94974-cc35-4f02-85e5-a5351308882e", "Input" -> HoldForm[
           If[Model`ProcessModels`longTest, 
            Apply[And, {
              Apply[And, 
               Map[Apply[And, 
                 
                 Map[# === 
                  "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"& , 
                  
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["modelAssumptions"], 
                    PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                    SymbolName[#]]& ][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]], 
              Apply[And, 
               Map[Apply[And, 
                 
                 Map[# === 
                  "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"& , 
                  
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["endogenousEq"], 
                    PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                    SymbolName[#]]& ][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]]}], True]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000016`1.3546349804879187, "CPUTimeUsed" -> 
         0.000016999999992606263`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 8691221378403154018 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058769083459244`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "3cb81841-0833-4df9-a986-11c3009fce3b", "TestID" -> 
         "ProcessModels_20231009-4G1AIH", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "3ab51639-f752-4646-809f-dc7e509854e3", "Input" -> HoldForm[
           If[
           Model`ProcessModels`longTest, 
            Model`ProcessModels`coefs = Apply[Alternatives, 
               Map[
               SymbolName, {
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, 
                 
                 Head[
                 FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd]\
, 
                 Head[
                 FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb], 
                 Head[
                 FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb]\
}]]; Apply[And, 
              
              Map[# === 
               "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"& , 
               Flatten[
                Map[Cases[
                  Model`ProcessModels`modelsP[#]["modelAssumptions"], 
                  Alternatives[
                    PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], Model`ProcessModels`coefs]& ], 
                    PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], Model`ProcessModels`coefs]& ][
                    BlankSequence[]]] :> Context[Model`ProcessModels`var], 
                  Infinity]& , 
                 Keys[Model`ProcessModels`modelsP]]]]], True]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000016`1.3546349804879187, "CPUTimeUsed" -> 
         0.000016000000002236447`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 6145446746129304105 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876908346178*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "286eb48a-9557-4d0e-b285-6183cbb35304", "TestID" -> 
         "ProcessModels_20231009-VTT0I4", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "201ae506-c30e-48c4-8a21-eeca04e06422", "Input" -> HoldForm[
           Apply[And, {
             Apply[And, 
              Map[MatchQ[{}, #]& , 
               Map[Cases[
                 Model`ProcessModels`modelsP[#]["stateVars"], PatternTest[
                   Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                    SymbolName[#]]& ][
                   BlankSequence[]] :> Model`ProcessModels`var, Infinity]& , 
                Keys[Model`ProcessModels`modelsP]]]], 
             Apply[And, 
              Map[MatchQ[{}, #]& , 
               Map[Cases[
                 Model`ProcessModels`modelsP[#]["exogenousEq"], PatternTest[
                   Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                    SymbolName[#]]& ][
                   BlankSequence[]] :> Model`ProcessModels`var, Infinity]& , 
                Keys[Model`ProcessModels`modelsP]]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00202`3.4558663672786176, "CPUTimeUsed" -> 0.0020209999999991624`, 
         "MemoryUsed" -> 3304, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 6076421780083613804 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876908348409*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "7cdad033-1a9f-4c4f-982c-60f0c06a5921", "TestID" -> 
         "ProcessModels_20231009-PYPI6A", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "67b998e2-9545-4182-b0d3-0f9b2751ed4a", "Input" -> HoldForm[
           Apply[And, {
             SubsetQ[
              Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], 
              Keys[Model`ProcessModels`modelsP]], 
             SubsetQ[
              Map[
              FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
               "shortname"]& , 
               Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]], 
              Map[Model`ProcessModels`modelsP[#]["shortname"]& , 
               Keys[Model`ProcessModels`modelsP]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000067`1.9765898005328202, "CPUTimeUsed" -> 0.00006700000000137152,
          "MemoryUsed" -> 2912, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 5040802243453325142 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90587690834875*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "b3ec6879-1d19-4c0f-a8c5-fe951cd270fa", "TestID" -> 
         "ProcessModels_20231009-MOHETB", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "f4337e50-13bc-4585-8c30-6d19908f1fc4", "Input" -> HoldForm[
           Apply[And, {
             Apply[And, 
              Map[MatchQ[Function, #]& , 
               Map[Head, 
                Map[Model`ProcessModels`modelsP[#]["stateVars"]& , 
                 Keys[Model`ProcessModels`modelsP]]]]], 
             Apply[And, 
              Map[MatchQ[List, #]& , 
               Map[Head, 
                Map[
                Model`ProcessModels`modelsP[#]["stateVars"][
                 Model`ProcessModels`t]& , 
                 Keys[Model`ProcessModels`modelsP]]]]], 
             Apply[And, 
              Map[MatchQ[1, #]& , 
               Map[Length, 
                Map[Part[
                  Model`ProcessModels`modelsP[#]["stateVars"], 1]& , 
                 Keys[Model`ProcessModels`modelsP]]]]], 
             Apply[And, 
              Map[MatchQ["t", #]& , 
               Map[Apply[SymbolName, 
                 Part[
                  Model`ProcessModels`modelsP[#]["stateVars"], 1]]& , 
                Keys[Model`ProcessModels`modelsP]]]], 
             Map[Model`ProcessModels`modelsP[#]["stateVars"][
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]& , 
               Keys[Model`ProcessModels`modelsP]] === 
             Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
               "stateVars"]& , 
               Keys[Model`ProcessModels`modelsP]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000075`2.0255762612236934, "CPUTimeUsed" -> 0.00007599999999996498,
          "MemoryUsed" -> 3296, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 6027406953425397197 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876908349028*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "fd9b191c-eefe-43be-9e53-b2cd8ddb4841", "TestID" -> 
         "ProcessModels_20231009-58USHB", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "c64bb12e-b5da-4b7a-8edb-44f74de14eb5", "Input" -> HoldForm[
           Apply[And, 
            Map[NumberQ, 
             Map[Model`ProcessModels`modelsP[#]["numStocks"]& , 
              Keys[Model`ProcessModels`modelsP]]]]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000022`1.4929376786542, "CPUTimeUsed" -> 0.00002200000000129876, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 2701745553450638896 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058769083494983`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a09ff7ae-ee53-419f-95e5-cf869b6b37ea", "TestID" -> 
         "ProcessModels_20231009-S7B754", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "9eee25f1-2378-46c1-94f1-fb44f76cac98", "Input" -> 
         HoldForm[
          Model`ProcessModels`model = Model`ProcessModels`modelsP["NRC"]; 
           Apply[And, {ReplaceAll[
                Model`ProcessModels`pi[myContext`t], 
                Normal[
                 Model`ProcessModels`model["exogenousEq"]]] === 
              FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   myContext`t - 1] - 
                  FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                 FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                   myContext`t - 1] + 
                 FernandoDuarte`LongRunRisk`Model`Parameters`phip 
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                   myContext`t])), ReplaceAll[
                Model`ProcessModels`eps["dc"][Model`ProcessModels`t], 
                Model`ProcessModels`model["exogenousEq"]] === 
              Model`ProcessModels`eps["dc"][Model`ProcessModels`t], ReplaceAll[
                Model`ProcessModels`dd[
                Model`ProcessModels`t, Model`ProcessModels`i], 
                Normal[
                 Model`ProcessModels`model["exogenousEq"]]] === 
              FernandoDuarte`LongRunRisk`Model`Parameters`mud[
                Model`ProcessModels`i] + ((
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   Model`ProcessModels`t - 1] - 
                  FernandoDuarte`LongRunRisk`Model`Parameters`mup) 
                 FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[
                  Model`ProcessModels`i] + (
                 FernandoDuarte`LongRunRisk`Model`Parameters`phidc[
                   Model`ProcessModels`i] 
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                   Model`ProcessModels`t] + (
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    Model`ProcessModels`t - 2] 
                   FernandoDuarte`LongRunRisk`Model`Parameters`xid[
                    Model`ProcessModels`i]) 
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                   Model`ProcessModels`t - 1])), ReplaceAll[
                Model`ProcessModels`wc[Model`ProcessModels`t], 
                Normal[
                 Model`ProcessModels`model["endogenousEq"]]] === 
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[0] + (
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[1] (
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   Model`ProcessModels`t] - 
                  FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                 FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[4] (
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    Model`ProcessModels`t] - 
                   FernandoDuarte`LongRunRisk`Model`Parameters`Esg) + (
                  FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[5] 
                   Subtract[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    Model`ProcessModels`t]^2 - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`phig^2/(1 - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhog^2), 
                    FernandoDuarte`LongRunRisk`Model`Parameters`Esg^2] + (
                   FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[3] 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    Model`ProcessModels`t] + (
                    FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[2]
                     FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    Model`ProcessModels`t - 1]) 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    Model`ProcessModels`t])))), ReplaceAll[
                Model`ProcessModels`pd[
                Model`ProcessModels`t, Model`ProcessModels`i], 
                Normal[
                 Model`ProcessModels`model["endogenousEq"]]] === 
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
                Model`ProcessModels`i][
                0] + ((FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
pi[Model`ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) 
                 FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
                  Model`ProcessModels`i][
                  1] + ((FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
sg[Model`ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg) 
                  FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
                   Model`ProcessModels`i][4] + (
                  Subtract[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    Model`ProcessModels`t]^2 - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`phig^2/(1 - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhog^2), 
                    FernandoDuarte`LongRunRisk`Model`Parameters`Esg^2] 
                   FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
                    Model`ProcessModels`i][
                    5] + ((FernandoDuarte`LongRunRisk`Model`ExogenousEq`\
Private`sg[Model`ProcessModels`t - 1] 
                    FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
                    Model`ProcessModels`i][2]) 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    Model`ProcessModels`t] + 
                   FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
                    Model`ProcessModels`i][3] 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    Model`ProcessModels`t])))), ReplaceAll[
                Model`ProcessModels`bondexcret[
                Model`ProcessModels`t, Model`ProcessModels`i], 
                Normal[
                 Model`ProcessModels`model["endogenousEq"]]] === 
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondret[
                Model`ProcessModels`t, Model`ProcessModels`i, 1] - 
               FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\
bondyield[Model`ProcessModels`t - 1, 1], ReplaceAll[
                ReplaceAll[
                 Model`ProcessModels`bondexcret[
                 Model`ProcessModels`t, Model`ProcessModels`i], 
                 Normal[
                  Model`ProcessModels`model["endogenousEq"]]], 
                Normal[
                 Model`ProcessModels`model["endogenousEq"]]] === (
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[
                 Model`ProcessModels`t - 1, 1] + 
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[
                 Model`ProcessModels`t, Model`ProcessModels`i - 1]) - 
               FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[
               Model`ProcessModels`t - 1, Model`ProcessModels`i]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000416`2.769608328458737, "CPUTimeUsed" -> 0.00041699999999877946`,
          "MemoryUsed" -> 7216, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 3287974734452458654 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90587690835023*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "76f49b1c-fb6a-43bf-b60b-84b0da82a0eb", "TestID" -> 
         "ProcessModels_20231009-CJK0BN", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "d1e9409c-28f0-48a6-85d7-6b5a5d671dab", "Input" -> HoldForm[
           Apply[And, {
             Apply[And, 
              Map[MatchQ[{}, #]& , 
               Map[Cases[
                 ReplaceRepeated[
                  Model`ProcessModels`wc[Model`ProcessModels`t], 
                  Normal[
                   Model`ProcessModels`modelsP[#]["endogenousEq"]]], 
                 PatternTest[
                   Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                    SymbolName[#]]& ][
                   BlankSequence[]] :> Model`ProcessModels`var, Infinity]& , 
                Keys[Model`ProcessModels`modelsP]]]], 
             Apply[And, 
              Map[
              MatchQ[#, 
                "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"]& , 
               Flatten[
                Map[Cases[
                  ReplaceRepeated[
                   Model`ProcessModels`wc[Model`ProcessModels`t], 
                   Normal[
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]], 
                  PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                    SymbolName[#]]& ][
                    BlankSequence[]] :> Context[Model`ProcessModels`var], 
                  Infinity]& , 
                 Keys[Model`ProcessModels`modelsP]]]]], 
             Apply[And, 
              Map[MatchQ[#, "FernandoDuarte`LongRunRisk`Model`Parameters`"]& , 
               Flatten[
                Map[Cases[
                  ReplaceRepeated[
                   Model`ProcessModels`wc[Model`ProcessModels`t], 
                   Normal[
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]], 
                  PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Context[Model`ProcessModels`var], 
                  Infinity]& , 
                 Keys[Model`ProcessModels`modelsP]]]]], 
             Apply[And, 
              Map[MatchQ[#, "FernandoDuarte`LongRunRisk`Model`Shocks`"]& , 
               Flatten[
                Map[Cases[
                  ReplaceRepeated[
                   Model`ProcessModels`wc[Model`ProcessModels`t], 
                   Normal[
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]], 
                  PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                    BlankSequence[]][
                    BlankSequence[]] :> Context[Model`ProcessModels`var], 
                  Infinity]& , 
                 Keys[Model`ProcessModels`modelsP]]]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.003264`3.6642651479138175, "CPUTimeUsed" -> 0.0032629999999969073`,
          "MemoryUsed" -> 15768, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 7906123892148819738 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876908353812*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "b30ab237-d716-4c9e-828a-9c7683542a15", "TestID" -> 
         "ProcessModels_20231009-TTUHNI", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "379c4f29-cbfb-4629-9054-fb0553be7534", "Input" -> HoldForm[
           Apply[And, {
             Apply[And, 
              Map[MatchQ[{}, #]& , 
               Map[Cases[
                 ReplaceRepeated[
                  Model`ProcessModels`bondexcret[
                  Model`ProcessModels`t, Model`ProcessModels`i], 
                  Normal[
                   Model`ProcessModels`modelsP[#]["endogenousEq"]]], 
                 PatternTest[
                   Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                    SymbolName[#]]& ][
                   BlankSequence[]] :> Model`ProcessModels`var, Infinity]& , 
                Keys[Model`ProcessModels`modelsP]]]], 
             Apply[And, 
              Map[
              MatchQ[#, 
                "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"]& , 
               Flatten[
                Map[Cases[
                  ReplaceRepeated[
                   Model`ProcessModels`bondexcret[
                   Model`ProcessModels`t, Model`ProcessModels`i], 
                   Normal[
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]], 
                  PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                    SymbolName[#]]& ][
                    BlankSequence[]] :> Context[Model`ProcessModels`var], 
                  Infinity]& , 
                 Keys[Model`ProcessModels`modelsP]]]]], 
             Apply[And, 
              Map[MatchQ[#, "FernandoDuarte`LongRunRisk`Model`Parameters`"]& , 
               Flatten[
                Map[Cases[
                  ReplaceRepeated[
                   Model`ProcessModels`bondexcret[
                   Model`ProcessModels`t, Model`ProcessModels`i], 
                   Normal[
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]], 
                  PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Context[Model`ProcessModels`var], 
                  Infinity]& , 
                 Keys[Model`ProcessModels`modelsP]]]]], 
             Apply[And, 
              Map[MatchQ[#, "FernandoDuarte`LongRunRisk`Model`Shocks`"]& , 
               Flatten[
                Map[Cases[
                  ReplaceRepeated[
                   Model`ProcessModels`bondexcret[
                   Model`ProcessModels`t, Model`ProcessModels`i], 
                   Normal[
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]], 
                  PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                    BlankSequence[]][
                    BlankSequence[]] :> Context[Model`ProcessModels`var], 
                  Infinity]& , 
                 Keys[Model`ProcessModels`modelsP]]]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.012997`4.264358116769481, "CPUTimeUsed" -> 0.013007000000001767`, 
         "MemoryUsed" -> 17744, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 8025671006393849886 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876908367043*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "8230591b-07e1-4dd0-ac75-7c89dcb1d917", "TestID" -> 
         "ProcessModels_20231009-CBWA7Q", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "5d8e3b5a-a2e8-43f9-a786-011663627050", "Input" -> HoldForm[
           Apply[And, {
             AllTrue[
              Map[Head, 
               Keys[
                Model`ProcessModels`modelsP["BKY"]["exogenousEq"]]], 
              MatchQ[#, PatternTest]& ], 
             AllTrue[
              Map[Head, 
               Keys[
                Model`ProcessModels`modelsP["BKY"]["endogenousEq"]]], 
              MatchQ[#, PatternTest]& ]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000035`1.6945830421822692, "CPUTimeUsed" -> 0.00003499999999689862,
          "MemoryUsed" -> 2664, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 2124849931260406896 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876908367382*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "e490d528-0460-4b69-9f1f-eebda288b761", "TestID" -> 
         "ProcessModels_20231009-1R6E1V", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "28c41db4-8b53-4ae3-b1d4-b645933dedc5", "Input" -> HoldForm[
           Apply[And, {
             Apply[And, 
              Map[Not, 
               Map[Head[
                  Model`ProcessModels`dc[Model`ProcessModels`t]] === Head[
                  ReplaceAll[
                   Model`ProcessModels`dc[Model`ProcessModels`t], 
                   Normal[
                    Join[
                    Model`ProcessModels`modelsP[#]["exogenousEq"], 
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
                Keys[Model`ProcessModels`modelsP]]]], 
             Apply[And, 
              Map[Not, 
               Map[Head[
                  Model`ProcessModels`dd[
                  Model`ProcessModels`t, Model`ProcessModels`i]] === Head[
                  ReplaceAll[
                   Model`ProcessModels`dd[
                   Model`ProcessModels`t, Model`ProcessModels`i], 
                   Normal[
                    Join[
                    Model`ProcessModels`modelsP[#]["exogenousEq"], 
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
                Keys[Model`ProcessModels`modelsP]]]], 
             Apply[And, 
              Map[Not, 
               Map[Head[
                  Model`ProcessModels`wc[Model`ProcessModels`t]] === Head[
                  ReplaceAll[
                   Model`ProcessModels`wc[Model`ProcessModels`t], 
                   Normal[
                    Join[
                    Model`ProcessModels`modelsP[#]["exogenousEq"], 
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
                Keys[Model`ProcessModels`modelsP]]]], 
             Apply[And, 
              Map[Not, 
               Map[Head[
                  Model`ProcessModels`sdf[Model`ProcessModels`t]] === Head[
                  ReplaceAll[
                   Model`ProcessModels`sdf[Model`ProcessModels`t], 
                   Normal[
                    Join[
                    Model`ProcessModels`modelsP[#]["exogenousEq"], 
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
                Keys[Model`ProcessModels`modelsP]]]], 
             Apply[And, 
              Map[Not, 
               Map[Head[
                  Model`ProcessModels`bondyield[Model`ProcessModels`t]] === 
                Head[
                  ReplaceAll[
                   Model`ProcessModels`bondyield[Model`ProcessModels`t], 
                   Normal[
                    Join[
                    Model`ProcessModels`modelsP[#]["exogenousEq"], 
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
                Keys[Model`ProcessModels`modelsP]]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000719`3.007243888214876, "CPUTimeUsed" -> 0.0007190000000036889, 
         "MemoryUsed" -> 8368, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 2225307172010726479 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058769083683324`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "abe5dc09-e04f-481e-9053-7aab704302b7", "TestID" -> 
         "ProcessModels_20231009-FG6AJT", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "18c7aed4-11b5-4462-ad69-1180bbf203c7", "Input" -> HoldForm[
           Apply[And, {
             Apply[And, 
              Map[Head[
                 Model`ProcessModels`notVar[Model`ProcessModels`t]] === Head[
                 ReplaceAll[
                  Model`ProcessModels`notVar[Model`ProcessModels`t], 
                  Normal[
                   Join[
                    Model`ProcessModels`modelsP[#]["exogenousEq"], 
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
               Keys[Model`ProcessModels`modelsP]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000159`2.351912122152445, "CPUTimeUsed" -> 0.00015900000000357295`,
          "MemoryUsed" -> 5568, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 614361392296447293 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905876908368769*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "6449c014-41e2-4b0b-98ce-b9ca3eadd1b9", "TestID" -> 
         "ProcessModels_20231009-DTJL4A", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "dad647e9-7dae-4d88-b03b-198cf81ff3ef", "Input" -> HoldForm[
           If[
           Model`ProcessModels`longTest, 
            Model`ProcessModels`modelBY = 
             FernandoDuarte`LongRunRisk`Model`Catalog`models["BY"]; 
            Model`ProcessModels`modelBKY = 
             FernandoDuarte`LongRunRisk`Model`Catalog`models["BKY"]; 
            Model`ProcessModels`modelBKYP = 
             FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[<|
               "BKY" -> Model`ProcessModels`modelBKY|>]; 
            Model`ProcessModels`modelBYP = 
             FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[<|
               "BY" -> Model`ProcessModels`modelBY|>]; 
            Model`ProcessModels`newModels = <|
              "myModel" -> Model`ProcessModels`modelBKY, "BY" -> 
               Model`ProcessModels`modelBY|>; 
            Model`ProcessModels`newModelsSameName = <|
              "BY" -> Model`ProcessModels`modelBY|>; 
            Model`ProcessModels`newModelsRename = <|
              "myModel" -> Model`ProcessModels`modelBY|>; 
            Model`ProcessModels`newModelsP = 
             FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
              Model`ProcessModels`newModels]; 
            Model`ProcessModels`newModelsSameNameP = 
             FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
              Model`ProcessModels`newModelsSameName]; 
            Model`ProcessModels`newModelsRenameP = 
             FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
              Model`ProcessModels`newModelsRename]; Apply[And, {
               ((KeyDrop[#, "coeffsSolution"]& )[
                 Model`ProcessModels`newModelsP["myModel"]] === 
               KeyDrop[#, "coeffsSolution"]& )[
                Model`ProcessModels`modelBKYP["BKY"]], 
               ((KeyDrop[#, "coeffsSolution"]& )[
                 Model`ProcessModels`newModelsP["BY"]] === 
               KeyDrop[#, "coeffsSolution"]& )[
                Model`ProcessModels`modelBYP["BY"]], 
               ((KeyDrop[#, "coeffsSolution"]& )[
                 Model`ProcessModels`newModelsSameNameP["BY"]] === 
               KeyDrop[#, "coeffsSolution"]& )[
                Model`ProcessModels`modelBYP["BY"]], 
               ((KeyDrop[#, "coeffsSolution"]& )[
                 Model`ProcessModels`newModelsRenameP["myModel"]] === 
               KeyDrop[#, "coeffsSolution"]& )[
                Model`ProcessModels`modelBYP["BY"]]}], True]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000017`1.3809639192102687, "CPUTimeUsed" -> 0.00001800000000429236,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>]|>, "FailureResults" -> <||>, 
    "TestsNotEvaluatedKeys" -> {}, "TestsFailedWrongResultsKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {1996687105172878220, 7335049122666283223, 
     3877581151076263803, 8188983420481538457, 4692876653772974370, 
     732332038150039360, 5830111586900330547, 8863351620970684619, 
     7052160064996364580, 2234131079493316597, 6876208160125089852, 
     6982566034968502303, 5677935275793512486, 6961358929524763449, 
     8691221378403154018, 6145446746129304105, 6076421780083613804, 
     5040802243453325142, 6027406953425397197, 2701745553450638896, 
     3287974734452458654, 7906123892148819738, 8025671006393849886, 
     2124849931260406896, 2225307172010726479, 614361392296447293}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.905876849373095*^9, 3.905876908378119*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"16db66b8-f764-41e8-88dd-475816a0666d"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.905876849373095*^9, 3.905876908381609*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"9d4d3be7-f551-4ab8-9297-44f79d9a3dc8"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.905876849373095*^9, 3.905876908382202*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"dc85bea2-d14c-4fe0-a1a9-dc7da921497e"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1551, 843},
WindowMargins->{{Automatic, 156}, {Automatic, 37}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.25 Inherited,
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6603c207-289c-456f-bd11-6175ead60d45"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 163, 3, 84, "Section",ExpressionUUID->"78e49db9-cc4f-4fd7-843c-0d52d841f43e"],
Cell[746, 27, 246, 4, 37, "Input",ExpressionUUID->"4a4e2e24-fcb6-4e5b-a6de-9a788f0ea471"],
Cell[CellGroupData[{
Cell[1017, 35, 1575, 30, 116, "Input",ExpressionUUID->"b9f2d453-3e98-41bc-b67a-28793e860800"],
Cell[2595, 67, 295, 5, 42, "Output",ExpressionUUID->"f0461080-b8f0-4951-b6f2-1231af50aaa5"],
Cell[2893, 74, 318, 6, 42, "Output",ExpressionUUID->"8d31b7e2-a278-4a25-a9d5-42bcbd036b1a"],
Cell[3214, 82, 1690, 32, 355, "Output",ExpressionUUID->"afd55ddb-14b0-4c68-9038-e208862619f9"],
Cell[4907, 116, 334, 7, 42, "Output",ExpressionUUID->"fe7a633d-ab25-4ddf-8df9-bbf871baad73"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5278, 128, 243, 4, 37, "Input",ExpressionUUID->"89327c75-70af-4b75-adfd-86608c4fe806"],
Cell[5524, 134, 9780, 202, 103, "Output",ExpressionUUID->"83617de6-811c-4523-8da4-108b3f55bdae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15341, 341, 223, 3, 37, "Input",ExpressionUUID->"a1384358-6bbe-4f41-bc0a-a9f74fea10c1"],
Cell[15567, 346, 151, 2, 42, "Output",ExpressionUUID->"3078577c-f250-431c-83d3-fede15a5a703"]
}, Open  ]],
Cell[15733, 351, 436, 9, 142, "Input",ExpressionUUID->"f1d84011-dcfc-4f83-98b5-d531ed681557"],
Cell[16172, 362, 4418, 120, 454, "Input",ExpressionUUID->"6221cad6-36a4-4248-80ca-185024e4de01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20627, 487, 160, 3, 84, "Section",ExpressionUUID->"d25c25c5-91e4-4db4-8d5d-ffff3c9dd8e9"],
Cell[20790, 492, 247, 4, 37, "Input",ExpressionUUID->"b7145b60-97f2-4c82-a22d-4a857448917d"],
Cell[CellGroupData[{
Cell[21062, 500, 1575, 30, 116, "Input",ExpressionUUID->"b694159f-2a88-4f10-b86e-66a9ab5899ad"],
Cell[22640, 532, 270, 4, 42, "Output",ExpressionUUID->"29948ab4-6fed-4083-ae6f-cac135957c9f"],
Cell[22913, 538, 292, 5, 42, "Output",ExpressionUUID->"803bde79-e36b-466a-87cf-181af8cb347e"],
Cell[23208, 545, 1664, 31, 355, "Output",ExpressionUUID->"0f4fef74-9be4-418a-bbe1-73f19c205093"],
Cell[24875, 578, 308, 6, 62, "Output",ExpressionUUID->"587596b5-5466-4f64-ac7e-0b59c6a19995"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25220, 589, 2016, 56, 142, "Input",ExpressionUUID->"a02079b6-dc93-4662-a435-00398ad5c39a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[27239, 647, 29914, 564, 76, "Output",ExpressionUUID->"e4396594-1207-4563-9185-d785fd402ca0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[57156, 1213, 228, 3, 42, "Output",ExpressionUUID->"2a37bc9c-691e-4a18-ae4c-a1e2fb528abb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[57387, 1218, 228, 3, 42, "Output",ExpressionUUID->"6f009d0b-2ea6-4227-aae7-be0ff49cf959",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[57618, 1223, 2407, 61, 142, "Input",ExpressionUUID->"1153a7e3-a4a9-44e1-a1d1-2c85ee2d32e0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[60028, 1286, 32851, 614, 76, "Output",ExpressionUUID->"3ed2fcad-7777-45ec-a5f8-7f2fc3664d92",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[92882, 1902, 231, 3, 42, "Output",ExpressionUUID->"753e4419-9c8a-4d2c-ba16-2d1d239dcf0d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[93116, 1907, 229, 3, 42, "Output",ExpressionUUID->"d9318813-72e8-426d-92bb-5b3d97386b5c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[93348, 1912, 2414, 61, 142, "Input",ExpressionUUID->"07d47c72-3650-48cf-bae5-d9151c59339e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[95765, 1975, 22842, 465, 76, "Output",ExpressionUUID->"62c13107-6d79-4e28-aaaf-7c9eaad7277d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[118610, 2442, 230, 3, 42, "Output",ExpressionUUID->"32ff1fb0-6167-475c-a888-aa825ade7201",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[118843, 2447, 231, 3, 42, "Output",ExpressionUUID->"a48a3b6f-f9d7-45ec-81ea-9ad319415fb2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[119077, 2452, 2412, 61, 142, "Input",ExpressionUUID->"a92fbc3b-b353-4e75-8ee9-b61e11404d6b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[121492, 2515, 30686, 612, 76, "Output",ExpressionUUID->"f0c9d610-c417-41f0-a800-8a8a5dfcb2ca",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[152181, 3129, 229, 3, 42, "Output",ExpressionUUID->"74a50bbe-7cfb-49f6-a9cd-f8466ec77257",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[152413, 3134, 229, 3, 42, "Output",ExpressionUUID->"32d7b3f7-bfbe-4a5b-8582-6afff05193ac",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[152645, 3139, 2479, 62, 142, "Input",ExpressionUUID->"16b4a727-0558-4183-a2f8-e2e1a7b3a611",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[155127, 3203, 220101, 3596, 76, "Output",ExpressionUUID->"f650b332-37a7-4e78-9747-24f0c5362836",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[375231, 6801, 231, 3, 42, "Output",ExpressionUUID->"2a5e7e6b-76cf-4912-a538-ed81f263c4a9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[375465, 6806, 229, 3, 42, "Output",ExpressionUUID->"c4c72f08-9d40-48de-93f8-b687a2f67462",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[375697, 6811, 2033, 56, 142, "Input",ExpressionUUID->"e330a50a-d51d-4861-9e79-8ecbadd6a684",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[377733, 6869, 89117, 1642, 76, "Output",ExpressionUUID->"b3bb5f7a-13f0-4f80-bd9f-eb9241d25e79",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[466853, 8513, 228, 3, 42, "Output",ExpressionUUID->"a2928624-f9fb-4c59-a1d5-058851b75208",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[467084, 8518, 230, 3, 42, "Output",ExpressionUUID->"938f16b0-7798-4103-af88-21fae26197fd",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[467317, 8523, 2046, 56, 142, "Input",ExpressionUUID->"ab52a8a9-6ba0-4c63-83a5-96864da8b71f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[469366, 8581, 42123, 807, 76, "Output",ExpressionUUID->"45d29583-e6e9-405b-9389-f6764bf908e0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[511492, 9390, 231, 3, 42, "Output",ExpressionUUID->"b26bf99f-ef14-48f3-9f08-d1ba3d9e50ef",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[511726, 9395, 231, 3, 42, "Output",ExpressionUUID->"8955a267-5f1c-4522-a398-2cf03e65b17b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[511960, 9400, 2067, 57, 142, "Input",ExpressionUUID->"2f5705e2-54a0-49dc-bed2-96972ce91fe4",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[514030, 9459, 80598, 1445, 76, "Output",ExpressionUUID->"257e00c5-740d-47cf-9016-de95ef04e7f1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[594631, 10906, 274, 4, 42, "Output",ExpressionUUID->"822ae4e2-d2f9-4361-b08e-baebcefe7385",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[594908, 10912, 274, 4, 42, "Output",ExpressionUUID->"0c59fa45-a4e6-4ffd-b823-bf4247e1527c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[595185, 10918, 2023, 56, 142, "Input",ExpressionUUID->"7c47fece-e37b-46a8-a1f5-f66cb52faf00",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[597211, 10976, 136220, 2319, 76, "Output",ExpressionUUID->"dfc994d2-860a-4c74-b4bf-e1fc5d32c2c9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[733434, 13297, 229, 3, 42, "Output",ExpressionUUID->"c2d13972-7f44-4ad6-a49f-eb4eeb1a2598",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[733666, 13302, 229, 3, 42, "Output",ExpressionUUID->"7aee93b3-cca8-4ce9-8bcf-02c8100e0cc8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[733898, 13307, 2022, 56, 142, "Input",ExpressionUUID->"ad7fda5b-fb52-4ad1-8d3f-dceb74f45182",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[735923, 13365, 10136, 208, 76, "Output",ExpressionUUID->"f53b708b-a5f4-42bc-b508-aa4b9579ed42",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[746062, 13575, 231, 3, 42, "Output",ExpressionUUID->"a3940690-a310-4790-af1a-1759671c358b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[746296, 13580, 229, 3, 42, "Output",ExpressionUUID->"6c8e2266-e28a-4605-ad58-0b7a891a57a2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[746528, 13585, 2038, 57, 142, "Input",ExpressionUUID->"479fb483-095c-47a5-b63a-afec0a7f6185",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[748569, 13644, 23461, 447, 76, "Output",ExpressionUUID->"2b7841db-fe0e-41eb-94ad-32593cb93d63",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[772033, 14093, 281, 4, 42, "Output",ExpressionUUID->"59aeed5f-6fe5-4812-bd22-acc9601ded98",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[772317, 14099, 279, 4, 42, "Output",ExpressionUUID->"54982e96-0c58-4656-9dbe-25b6e2cb3310",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[772599, 14105, 2038, 57, 142, "Input",ExpressionUUID->"afbf4542-7cc1-4920-8238-b47d7922799b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[774640, 14164, 103933, 1927, 76, "Output",ExpressionUUID->"aee6a225-0bb2-4d7e-a340-ed3de5242c89",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[878576, 16093, 228, 3, 42, "Output",ExpressionUUID->"3b885dd0-7bd5-48fe-bb43-3b481f8e7436",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[878807, 16098, 230, 3, 42, "Output",ExpressionUUID->"e70961a1-ece7-4541-a465-430e3b76ac1f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[879040, 16103, 1969, 55, 142, "Input",ExpressionUUID->"ab5399e2-3070-4f2a-b018-73caa2bee83c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[881012, 16160, 71443, 1382, 76, "Output",ExpressionUUID->"16db66b8-f764-41e8-88dd-475816a0666d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[952458, 17544, 229, 3, 42, "Output",ExpressionUUID->"9d4d3be7-f551-4ab8-9297-44f79d9a3dc8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[952690, 17549, 229, 3, 42, "Output",ExpressionUUID->"dc85bea2-d14c-4fe0-a1a9-dc7da921497e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]]
}, Open  ]]
}
]
*)

