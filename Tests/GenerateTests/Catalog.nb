(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    253702,       5009]
NotebookOptionsPosition[    197106,       3980]
NotebookOutlinePosition[    243468,       4835]
CellTagsIndexPosition[    243425,       4832]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"Quit", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.889964198656839*^9, 3.889964203363894*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"5936db62-753d-4c20-a941-1dfb10c21e69"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"testFileName", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DirectoryName", "[", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "1"}], "]"}], ",", 
      RowBox[{
       RowBox[{"FileBaseName", "[", 
        RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", 
       "\"\<.wlt\>\""}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pacletDir", "=", 
   RowBox[{"DirectoryName", "[", 
    RowBox[{"testFileName", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", "pacletDir", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testContextBase", "=", 
   RowBox[{"FileBaseName", "[", "testFileName", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$ContextPath", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"$ContextPath", ",", 
     RowBox[{"Except", "[", "\"\<PacletizedResourceFunctions`\>\"", "]"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8890661685133457`*^9, 3.889066220685074*^9}, {
   3.8890662555512333`*^9, 3.889066299901951*^9}, {3.889066581166473*^9, 
   3.8890665847967653`*^9}, {3.889066731765956*^9, 3.889066745674687*^9}, {
   3.889431410824514*^9, 3.88943144002302*^9}, 3.889502968269744*^9, {
   3.889998928469849*^9, 3.889998928670561*^9}, {3.890676553021196*^9, 
   3.890676564028514*^9}, 3.890676636594749*^9, {3.890679618620262*^9, 
   3.89067961902995*^9}, {3.8908254134370813`*^9, 3.890825413876319*^9}, {
   3.890825459205497*^9, 3.890825473041605*^9}, {3.890825503118348*^9, 
   3.8908255374530487`*^9}, {3.891021675325671*^9, 3.891021675545487*^9}, {
   3.8911588731924877`*^9, 3.891158877904397*^9}, {3.8911592499395514`*^9, 
   3.8911592502376633`*^9}, {3.891314843074428*^9, 3.8913148458084183`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"1f20a6f1-c8fe-4d25-91dc-21cad8616c89"],

Cell[CellGroupData[{

Cell["CI Tests", "Subsection",
 CellChangeTimes->{{3.8895791922306013`*^9, 3.889579196409403*^9}, {
  3.889905620469079*^9, 3.8899056207707977`*^9}, {3.889967624152501*^9, 
  3.889967626012704*^9}},ExpressionUUID->"bc721a90-5248-4709-baf0-\
508070e5c013"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FileNames", "[", "testFileName", "]"}], "===", 
     RowBox[{"{", "}"}]}], ",", "Nothing", ",", 
    RowBox[{"DeleteFile", "[", "testFileName", "]"}]}], "]"}], ";"}]], "Input",\

 CellLabel->"In[6]:=",ExpressionUUID->"61e9a1c2-4ad4-4fe4-8929-2a7bfa852efa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"confirm", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"testContext", "=", 
  RowBox[{
  "\"\<FernandoDuarte`LongRunRisk`Model`\>\"", "<>", "testContextBase", "<>", 
   "\"\<`\>\""}]}]}], "Input",
 CellChangeTimes->{{3.8906795325443907`*^9, 3.8906795357982817`*^9}, 
   3.890679566064293*^9, {3.8906796081672497`*^9, 3.8906796258061447`*^9}, {
   3.890679757679096*^9, 3.890679766260743*^9}, 3.890679874010334*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"7373936c-ff06-42f3-99c4-9976b014d9be"],

Cell[BoxData["\<\"FernandoDuarte`LongRunRisk`Model`Catalog`\"\>"], "Output",
 CellChangeTimes->{{3.895362772845051*^9, 3.8953627836787043`*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"465950e4-3aaa-4c32-83be-f95811290682"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Begin", "[", "\"\<Catalog`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.890680288696157*^9, 3.8906802887021513`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"56243fb4-4478-4214-a53b-c438a5bbcfe2"],

Cell[BoxData["\<\"Catalog`\"\>"], "Output",
 CellChangeTimes->{{3.895362772848477*^9, 3.8953627836819763`*^9}},
 CellLabel->"Out[9]=",ExpressionUUID->"d5ae0e0f-5cf6-41d7-80e0-d97db6c514b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Get", "[", "\"\<FernandoDuarte`LongRunRisk`Model`Catalog`\>\"", "]"}], 
    ";"}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8899652151465197`*^9, 3.889965235350771*^9}, 
   3.8899652808817787`*^9, {3.889967731242805*^9, 3.8899677356636972`*^9}, {
   3.889967971867523*^9, 3.889967975146998*^9}, {3.889968339451161*^9, 
   3.88996834001075*^9}, 3.889968619774049*^9, {3.8899688826075077`*^9, 
   3.88996888992594*^9}, {3.88996899475625*^9, 3.8899690018858624`*^9}, {
   3.8899691256166267`*^9, 3.8899691257757883`*^9}, {3.889969207667478*^9, 
   3.8899692141700287`*^9}, {3.8899692798779783`*^9, 3.889969288274632*^9}, 
   3.889969387087708*^9, 3.889969585993528*^9, {3.8899702972149563`*^9, 
   3.889970314454108*^9}, {3.890603045806611*^9, 3.890603046578224*^9}, 
   3.890603139674321*^9, {3.890676572733183*^9, 3.890676585108572*^9}, {
   3.890679071059198*^9, 3.890679121055434*^9}, {3.89067917308251*^9, 
   3.890679177122958*^9}, 3.890679328121275*^9, {3.8906795122187853`*^9, 
   3.890679514391316*^9}, {3.890679606901452*^9, 3.8906796293121653`*^9}, {
   3.890679668768669*^9, 3.890679669902752*^9}, {3.8906797200186*^9, 
   3.890679786626452*^9}, {3.890679828108779*^9, 3.890679882954316*^9}, {
   3.891156663445282*^9, 3.891156670699563*^9}, {3.891216568237528*^9, 
   3.8912165691387577`*^9}, {3.891317362457469*^9, 3.891317362760808*^9}, {
   3.89185255696913*^9, 3.8918525572447157`*^9}, {3.893003809097685*^9, 
   3.893003815813273*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"9f314737-f9fe-4d9e-8551-523b0929d53e"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230610-OQB689\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230610-OQB689"],
  Editable->False]], "Print",
 CellChangeTimes->{3.895362784063813*^9},
 CellLabel->
  "During evaluation of \
In[10]:=",ExpressionUUID->"11006c9d-d83b-4a95-8057-fcf8143c83c0"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.895362784081867*^9},
 CellLabel->
  "During evaluation of \
In[10]:=",ExpressionUUID->"2323f3e6-50fe-4ec9-9a35-c6b120db12fa"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Get @ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = Null, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tGet @ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\
\t,\n\tNull\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-OQB689\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> Null, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.049, "AbsoluteTiming" -> 0.049, 
   "InputString" :> ToString[
     Unevaluated[Get["FernandoDuarte`LongRunRisk`Model`Catalog`"]; Null], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230610-OQB689\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{{3.895362773131874*^9, 3.895362784086067*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"76c60354-4171-4e77-9a10-34a2d6cd5cf1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"MemberQ", "[", 
    RowBox[{
    "$ContextPath", ",", 
     "\"\<FernandoDuarte`LongRunRisk`Model`Catalog`\>\""}], "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.889901579125684*^9, {3.889965035911569*^9, 3.889965039550325*^9}, {
   3.889965296152458*^9, 3.889965305191854*^9}, 3.8899653858152437`*^9, 
   3.889967740469187*^9, {3.889968345370779*^9, 3.889968347169169*^9}, {
   3.889968526692542*^9, 3.8899685355316963`*^9}, {3.889968649261517*^9, 
   3.889968660343141*^9}, 3.889969395693264*^9, {3.88996958684683*^9, 
   3.8899695947482367`*^9}, {3.889970300225127*^9, 3.889970329366473*^9}, {
   3.890603050754869*^9, 3.8906030512673264`*^9}, 3.890603142316881*^9, 
   3.89067659639168*^9, {3.890679255090239*^9, 3.890679318737549*^9}, 
   3.890679634337233*^9, 3.890679895680545*^9, {3.891156682413542*^9, 
   3.8911566938989573`*^9}, 3.891216575158337*^9, {3.893003827318541*^9, 
   3.893003834977784*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"30ea8f81-e3a5-4912-928a-3a488ce6e518"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230610-HTF3BH\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230610-HTF3BH"],
  Editable->False]], "Print",
 CellChangeTimes->{3.895362784123402*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"de687eb1-5dc2-449d-ac53-c15921cb4a89"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.895362784125279*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"a85b636d-29e7-4d93-b799-16fd7ca8a12d"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tMemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230610-HTF3BH\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      MemberQ[$ContextPath, "FernandoDuarte`LongRunRisk`Model`Catalog`"]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230610-OQB689\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-HTF3BH\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{{3.895362773135714*^9, 3.8953627841437283`*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"d6e4dbb3-8704-4ec8-9af3-0265b45ffe23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"True", " ", "if", " ", "Keys", " ", "are", " ", "strings"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"StringQ", "/@", 
      RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
   ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.889965468632722*^9, 3.889965535681717*^9}, {
   3.889965687921562*^9, 3.889965719041513*^9}, {3.8899657564745703`*^9, 
   3.8899657868805656`*^9}, {3.889965818275572*^9, 3.88996587402346*^9}, {
   3.8899660417909737`*^9, 3.889966042024665*^9}, {3.889967536877624*^9, 
   3.88996754071059*^9}, {3.8899676626847277`*^9, 3.889967663326408*^9}, {
   3.889967743694665*^9, 3.889967744059184*^9}, {3.8899677859095707`*^9, 
   3.8899678081741953`*^9}, {3.8899679955631647`*^9, 3.889968003395926*^9}, {
   3.889969462764024*^9, 3.8899694656136417`*^9}, {3.889969517081333*^9, 
   3.8899695670076637`*^9}, {3.889970354531378*^9, 3.889970361426557*^9}, 
   3.889970446358612*^9, 3.889971586268968*^9, 3.8899720413397284`*^9, {
   3.890016031161611*^9, 3.8900160360345497`*^9}, {3.890676734948654*^9, 
   3.890676751540125*^9}, {3.890676845455442*^9, 3.8906768494530687`*^9}, {
   3.890677074824079*^9, 3.890677087212*^9}, {3.89067716026512*^9, 
   3.890677182253841*^9}, {3.890677263672217*^9, 3.890677304382949*^9}, {
   3.890677341975574*^9, 3.890677356067058*^9}, {3.8906773977299557`*^9, 
   3.8906774089663153`*^9}, 3.890677598758559*^9, {3.890679268914014*^9, 
   3.890679269116164*^9}, {3.890679349751339*^9, 3.890679350122447*^9}, {
   3.891156731517645*^9, 3.891156737082999*^9}, 3.891156798479602*^9, {
   3.891316377112542*^9, 3.891316402888419*^9}, 3.891317076710834*^9, {
   3.8913171358178368`*^9, 3.891317143464329*^9}, 3.891317307401203*^9, 
   3.891317424039097*^9, {3.8930033595674267`*^9, 3.8930033895976143`*^9}, 
   3.893003633526842*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"f65e45e8-2582-4d00-8615-d27896add0d0"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230610-BN4CMJ\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230610-BN4CMJ"],
  Editable->False]], "Print",
 CellChangeTimes->{3.89536278419023*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"2623cfcb-9929-4e46-8bab-5f7202714eaf"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.895362784192115*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"6253d324-975e-4ee4-92d4-b332d6a3d03e"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20230610-BN4CMJ\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[StringQ, 
        Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230610-OQB689\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-HTF3BH\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20230610-BN4CMJ\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{{3.8953627731422157`*^9, 3.8953627841979017`*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"3411e180-1bdc-42e8-ad2d-784f904ec660"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "True", " ", "if", " ", "fields", " ", "listed", " ", "are", " ", 
     "strings"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"StringQ", "/@", 
      RowBox[{"Flatten", "@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"models", "[", "#", "]"}], "[", "\"\<name\>\"", "]"}], 
            ",", 
            RowBox[{
             RowBox[{"models", "[", "#", "]"}], "[", "\"\<shortname\>\"", 
             "]"}], ",", 
            RowBox[{
             RowBox[{"models", "[", "#", "]"}], "[", "\"\<bibRef\>\"", "]"}], 
            ",", 
            RowBox[{
             RowBox[{"models", "[", "#", "]"}], "[", "\"\<desc\>\"", "]"}]}], 
           "}"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}]}], ")"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.890016052447173*^9, {3.8906792711540194`*^9, 3.890679271381631*^9}, {
   3.890679354610903*^9, 3.890679355945959*^9}, {3.891156741863173*^9, 
   3.8911567524768667`*^9}, 3.891156797693831*^9, {3.893003392469846*^9, 
   3.893003404206932*^9}, 3.893003633527791*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"5d749a31-d7a1-48d2-a85b-e58e3fb2c847"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230610-WT7OAT\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230610-WT7OAT"],
  Editable->False]], "Print",
 CellChangeTimes->{3.895362784240028*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"40079cd0-1fb8-461d-bd67-5c1c1b81f1c9"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.895362784241981*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"0b15c745-afee-4b3f-b8ae-3570462a0f64"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction @ {\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-WT7OAT\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[StringQ, 
        Flatten[
         Map[{
           FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["name"], 
           FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["shortname"], 
           FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["bibRef"], 
           FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["desc"]}& , 
          Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230610-OQB689\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-HTF3BH\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20230610-BN4CMJ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-WT7OAT\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{{3.895362773145822*^9, 3.8953627842592697`*^9}},
 CellLabel->"Out[13]=",ExpressionUUID->"313ad5f1-8f1c-4b81-8212-e3dba0ff95db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "True", " ", "if", " ", "parameters", " ", "evaluate", " ", "to", " ", 
     "numbers"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"NumberQ", "/@", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"models", "[", "#", "]"}], "[", "\"\<parameters\>\"", 
             "]"}], "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "2"}], "]"}], "]"}], "//.", 
           RowBox[{
            RowBox[{"models", "[", "#", "]"}], "[", "\"\<parameters\>\"", 
            "]"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "models", "]"}]}], "]"}]}], ")"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.889965468632722*^9, 3.889965535681717*^9}, {
   3.889965687921562*^9, 3.889965719041513*^9}, {3.8899657564745703`*^9, 
   3.8899657868805656`*^9}, {3.889965818275572*^9, 3.88996587402346*^9}, {
   3.8899660417909737`*^9, 3.889966042024665*^9}, {3.889967536877624*^9, 
   3.88996754071059*^9}, {3.8899676626847277`*^9, 3.889967663326408*^9}, {
   3.889967743694665*^9, 3.889967744059184*^9}, {3.8899677859095707`*^9, 
   3.8899678081741953`*^9}, {3.8899679955631647`*^9, 3.889968003395926*^9}, {
   3.889969462764024*^9, 3.8899694656136417`*^9}, {3.889969517081333*^9, 
   3.8899695670076637`*^9}, {3.889970354531378*^9, 3.889970361426557*^9}, 
   3.889970446358612*^9, 3.889971586268968*^9, 3.8899720413397284`*^9, {
   3.890016031161611*^9, 3.8900160360345497`*^9}, {3.8900160737670794`*^9, 
   3.890016085435741*^9}, {3.890676438175074*^9, 3.890676444283903*^9}, {
   3.890678425473001*^9, 3.890678429341833*^9}, {3.890679273563212*^9, 
   3.890679273764824*^9}, {3.890679359602653*^9, 3.890679360228259*^9}, {
   3.891156743395533*^9, 3.8911567603400497`*^9}, 3.891156796052576*^9, {
   3.893003422246476*^9, 3.8930034280669127`*^9}, 3.893003633528655*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"9a7acfd9-2870-4210-a7af-7c10ed2af5d1"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230610-C1FMQ2\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230610-C1FMQ2"],
  Editable->False]], "Print",
 CellChangeTimes->{3.895362784299073*^9},
 CellLabel->
  "During evaluation of \
In[14]:=",ExpressionUUID->"a659ce97-f497-4b7c-9297-aaee13b692db"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.895362784300846*^9},
 CellLabel->
  "During evaluation of \
In[14]:=",ExpressionUUID->"9660b7bf-23f2-4f4a-9958-2e564e41d189"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\
Part[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], 1;;, \
2] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\
\t\t\t\t],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\
\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
Part[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], 1;;, \
2] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\
\t\t\t\t],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\
\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-C1FMQ2\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.002, "AbsoluteTiming" -> 0.002, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[NumberQ, 
        Flatten[
         Map[ReplaceRepeated[
           Part[
            FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["parameters"], 
            
            Span[1, All], 2], 
           FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
           "parameters"]]& , 
          Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230610-OQB689\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-HTF3BH\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20230610-BN4CMJ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-WT7OAT\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-C1FMQ2\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{{3.8953627731523647`*^9, 3.895362784307624*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"89b8f138-c61f-45e6-a84e-a6a881951c28"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"True", " ", "if", " ", "equal", " ", "to", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", 
       RowBox[{"sx", "[", "t", "]"}]}], "}"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"models", "[", "\"\<BY\>\"", "]"}], "[", "\"\<stateVars\>\"", 
    "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.889966121134981*^9, 3.889966129513671*^9}, {
  3.8899675430265427`*^9, 3.889967546703742*^9}, {3.889967666639736*^9, 
  3.8899676668939447`*^9}, {3.889967746374608*^9, 3.889967746668034*^9}, {
  3.88996781333914*^9, 3.8899678201195583`*^9}, {3.88996801609513*^9, 
  3.88996801967063*^9}, {3.8900161094568357`*^9, 3.890016118394877*^9}, {
  3.8930036435184603`*^9, 3.893003645890563*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"3aa8b5cd-154c-4923-aed4-60a60049060a"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230610-UQSRTE\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230610-UQSRTE"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8953627843446417`*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"a11aa893-63a3-423a-85e8-fa05baa41215"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.895362784346311*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"54a6c087-b497-4c92-9fae-75315eb39eca"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = {
   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x[
   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx[
   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"]\n\t,\n\
\t{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-UQSRTE\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> {
     FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x[
     FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
     FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx[
     FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]}, "Success" -> 
   True, "FailureType" -> None, "OutputLog" -> {}, "Messages" -> {}, 
   "MessagesText" -> {}, "MessagesExpressions" -> {}, "Timing" -> 0., 
   "AbsoluteTiming" -> 0., "InputString" :> ToString[
     Unevaluated[
      FernandoDuarte`LongRunRisk`Model`Catalog`models["BY"]["stateVars"]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230610-OQB689\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-HTF3BH\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20230610-BN4CMJ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-WT7OAT\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-C1FMQ2\"\n]\n\n\nVerificationTest[\n\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"]\n\t,\n\
\t{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-UQSRTE\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{{3.895362773156838*^9, 3.895362784363106*^9}},
 CellLabel->"Out[15]=",ExpressionUUID->"b9986693-b984-4d79-8302-d8b673d7c61e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "True", " ", "if", " ", "it", " ", "can", " ", "find", " ", "models", " ",
      "listed"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"Keys", "[", "models", "]"}], ",", "#"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<BY\>\"", ",", "\"\<BKY\>\""}], "}"}]}], ")"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.889966137593294*^9, 3.889966157676291*^9}, {
   3.8899675483847713`*^9, 3.889967551583518*^9}, {3.8899676691600733`*^9, 
   3.889967669364262*^9}, {3.889967748725914*^9, 3.889967749007223*^9}, {
   3.889967825028019*^9, 3.8899678304574842`*^9}, {3.889968028194545*^9, 
   3.889968031839179*^9}, {3.890016134135317*^9, 3.890016138691626*^9}, {
   3.891156767252892*^9, 3.891156793864086*^9}, {3.893003452582478*^9, 
   3.893003458742921*^9}, 3.893003633529361*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"4ebbc95c-22ea-48d7-bdec-0d430d2b154f"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230610-9P3GIH\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230610-9P3GIH"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8953627844025593`*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"f58d65e4-d3d5-437e-aa67-79d325a93cb4"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.8953627844041977`*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"9b0d44b7-76db-4238-850a-68c3955f9c7a"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-9P3GIH\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[MemberQ[
         Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]& , {
        "BY", "BKY"}]]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230610-OQB689\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-HTF3BH\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20230610-BN4CMJ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-WT7OAT\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-C1FMQ2\"\n]\n\n\nVerificationTest[\n\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"]\n\t,\n\
\t{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-UQSRTE\"\n]\n\n\nVerificationTest[\n\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-9P3GIH\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{{3.8953627731632338`*^9, 3.895362784409748*^9}},
 CellLabel->"Out[16]=",ExpressionUUID->"f7ccfcb6-3dab-430a-98e3-e15cecfd750d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "True", " ", "if", " ", "models", " ", "is", " ", "an", " ", 
     "association", " ", "and", " ", "each", " ", "model", " ", "inside", " ",
      "models", " ", "is", " ", "itself", " ", "an", " ", "association"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"AssociationQ", "/@", 
      RowBox[{"Flatten", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Head", "[", "models", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", 
            RowBox[{"models", "[", "#", "]"}], "]"}], "&"}], "/@", 
          RowBox[{"Keys", "[", "models", "]"}]}]}], "}"}]}]}], ")"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.8899661404752703`*^9, 3.889966162544742*^9}, {
  3.88996755330625*^9, 3.8899675539045153`*^9}, {3.8899676717688217`*^9, 
  3.889967672005005*^9}, {3.88996775093589*^9, 3.8899677512290583`*^9}, {
  3.889967834057867*^9, 3.88996783977798*^9}, {3.889968042239496*^9, 
  3.889968052278575*^9}, {3.890016146817315*^9, 3.8900161536190767`*^9}, {
  3.890676356555853*^9, 3.8906763787792273`*^9}, {3.891156776109173*^9, 
  3.891156782485037*^9}, {3.893003483301791*^9, 3.89300354824457*^9}, {
  3.8930036512791853`*^9, 3.893003654903037*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"0cc2f06b-6e8f-4978-97cc-c47753fea3f2"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230610-A2TH7C\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230610-A2TH7C"],
  Editable->False]], "Print",
 CellChangeTimes->{3.895362784450931*^9},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"8fee9ee1-09d2-4b46-9f81-a4b8810487f0"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.895362784452721*^9},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"71508de7-d5e8-484f-8ecb-33f69167a789"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[AssociationQ,\n\t\t\tFlatten[\n\t\t\t\t{\n\t\t\t\t\t\
Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\t\t\t\t\
Map[Function @ Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models @ #, \
Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\t]\n\
\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = False, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[AssociationQ,\n\t\t\tFlatten[\n\t\
\t\t\t{\n\t\t\t\t\tHead @ FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\
\t\t\t\tMap[Function @ Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models \
@ #, Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\
\t]\n\t\t]\n\t]\n\t,\n\tFalse\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-A2TH7C\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> False, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[AssociationQ, 
        Flatten[{
          Head[FernandoDuarte`LongRunRisk`Model`Catalog`models], 
          Map[Head[
            FernandoDuarte`LongRunRisk`Model`Catalog`models[#]]& , 
           Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]}]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230610-OQB689\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-HTF3BH\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20230610-BN4CMJ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-WT7OAT\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-C1FMQ2\"\n]\n\n\nVerificationTest[\n\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"]\n\t,\n\
\t{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-UQSRTE\"\n]\n\n\nVerificationTest[\n\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-9P3GIH\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[AssociationQ,\n\t\t\tFlatten[\n\t\t\t\t{\n\t\t\t\t\tHead @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\t\t\t\tMap[Function @ \
Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models @ #, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\
\t]\n\t,\n\tFalse\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-A2TH7C\"\n]\n\
\n\nEndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{{3.895362773166717*^9, 3.8953627844711723`*^9}},
 CellLabel->"Out[17]=",ExpressionUUID->"d028b09a-73fa-4638-b7c4-541f5b242eaa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "True", " ", "if", " ", "all", " ", "exogenous", " ", "variables", " ", 
    "are", " ", "in", " ", "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
   RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
    RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"And", "@@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "#", "===", 
               "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\"\
"}], ")"}], "&"}], "/@", 
            RowBox[{"(", 
             RowBox[{"Context", "/@", 
              RowBox[{"Cases", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"models", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
                 "]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"var_Symbol", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", 
                "Infinity"}], "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
       RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}], "\[IndentingNewLine]",
     ",", 
    RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.893001201934902*^9, 3.893001214021667*^9}, {
   3.893001245798745*^9, 3.8930012743606873`*^9}, {3.893001352341578*^9, 
   3.893001386197197*^9}, {3.893001448430169*^9, 3.893001448726687*^9}, 
   3.8930026482885447`*^9, {3.893003559352929*^9, 3.89300358223393*^9}, 
   3.893003660158228*^9, {3.893003695869608*^9, 3.893003703297862*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"c37f51a1-837c-4f11-a194-78705f4642f7"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230610-7VIZ3G\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230610-7VIZ3G"],
  Editable->False]], "Print",
 CellChangeTimes->{3.895362784513524*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"d1b808b8-0fbe-4824-a9f7-9a30d27db666"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.895362784515312*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"d63c6253-ad61-4416-b43e-2885b1ca3d37"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\t\
Map[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\
\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Catalog`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\
\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\
\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\
\n\t]", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Catalog`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\
\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\
\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\
\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-7VIZ3G\"\n]\n\
\n", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.001, "AbsoluteTiming" -> 0.001, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[Apply[And, 
         Map[# === "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
          
          Map[Context, 
           Cases[
            FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["stateVars"], 
            PatternTest[
              Pattern[Catalog`var, 
               Blank[Symbol]], MemberQ[
               Map[
               StringDrop[#, -2]& , 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars], 
               
               SymbolName[#]]& ][
              BlankSequence[]] :> Catalog`var, Infinity]]]]& , 
        Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230610-OQB689\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-HTF3BH\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20230610-BN4CMJ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-WT7OAT\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-C1FMQ2\"\n]\n\n\nVerificationTest[\n\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"]\n\t,\n\
\t{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-UQSRTE\"\n]\n\n\nVerificationTest[\n\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-9P3GIH\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[AssociationQ,\n\t\t\tFlatten[\n\t\t\t\t{\n\t\t\t\t\tHead @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\t\t\t\tMap[Function @ \
Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models @ #, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\
\t]\n\t,\n\tFalse\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-A2TH7C\"\n]\n\
\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Catalog`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\
\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\
\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\
\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-7VIZ3G\"\n]\n\
\n\nEndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{{3.8953627731763268`*^9, 3.8953627845344877`*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"43d93919-360b-47ca-9010-e3013676e7b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "True", " ", "if", " ", "all", " ", "shocks", " ", "are", " ", "in", " ", 
    "context", " ", "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
   RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
    RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"And", "@@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "#", "===", 
               "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], ")"}], 
             "&"}], "/@", 
            RowBox[{"(", 
             RowBox[{"Context", "/@", 
              RowBox[{"Cases", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"models", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
                 "]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                  "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], "]"}]}],
              ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
       RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}], "\[IndentingNewLine]",
     ",", 
    RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.893001499960679*^9, {3.893002667440094*^9, 3.89300269939427*^9}, {
   3.893003083367228*^9, 3.893003083692607*^9}, {3.893003561913405*^9, 
   3.8930035855859337`*^9}, {3.89300366280791*^9, 3.893003690890905*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"21e8aec5-4a2d-4eec-a0e6-4a0295241e7d"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230610-CRNM7A\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230610-CRNM7A"],
  Editable->False]], "Print",
 CellChangeTimes->{3.895362784573164*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"f3f54c32-1971-46c1-8037-7e7c85979d9a"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.8953627845746927`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"af50a78b-92b4-47cc-a1a4-c75a03777b60"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\t\
Map[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\
Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\
\"]&,\n\t\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\
Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-CRNM7A\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[Apply[And, 
         Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
          Map[Context, 
           Cases[
            FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["stateVars"], 
            PatternTest[
              Pattern[Catalog`var, 
               Blank[Symbol]], MatchQ[
               SymbolName[#], "eps"]& ][
              BlankSequence[]][
              BlankSequence[]] :> Catalog`var, Infinity]]]]& , 
        Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230610-OQB689\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-HTF3BH\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20230610-BN4CMJ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-WT7OAT\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-C1FMQ2\"\n]\n\n\nVerificationTest[\n\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"]\n\t,\n\
\t{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-UQSRTE\"\n]\n\n\nVerificationTest[\n\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-9P3GIH\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[AssociationQ,\n\t\t\tFlatten[\n\t\t\t\t{\n\t\t\t\t\tHead @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\t\t\t\tMap[Function @ \
Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models @ #, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\
\t]\n\t,\n\tFalse\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-A2TH7C\"\n]\n\
\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Catalog`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\
\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\
\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\
\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-7VIZ3G\"\n]\n\
\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\
\"]&,\n\t\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\
Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-CRNM7A\"\n]\n\n\nEndTestSection[]\n\
"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{{3.895362773180265*^9, 3.895362784580428*^9}},
 CellLabel->"Out[19]=",ExpressionUUID->"b44bd278-a98d-4d84-88ed-90551bb83e1c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "True", " ", "if", "  ", "all", " ", "parameters", " ", "are", " ", "in", 
    " ", "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
    RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<parameters\>\"", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
               ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"models", "[", "#", "]"}], "[", 
                  "\"\<parameters\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{"var_Symbol", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
              ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
    RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
               ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"models", "[", "#", "]"}], "[", "\"\<stateVars\>\"",
                   "]"}], ",", 
                 RowBox[{
                  RowBox[{"var_Symbol", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
              ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{
  3.893001501399847*^9, {3.893002703969759*^9, 3.893002740019191*^9}, {
   3.893003056880762*^9, 3.893003109272599*^9}, {3.8930035658891783`*^9, 
   3.893003613143814*^9}, {3.8930036660094976`*^9, 3.8930036677270737`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"67116dee-9a87-405d-93eb-27ea07c14940"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230610-19YY4G\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230610-19YY4G"],
  Editable->False]], "Print",
 CellChangeTimes->{3.895362784629179*^9},
 CellLabel->
  "During evaluation of \
In[20]:=",ExpressionUUID->"b52cfb46-3a55-4f6d-bc9b-bac57807db23"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.8953627846349*^9},
 CellLabel->
  "During evaluation of \
In[20]:=",ExpressionUUID->"ee5ca8ea-d574-4125-8fad-cbd72d39f3ed"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\t\
Map[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"],\n\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t\
]", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\tMap[Context,\
\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"],\n\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t\
]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-19YY4G\"\n]\n\n",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.002, "AbsoluteTiming" -> 0.002, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[Apply[And, 
         Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
          Map[Context, 
           Cases[
            FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["parameters"], 
            PatternTest[
              Pattern[Catalog`var, 
               Blank[Symbol]], MemberQ[
              FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
               SymbolName[#]]& ] :> Catalog`var, Infinity]]]]& , 
        Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230610-OQB689\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-HTF3BH\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20230610-BN4CMJ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-WT7OAT\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-C1FMQ2\"\n]\n\n\nVerificationTest[\n\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"]\n\t,\n\
\t{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-UQSRTE\"\n]\n\n\nVerificationTest[\n\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-9P3GIH\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[AssociationQ,\n\t\t\tFlatten[\n\t\t\t\t{\n\t\t\t\t\tHead @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\t\t\t\tMap[Function @ \
Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models @ #, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\
\t]\n\t,\n\tFalse\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-A2TH7C\"\n]\n\
\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Catalog`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\
\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\
\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\
\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-7VIZ3G\"\n]\n\
\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\
\"]&,\n\t\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\
Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-CRNM7A\"\n]\n\n\nVerificationTest[\n\
\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\t\
Map[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"],\n\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t\
]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-19YY4G\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{{3.895362773187106*^9, 3.8953627846522007`*^9}},
 CellLabel->"Out[20]=",ExpressionUUID->"b4c2d1a3-add4-4a05-a3bb-e6202e227fc1"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230610-QA6G8W\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230610-QA6G8W"],
  Editable->False]], "Print",
 CellChangeTimes->{3.89536278468217*^9},
 CellLabel->
  "During evaluation of \
In[20]:=",ExpressionUUID->"d51d670d-b55e-4ed2-892b-a31dfaac1343"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.895362784693063*^9},
 CellLabel->
  "During evaluation of \
In[20]:=",ExpressionUUID->"ce56aad8-fcd1-4be2-9943-aae467dcbec2"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\t\
Map[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t\
]", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\tMap[Context,\
\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t\
]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-QA6G8W\"\n]\n\n",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[Apply[And, 
         Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
          Map[Context, 
           Cases[
            FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["stateVars"], 
            PatternTest[
              Pattern[Catalog`var, 
               Blank[Symbol]], MemberQ[
              FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
               SymbolName[#]]& ] :> Catalog`var, Infinity]]]]& , 
        Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230610-OQB689\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-HTF3BH\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20230610-BN4CMJ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-WT7OAT\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-C1FMQ2\"\n]\n\n\nVerificationTest[\n\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"]\n\t,\n\
\t{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-UQSRTE\"\n]\n\n\nVerificationTest[\n\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-9P3GIH\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[AssociationQ,\n\t\t\tFlatten[\n\t\t\t\t{\n\t\t\t\t\tHead @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\t\t\t\tMap[Function @ \
Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models @ #, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\
\t]\n\t,\n\tFalse\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-A2TH7C\"\n]\n\
\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Catalog`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\
\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\
\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\
\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-7VIZ3G\"\n]\n\
\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\
\"]&,\n\t\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\
Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-CRNM7A\"\n]\n\n\nVerificationTest[\n\
\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\t\
Map[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"],\n\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t\
]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-19YY4G\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\tMap[Context,\
\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t\
]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-QA6G8W\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{{3.895362773187106*^9, 3.8953627847063017`*^9}},
 CellLabel->"Out[21]=",ExpressionUUID->"071f4179-a944-4bf6-b5b6-f5b4aef67e35"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "True", " ", "if", " ", "state", " ", "variables", " ", "do", " ", "not", 
    " ", "have", " ", "any", " ", "endogenous", " ", "variables"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
   RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
    RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"MatchQ", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", "#"}], "]"}], "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"models", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
             "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"var_Symbol", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                   RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
           "]"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}], ")"}]}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.89300111387222*^9, 3.8930011727459707`*^9}, {
   3.893001247830225*^9, 3.893001299678648*^9}, {3.893001353751255*^9, 
   3.8930015072417727`*^9}, {3.893002707727394*^9, 3.893002708411419*^9}, {
   3.893002748062245*^9, 3.893002826831513*^9}, 3.89300297523416*^9, {
   3.893003086535989*^9, 3.893003086763905*^9}, {3.893003573506647*^9, 
   3.893003597674356*^9}, {3.8930036740071383`*^9, 3.893003681466465*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"eeb0f7ac-c9ae-4068-9a86-aa0d4212e5fe"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230610-Z5QV8I\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230610-Z5QV8I"],
  Editable->False]], "Print",
 CellChangeTimes->{3.895362784796941*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"469cf111-c8d6-4393-b5b8-4ec9802e13ac"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.895362784813345*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"f031d266-b441-4393-a75d-31276930898f"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[MatchQ[{}, #]&,\n\t\t\tMap[\n\t\t\t\tFunction[\n\t\t\t\
\t\tCases[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
Catalog`var_Symbol,\n\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\tMemberQ[\n\t\
\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
][__],\n\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\n\t\t\
\t\t\t]\n\t\t\t\t],\n\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t]\n\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[MatchQ[{}, #]&,\n\t\t\tMap[\n\t\t\
\t\tFunction[\n\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
Catalog`var_Symbol,\n\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\tMemberQ[\n\t\
\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
][__],\n\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\n\t\t\
\t\t\t]\n\t\t\t\t],\n\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-Z5QV8I\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.001, "AbsoluteTiming" -> 0.001, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[MatchQ[{}, #]& , 
        Map[Cases[
          FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["stateVars"], 
          PatternTest[
            Pattern[Catalog`var, 
             Blank[Symbol]], MemberQ[
             Map[
             StringDrop[#, -2]& , 
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars], 
             
             SymbolName[#]]& ][
            BlankSequence[]] :> Catalog`var, Infinity]& , 
         Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230610-OQB689\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-HTF3BH\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20230610-BN4CMJ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-WT7OAT\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-C1FMQ2\"\n]\n\n\nVerificationTest[\n\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"]\n\t,\n\
\t{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-UQSRTE\"\n]\n\n\nVerificationTest[\n\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230610-9P3GIH\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[AssociationQ,\n\t\t\tFlatten[\n\t\t\t\t{\n\t\t\t\t\tHead @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\t\t\t\tMap[Function @ \
Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models @ #, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\
\t]\n\t,\n\tFalse\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-A2TH7C\"\n]\n\
\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Catalog`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\
\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\
\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\
\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-7VIZ3G\"\n]\n\
\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\
\"]&,\n\t\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\
Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-CRNM7A\"\n]\n\n\nVerificationTest[\n\
\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\t\
Map[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"],\n\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t\
]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-19YY4G\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\tMap[Context,\
\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t\
]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-QA6G8W\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[MatchQ[{}, #]&,\n\t\t\tMap[\n\t\t\t\t\
Function[\n\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
Catalog`var_Symbol,\n\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\tMemberQ[\n\t\
\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
][__],\n\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\n\t\t\
\t\t\t]\n\t\t\t\t],\n\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230610-Z5QV8I\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{{3.895362773192423*^9, 3.89536278481857*^9}},
 CellLabel->"Out[22]=",ExpressionUUID->"a95b0f8f-6b12-42a8-9d32-b6fc54a35863"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"End", "[", "]"}]], "Input",
 CellChangeTimes->{{3.890680295645965*^9, 3.89068029650622*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"1e489da7-03ac-4c09-a3b0-3f18678c417b"],

Cell[BoxData["\<\"Catalog`\"\>"], "Output",
 CellChangeTimes->{{3.895362773198694*^9, 3.895362784843158*^9}},
 CellLabel->"Out[23]=",ExpressionUUID->"51731e53-cfcb-4640-9d62-94b4b18e747b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"add", " ", 
   RowBox[{"Begin", "[", "\"\<Context`\>\"", "]"}], " ", "and", " ", 
   RowBox[{"End", "[", "]"}], " ", "to", " ", "wlt", " ", "file"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.890686194230386*^9, 3.890686228283702*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"d681ce4c-fe5c-46cc-a106-c3fb97c91dc9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"helper", " ", "functions"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"countLines", "[", "file_String", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"readStream", "=", 
        RowBox[{"OpenRead", "[", "file", "]"}]}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"n", "=", "1"}], ",", "\[IndentingNewLine]", "temp"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"While", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"temp", "=!=", "EndOfFile"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"temp", "=", 
          RowBox[{"ReadLine", "[", "readStream", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"n", "=", 
          RowBox[{"n", "+", "1"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Close", "/@", 
       RowBox[{"{", "readStream", "}"}]}], ";", "\[IndentingNewLine]", 
      "n"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.890681841946844*^9, 3.890681899849094*^9}, {
  3.890682055663522*^9, 3.890682084827585*^9}, {3.890683635625399*^9, 
  3.890683720295089*^9}, {3.890685425949465*^9, 3.890685434516119*^9}, {
  3.890686231117095*^9, 3.890686238212121*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"8480e291-f089-46a8-93b3-cdc5392f18f2"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "replaceNthRecord", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"replaceNthRecord", "[", 
   RowBox[{"file_String", ",", "n_Integer", ",", "replaceWith_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"readStream", "=", 
       RowBox[{"OpenRead", "[", "file", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"writeStream", "=", 
       RowBox[{"OpenWrite", "[", 
        RowBox[{"file", "<>", "\"\<temp\>\""}], "]"}]}], ",", 
      "\[IndentingNewLine]", "temp"}], "\[IndentingNewLine]", "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"WriteLine", "[", 
        RowBox[{"writeStream", ",", 
         RowBox[{"ReadLine", "[", "readStream", "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"n", "-", "1"}], "}"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"WriteLine", "[", 
      RowBox[{"writeStream", ",", 
       RowBox[{
        RowBox[{"ReadLine", "[", "readStream", "]"}], "<>", "\"\< \\r\\n\>\"",
         "<>", "replaceWith"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"temp", "=!=", "EndOfFile"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"temp", "=", 
         RowBox[{"ReadLine", "[", "readStream", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"UnsameQ", "[", 
           RowBox[{"temp", ",", "EndOfFile"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"WriteLine", "[", 
           RowBox[{"writeStream", ",", "temp"}], "]"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", 
     RowBox[{"Close", "/@", 
      RowBox[{"{", 
       RowBox[{"readStream", ",", "writeStream"}], "}"}]}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8906824011137114`*^9, 3.890682405708049*^9}, {
   3.890683066049664*^9, 3.8906830825042677`*^9}, {3.89068319056032*^9, 
   3.890683191547068*^9}, {3.89068338518532*^9, 3.890683430044886*^9}, {
   3.890683477495555*^9, 3.89068350860789*^9}, {3.890683563263863*^9, 
   3.890683572999384*^9}, {3.8906837588959513`*^9, 3.890683769652152*^9}, 
   3.890683975431652*^9, 3.890684184728485*^9, {3.890684538464937*^9, 
   3.890684546403357*^9}, 3.8906847013731937`*^9, 3.890684736359234*^9, {
   3.890684917937912*^9, 3.890684918964259*^9}, {3.890685003978653*^9, 
   3.8906850058353167`*^9}, {3.890685081266893*^9, 3.890685086440845*^9}, {
   3.890685162742771*^9, 3.890685164959052*^9}, {3.890685207547077*^9, 
   3.890685210133041*^9}, {3.890685379823967*^9, 3.890685396833392*^9}, {
   3.89068547363831*^9, 3.890685483195992*^9}, {3.8906856724322433`*^9, 
   3.890685672699678*^9}, {3.890685793209527*^9, 3.890685826416944*^9}, 
   3.8906858923977957`*^9, {3.890685924003189*^9, 3.890685959055036*^9}, {
   3.890686016304421*^9, 3.890686073140353*^9}, {3.890686249638393*^9, 
   3.8906862512145*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"c6d94536-d712-4817-8c56-b5a9e698596b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"insert", " ", "into", " ", "wlt", " ", "file"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"replaceNthRecord", "[", 
    RowBox[{
    "testFileName", ",", "1", ",", "\"\<Begin[\\\"Catalog`\\\"]\>\""}], "]"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CopyFile", "[", 
     RowBox[{
      RowBox[{"testFileName", "<>", "\"\<temp\>\""}], ",", "testFileName", 
      ",", 
      RowBox[{"OverwriteTarget", "->", "True"}]}], "]"}], ";"}], "\n", 
   RowBox[{"DeleteFile", "[", 
    RowBox[{"testFileName", "<>", "\"\<temp\>\""}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"numLines", "=", 
    RowBox[{"countLines", "[", "testFileName", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"replaceNthRecord", "[", 
    RowBox[{"testFileName", ",", 
     RowBox[{"numLines", "-", "3"}], ",", " ", "\"\<End[]\>\""}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CopyFile", "[", 
     RowBox[{
      RowBox[{"testFileName", "<>", "\"\<temp\>\""}], ",", "testFileName", 
      ",", 
      RowBox[{"OverwriteTarget", "->", "True"}]}], "]"}], ";"}], "\n", 
   RowBox[{"DeleteFile", "[", 
    RowBox[{"testFileName", "<>", "\"\<temp\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.890684439578331*^9, {3.8906861781312037`*^9, 3.890686181646003*^9}, {
   3.890686261099564*^9, 3.8906862940387907`*^9}, 3.891156970368805*^9, 
   3.891216542664113*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"9e83fb3a-481f-4cb8-b330-c26292abdf5f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlttemp\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.895362773212719*^9, 3.89536278490219*^9}},
 CellLabel->"Out[28]=",ExpressionUUID->"30c41965-565f-4cf8-ae28-7c44739122c3"],

Cell[BoxData["267"], "Output",
 CellChangeTimes->{{3.895362773212719*^9, 3.8953627849092007`*^9}},
 CellLabel->"Out[31]=",ExpressionUUID->"674f7df4-4697-468b-8ee9-0f031c1169c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlttemp\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.895362773212719*^9, 3.89536278491857*^9}},
 CellLabel->"Out[32]=",ExpressionUUID->"c09591b6-6700-4841-9c1a-b9b2f47faf3a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tr", "=", 
  RowBox[{"TestReport", "[", "testFileName", "]"}]}]], "Input",
 CellLabel->"In[35]:=",ExpressionUUID->"e077b813-cdd0-4bd1-8dfd-78f30a4f8df7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: Catalog.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["13", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: Catalog.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["13", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["13", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Failed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox[
                 "\"Failed with wrong results: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox[
                 "\"Failed with messages: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Failed with errors: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0.018248`", "\"s\"", "seconds", "\"Seconds\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}], 
               "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: Catalog.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     249783349622661243 -> 
      TestResultObject[<|
        "TestKey" -> 249783349622661243, "TestID" -> 
         "Catalog_20230610-OQB689", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[Get["FernandoDuarte`LongRunRisk`Model`Catalog`"]; Null], 
         "ExpectedOutput" -> HoldForm[Null], "ActualOutput" -> HoldForm[Null],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8953627849633393`*^9, "AbsoluteTimeUsed" -> 
         0.012076`4.232438102183054, "CPUTimeUsed" -> 0.011941000000000201`, 
         "MemoryUsed" -> -169184|>], 2007547390434635391 -> 
      TestResultObject[<|
        "TestKey" -> 2007547390434635391, "TestID" -> 
         "Catalog_20230610-HTF3BH", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           MemberQ[$ContextPath, 
            "FernandoDuarte`LongRunRisk`Model`Catalog`"]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.895362784977477*^9, "AbsoluteTimeUsed" -> 
         0.000032`1.6556649761518993, "CPUTimeUsed" -> 0.000032000000000032, 
         "MemoryUsed" -> 3296|>], 4876096927021919936 -> 
      TestResultObject[<|
        "TestKey" -> 4876096927021919936, "TestID" -> 
         "Catalog_20230610-BN4CMJ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, 
            Map[StringQ, 
             Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.895362784977693*^9, "AbsoluteTimeUsed" -> 
         0.000026`1.5654883458028115, "CPUTimeUsed" -> 
         0.000026999999999777202`, "MemoryUsed" -> 2856|>], 
      390632354450251920 -> 
      TestResultObject[<|
        "TestKey" -> 390632354450251920, "TestID" -> 
         "Catalog_20230610-WT7OAT", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, 
            Map[StringQ, 
             Flatten[
              Map[{
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["name"], 
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                "shortname"], 
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["bibRef"], 
                
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["desc"]}& , 
               Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8953627849779053`*^9, "AbsoluteTimeUsed" -> 
         0.000061`1.935844832842761, "CPUTimeUsed" -> 0.00006199999999978445, 
         "MemoryUsed" -> 2856|>], 2661900958057965824 -> 
      TestResultObject[<|
        "TestKey" -> 2661900958057965824, "TestID" -> 
         "Catalog_20230610-C1FMQ2", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, 
            Map[NumberQ, 
             Flatten[
              Map[ReplaceRepeated[
                Part[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                 "parameters"], 
                 Span[1, All], 2], 
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                "parameters"]]& , 
               Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.895362784978135*^9, "AbsoluteTimeUsed" -> 
         0.002498`3.5481074318701107, "CPUTimeUsed" -> 0.0024980000000001112`,
          "MemoryUsed" -> 176256|>], 8141817888168856157 -> 
      TestResultObject[<|
        "TestKey" -> 8141817888168856157, "TestID" -> 
         "Catalog_20230610-UQSRTE", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           FernandoDuarte`LongRunRisk`Model`Catalog`models["BY"][
           "stateVars"]], "ExpectedOutput" -> HoldForm[{
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x[
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx[
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]}], 
         "ActualOutput" -> HoldForm[{
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x[
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx[
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8953627849809713`*^9, "AbsoluteTimeUsed" -> 
         0.000026`1.5654883458028126, "CPUTimeUsed" -> 
         0.000026000000000081513`, "MemoryUsed" -> 2816|>], 
      569471102416415519 -> 
      TestResultObject[<|
        "TestKey" -> 569471102416415519, "TestID" -> 
         "Catalog_20230610-9P3GIH", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, 
            Map[MemberQ[
              Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]& , {
             "BY", "BKY"}]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 3.8953627849811883`*^9, 
         "AbsoluteTimeUsed" -> 0.000027`1.581878761990981, "CPUTimeUsed" -> 
         0.00002700000000022129, "MemoryUsed" -> 3120|>], 5901068552951724076 -> 
      TestResultObject[<|
        "TestKey" -> 5901068552951724076, "TestID" -> 
         "Catalog_20230610-A2TH7C", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, 
            Map[AssociationQ, 
             Flatten[{
               Head[FernandoDuarte`LongRunRisk`Model`Catalog`models], 
               Map[Head[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#]]& , 
                Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]}]]]], 
         "ExpectedOutput" -> HoldForm[False], "ActualOutput" -> 
         HoldForm[False], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.8953627849813943`*^9, 
         "AbsoluteTimeUsed" -> 0.000034`1.6819939148742489, "CPUTimeUsed" -> 
         0.00003500000000045134, "MemoryUsed" -> 2864|>], 8880105563885270873 -> 
      TestResultObject[<|
        "TestKey" -> 8880105563885270873, "TestID" -> 
         "Catalog_20230610-7VIZ3G", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, 
            Map[Apply[And, 
              
              Map[# === 
               "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                 "stateVars"], PatternTest[
                   Pattern[Catalog`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                    SymbolName[#]]& ][
                   BlankSequence[]] :> Catalog`var, Infinity]]]]& , 
             Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.895362784981632*^9, "AbsoluteTimeUsed" -> 
         0.000585`2.917670863914174, "CPUTimeUsed" -> 0.0005849999999996136, 
         "MemoryUsed" -> 4728|>], 2168697342322078053 -> 
      TestResultObject[<|
        "TestKey" -> 2168697342322078053, "TestID" -> 
         "Catalog_20230610-CRNM7A", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, 
            Map[Apply[And, 
              Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                 "stateVars"], PatternTest[
                   Pattern[Catalog`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                   BlankSequence[]][
                   BlankSequence[]] :> Catalog`var, Infinity]]]]& , 
             Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8953627849824*^9, "AbsoluteTimeUsed" -> 
         0.000098`2.1417410735244884, "CPUTimeUsed" -> 0.00009800000000037556,
          "MemoryUsed" -> 3072|>], 8324662238032061468 -> 
      TestResultObject[<|
        "TestKey" -> 8324662238032061468, "TestID" -> 
         "Catalog_20230610-19YY4G", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, 
            Map[Apply[And, 
              Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                 "parameters"], PatternTest[
                   Pattern[Catalog`var, 
                    Blank[Symbol]], MemberQ[
                   FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Catalog`var, Infinity]]]]& , 
             Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.895362784982673*^9, "AbsoluteTimeUsed" -> 
         0.001499`3.3263166306802736, "CPUTimeUsed" -> 0.001498999999999917, 
         "MemoryUsed" -> 2936|>], 8526703447638016442 -> 
      TestResultObject[<|
        "TestKey" -> 8526703447638016442, "TestID" -> 
         "Catalog_20230610-QA6G8W", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, 
            Map[Apply[And, 
              Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                 "stateVars"], PatternTest[
                   Pattern[Catalog`var, 
                    Blank[Symbol]], MemberQ[
                   FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Catalog`var, Infinity]]]]& , 
             Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8953627849843473`*^9, "AbsoluteTimeUsed" -> 
         0.000212`2.4768508587607454, "CPUTimeUsed" -> 
         0.00021099999999973917`, "MemoryUsed" -> 2936|>], 
      8502436750836820994 -> 
      TestResultObject[<|
        "TestKey" -> 8502436750836820994, "TestID" -> 
         "Catalog_20230610-Z5QV8I", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, 
            Map[MatchQ[{}, #]& , 
             Map[Cases[
               FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
               "stateVars"], PatternTest[
                 Pattern[Catalog`var, 
                  Blank[Symbol]], MemberQ[
                  Map[
                  StringDrop[#, -2]& , 
                   FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                  SymbolName[#]]& ][
                 BlankSequence[]] :> Catalog`var, Infinity]& , 
              Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.895362784984725*^9, "AbsoluteTimeUsed" -> 
         0.001074`3.181519279195531, "CPUTimeUsed" -> 0.0010729999999998796`, 
         "MemoryUsed" -> 2952|>]|>, 
    "TestsSucceededKeys" -> {249783349622661243, 2007547390434635391, 
     4876096927021919936, 390632354450251920, 2661900958057965824, 
     8141817888168856157, 569471102416415519, 5901068552951724076, 
     8880105563885270873, 2168697342322078053, 8324662238032061468, 
     8526703447638016442, 8502436750836820994}, 
    "TestsFailedWrongResultsKeys" -> {}, "TestsFailedWithMessagesKeys" -> {}, 
    "TestsFailedWithErrorsKeys" -> {}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.895362773471382*^9, 3.8953627851655617`*^9}},
 CellLabel->"Out[35]=",ExpressionUUID->"9c2e8980-6391-44e7-b785-11d01d69432f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interactive Tests", "Subsection",
 CellChangeTimes->{{3.889905622471089*^9, 3.889905629759961*^9}, {
  3.889972063478182*^9, 
  3.889972065236586*^9}},ExpressionUUID->"2c4a83cf-8af5-4d19-89ae-\
a864a258310f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"packageFileName", "=", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DirectoryName", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "2"}], "]"}], ",", 
     "\"\<Kernel\>\"", ",", "\"\<Model\>\"", ",", 
     RowBox[{
      RowBox[{"FileBaseName", "[", 
       RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", "\"\<.wl\>\""}]}],
     "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", 
  RowBox[{
   RowBox[{"\"\<FernandoDuarte`LongRunRisk`Model`\>\"", "<>", 
    RowBox[{"FileBaseName", "[", 
     RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", "\"\<`\>\""}], ",", 
   "packageFileName"}], "]"}]}], "Input",
 CellChangeTimes->{{3.889968360919714*^9, 3.889968361169221*^9}, {
   3.889998753242611*^9, 3.8899987613556004`*^9}, 3.890825576987958*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"f275bdc7-d1c5-4b14-9c2f-42b3fa65a747"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Kernel/Model/Catalog.wl\"\>"], "Output",
 CellChangeTimes->{3.8953627362863293`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"2577268e-8e81-4d6c-a9a6-12aab0b257ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Keys", " ", "are", " ", "strings"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{"StringQ", "/@", 
     RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{
  3.89000889839254*^9, {3.890016339728188*^9, 3.890016342139681*^9}, {
   3.893004161637231*^9, 3.893004161876924*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"78177850-499e-456b-b442-fad780dafdf0"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.895362736440661*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"a5927606-c550-461c-bd27-a334950fe1ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"string", " ", "fields"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{"StringQ", "/@", 
     RowBox[{"Flatten", "@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"models", "[", "#", "]"}], "[", "\"\<name\>\"", "]"}], 
           ",", 
           RowBox[{
            RowBox[{"models", "[", "#", "]"}], "[", "\"\<shortname\>\"", 
            "]"}], ",", 
           RowBox[{
            RowBox[{"models", "[", "#", "]"}], "[", "\"\<bibRef\>\"", "]"}], 
           ",", 
           RowBox[{
            RowBox[{"models", "[", "#", "]"}], "[", "\"\<desc\>\"", "]"}]}], 
          "}"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}]}], ")"}]}]}]], "Input",\

 CellChangeTimes->{{3.890008770382118*^9, 3.890008858894733*^9}, {
  3.890016345133547*^9, 3.8900163569166937`*^9}, {3.893003226448749*^9, 
  3.8930032321343946`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"a17059c2-5416-45b1-b84e-0c2f842f7fb5"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.895362736443432*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"becc95b8-bd59-45ee-a5c4-dfe8176e7b75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"parameters", " ", "evaluate", " ", "to", " ", "numbers"}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{"NumberQ", "/@", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"models", "[", "#", "]"}], "[", "\"\<parameters\>\"", 
            "]"}], "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "2"}], "]"}], "]"}], "//.", 
          RowBox[{
           RowBox[{"models", "[", "#", "]"}], "[", "\"\<parameters\>\"", 
           "]"}]}], ")"}], "&"}], "/@", 
       RowBox[{"Keys", "[", "models", "]"}]}], "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.893002442739602*^9, 3.8930024527246227`*^9}, {
  3.893003235556836*^9, 3.893003243137875*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"eac6cf31-dd90-40a1-b538-ae578852c33b"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.895362736447588*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"1366566f-70b8-44b7-b5b1-57bb622d0660"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"can", " ", "find", " ", "some", " ", "models"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"Keys", "[", "models", "]"}], ",", "#"}], "]"}], "&"}], "/@", 
     
     RowBox[{"{", 
      RowBox[{"\"\<BY\>\"", ",", "\"\<BKY\>\""}], "}"}]}], ")"}]}]}]], "Input",\

 CellChangeTimes->{{3.8900087062162313`*^9, 3.890008740193614*^9}, {
  3.89001637048425*^9, 3.890016372993977*^9}, {3.893003256321348*^9, 
  3.893003261862228*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"78983d07-8f42-43d9-a50f-d26a03b2ee5c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.895362736464415*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"29326ae3-3926-4663-9c61-9334a3fdeced"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"models", " ", "is", " ", "an", " ", "association"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"AllTrue", "[", 
    RowBox[{"models", ",", "AssociationQ"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "each", " ", "model", " ", "inside", " ", "models", " ", "is", " ", "an", 
     " ", "association"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"AllTrue", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"models", "[", "#", "]"}], "&"}], "/@", 
      RowBox[{"Keys", "[", "models", "]"}]}], ",", "AssociationQ"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8900086430073547`*^9, 3.890008684982678*^9}, {
  3.890010177349143*^9, 3.890010179091837*^9}, {3.8900163791247263`*^9, 
  3.890016449580503*^9}, {3.893003265285705*^9, 3.893003296133358*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"33533fdf-b808-460b-a76c-9a554476db8f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8953627364694567`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"24bbf1a5-0858-4676-8ad1-82865e9ddb5a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.895362736470488*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"354677aa-b215-4bbd-9ff0-f2abc44604a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "exogenous", " ", "variables", " ", "are", " ", "in", " ", 
    "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"And", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
            "#", "===", 
             "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}]\
, ")"}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"Context", "/@", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"models", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
               "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"var_Symbol", "?", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                  ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}],
              "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.893001201934902*^9, 3.893001214021667*^9}, {
   3.893001245798745*^9, 3.8930012743606873`*^9}, {3.893001352341578*^9, 
   3.893001386197197*^9}, {3.893001448430169*^9, 3.893001448726687*^9}, 
   3.8930026482885447`*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"0ecadbe4-cf71-476b-8c76-ee242fab4284"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8953627364807253`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"c9b9803d-66ff-4a2f-9cdf-19140b4ceafd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "shocks", " ", "are", " ", "in", " ", "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"And", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
            "#", "===", "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], 
            ")"}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"Context", "/@", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"models", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
               "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"var_Symbol", "?", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
           ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{
  3.893001499960679*^9, {3.893002667440094*^9, 3.89300269939427*^9}, {
   3.893003083367228*^9, 3.893003083692607*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"5497c17b-b2dd-4e7c-a7af-d730dba6c11b"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8953627364868097`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"36a6b8fb-5390-42ef-8b37-456acad91c52"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "parameters", " ", "are", " ", "in", " ", "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "\"\<parameters\>\"", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"And", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
             "#", "===", 
              "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], ")"}],
             "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{"Context", "/@", 
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"models", "[", "#", "]"}], "[", "\"\<parameters\>\"", 
                "]"}], ",", 
               RowBox[{
                RowBox[{"var_Symbol", "?", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                  ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], ")"}]}],
           ")"}]}], ")"}], "&"}], "/@", 
      RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"And", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
             "#", "===", 
              "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], ")"}],
             "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{"Context", "/@", 
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"models", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
                "]"}], ",", 
               RowBox[{
                RowBox[{"var_Symbol", "?", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                  ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], ")"}]}],
           ")"}]}], ")"}], "&"}], "/@", 
      RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{
  3.893001501399847*^9, {3.893002703969759*^9, 3.893002740019191*^9}, {
   3.893003056880762*^9, 3.893003109272599*^9}, {3.893003787588058*^9, 
   3.893003788104986*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"602c7d97-d584-412d-b870-0ca50055aa97"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.895362736497738*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"290f577f-e1b8-4bd2-b473-f4d2b543db1b"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.895362736498933*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"30ba7c11-1f3e-4082-98f5-c37292adb32e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "state", " ", "variables", " ", "do", " ", "not", " ", "have", " ", "any", 
    " ", "endogenous", " ", "variables"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"MatchQ", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", "#"}], "]"}], "&"}], "/@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cases", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"models", "[", "#", "]"}], "[", "\"\<stateVars\>\"", "]"}],
           ",", 
          RowBox[{
           RowBox[{
            RowBox[{"var_Symbol", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                  "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                 RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
              ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
         "]"}], "&"}], "/@", 
       RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.89300111387222*^9, 3.8930011727459707`*^9}, {
   3.893001247830225*^9, 3.893001299678648*^9}, {3.893001353751255*^9, 
   3.8930015072417727`*^9}, {3.893002707727394*^9, 3.893002708411419*^9}, {
   3.893002748062245*^9, 3.893002826831513*^9}, 3.89300297523416*^9, {
   3.893003086535989*^9, 3.893003086763905*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"1a2dcded-7e53-422c-80f9-ab1140dea2c3"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8953627365033903`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"5dbe08ee-f894-4ae1-8b93-e052b82062bf"]
}, Open  ]]
}, Closed]]
},
WindowSize->{921, 890},
WindowMargins->{{226, Automatic}, {Automatic, 0}},
WindowStatusArea->"",
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.25 Inherited,
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (January 30, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9463f144-165a-4c11-9859-b1ba37118027"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 215, 4, 37, "Input",ExpressionUUID->"5936db62-753d-4c20-a941-1dfb10c21e69"],
Cell[776, 26, 1926, 41, 194, "Input",ExpressionUUID->"1f20a6f1-c8fe-4d25-91dc-21cad8616c89"],
Cell[CellGroupData[{
Cell[2727, 71, 255, 4, 67, "Subsection",ExpressionUUID->"bc721a90-5248-4709-baf0-508070e5c013"],
Cell[2985, 77, 341, 9, 37, "Input",ExpressionUUID->"61e9a1c2-4ad4-4fe4-8929-2a7bfa852efa"],
Cell[CellGroupData[{
Cell[3351, 90, 539, 10, 64, "Input",ExpressionUUID->"7373936c-ff06-42f3-99c4-9976b014d9be"],
Cell[3893, 102, 222, 2, 42, "Output",ExpressionUUID->"465950e4-3aaa-4c32-83be-f95811290682"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4152, 109, 219, 3, 37, "Input",ExpressionUUID->"56243fb4-4478-4214-a53b-c438a5bbcfe2"],
Cell[4374, 114, 189, 2, 42, "Output",ExpressionUUID->"d5ae0e0f-5cf6-41d7-80e0-d97db6c514b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4600, 121, 1799, 28, 90, "Input",ExpressionUUID->"9f314737-f9fe-4d9e-8551-523b0929d53e"],
Cell[CellGroupData[{
Cell[6424, 153, 367, 9, 29, "Print",ExpressionUUID->"11006c9d-d83b-4a95-8057-fcf8143c83c0"],
Cell[6794, 164, 264, 5, 29, "Print",ExpressionUUID->"2323f3e6-50fe-4ec9-9a35-c6b120db12fa"]
}, Open  ]],
Cell[7073, 172, 4832, 87, 69, "Output",ExpressionUUID->"76c60354-4171-4e77-9a10-34a2d6cd5cf1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11942, 264, 1250, 22, 90, "Input",ExpressionUUID->"30ea8f81-e3a5-4912-928a-3a488ce6e518"],
Cell[CellGroupData[{
Cell[13217, 290, 367, 9, 29, "Print",ExpressionUUID->"de687eb1-5dc2-449d-ac53-c15921cb4a89"],
Cell[13587, 301, 264, 5, 29, "Print",ExpressionUUID->"a85b636d-29e7-4d93-b799-16fd7ca8a12d"]
}, Open  ]],
Cell[13866, 309, 5044, 91, 69, "Output",ExpressionUUID->"d6e4dbb3-8704-4ec8-9af3-0265b45ffe23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18947, 405, 2171, 35, 116, "Input",ExpressionUUID->"f65e45e8-2582-4d00-8615-d27896add0d0"],
Cell[CellGroupData[{
Cell[21143, 444, 366, 9, 29, "Print",ExpressionUUID->"2623cfcb-9929-4e46-8bab-5f7202714eaf"],
Cell[21512, 455, 264, 5, 29, "Print",ExpressionUUID->"6253d324-975e-4ee4-92d4-b332d6a3d03e"]
}, Open  ]],
Cell[21791, 463, 5286, 97, 69, "Output",ExpressionUUID->"3411e180-1bdc-42e8-ad2d-784f904ec660"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27114, 565, 1544, 37, 220, "Input",ExpressionUUID->"5d749a31-d7a1-48d2-a85b-e58e3fb2c847"],
Cell[CellGroupData[{
Cell[28683, 606, 367, 9, 29, "Print",ExpressionUUID->"40079cd0-1fb8-461d-bd67-5c1c1b81f1c9"],
Cell[29053, 617, 264, 5, 29, "Print",ExpressionUUID->"0b15c745-afee-4b3f-b8ae-3570462a0f64"]
}, Open  ]],
Cell[29332, 625, 7098, 124, 69, "Output",ExpressionUUID->"313ad5f1-8f1c-4b81-8212-e3dba0ff95db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36467, 754, 2293, 44, 194, "Input",ExpressionUUID->"9a7acfd9-2870-4210-a7af-7c10ed2af5d1"],
Cell[CellGroupData[{
Cell[38785, 802, 367, 9, 29, "Print",ExpressionUUID->"a659ce97-f497-4b7c-9297-aaee13b692db"],
Cell[39155, 813, 264, 5, 29, "Print",ExpressionUUID->"9660b7bf-23f2-4f4a-9958-2e564e41d189"]
}, Open  ]],
Cell[39434, 821, 7226, 129, 69, "Output",ExpressionUUID->"89b8f138-c61f-45e6-a84e-a6a881951c28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46697, 955, 1091, 22, 116, "Input",ExpressionUUID->"3aa8b5cd-154c-4923-aed4-60a60049060a"],
Cell[CellGroupData[{
Cell[47813, 981, 369, 9, 29, "Print",ExpressionUUID->"a11aa893-63a3-423a-85e8-fa05baa41215"],
Cell[48185, 992, 264, 5, 29, "Print",ExpressionUUID->"54a6c087-b497-4c92-9fae-75315eb39eca"]
}, Open  ]],
Cell[48464, 1000, 7430, 128, 69, "Output",ExpressionUUID->"b9986693-b984-4d79-8302-d8b673d7c61e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55931, 1133, 1281, 27, 116, "Input",ExpressionUUID->"4ebbc95c-22ea-48d7-bdec-0d430d2b154f"],
Cell[CellGroupData[{
Cell[57237, 1164, 369, 9, 29, "Print",ExpressionUUID->"f58d65e4-d3d5-437e-aa67-79d325a93cb4"],
Cell[57609, 1175, 266, 5, 29, "Print",ExpressionUUID->"9b0d44b7-76db-4238-850a-68c3955f9c7a"]
}, Open  ]],
Cell[57890, 1183, 7049, 124, 69, "Output",ExpressionUUID->"f7ccfcb6-3dab-430a-98e3-e15cecfd750d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64976, 1312, 1601, 33, 168, "Input",ExpressionUUID->"0cc2f06b-6e8f-4978-97cc-c47753fea3f2"],
Cell[CellGroupData[{
Cell[66602, 1349, 367, 9, 29, "Print",ExpressionUUID->"8fee9ee1-09d2-4b46-9f81-a4b8810487f0"],
Cell[66972, 1360, 264, 5, 29, "Print",ExpressionUUID->"71508de7-d5e8-484f-8ecb-33f69167a789"]
}, Open  ]],
Cell[67251, 1368, 8027, 137, 69, "Output",ExpressionUUID->"d028b09a-73fa-4638-b7c4-541f5b242eaa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75315, 1510, 2497, 59, 298, "Input",ExpressionUUID->"c37f51a1-837c-4f11-a194-78705f4642f7"],
Cell[CellGroupData[{
Cell[77837, 1573, 367, 9, 29, "Print",ExpressionUUID->"d1b808b8-0fbe-4824-a9f7-9a30d27db666"],
Cell[78207, 1584, 264, 5, 29, "Print",ExpressionUUID->"d63c6253-ad61-4416-b43e-2885b1ca3d37"]
}, Open  ]],
Cell[78486, 1592, 10634, 176, 69, "Output",ExpressionUUID->"43d93919-360b-47ca-9010-e3013676e7b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89157, 1773, 2117, 52, 272, "Input",ExpressionUUID->"21e8aec5-4a2d-4eec-a0e6-4a0295241e7d"],
Cell[CellGroupData[{
Cell[91299, 1829, 367, 9, 29, "Print",ExpressionUUID->"f3f54c32-1971-46c1-8037-7e7c85979d9a"],
Cell[91669, 1840, 266, 5, 29, "Print",ExpressionUUID->"af50a78b-92b4-47cc-a1a4-c75a03777b60"]
}, Open  ]],
Cell[91950, 1848, 10653, 176, 69, "Output",ExpressionUUID->"b44bd278-a98d-4d84-88ed-90551bb83e1c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102640, 2029, 3817, 93, 610, "Input",ExpressionUUID->"67116dee-9a87-405d-93eb-27ea07c14940"],
Cell[CellGroupData[{
Cell[106482, 2126, 367, 9, 29, "Print",ExpressionUUID->"b52cfb46-3a55-4f6d-bc9b-bac57807db23"],
Cell[106852, 2137, 262, 5, 29, "Print",ExpressionUUID->"ee5ca8ea-d574-4125-8fad-cbd72d39f3ed"]
}, Open  ]],
Cell[107129, 2145, 11524, 185, 69, "Output",ExpressionUUID->"b4c2d1a3-add4-4a05-a3bb-e6202e227fc1"],
Cell[CellGroupData[{
Cell[118678, 2334, 366, 9, 29, "Print",ExpressionUUID->"d51d670d-b55e-4ed2-892b-a31dfaac1343"],
Cell[119047, 2345, 264, 5, 29, "Print",ExpressionUUID->"ce56aad8-fcd1-4be2-9943-aae467dcbec2"]
}, Open  ]],
Cell[119326, 2353, 12290, 196, 69, "Output",ExpressionUUID->"071f4179-a944-4bf6-b5b6-f5b4aef67e35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131653, 2554, 2261, 53, 298, "Input",ExpressionUUID->"eeb0f7ac-c9ae-4068-9a86-aa0d4212e5fe"],
Cell[CellGroupData[{
Cell[133939, 2611, 367, 9, 29, "Print",ExpressionUUID->"469cf111-c8d6-4393-b5b8-4ec9802e13ac"],
Cell[134309, 2622, 264, 5, 29, "Print",ExpressionUUID->"f031d266-b441-4393-a75d-31276930898f"]
}, Open  ]],
Cell[134588, 2630, 13174, 212, 69, "Output",ExpressionUUID->"a95b0f8f-6b12-42a8-9d32-b6fc54a35863"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147799, 2847, 195, 3, 37, "Input",ExpressionUUID->"1e489da7-03ac-4c09-a3b0-3f18678c417b"],
Cell[147997, 2852, 188, 2, 42, "Output",ExpressionUUID->"51731e53-cfcb-4640-9d62-94b4b18e747b"]
}, Open  ]],
Cell[148200, 2857, 356, 7, 37, "Input",ExpressionUUID->"d681ce4c-fe5c-46cc-a106-c3fb97c91dc9"],
Cell[148559, 2866, 1502, 33, 402, "Input",ExpressionUUID->"8480e291-f089-46a8-93b3-cdc5392f18f2"],
Cell[150064, 2901, 3288, 67, 558, "Input",ExpressionUUID->"c6d94536-d712-4817-8c56-b5a9e698596b"],
Cell[CellGroupData[{
Cell[153377, 2972, 1534, 37, 246, "Input",ExpressionUUID->"9e83fb3a-481f-4cb8-b330-c26292abdf5f"],
Cell[154914, 3011, 408, 8, 121, "Output",ExpressionUUID->"30c41965-565f-4cf8-ae28-7c44739122c3"],
Cell[155325, 3021, 177, 2, 42, "Output",ExpressionUUID->"674f7df4-4697-468b-8ee9-0f031c1169c6"],
Cell[155505, 3025, 408, 8, 121, "Output",ExpressionUUID->"c09591b6-6700-4841-9c1a-b9b2f47faf3a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155950, 3038, 177, 3, 37, "Input",ExpressionUUID->"e077b813-cdd0-4bd1-8dfd-78f30a4f8df7"],
Cell[156130, 3043, 24750, 475, 76, "Output",ExpressionUUID->"9c2e8980-6391-44e7-b785-11d01d69432f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[180929, 3524, 214, 4, 67, "Subsection",ExpressionUUID->"2c4a83cf-8af5-4d19-89ae-a864a258310f"],
Cell[CellGroupData[{
Cell[181168, 3532, 930, 21, 142, "Input",ExpressionUUID->"f275bdc7-d1c5-4b14-9c2f-42b3fa65a747"],
Cell[182101, 3555, 246, 3, 69, "Output",ExpressionUUID->"2577268e-8e81-4d6c-a9a6-12aab0b257ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182384, 3563, 479, 12, 64, "Input",ExpressionUUID->"78177850-499e-456b-b442-fad780dafdf0"],
Cell[182866, 3577, 151, 2, 42, "Output",ExpressionUUID->"a5927606-c550-461c-bd27-a334950fe1ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183054, 3584, 1110, 30, 168, "Input",ExpressionUUID->"a17059c2-5416-45b1-b84e-0c2f842f7fb5"],
Cell[184167, 3616, 151, 2, 42, "Output",ExpressionUUID->"becc95b8-bd59-45ee-a5c4-dfe8176e7b75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184355, 3623, 949, 25, 142, "Input",ExpressionUUID->"eac6cf31-dd90-40a1-b538-ae578852c33b"],
Cell[185307, 3650, 152, 2, 42, "Output",ExpressionUUID->"1366566f-70b8-44b7-b5b1-57bb622d0660"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185496, 3657, 681, 19, 64, "Input",ExpressionUUID->"78983d07-8f42-43d9-a50f-d26a03b2ee5c"],
Cell[186180, 3678, 152, 2, 42, "Output",ExpressionUUID->"29326ae3-3926-4663-9c61-9334a3fdeced"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186369, 3685, 938, 22, 116, "Input",ExpressionUUID->"33533fdf-b808-460b-a76c-9a554476db8f"],
Cell[187310, 3709, 154, 2, 42, "Output",ExpressionUUID->"24bbf1a5-0858-4676-8ad1-82865e9ddb5a"],
Cell[187467, 3713, 152, 2, 42, "Output",ExpressionUUID->"354677aa-b215-4bbd-9ff0-f2abc44604a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187656, 3720, 1977, 51, 220, "Input",ExpressionUUID->"0ecadbe4-cf71-476b-8c76-ee242fab4284"],
Cell[189636, 3773, 154, 2, 42, "Output",ExpressionUUID->"c9b9803d-66ff-4a2f-9cdf-19140b4ceafd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189827, 3780, 1671, 44, 194, "Input",ExpressionUUID->"5497c17b-b2dd-4e7c-a7af-d730dba6c11b"],
Cell[191501, 3826, 154, 2, 42, "Output",ExpressionUUID->"36a6b8fb-5390-42ef-8b37-456acad91c52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191692, 3833, 3058, 81, 454, "Input",ExpressionUUID->"602c7d97-d584-412d-b870-0ca50055aa97"],
Cell[194753, 3916, 152, 2, 42, "Output",ExpressionUUID->"290f577f-e1b8-4bd2-b473-f4d2b543db1b"],
Cell[194908, 3920, 152, 2, 42, "Output",ExpressionUUID->"30ba7c11-1f3e-4082-98f5-c37292adb32e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195097, 3927, 1824, 45, 246, "Input",ExpressionUUID->"1a2dcded-7e53-422c-80f9-ab1140dea2c3"],
Cell[196924, 3974, 154, 2, 62, "Output",ExpressionUUID->"5dbe08ee-f894-4ae1-8b93-e052b82062bf"]
}, Open  ]]
}, Closed]]
}
]
*)

