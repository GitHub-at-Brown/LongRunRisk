(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    354959,       6782]
NotebookOptionsPosition[    295837,       5711]
NotebookOutlinePosition[    342198,       6566]
CellTagsIndexPosition[    342155,       6563]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"Quit", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.889964198656839*^9, 3.889964203363894*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"5936db62-753d-4c20-a941-1dfb10c21e69"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"testFileName", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DirectoryName", "[", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "1"}], "]"}], ",", 
      RowBox[{
       RowBox[{"FileBaseName", "[", 
        RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", 
       "\"\<.wlt\>\""}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pacletDir", "=", 
   RowBox[{"DirectoryName", "[", 
    RowBox[{"testFileName", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", "pacletDir", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testContextBase", "=", 
   RowBox[{"FileBaseName", "[", "testFileName", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$ContextPath", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"$ContextPath", ",", 
     RowBox[{"Except", "[", "\"\<PacletizedResourceFunctions`\>\"", "]"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8890661685133457`*^9, 3.889066220685074*^9}, {
   3.8890662555512333`*^9, 3.889066299901951*^9}, {3.889066581166473*^9, 
   3.8890665847967653`*^9}, {3.889066731765956*^9, 3.889066745674687*^9}, {
   3.889431410824514*^9, 3.88943144002302*^9}, 3.889502968269744*^9, {
   3.889998928469849*^9, 3.889998928670561*^9}, {3.890676553021196*^9, 
   3.890676564028514*^9}, 3.890676636594749*^9, {3.890679618620262*^9, 
   3.89067961902995*^9}, {3.8908254134370813`*^9, 3.890825413876319*^9}, {
   3.890825459205497*^9, 3.890825473041605*^9}, {3.890825503118348*^9, 
   3.8908255374530487`*^9}, {3.891021675325671*^9, 3.891021675545487*^9}, {
   3.8911588731924877`*^9, 3.891158877904397*^9}, {3.8911592499395514`*^9, 
   3.8911592502376633`*^9}, {3.891314843074428*^9, 3.8913148458084183`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"1f20a6f1-c8fe-4d25-91dc-21cad8616c89"],

Cell[CellGroupData[{

Cell["CI Tests", "Subsection",
 CellChangeTimes->{{3.8895791922306013`*^9, 3.889579196409403*^9}, {
  3.889905620469079*^9, 3.8899056207707977`*^9}, {3.889967624152501*^9, 
  3.889967626012704*^9}},ExpressionUUID->"bc721a90-5248-4709-baf0-\
508070e5c013"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FileNames", "[", "testFileName", "]"}], "===", 
     RowBox[{"{", "}"}]}], ",", "Nothing", ",", 
    RowBox[{"DeleteFile", "[", "testFileName", "]"}]}], "]"}], ";"}]], "Input",\

 CellLabel->"In[6]:=",ExpressionUUID->"61e9a1c2-4ad4-4fe4-8929-2a7bfa852efa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"confirm", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"testContext", "=", 
  RowBox[{
  "\"\<FernandoDuarte`LongRunRisk`Model`\>\"", "<>", "testContextBase", "<>", 
   "\"\<`\>\""}]}]}], "Input",
 CellChangeTimes->{{3.8906795325443907`*^9, 3.8906795357982817`*^9}, 
   3.890679566064293*^9, {3.8906796081672497`*^9, 3.8906796258061447`*^9}, {
   3.890679757679096*^9, 3.890679766260743*^9}, 3.890679874010334*^9, {
   3.905692545576881*^9, 3.905692546166066*^9}, {3.905694195915402*^9, 
   3.9056941964212008`*^9}, {3.905694240254697*^9, 3.9056942409718733`*^9}, {
   3.9056945436536617`*^9, 3.905694544159917*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"7373936c-ff06-42f3-99c4-9976b014d9be"],

Cell[BoxData["\<\"FernandoDuarte`LongRunRisk`Model`Catalog`\"\>"], "Output",
 CellChangeTimes->{
  3.901354999236985*^9, 3.9013551225229177`*^9, 3.905692486075487*^9, 
   3.905692553218803*^9, 3.905694206339732*^9, 3.9056942479933443`*^9, 
   3.90569455134057*^9, 3.905694711972639*^9, 3.905694897693749*^9, 
   3.9056949286255903`*^9, 3.9056950024582233`*^9, 3.905695487366413*^9, 
   3.9056958884986563`*^9, 3.905696100060217*^9, 3.905696131305608*^9, 
   3.905696181741126*^9, 3.905696231059092*^9, 3.905696321707634*^9, 
   3.905696642804727*^9, 3.905696696805214*^9, 3.9056967757262793`*^9, 
   3.905696864115067*^9, {3.9056969140372763`*^9, 3.905696930025062*^9}, 
   3.905696978652174*^9, 3.9056970111625433`*^9, 3.9056970832927647`*^9, 
   3.905697144300612*^9, 3.9056972018214073`*^9, 3.9056972467016087`*^9, 
   3.905697294616835*^9, 3.905697438761698*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"17f00b3a-69f0-423f-bb0b-ef619f39d59b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Begin", "[", "\"\<Model`Catalog`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.890680288696157*^9, 3.8906802887021513`*^9}, 
   3.905695867067636*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"56243fb4-4478-4214-a53b-c438a5bbcfe2"],

Cell[BoxData["\<\"Model`Catalog`\"\>"], "Output",
 CellChangeTimes->{
  3.901354999240387*^9, 3.901355122528211*^9, 3.905692486087434*^9, 
   3.9056925545252028`*^9, 3.905694206344027*^9, 3.905694248925016*^9, 
   3.905694551353153*^9, 3.905694711977027*^9, 3.9056948976991796`*^9, 
   3.905694928640602*^9, 3.905695002470558*^9, 3.905695487377182*^9, 
   3.905695888507465*^9, 3.905696100066073*^9, 3.9056961313195763`*^9, 
   3.905696181754037*^9, 3.90569623106322*^9, 3.905696321721567*^9, 
   3.905696642818338*^9, 3.905696696809638*^9, 3.9056967757313538`*^9, 
   3.9056968641198673`*^9, {3.905696914041597*^9, 3.9056969300446587`*^9}, 
   3.9056969786568413`*^9, 3.905697011176847*^9, 3.905697083297282*^9, 
   3.905697144305231*^9, 3.905697201826857*^9, 3.905697246705991*^9, 
   3.905697294628368*^9, 3.9056974387724037`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"818f463e-1eae-4357-b656-2e30de6a1bd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Needs", "[", "\"\<FernandoDuarte`LongRunRisk`Model`Catalog`\>\"", "]"}], 
    ";", "\[IndentingNewLine]", "True"}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.8899652151465197`*^9, 3.889965235350771*^9}, 
   3.8899652808817787`*^9, {3.889967731242805*^9, 3.8899677356636972`*^9}, {
   3.889967971867523*^9, 3.889967975146998*^9}, {3.889968339451161*^9, 
   3.88996834001075*^9}, 3.889968619774049*^9, {3.8899688826075077`*^9, 
   3.88996888992594*^9}, {3.88996899475625*^9, 3.8899690018858624`*^9}, {
   3.8899691256166267`*^9, 3.8899691257757883`*^9}, {3.889969207667478*^9, 
   3.8899692141700287`*^9}, {3.8899692798779783`*^9, 3.889969288274632*^9}, 
   3.889969387087708*^9, 3.889969585993528*^9, {3.8899702972149563`*^9, 
   3.889970314454108*^9}, {3.890603045806611*^9, 3.890603046578224*^9}, 
   3.890603139674321*^9, {3.890676572733183*^9, 3.890676585108572*^9}, {
   3.890679071059198*^9, 3.890679121055434*^9}, {3.89067917308251*^9, 
   3.890679177122958*^9}, 3.890679328121275*^9, {3.8906795122187853`*^9, 
   3.890679514391316*^9}, {3.890679606901452*^9, 3.8906796293121653`*^9}, {
   3.890679668768669*^9, 3.890679669902752*^9}, {3.8906797200186*^9, 
   3.890679786626452*^9}, {3.890679828108779*^9, 3.890679882954316*^9}, {
   3.891156663445282*^9, 3.891156670699563*^9}, {3.891216568237528*^9, 
   3.8912165691387577`*^9}, {3.891317362457469*^9, 3.891317362760808*^9}, {
   3.89185255696913*^9, 3.8918525572447157`*^9}, {3.893003809097685*^9, 
   3.893003815813273*^9}, 3.905692539465901*^9, {3.905697280034605*^9, 
   3.905697281022861*^9}, {3.905824807111383*^9, 
   3.905824807699587*^9}},ExpressionUUID->"9f314737-f9fe-4d9e-8551-\
523b0929d53e"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20231007-WMCGR2\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20231007-WMCGR2"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.905694252912942*^9, 3.905694551678968*^9, 3.9056947120317907`*^9, 
   3.905694897750497*^9, 3.905694928977639*^9, 3.905695002781437*^9, 
   3.9056954876891117`*^9, 3.905695889773327*^9, 3.905696100382071*^9, 
   3.9056961316436853`*^9, 3.9056961820722933`*^9, 3.9056962313859587`*^9, 
   3.905696322051838*^9, 3.905696643136611*^9, 3.905696697123005*^9, 
   3.905696776046659*^9, 3.9056968644364367`*^9, {3.90569691437322*^9, 
   3.905696930363181*^9}, 3.9056969789736967`*^9, 3.905697011496804*^9, 
   3.905697083609783*^9, 3.905697144618555*^9, 3.905697202144141*^9, 
   3.905697247024053*^9, 3.905697294940215*^9, 3.9056974390842*^9},
 CellLabel->
  "During evaluation of \
In[10]:=",ExpressionUUID->"373d0b3c-08c7-41c5-99c5-47f7ac564fa0"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{
  3.905694252912942*^9, 3.905694551678968*^9, 3.9056947120317907`*^9, 
   3.905694897750497*^9, 3.905694928977639*^9, 3.905695002781437*^9, 
   3.9056954876891117`*^9, 3.905695889773327*^9, 3.905696100382071*^9, 
   3.9056961316436853`*^9, 3.9056961820722933`*^9, 3.9056962313859587`*^9, 
   3.905696322051838*^9, 3.905696643136611*^9, 3.905696697123005*^9, 
   3.905696776046659*^9, 3.9056968644364367`*^9, {3.90569691437322*^9, 
   3.905696930363181*^9}, 3.9056969789736967`*^9, 3.905697011496804*^9, 
   3.905697083609783*^9, 3.905697144618555*^9, 3.905697202144141*^9, 
   3.905697247024053*^9, 3.905697294940215*^9, 3.905697439111957*^9},
 CellLabel->
  "During evaluation of \
In[10]:=",ExpressionUUID->"182365f1-84dd-464e-8c92-8d4e3a56ea75"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Get @ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tTrue", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tGet @ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\
\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-WMCGR2\"\n]\
\n\n", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.056, "AbsoluteTiming" -> 0.056, 
   "InputString" :> ToString[
     Unevaluated[Get["FernandoDuarte`LongRunRisk`Model`Catalog`"]; True], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Catalog_20231007-WMCGR2\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{
  3.905694551721203*^9, 3.9056947120556173`*^9, 3.905694897769738*^9, 
   3.905694929012323*^9, 3.905695002823801*^9, 3.9056954877324743`*^9, 
   3.905695889887887*^9, 3.905696100425179*^9, 3.905696131676339*^9, 
   3.905696182112892*^9, 3.905696231420794*^9, 3.905696322087009*^9, 
   3.9056966431767387`*^9, 3.905696697163336*^9, 3.905696776086687*^9, 
   3.9056968644772987`*^9, {3.905696914417049*^9, 3.9056969303971357`*^9}, 
   3.905696979008231*^9, 3.905697011529352*^9, 3.9056970836453943`*^9, 
   3.9056971446587143`*^9, 3.905697202185155*^9, 3.905697247057476*^9, 
   3.905697294976244*^9, 3.90569743912648*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"a3b2dbcf-fcb2-4758-95fc-46f550340464"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"MemberQ", "[", 
    RowBox[{
    "$ContextPath", ",", 
     "\"\<FernandoDuarte`LongRunRisk`Model`Catalog`\>\""}], "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{
  3.889901579125684*^9, {3.889965035911569*^9, 3.889965039550325*^9}, {
   3.889965296152458*^9, 3.889965305191854*^9}, 3.8899653858152437`*^9, 
   3.889967740469187*^9, {3.889968345370779*^9, 3.889968347169169*^9}, {
   3.889968526692542*^9, 3.8899685355316963`*^9}, {3.889968649261517*^9, 
   3.889968660343141*^9}, 3.889969395693264*^9, {3.88996958684683*^9, 
   3.8899695947482367`*^9}, {3.889970300225127*^9, 3.889970329366473*^9}, {
   3.890603050754869*^9, 3.8906030512673264`*^9}, 3.890603142316881*^9, 
   3.89067659639168*^9, {3.890679255090239*^9, 3.890679318737549*^9}, 
   3.890679634337233*^9, 3.890679895680545*^9, {3.891156682413542*^9, 
   3.8911566938989573`*^9}, 3.891216575158337*^9, {3.893003827318541*^9, 
   3.893003834977784*^9}, 3.9056925394669113`*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"30ea8f81-e3a5-4912-928a-3a488ce6e518"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20231007-9OYMAA\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20231007-9OYMAA"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.905694260162717*^9, 3.905694551773181*^9, 3.905694712101179*^9, 
   3.905694897816434*^9, 3.9056949290592613`*^9, 3.905695002871984*^9, 
   3.905695487779628*^9, 3.9056958902679653`*^9, 3.905696100474036*^9, 
   3.9056961317274446`*^9, 3.905696182158389*^9, 3.9056962314652777`*^9, 
   3.9056963221354847`*^9, 3.9056966432238693`*^9, 3.905696697210102*^9, 
   3.905696776141583*^9, 3.905696864528411*^9, {3.9056969144687138`*^9, 
   3.905696930444515*^9}, 3.905696979056509*^9, 3.905697011579028*^9, 
   3.905697083694252*^9, 3.9056971447056513`*^9, 3.905697202236267*^9, 
   3.905697247108284*^9, 3.905697295029592*^9, 3.9056974391730757`*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"5c8131a9-6678-4e60-80fe-b49284f93dd8"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{
  3.905694260162717*^9, 3.905694551773181*^9, 3.905694712101179*^9, 
   3.905694897816434*^9, 3.9056949290592613`*^9, 3.905695002871984*^9, 
   3.905695487779628*^9, 3.9056958902679653`*^9, 3.905696100474036*^9, 
   3.9056961317274446`*^9, 3.905696182158389*^9, 3.9056962314652777`*^9, 
   3.9056963221354847`*^9, 3.9056966432238693`*^9, 3.905696697210102*^9, 
   3.905696776141583*^9, 3.905696864528411*^9, {3.9056969144687138`*^9, 
   3.905696930444515*^9}, 3.905696979056509*^9, 3.905697011579028*^9, 
   3.905697083694252*^9, 3.9056971447056513`*^9, 3.905697202236267*^9, 
   3.905697247108284*^9, 3.905697295029592*^9, 3.905697439174786*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"3c50c2c3-c2c9-4ff6-a7e2-bd5bd658e620"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tMemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20231007-9OYMAA\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      MemberQ[$ContextPath, "FernandoDuarte`LongRunRisk`Model`Catalog`"]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Catalog_20231007-WMCGR2\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-9OYMAA\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{
  3.905694551783732*^9, 3.905694712110098*^9, 3.9056948978252983`*^9, 
   3.905694929079973*^9, 3.905695002881627*^9, 3.905695487789526*^9, 
   3.905695890290916*^9, 3.9056961004981203`*^9, 3.9056961317515373`*^9, 
   3.90569618216994*^9, 3.9056962314877033`*^9, 3.905696322156262*^9, 
   3.9056966432344913`*^9, 3.905696697220973*^9, 3.905696776151025*^9, 
   3.905696864538575*^9, {3.9056969144779463`*^9, 3.90569693046561*^9}, 
   3.9056969790776253`*^9, 3.905697011600436*^9, 3.905697083716033*^9, 
   3.905697144716456*^9, 3.905697202245175*^9, 3.905697247128827*^9, 
   3.905697295051469*^9, 3.905697439186191*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"e0d23e61-f134-472b-84b2-4fd07ff42221"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"True", " ", "if", " ", "Keys", " ", "are", " ", "strings"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"StringQ", "/@", 
      RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
   ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.889965468632722*^9, 3.889965535681717*^9}, {
   3.889965687921562*^9, 3.889965719041513*^9}, {3.8899657564745703`*^9, 
   3.8899657868805656`*^9}, {3.889965818275572*^9, 3.88996587402346*^9}, {
   3.8899660417909737`*^9, 3.889966042024665*^9}, {3.889967536877624*^9, 
   3.88996754071059*^9}, {3.8899676626847277`*^9, 3.889967663326408*^9}, {
   3.889967743694665*^9, 3.889967744059184*^9}, {3.8899677859095707`*^9, 
   3.8899678081741953`*^9}, {3.8899679955631647`*^9, 3.889968003395926*^9}, {
   3.889969462764024*^9, 3.8899694656136417`*^9}, {3.889969517081333*^9, 
   3.8899695670076637`*^9}, {3.889970354531378*^9, 3.889970361426557*^9}, 
   3.889970446358612*^9, 3.889971586268968*^9, 3.8899720413397284`*^9, {
   3.890016031161611*^9, 3.8900160360345497`*^9}, {3.890676734948654*^9, 
   3.890676751540125*^9}, {3.890676845455442*^9, 3.8906768494530687`*^9}, {
   3.890677074824079*^9, 3.890677087212*^9}, {3.89067716026512*^9, 
   3.890677182253841*^9}, {3.890677263672217*^9, 3.890677304382949*^9}, {
   3.890677341975574*^9, 3.890677356067058*^9}, {3.8906773977299557`*^9, 
   3.8906774089663153`*^9}, 3.890677598758559*^9, {3.890679268914014*^9, 
   3.890679269116164*^9}, {3.890679349751339*^9, 3.890679350122447*^9}, {
   3.891156731517645*^9, 3.891156737082999*^9}, 3.891156798479602*^9, {
   3.891316377112542*^9, 3.891316402888419*^9}, 3.891317076710834*^9, {
   3.8913171358178368`*^9, 3.891317143464329*^9}, 3.891317307401203*^9, 
   3.891317424039097*^9, {3.8930033595674267`*^9, 3.8930033895976143`*^9}, 
   3.893003633526842*^9, 3.90569253946777*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"f65e45e8-2582-4d00-8615-d27896add0d0"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20231007-4PW9Q8\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20231007-4PW9Q8"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.90569426627496*^9, 3.9056945518375387`*^9, 3.9056947121601562`*^9, 
   3.9056948978740807`*^9, 3.905694929135199*^9, 3.9056950029300423`*^9, 
   3.905695487839739*^9, 3.905695890345327*^9, 3.9056961005551157`*^9, 
   3.9056961318067904`*^9, 3.905696182218835*^9, 3.905696231539968*^9, 
   3.905696322212082*^9, 3.90569664328932*^9, 3.905696697270859*^9, 
   3.9056967761978416`*^9, 3.905696864589156*^9, {3.905696914528894*^9, 
   3.905696930499982*^9}, 3.9056969791277103`*^9, 3.905697011657222*^9, 
   3.905697083767518*^9, 3.905697144762248*^9, 3.905697202293844*^9, 
   3.905697247188518*^9, 3.905697295101029*^9, 3.905697439234066*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"9af7e38e-bb1a-4a91-968e-b5b687056c17"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{
  3.90569426627496*^9, 3.9056945518375387`*^9, 3.9056947121601562`*^9, 
   3.9056948978740807`*^9, 3.905694929135199*^9, 3.9056950029300423`*^9, 
   3.905695487839739*^9, 3.905695890345327*^9, 3.9056961005551157`*^9, 
   3.9056961318067904`*^9, 3.905696182218835*^9, 3.905696231539968*^9, 
   3.905696322212082*^9, 3.90569664328932*^9, 3.905696697270859*^9, 
   3.9056967761978416`*^9, 3.905696864589156*^9, {3.905696914528894*^9, 
   3.905696930499982*^9}, 3.9056969791277103`*^9, 3.905697011657222*^9, 
   3.905697083767518*^9, 3.905697144762248*^9, 3.905697202293844*^9, 
   3.905697247188518*^9, 3.905697295101029*^9, 3.905697439235908*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"e0b6be27-6422-494d-a905-69eea9a81256"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20231007-4PW9Q8\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[StringQ, 
        Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Catalog_20231007-WMCGR2\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-9OYMAA\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20231007-4PW9Q8\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{
  3.905694551860372*^9, 3.905694712184061*^9, 3.9056948978932753`*^9, 
   3.905694929144279*^9, 3.905695002952159*^9, 3.9056954878631687`*^9, 
   3.905695890355452*^9, 3.90569610056789*^9, 3.905696131834478*^9, 
   3.905696182240946*^9, 3.905696231551313*^9, 3.9056963222236557`*^9, 
   3.905696643322047*^9, 3.905696697293355*^9, 3.9056967762212257`*^9, 
   3.905696864612088*^9, {3.905696914550879*^9, 3.9056969305254307`*^9}, 
   3.9056969791393642`*^9, 3.905697011666286*^9, 3.90569708377946*^9, 
   3.905697144785203*^9, 3.90569720231601*^9, 3.9056972471981792`*^9, 
   3.9056972951102953`*^9, 3.905697439256997*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"845a9662-0950-449e-bef4-c6771584f444"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "True", " ", "if", " ", "fields", " ", "listed", " ", "are", " ", 
     "strings"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"StringQ", "/@", 
      RowBox[{"Flatten", "@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"models", "[", "#", "]"}], "[", "\"\<name\>\"", "]"}], 
            ",", 
            RowBox[{
             RowBox[{"models", "[", "#", "]"}], "[", "\"\<shortname\>\"", 
             "]"}], ",", 
            RowBox[{
             RowBox[{"models", "[", "#", "]"}], "[", "\"\<bibRef\>\"", "]"}], 
            ",", 
            RowBox[{
             RowBox[{"models", "[", "#", "]"}], "[", "\"\<desc\>\"", "]"}]}], 
           "}"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}]}], ")"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{
  3.890016052447173*^9, {3.8906792711540194`*^9, 3.890679271381631*^9}, {
   3.890679354610903*^9, 3.890679355945959*^9}, {3.891156741863173*^9, 
   3.8911567524768667`*^9}, 3.891156797693831*^9, {3.893003392469846*^9, 
   3.893003404206932*^9}, 3.893003633527791*^9, 3.905692539468667*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"5d749a31-d7a1-48d2-a85b-e58e3fb2c847"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20231007-KBDRFP\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20231007-KBDRFP"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.905694271478511*^9, 3.905694551917498*^9, 3.9056947122348433`*^9, 
   3.905694897937058*^9, 3.905694929198505*^9, 3.905695003009964*^9, 
   3.905695487915401*^9, 3.9056958904096813`*^9, 3.905696100620941*^9, 
   3.9056961318899508`*^9, 3.9056961822966833`*^9, 3.905696231603237*^9, 
   3.905696322274787*^9, 3.905696643383196*^9, 3.9056966973517523`*^9, 
   3.905696776276232*^9, 3.905696864668989*^9, {3.905696914606155*^9, 
   3.905696930578515*^9}, 3.905696979194561*^9, 3.905697011720611*^9, 
   3.905697083831643*^9, 3.90569714484831*^9, 3.9056972023707733`*^9, 
   3.905697247254541*^9, 3.905697295166448*^9, 3.90569743930789*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"3ba8c955-46e8-4550-acdb-95b9deceb7db"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{
  3.905694271478511*^9, 3.905694551917498*^9, 3.9056947122348433`*^9, 
   3.905694897937058*^9, 3.905694929198505*^9, 3.905695003009964*^9, 
   3.905695487915401*^9, 3.9056958904096813`*^9, 3.905696100620941*^9, 
   3.9056961318899508`*^9, 3.9056961822966833`*^9, 3.905696231603237*^9, 
   3.905696322274787*^9, 3.905696643383196*^9, 3.9056966973517523`*^9, 
   3.905696776276232*^9, 3.905696864668989*^9, {3.905696914606155*^9, 
   3.905696930578515*^9}, 3.905696979194561*^9, 3.905697011720611*^9, 
   3.905697083831643*^9, 3.90569714484831*^9, 3.9056972023707733`*^9, 
   3.905697247254541*^9, 3.905697295166448*^9, 3.905697439309761*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"f45e42f0-7843-4b6f-997d-d4f29febd27c"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction @ {\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-KBDRFP\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[StringQ, 
        Flatten[
         Map[{
           FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["name"], 
           FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["shortname"], 
           FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["bibRef"], 
           FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["desc"]}& , 
          Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Catalog_20231007-WMCGR2\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-9OYMAA\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20231007-4PW9Q8\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-KBDRFP\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{
  3.905694551926448*^9, 3.905694712244852*^9, 3.905694897947336*^9, 
   3.9056949292215843`*^9, 3.905695003019306*^9, 3.905695487925774*^9, 
   3.905695890433383*^9, 3.9056961006448383`*^9, 3.905696131904131*^9, 
   3.9056961823062057`*^9, 3.905696231626672*^9, 3.905696322298472*^9, 
   3.905696643392405*^9, 3.905696697360731*^9, 3.905696776285675*^9, 
   3.905696864680081*^9, {3.905696914618348*^9, 3.905696930601472*^9}, 
   3.905696979218645*^9, 3.905697011744378*^9, 3.905697083856285*^9, 
   3.9056971448714457`*^9, 3.905697202382724*^9, 3.9056972472772713`*^9, 
   3.905697295192066*^9, 3.905697439318029*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"0f85a0ac-1e9f-4369-a90d-e16a3ade92c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "True", " ", "if", " ", "parameters", " ", "evaluate", " ", "to", " ", 
     "numbers"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"NumberQ", "/@", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"models", "[", "#", "]"}], "[", "\"\<parameters\>\"", 
             "]"}], "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "2"}], "]"}], "]"}], "//.", 
           RowBox[{
            RowBox[{"models", "[", "#", "]"}], "[", "\"\<parameters\>\"", 
            "]"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "models", "]"}]}], "]"}]}], ")"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.889965468632722*^9, 3.889965535681717*^9}, {
   3.889965687921562*^9, 3.889965719041513*^9}, {3.8899657564745703`*^9, 
   3.8899657868805656`*^9}, {3.889965818275572*^9, 3.88996587402346*^9}, {
   3.8899660417909737`*^9, 3.889966042024665*^9}, {3.889967536877624*^9, 
   3.88996754071059*^9}, {3.8899676626847277`*^9, 3.889967663326408*^9}, {
   3.889967743694665*^9, 3.889967744059184*^9}, {3.8899677859095707`*^9, 
   3.8899678081741953`*^9}, {3.8899679955631647`*^9, 3.889968003395926*^9}, {
   3.889969462764024*^9, 3.8899694656136417`*^9}, {3.889969517081333*^9, 
   3.8899695670076637`*^9}, {3.889970354531378*^9, 3.889970361426557*^9}, 
   3.889970446358612*^9, 3.889971586268968*^9, 3.8899720413397284`*^9, {
   3.890016031161611*^9, 3.8900160360345497`*^9}, {3.8900160737670794`*^9, 
   3.890016085435741*^9}, {3.890676438175074*^9, 3.890676444283903*^9}, {
   3.890678425473001*^9, 3.890678429341833*^9}, {3.890679273563212*^9, 
   3.890679273764824*^9}, {3.890679359602653*^9, 3.890679360228259*^9}, {
   3.891156743395533*^9, 3.8911567603400497`*^9}, 3.891156796052576*^9, {
   3.893003422246476*^9, 3.8930034280669127`*^9}, 3.893003633528655*^9, 
   3.905692539469549*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"9a7acfd9-2870-4210-a7af-7c10ed2af5d1"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20231007-L6CURG\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20231007-L6CURG"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.90569427572622*^9, 3.90569455198965*^9, 3.905694712310915*^9, 
   3.905694898003765*^9, 3.905694929277388*^9, 3.905695003080718*^9, 
   3.905695487994224*^9, 3.905695890491987*^9, 3.905696100700452*^9, 
   3.905696131971889*^9, 3.905696182375225*^9, 3.905696231681259*^9, 
   3.905696322359136*^9, 3.905696643457677*^9, 3.905696697424583*^9, 
   3.90569677634308*^9, 3.9056968647296047`*^9, {3.905696914687395*^9, 
   3.9056969306574163`*^9}, 3.9056969792791986`*^9, 3.905697011800272*^9, 
   3.905697083914194*^9, 3.9056971449325867`*^9, 3.905697202434917*^9, 
   3.905697247332659*^9, 3.9056972952625504`*^9, 3.9056974393876038`*^9},
 CellLabel->
  "During evaluation of \
In[14]:=",ExpressionUUID->"00ce0b76-1751-4af7-b56f-9261181f1179"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{
  3.90569427572622*^9, 3.90569455198965*^9, 3.905694712310915*^9, 
   3.905694898003765*^9, 3.905694929277388*^9, 3.905695003080718*^9, 
   3.905695487994224*^9, 3.905695890491987*^9, 3.905696100700452*^9, 
   3.905696131971889*^9, 3.905696182375225*^9, 3.905696231681259*^9, 
   3.905696322359136*^9, 3.905696643457677*^9, 3.905696697424583*^9, 
   3.90569677634308*^9, 3.9056968647296047`*^9, {3.905696914687395*^9, 
   3.9056969306574163`*^9}, 3.9056969792791986`*^9, 3.905697011800272*^9, 
   3.905697083914194*^9, 3.9056971449325867`*^9, 3.905697202434917*^9, 
   3.905697247332659*^9, 3.9056972952625504`*^9, 3.9056974393894987`*^9},
 CellLabel->
  "During evaluation of \
In[14]:=",ExpressionUUID->"8fb8dab6-421c-42c3-9970-f9d545943b83"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\
Part[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], 1;;, \
2] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\
\t\t\t\t],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\
\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
Part[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], 1;;, \
2] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\
\t\t\t\t],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\
\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-L6CURG\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.003, "AbsoluteTiming" -> 0.003, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[NumberQ, 
        Flatten[
         Map[ReplaceRepeated[
           Part[
            FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["parameters"], 
            
            Span[1, All], 2], 
           FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
           "parameters"]]& , 
          Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Catalog_20231007-WMCGR2\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-9OYMAA\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20231007-4PW9Q8\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-KBDRFP\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-L6CURG\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{
  3.905694551999695*^9, 3.905694712322076*^9, 3.905694898016905*^9, 
   3.905694929286459*^9, 3.90569500309011*^9, 3.9056954880059977`*^9, 
   3.905695890514244*^9, 3.905696100709661*^9, 3.9056961319816313`*^9, 
   3.905696182385398*^9, 3.90569623170408*^9, 3.9056963223819942`*^9, 
   3.90569664348557*^9, 3.905696697438937*^9, 3.905696776367158*^9, 
   3.905696864751829*^9, {3.9056969146985397`*^9, 3.905696930680203*^9}, 
   3.905696979302925*^9, 3.905697011823263*^9, 3.905697083926393*^9, 
   3.9056971449416227`*^9, 3.905697202458123*^9, 3.905697247342285*^9, 
   3.905697295275649*^9, 3.9056974393980007`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"72ff96d1-3c71-472e-86a9-63fb804a6919"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"True", " ", "if", " ", "equal", " ", "to", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", 
       RowBox[{"sx", "[", "t", "]"}]}], "}"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"models", "[", "\"\<BY\>\"", "]"}], "[", "\"\<stateVars\>\"", 
     "]"}], "===", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
      "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x", " ", "[", 
       "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t", "]"}], ",", 
      " ", 
      RowBox[{
      "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx", " ", "[", 
       "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t", "]"}]}], 
     "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.889966121134981*^9, 3.889966129513671*^9}, {
  3.8899675430265427`*^9, 3.889967546703742*^9}, {3.889967666639736*^9, 
  3.8899676668939447`*^9}, {3.889967746374608*^9, 3.889967746668034*^9}, {
  3.88996781333914*^9, 3.8899678201195583`*^9}, {3.88996801609513*^9, 
  3.88996801967063*^9}, {3.8900161094568357`*^9, 3.890016118394877*^9}, {
  3.8930036435184603`*^9, 3.893003645890563*^9}, {3.905692606519969*^9, 
  3.905692641825945*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"3aa8b5cd-154c-4923-aed4-60a60049060a"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20231007-OTAOFY\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20231007-OTAOFY"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9056942819943666`*^9, 3.905694552050679*^9, 3.905694712371234*^9, 
   3.9056948980644627`*^9, 3.905694929338176*^9, 3.905695003141868*^9, 
   3.905695488056761*^9, 3.905695890544849*^9, 3.905696100758881*^9, 
   3.905696132033669*^9, 3.905696182437361*^9, 3.905696231760812*^9, 
   3.905696322434834*^9, 3.905696643535399*^9, 3.905696697489311*^9, 
   3.9056967764206038`*^9, 3.905696864802743*^9, {3.905696914749282*^9, 
   3.905696930733919*^9}, 3.9056969793582287`*^9, 3.90569701187883*^9, 
   3.905697083976313*^9, 3.9056971449906683`*^9, 3.9056972025096607`*^9, 
   3.905697247392921*^9, 3.905697295330145*^9, 3.9056974394495583`*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"47335b5b-2a6d-44cc-88b6-098d2b49c19a"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{
  3.9056942819943666`*^9, 3.905694552050679*^9, 3.905694712371234*^9, 
   3.9056948980644627`*^9, 3.905694929338176*^9, 3.905695003141868*^9, 
   3.905695488056761*^9, 3.905695890544849*^9, 3.905696100758881*^9, 
   3.905696132033669*^9, 3.905696182437361*^9, 3.905696231760812*^9, 
   3.905696322434834*^9, 3.905696643535399*^9, 3.905696697489311*^9, 
   3.9056967764206038`*^9, 3.905696864802743*^9, {3.905696914749282*^9, 
   3.905696930733919*^9}, 3.9056969793582287`*^9, 3.90569701187883*^9, 
   3.905697083976313*^9, 3.9056971449906683`*^9, 3.9056972025096607`*^9, 
   3.905697247392921*^9, 3.905697295330145*^9, 3.905697439451427*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"f3855eda-e49a-43e8-8343-5b12dfd64995"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "SameQ[FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"\
], {FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\t\
SameQ[FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"], \
{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Catalog_20231007-OTAOFY\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
     FernandoDuarte`LongRunRisk`Model`Catalog`models["BY"]["stateVars"] === {
        FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x[
        FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
        FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx[
        FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]}], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Catalog_20231007-WMCGR2\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-9OYMAA\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20231007-4PW9Q8\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-KBDRFP\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-L6CURG\"\n]\n\n\nVerificationTest[\n\t\
SameQ[FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"], \
{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Catalog_20231007-OTAOFY\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{
  3.9056945520738373`*^9, 3.905694712392478*^9, 3.905694898082793*^9, 
   3.905694929359725*^9, 3.905695003163548*^9, 3.905695488079159*^9, 
   3.90569589057403*^9, 3.905696100780717*^9, 3.9056961320553293`*^9, 
   3.9056961824597883`*^9, 3.90569623177036*^9, 3.90569632244479*^9, 
   3.905696643558548*^9, 3.9056966975114813`*^9, 3.905696776430026*^9, 
   3.9056968648153143`*^9, {3.905696914772353*^9, 3.905696930743301*^9}, 
   3.905696979369834*^9, 3.905697011891288*^9, 3.905697083998846*^9, 
   3.9056971450145493`*^9, 3.905697202520727*^9, 3.905697247414701*^9, 
   3.905697295354355*^9, 3.905697439472348*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"12ad515d-e1c2-4144-826c-d068deafef7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "True", " ", "if", " ", "it", " ", "can", " ", "find", " ", "models", " ",
      "listed"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"Keys", "[", "models", "]"}], ",", "#"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<BY\>\"", ",", "\"\<BKY\>\""}], "}"}]}], ")"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.889966137593294*^9, 3.889966157676291*^9}, {
   3.8899675483847713`*^9, 3.889967551583518*^9}, {3.8899676691600733`*^9, 
   3.889967669364262*^9}, {3.889967748725914*^9, 3.889967749007223*^9}, {
   3.889967825028019*^9, 3.8899678304574842`*^9}, {3.889968028194545*^9, 
   3.889968031839179*^9}, {3.890016134135317*^9, 3.890016138691626*^9}, {
   3.891156767252892*^9, 3.891156793864086*^9}, {3.893003452582478*^9, 
   3.893003458742921*^9}, 3.893003633529361*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"4ebbc95c-22ea-48d7-bdec-0d430d2b154f"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20231007-G5R6EN\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20231007-G5R6EN"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.905694286176104*^9, 3.905694552125486*^9, 3.905694712445057*^9, 
   3.9056948981315813`*^9, 3.905694929409834*^9, 3.9056950032209663`*^9, 
   3.9056954881325903`*^9, 3.905695890625394*^9, 3.905696100834139*^9, 
   3.9056961322388163`*^9, 3.9056961825103416`*^9, 3.905696231818921*^9, 
   3.9056963224955473`*^9, 3.9056966436080093`*^9, 3.905696697562418*^9, 
   3.905696776480669*^9, 3.905696864870528*^9, {3.905696914810871*^9, 
   3.9056969307941523`*^9}, 3.905696979419998*^9, 3.905697011939413*^9, 
   3.905697084052023*^9, 3.905697145069086*^9, 3.905697202574978*^9, 
   3.9056972474713497`*^9, 3.905697295407785*^9, 3.905697439527117*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"2d383271-ae28-4d5c-87cc-e62a1faea65d"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{
  3.905694286176104*^9, 3.905694552125486*^9, 3.905694712445057*^9, 
   3.9056948981315813`*^9, 3.905694929409834*^9, 3.9056950032209663`*^9, 
   3.9056954881325903`*^9, 3.905695890625394*^9, 3.905696100834139*^9, 
   3.9056961322388163`*^9, 3.9056961825103416`*^9, 3.905696231818921*^9, 
   3.9056963224955473`*^9, 3.9056966436080093`*^9, 3.905696697562418*^9, 
   3.905696776480669*^9, 3.905696864870528*^9, {3.905696914810871*^9, 
   3.9056969307941523`*^9}, 3.905696979419998*^9, 3.905697011939413*^9, 
   3.905697084052023*^9, 3.905697145069086*^9, 3.905697202574978*^9, 
   3.9056972474713497`*^9, 3.905697295407785*^9, 3.9056974395289173`*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"7284f96b-f58f-4bd5-8abe-a126418ee2af"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-G5R6EN\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[MemberQ[
         Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]& , {
        "BY", "BKY"}]]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Catalog_20231007-WMCGR2\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-9OYMAA\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20231007-4PW9Q8\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-KBDRFP\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-L6CURG\"\n]\n\n\nVerificationTest[\n\t\
SameQ[FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"], \
{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Catalog_20231007-OTAOFY\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], \
#]&, {\"BY\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-G5R6EN\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{
  3.9056945521366*^9, 3.905694712454872*^9, 3.9056948981401176`*^9, 
   3.905694929422673*^9, 3.905695003229795*^9, 3.90569548814336*^9, 
   3.905695890634556*^9, 3.905696100843067*^9, 3.9056961322620773`*^9, 
   3.90569618252145*^9, 3.9056962318405457`*^9, 3.905696322517626*^9, 
   3.9056966436305933`*^9, 3.90569669757205*^9, 3.905696776502339*^9, 
   3.9056968648931513`*^9, {3.905696914835969*^9, 3.90569693081875*^9}, 
   3.905696979442047*^9, 3.905697011961591*^9, 3.905697084061326*^9, 
   3.9056971450786467`*^9, 3.90569720259764*^9, 3.9056972474800873`*^9, 
   3.905697295416485*^9, 3.905697439536397*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"f7426e02-a81a-4f7d-8dc0-3e4f7705110b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "True", " ", "if", " ", "models", " ", "is", " ", "an", " ", 
     "association", " ", "and", " ", "each", " ", "model", " ", "inside", " ",
      "models", " ", "is", " ", "itself", " ", "an", " ", "association"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"MatchQ", "[", 
        RowBox[{"Association", ",", "#"}], "]"}], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{"Flatten", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Head", "[", "models", "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Head", "[", 
             RowBox[{"models", "[", "#", "]"}], "]"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "models", "]"}]}]}], "}"}]}], ")"}]}], 
     ")"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.8899661404752703`*^9, 3.889966162544742*^9}, {
  3.88996755330625*^9, 3.8899675539045153`*^9}, {3.8899676717688217`*^9, 
  3.889967672005005*^9}, {3.88996775093589*^9, 3.8899677512290583`*^9}, {
  3.889967834057867*^9, 3.88996783977798*^9}, {3.889968042239496*^9, 
  3.889968052278575*^9}, {3.890016146817315*^9, 3.8900161536190767`*^9}, {
  3.890676356555853*^9, 3.8906763787792273`*^9}, {3.891156776109173*^9, 
  3.891156782485037*^9}, {3.893003483301791*^9, 3.89300354824457*^9}, {
  3.8930036512791853`*^9, 3.893003654903037*^9}, {3.905692699895727*^9, 
  3.905692702006859*^9}, {3.905692738946845*^9, 3.905692745636388*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"0cc2f06b-6e8f-4978-97cc-c47753fea3f2"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20231007-ADRCW8\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20231007-ADRCW8"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.905694290412232*^9, 3.905694552189361*^9, 3.905694712506798*^9, 
   3.9056948981840563`*^9, 3.905694929596491*^9, 3.905695003279117*^9, 
   3.905695488192791*^9, 3.905695890685272*^9, 3.905696100892747*^9, 
   3.905696132310616*^9, 3.9056961827082872`*^9, 3.905696231894536*^9, 
   3.905696322735862*^9, 3.9056966438329897`*^9, 3.905696697623663*^9, 
   3.905696776551573*^9, 3.905696864948081*^9, {3.905696915035014*^9, 
   3.905696931010536*^9}, 3.905696979492505*^9, 3.905697012147107*^9, 
   3.905697084114174*^9, 3.905697145131164*^9, 3.905697202653036*^9, 
   3.905697247532713*^9, 3.9056972954668694`*^9, 3.905697439593877*^9},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"ae9696f1-59f9-422d-8738-f850304172e1"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{
  3.905694290412232*^9, 3.905694552189361*^9, 3.905694712506798*^9, 
   3.9056948981840563`*^9, 3.905694929596491*^9, 3.905695003279117*^9, 
   3.905695488192791*^9, 3.905695890685272*^9, 3.905696100892747*^9, 
   3.905696132310616*^9, 3.9056961827082872`*^9, 3.905696231894536*^9, 
   3.905696322735862*^9, 3.9056966438329897`*^9, 3.905696697623663*^9, 
   3.905696776551573*^9, 3.905696864948081*^9, {3.905696915035014*^9, 
   3.905696931010536*^9}, 3.905696979492505*^9, 3.905697012147107*^9, 
   3.905697084114174*^9, 3.905697145131164*^9, 3.905697202653036*^9, 
   3.905697247532713*^9, 3.9056972954668694`*^9, 3.905697439595977*^9},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"c5e05aac-745e-49f5-af09-c5cf4085f219"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[MatchQ[Association, #]&,\n\t\t\tFlatten[\n\t\t\t\t{\n\t\
\t\t\t\tHead @ FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\t\t\t\t\
Map[Function @ Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models @ #, \
Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\t]\n\
\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[MatchQ[Association, #]&,\n\t\t\t\
Flatten[\n\t\t\t\t{\n\t\t\t\t\tHead @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\t\t\t\tMap[Function @ \
Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models @ #, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\
\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-ADRCW8\"\n]\n\n\
", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[MatchQ[Association, #]& , 
        Flatten[{
          Head[FernandoDuarte`LongRunRisk`Model`Catalog`models], 
          Map[Head[
            FernandoDuarte`LongRunRisk`Model`Catalog`models[#]]& , 
           Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]}]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Catalog_20231007-WMCGR2\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-9OYMAA\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20231007-4PW9Q8\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-KBDRFP\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-L6CURG\"\n]\n\n\nVerificationTest[\n\t\
SameQ[FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"], \
{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Catalog_20231007-OTAOFY\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], \
#]&, {\"BY\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-G5R6EN\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[MatchQ[Association, #]&,\n\t\t\tFlatten[\n\t\t\t\t{\n\t\t\t\t\tHead @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\t\t\t\tMap[Function @ \
Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models @ #, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\
\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-ADRCW8\"\n]\n\n\
\nEndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{
  3.905694552212859*^9, 3.9056947125291853`*^9, 3.90569489820223*^9, 
   3.905694929619877*^9, 3.905695003300722*^9, 3.905695488214077*^9, 
   3.905695890706517*^9, 3.905696100916398*^9, 3.905696132319991*^9, 
   3.905696182732534*^9, 3.9056962319043217`*^9, 3.905696322745771*^9, 
   3.9056966438417788`*^9, 3.905696697649518*^9, 3.905696776560732*^9, 
   3.905696864971209*^9, {3.9056969150450077`*^9, 3.905696931034792*^9}, 
   3.905696979504355*^9, 3.9056970121705923`*^9, 3.9056970841358767`*^9, 
   3.905697145153036*^9, 3.905697202661983*^9, 3.905697247555162*^9, 
   3.905697295489758*^9, 3.905697439617258*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"0d943af1-a8c9-4fa8-a4d5-3f1f48ca92dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "True", " ", "if", " ", "all", " ", "exogenous", " ", "variables", " ", 
    "are", " ", "in", " ", "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
   RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
    RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"And", "@@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "#", "===", 
               "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\"\
"}], ")"}], "&"}], "/@", 
            RowBox[{"(", 
             RowBox[{"Context", "/@", 
              RowBox[{"Cases", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"models", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
                 "]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"var_Symbol", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", 
                "Infinity"}], "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
       RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}], "\[IndentingNewLine]",
     ",", 
    RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.893001201934902*^9, 3.893001214021667*^9}, {
   3.893001245798745*^9, 3.8930012743606873`*^9}, {3.893001352341578*^9, 
   3.893001386197197*^9}, {3.893001448430169*^9, 3.893001448726687*^9}, 
   3.8930026482885447`*^9, {3.893003559352929*^9, 3.89300358223393*^9}, 
   3.893003660158228*^9, {3.893003695869608*^9, 3.893003703297862*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"c37f51a1-837c-4f11-a194-78705f4642f7"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20231007-UR77BA\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20231007-UR77BA"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.905694296109971*^9, 3.905694552395588*^9, 3.90569471257953*^9, 
   3.90569489824841*^9, 3.9056949296733723`*^9, 3.9056950033531237`*^9, 
   3.9056954882631598`*^9, 3.905695890762138*^9, 3.9056961009732647`*^9, 
   3.9056961323780518`*^9, 3.905696182789098*^9, 3.905696231958681*^9, 
   3.905696322802115*^9, 3.905696643893717*^9, 3.9056966977049007`*^9, 
   3.90569677660738*^9, 3.905696865022073*^9, {3.90569691510021*^9, 
   3.905696931092317*^9}, 3.905696979554205*^9, 3.905697012226859*^9, 
   3.905697084167293*^9, 3.905697145204012*^9, 3.90569720271227*^9, 
   3.9056972476095057`*^9, 3.905697295524178*^9, 3.905697439674955*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"80b96aca-1ca2-4186-a62b-70d6333b17a4"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{
  3.905694296109971*^9, 3.905694552395588*^9, 3.90569471257953*^9, 
   3.90569489824841*^9, 3.9056949296733723`*^9, 3.9056950033531237`*^9, 
   3.9056954882631598`*^9, 3.905695890762138*^9, 3.9056961009732647`*^9, 
   3.9056961323780518`*^9, 3.905696182789098*^9, 3.905696231958681*^9, 
   3.905696322802115*^9, 3.905696643893717*^9, 3.9056966977049007`*^9, 
   3.90569677660738*^9, 3.905696865022073*^9, {3.90569691510021*^9, 
   3.905696931092317*^9}, 3.905696979554205*^9, 3.905697012226859*^9, 
   3.905697084167293*^9, 3.905697145204012*^9, 3.90569720271227*^9, 
   3.9056972476095057`*^9, 3.905697295524178*^9, 3.9056974396766853`*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"ba703129-a455-4eba-924b-99013af4a067"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\t\
Map[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\
\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`Catalog`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\t\
\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t\t\t],\
\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\
\t\t]\n\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\
\n\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`Catalog`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\t\
\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t\t\t],\
\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\
\t\t]\n\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\
\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-UR77BA\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.001, "AbsoluteTiming" -> 0.001, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[Apply[And, 
         Map[# === "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
          
          Map[Context, 
           Cases[
            FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["stateVars"], 
            PatternTest[
              Pattern[Model`Catalog`var, 
               Blank[Symbol]], MemberQ[
               Map[
               StringDrop[#, -2]& , 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars], 
               
               SymbolName[#]]& ][
              BlankSequence[]] :> Model`Catalog`var, Infinity]]]]& , 
        Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Catalog_20231007-WMCGR2\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-9OYMAA\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20231007-4PW9Q8\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-KBDRFP\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-L6CURG\"\n]\n\n\nVerificationTest[\n\t\
SameQ[FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"], \
{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Catalog_20231007-OTAOFY\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], \
#]&, {\"BY\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-G5R6EN\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[MatchQ[Association, #]&,\n\t\t\tFlatten[\n\t\t\t\t{\n\t\t\t\t\tHead @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\t\t\t\tMap[Function @ \
Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models @ #, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\
\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-ADRCW8\"\n]\n\n\
\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`Catalog`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\t\
\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t\t\t],\
\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\
\t\t]\n\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\
\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-UR77BA\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{
  3.905694552405219*^9, 3.905694712592692*^9, 3.905694898256659*^9, 
   3.905694929685659*^9, 3.905695003362015*^9, 3.905695488274756*^9, 
   3.905695890771216*^9, 3.905696100982984*^9, 3.905696132400179*^9, 
   3.905696182798407*^9, 3.90569623198136*^9, 3.905696322823597*^9, 
   3.905696643916258*^9, 3.9056966977139063`*^9, 3.905696776629239*^9, 
   3.905696865043097*^9, {3.905696915122499*^9, 3.905696931104251*^9}, 
   3.905696979575639*^9, 3.905697012237048*^9, 3.905697084196804*^9, 
   3.905697145216447*^9, 3.9056972027354927`*^9, 3.9056972476185102`*^9, 
   3.9056972955492268`*^9, 3.905697439686915*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"ed412ef2-ea9c-410d-9854-1009f7c728fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "True", " ", "if", " ", "all", " ", "shocks", " ", "are", " ", "in", " ", 
    "context", " ", "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
   RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
    RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"And", "@@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "#", "===", 
               "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], ")"}], 
             "&"}], "/@", 
            RowBox[{"(", 
             RowBox[{"Context", "/@", 
              RowBox[{"Cases", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"models", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
                 "]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                  "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], "]"}]}],
              ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
       RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}], "\[IndentingNewLine]",
     ",", 
    RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.893001499960679*^9, {3.893002667440094*^9, 3.89300269939427*^9}, {
   3.893003083367228*^9, 3.893003083692607*^9}, {3.893003561913405*^9, 
   3.8930035855859337`*^9}, {3.89300366280791*^9, 3.893003690890905*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"21e8aec5-4a2d-4eec-a0e6-4a0295241e7d"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20231007-M9817Y\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20231007-M9817Y"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.905694303713191*^9, 3.90569455245888*^9, 3.905694712640216*^9, 
   3.905694898302416*^9, 3.90569492973479*^9, 3.9056950035436573`*^9, 
   3.905695488445483*^9, 3.905695890821003*^9, 3.905696101171851*^9, 
   3.905696132456328*^9, 3.90569618284752*^9, 3.905696232180059*^9, 
   3.9056963228798656`*^9, 3.905696643971018*^9, 3.90569669789577*^9, 
   3.9056967768133287`*^9, 3.905696865246633*^9, {3.905696915172389*^9, 
   3.905696931156304*^9}, 3.9056969797688227`*^9, 3.905697012286007*^9, 
   3.905697084385363*^9, 3.9056971454085693`*^9, 3.905697202925907*^9, 
   3.9056972478081627`*^9, 3.905697295740147*^9, 3.9056974398661327`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"ba9c1901-5ef8-4ad8-8ca5-0173ac40e918"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{
  3.905694303713191*^9, 3.90569455245888*^9, 3.905694712640216*^9, 
   3.905694898302416*^9, 3.90569492973479*^9, 3.9056950035436573`*^9, 
   3.905695488445483*^9, 3.905695890821003*^9, 3.905696101171851*^9, 
   3.905696132456328*^9, 3.90569618284752*^9, 3.905696232180059*^9, 
   3.9056963228798656`*^9, 3.905696643971018*^9, 3.90569669789577*^9, 
   3.9056967768133287`*^9, 3.905696865246633*^9, {3.905696915172389*^9, 
   3.905696931156304*^9}, 3.9056969797688227`*^9, 3.905697012286007*^9, 
   3.905697084385363*^9, 3.9056971454085693`*^9, 3.905697202925907*^9, 
   3.9056972478081627`*^9, 3.905697295740147*^9, 3.9056974398680277`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"dbcd045e-1a84-442f-87d8-306537074f1e"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\t\
Map[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Model`Catalog`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\
Model`Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\
\"]&,\n\t\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Model`Catalog`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\
Model`Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-M9817Y\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[Apply[And, 
         Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
          Map[Context, 
           Cases[
            FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["stateVars"], 
            PatternTest[
              Pattern[Model`Catalog`var, 
               Blank[Symbol]], MatchQ[
               SymbolName[#], "eps"]& ][
              BlankSequence[]][
              BlankSequence[]] :> Model`Catalog`var, Infinity]]]]& , 
        Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Catalog_20231007-WMCGR2\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-9OYMAA\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20231007-4PW9Q8\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-KBDRFP\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-L6CURG\"\n]\n\n\nVerificationTest[\n\t\
SameQ[FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"], \
{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Catalog_20231007-OTAOFY\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], \
#]&, {\"BY\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-G5R6EN\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[MatchQ[Association, #]&,\n\t\t\tFlatten[\n\t\t\t\t{\n\t\t\t\t\tHead @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\t\t\t\tMap[Function @ \
Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models @ #, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\
\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-ADRCW8\"\n]\n\n\
\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`Catalog`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\t\
\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t\t\t],\
\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\
\t\t]\n\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\
\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-UR77BA\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\tMap[Context,\n\t\
\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Model`Catalog`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\
Model`Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-M9817Y\"\n]\n\n\nEndTestSection[]\n\
"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{
  3.905694552481179*^9, 3.9056947126608057`*^9, 3.905694898321498*^9, 
   3.905694929756528*^9, 3.905695003554969*^9, 3.9056954884568567`*^9, 
   3.905695890841547*^9, 3.905696101195709*^9, 3.9056961324658117`*^9, 
   3.9056961828690243`*^9, 3.90569623219035*^9, 3.9056963228891573`*^9, 
   3.905696643980473*^9, 3.905696697924556*^9, 3.905696776837669*^9, 
   3.9056968652559853`*^9, {3.905696915185008*^9, 3.905696931178101*^9}, 
   3.905696979793108*^9, 3.9056970123074217`*^9, 3.9056970844097013`*^9, 
   3.905697145418908*^9, 3.905697202937295*^9, 3.905697247817568*^9, 
   3.905697295749167*^9, 3.9056974398895407`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"044d33ce-120b-4571-a9fb-24380e3599ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "True", " ", "if", "  ", "all", " ", "parameters", " ", "are", " ", "in", 
    " ", "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
    RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<parameters\>\"", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
               ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"models", "[", "#", "]"}], "[", 
                  "\"\<parameters\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{"var_Symbol", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
              ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
    RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
               ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"models", "[", "#", "]"}], "[", "\"\<stateVars\>\"",
                   "]"}], ",", 
                 RowBox[{
                  RowBox[{"var_Symbol", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
              ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{
  3.893001501399847*^9, {3.893002703969759*^9, 3.893002740019191*^9}, {
   3.893003056880762*^9, 3.893003109272599*^9}, {3.8930035658891783`*^9, 
   3.893003613143814*^9}, {3.8930036660094976`*^9, 3.8930036677270737`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"67116dee-9a87-405d-93eb-27ea07c14940"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20231007-SYKS8I\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20231007-SYKS8I"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.905694311296075*^9, 3.9056945525326138`*^9, 3.9056947127127934`*^9, 
   3.905694898370647*^9, 3.905694929807371*^9, 3.90569500360643*^9, 
   3.90569548851022*^9, 3.905695890895955*^9, 3.9056961012485943`*^9, 
   3.9056961325172462`*^9, 3.905696182923517*^9, 3.90569623224314*^9, 
   3.905696322942336*^9, 3.905696644032033*^9, 3.905696698004067*^9, 
   3.9056967768922253`*^9, 3.905696865311241*^9, {3.90569691523396*^9, 
   3.905696931224854*^9}, 3.9056969798417788`*^9, 3.905697012365508*^9, 
   3.905697084463152*^9, 3.9056971454701*^9, 3.9056972029902*^9, 
   3.9056972478713427`*^9, 3.905697295799698*^9, 3.905697439946151*^9},
 CellLabel->
  "During evaluation of \
In[20]:=",ExpressionUUID->"690d7bb6-442e-4c39-bd86-54cce7495bd8"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{
  3.905694311296075*^9, 3.9056945525326138`*^9, 3.9056947127127934`*^9, 
   3.905694898370647*^9, 3.905694929807371*^9, 3.90569500360643*^9, 
   3.90569548851022*^9, 3.905695890895955*^9, 3.9056961012485943`*^9, 
   3.9056961325172462`*^9, 3.905696182923517*^9, 3.90569623224314*^9, 
   3.905696322942336*^9, 3.905696644032033*^9, 3.905696698004067*^9, 
   3.9056967768922253`*^9, 3.905696865311241*^9, {3.90569691523396*^9, 
   3.905696931224854*^9}, 3.9056969798417788`*^9, 3.905697012365508*^9, 
   3.905697084463152*^9, 3.9056971454701*^9, 3.9056972029902*^9, 
   3.9056972478713427`*^9, 3.905697295799698*^9, 3.905697439948004*^9},
 CellLabel->
  "During evaluation of \
In[20]:=",ExpressionUUID->"3be9f129-5603-4815-b2c6-52cffc350a4b"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\t\
Map[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"],\n\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Model`Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t\
]\n\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\
\t]\n\t]", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$,
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\tMap[Context,\
\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"],\n\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Model`Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t\
]\n\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\
\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-SYKS8I\"\n\
]\n\n", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.002, "AbsoluteTiming" -> 0.002, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[Apply[And, 
         Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
          Map[Context, 
           Cases[
            FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["parameters"], 
            PatternTest[
              Pattern[Model`Catalog`var, 
               Blank[Symbol]], MemberQ[
              FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
               SymbolName[#]]& ] :> Model`Catalog`var, Infinity]]]]& , 
        Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Catalog_20231007-WMCGR2\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-9OYMAA\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20231007-4PW9Q8\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-KBDRFP\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-L6CURG\"\n]\n\n\nVerificationTest[\n\t\
SameQ[FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"], \
{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Catalog_20231007-OTAOFY\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], \
#]&, {\"BY\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-G5R6EN\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[MatchQ[Association, #]&,\n\t\t\tFlatten[\n\t\t\t\t{\n\t\t\t\t\tHead @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\t\t\t\tMap[Function @ \
Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models @ #, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\
\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-ADRCW8\"\n]\n\n\
\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`Catalog`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\t\
\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t\t\t],\
\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\
\t\t]\n\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\
\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-UR77BA\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\tMap[Context,\n\t\
\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Model`Catalog`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\
Model`Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-M9817Y\"\n]\n\n\nVerificationTest[\n\
\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\t\
Map[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"],\n\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Model`Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t\
]\n\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\
\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-SYKS8I\"\n\
]\n\n\nEndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{
  3.905694552541686*^9, 3.905694712731678*^9, 3.905694898388136*^9, 
   3.90569492981936*^9, 3.905695003629056*^9, 3.9056954885304337`*^9, 
   3.905695890915526*^9, 3.9056961012574043`*^9, 3.905696132537293*^9, 
   3.905696182933545*^9, 3.905696232264394*^9, 3.9056963229623404`*^9, 
   3.9056966440518208`*^9, 3.9056966980124617`*^9, 3.9056967769013863`*^9, 
   3.905696865331232*^9, {3.905696915254385*^9, 3.905696931237812*^9}, 
   3.905696979852751*^9, 3.905697012386025*^9, 3.9056970844730988`*^9, 
   3.905697145489822*^9, 3.905697203010469*^9, 3.905697247891438*^9, 
   3.9056972958217077`*^9, 3.905697439967113*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"b1af25b8-6fbb-41fa-bfd7-a4f456c0b679"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20231007-202AXM\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20231007-202AXM"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.905694311296075*^9, 3.9056945525326138`*^9, 3.9056947127127934`*^9, 
   3.905694898370647*^9, 3.905694929807371*^9, 3.90569500360643*^9, 
   3.90569548851022*^9, 3.905695890895955*^9, 3.9056961012485943`*^9, 
   3.9056961325172462`*^9, 3.905696182923517*^9, 3.90569623224314*^9, 
   3.905696322942336*^9, 3.905696644032033*^9, 3.905696698004067*^9, 
   3.9056967768922253`*^9, 3.905696865311241*^9, {3.90569691523396*^9, 
   3.905696931224854*^9}, 3.9056969798417788`*^9, 3.905697012365508*^9, 
   3.905697084463152*^9, 3.9056971454701*^9, 3.9056972029902*^9, 
   3.9056972478713427`*^9, 3.905697295799698*^9, 3.905697440057991*^9},
 CellLabel->
  "During evaluation of \
In[20]:=",ExpressionUUID->"6cd5a5d0-184a-4637-ac22-5f27cf0c7306"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{
  3.905694311296075*^9, 3.9056945525326138`*^9, 3.9056947127127934`*^9, 
   3.905694898370647*^9, 3.905694929807371*^9, 3.90569500360643*^9, 
   3.90569548851022*^9, 3.905695890895955*^9, 3.9056961012485943`*^9, 
   3.9056961325172462`*^9, 3.905696182923517*^9, 3.90569623224314*^9, 
   3.905696322942336*^9, 3.905696644032033*^9, 3.905696698004067*^9, 
   3.9056967768922253`*^9, 3.905696865311241*^9, {3.90569691523396*^9, 
   3.905696931224854*^9}, 3.9056969798417788`*^9, 3.905697012365508*^9, 
   3.905697084463152*^9, 3.9056971454701*^9, 3.9056972029902*^9, 
   3.9056972478713427`*^9, 3.905697295799698*^9, 3.905697440059849*^9},
 CellLabel->
  "During evaluation of \
In[20]:=",ExpressionUUID->"d0e67179-1a83-43ea-8f05-ddc0f824397a"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\t\
Map[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Model`Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t\
]\n\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\
\t]\n\t]", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$,
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\tMap[Context,\
\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Model`Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t\
]\n\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\
\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-202AXM\"\n\
]\n\n", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[Apply[And, 
         Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
          Map[Context, 
           Cases[
            FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["stateVars"], 
            PatternTest[
              Pattern[Model`Catalog`var, 
               Blank[Symbol]], MemberQ[
              FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
               SymbolName[#]]& ] :> Model`Catalog`var, Infinity]]]]& , 
        Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Catalog_20231007-WMCGR2\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-9OYMAA\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20231007-4PW9Q8\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-KBDRFP\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-L6CURG\"\n]\n\n\nVerificationTest[\n\t\
SameQ[FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"], \
{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Catalog_20231007-OTAOFY\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], \
#]&, {\"BY\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-G5R6EN\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[MatchQ[Association, #]&,\n\t\t\tFlatten[\n\t\t\t\t{\n\t\t\t\t\tHead @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\t\t\t\tMap[Function @ \
Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models @ #, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\
\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-ADRCW8\"\n]\n\n\
\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`Catalog`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\t\
\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t\t\t],\
\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\
\t\t]\n\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\
\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-UR77BA\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\tMap[Context,\n\t\
\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Model`Catalog`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\
Model`Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-M9817Y\"\n]\n\n\nVerificationTest[\n\
\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\t\
Map[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"],\n\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Model`Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t\
]\n\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\
\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-SYKS8I\"\n\
]\n\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\tMap[Context,\
\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Model`Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t\
]\n\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\
\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-202AXM\"\n\
]\n\n\nEndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{
  3.905694552541686*^9, 3.905694712731678*^9, 3.905694898388136*^9, 
   3.90569492981936*^9, 3.905695003629056*^9, 3.9056954885304337`*^9, 
   3.905695890915526*^9, 3.9056961012574043`*^9, 3.905696132537293*^9, 
   3.905696182933545*^9, 3.905696232264394*^9, 3.9056963229623404`*^9, 
   3.9056966440518208`*^9, 3.9056966980124617`*^9, 3.9056967769013863`*^9, 
   3.905696865331232*^9, {3.905696915254385*^9, 3.905696931237812*^9}, 
   3.905696979852751*^9, 3.905697012386025*^9, 3.9056970844730988`*^9, 
   3.905697145489822*^9, 3.905697203010469*^9, 3.905697247891438*^9, 
   3.9056972958217077`*^9, 3.905697440079022*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"3591f039-ca68-41a1-a89a-8fc7d4e338d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "True", " ", "if", " ", "state", " ", "variables", " ", "do", " ", "not", 
    " ", "have", " ", "any", " ", "endogenous", " ", "variables"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
   RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
    RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"MatchQ", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", "#"}], "]"}], "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"models", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
             "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"var_Symbol", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                   RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
           "]"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}], ")"}]}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.89300111387222*^9, 3.8930011727459707`*^9}, {
   3.893001247830225*^9, 3.893001299678648*^9}, {3.893001353751255*^9, 
   3.8930015072417727`*^9}, {3.893002707727394*^9, 3.893002708411419*^9}, {
   3.893002748062245*^9, 3.893002826831513*^9}, 3.89300297523416*^9, {
   3.893003086535989*^9, 3.893003086763905*^9}, {3.893003573506647*^9, 
   3.893003597674356*^9}, {3.8930036740071383`*^9, 3.893003681466465*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"eeb0f7ac-c9ae-4068-9a86-aa0d4212e5fe"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20231007-B84UK6\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20231007-B84UK6"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9056943196987534`*^9, 3.905694552696488*^9, 3.905694712892831*^9, 
   3.905694898538178*^9, 3.9056949299768057`*^9, 3.905695003791183*^9, 
   3.905695488688863*^9, 3.9056958910767527`*^9, 3.9056961014157457`*^9, 
   3.905696132691478*^9, 3.9056961830909967`*^9, 3.905696232429755*^9, 
   3.9056963231182203`*^9, 3.905696644216258*^9, 3.905696698170046*^9, 
   3.9056967770649557`*^9, 3.905696865502556*^9, {3.905696915415286*^9, 
   3.9056969314034233`*^9}, 3.90569698002621*^9, 3.905697012543324*^9, 
   3.905697084628263*^9, 3.905697145651973*^9, 3.905697203174615*^9, 
   3.905697248054953*^9, 3.905697295981316*^9, 3.9056974401352997`*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"6f21c83e-5283-4af4-ac1a-7154125bc483"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{
  3.9056943196987534`*^9, 3.905694552696488*^9, 3.905694712892831*^9, 
   3.905694898538178*^9, 3.9056949299768057`*^9, 3.905695003791183*^9, 
   3.905695488688863*^9, 3.9056958910767527`*^9, 3.9056961014157457`*^9, 
   3.905696132691478*^9, 3.9056961830909967`*^9, 3.905696232429755*^9, 
   3.9056963231182203`*^9, 3.905696644216258*^9, 3.905696698170046*^9, 
   3.9056967770649557`*^9, 3.905696865502556*^9, {3.905696915415286*^9, 
   3.9056969314034233`*^9}, 3.90569698002621*^9, 3.905697012543324*^9, 
   3.905697084628263*^9, 3.905697145651973*^9, 3.905697203174615*^9, 
   3.905697248054953*^9, 3.905697295981316*^9, 3.905697440242351*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"26412b6f-47f1-4048-9b52-d45c2a882b41"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[MatchQ[{}, #]&,\n\t\t\tMap[\n\t\t\t\tFunction[\n\t\t\t\
\t\tCases[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
Model`Catalog`var_Symbol,\n\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
][__],\n\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t]\n\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[MatchQ[{}, #]&,\n\t\t\tMap[\n\t\t\
\t\tFunction[\n\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
Model`Catalog`var_Symbol,\n\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
][__],\n\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-B84UK6\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.001, "AbsoluteTiming" -> 0.001, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[MatchQ[{}, #]& , 
        Map[Cases[
          FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["stateVars"], 
          PatternTest[
            Pattern[Model`Catalog`var, 
             Blank[Symbol]], MemberQ[
             Map[
             StringDrop[#, -2]& , 
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars], 
             
             SymbolName[#]]& ][
            BlankSequence[]] :> Model`Catalog`var, Infinity]& , 
         Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Catalog_20231007-WMCGR2\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-9OYMAA\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20231007-4PW9Q8\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-KBDRFP\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-L6CURG\"\n]\n\n\nVerificationTest[\n\t\
SameQ[FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"], \
{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Catalog_20231007-OTAOFY\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], \
#]&, {\"BY\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-G5R6EN\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[MatchQ[Association, #]&,\n\t\t\tFlatten[\n\t\t\t\t{\n\t\t\t\t\tHead @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\t\t\t\tMap[Function @ \
Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models @ #, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\
\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-ADRCW8\"\n]\n\n\
\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`Catalog`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\t\
\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t\t\t],\
\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\
\t\t]\n\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\
\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-UR77BA\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\tMap[Context,\n\t\
\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Model`Catalog`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\
Model`Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-M9817Y\"\n]\n\n\nVerificationTest[\n\
\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\t\
Map[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"],\n\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Model`Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t\
]\n\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\
\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-SYKS8I\"\n\
]\n\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\tMap[Context,\
\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Model`Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t\
]\n\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\
\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-202AXM\"\n\
]\n\n\nVerificationTest[\n\tApply[And,\n\t\tMap[MatchQ[{}, #]&,\n\t\t\tMap[\n\
\t\t\t\tFunction[\n\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
Model`Catalog`var_Symbol,\n\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
][__],\n\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-B84UK6\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{
  3.905694552716633*^9, 3.905694712901308*^9, 3.905694898546816*^9, 
   3.905694929996964*^9, 3.905695003910491*^9, 3.905695488808337*^9, 
   3.905695891110814*^9, 3.905696101437316*^9, 3.905696132814722*^9, 
   3.905696183114203*^9, 3.90569623255184*^9, 3.9056963232413*^9, 
   3.905696644337583*^9, 3.905696698190757*^9, 3.905696777086122*^9, 
   3.905696865626886*^9, {3.905696915535713*^9, 3.9056969314252462`*^9}, 
   3.905696980146563*^9, 3.9056970126668453`*^9, 3.9056970846483307`*^9, 
   3.905697145775919*^9, 3.905697203293125*^9, 3.905697248173962*^9, 
   3.905697296105249*^9, 3.905697440252594*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"ef3d0a9c-2834-4f5d-8044-875e13779253"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "True", " ", "if", " ", "modelsExtraInfo", " ", "is", " ", "an", " ", 
    "association", " ", "and", " ", "each", " ", "model", " ", "inside", " ", 
    "modelsExtraInfo", " ", "is", " ", "an", " ", "association"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
   RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
    RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AllTrue", "[", 
        RowBox[{"modelsExtraInfo", ",", "AssociationQ"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"AllTrue", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"modelsExtraInfo", "[", "#", "]"}], "&"}], "/@", 
          RowBox[{"Keys", "[", "modelsExtraInfo", "]"}]}], ",", 
         "AssociationQ"}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.901354712476226*^9, 3.901354720626876*^9}, 
   3.901354757130762*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"f5ca1345-d64e-4932-bad5-b6dd8e1f4392"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20231007-GX0TLL\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20231007-GX0TLL"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.905694324811619*^9, 3.905694552766368*^9, 3.905694712964164*^9, 
   3.905694898592037*^9, 3.905694930048849*^9, 3.9056950039641113`*^9, 
   3.905695488859572*^9, 3.9056958911612587`*^9, 3.905696101489949*^9, 
   3.905696132859906*^9, 3.905696183160851*^9, 3.905696232605233*^9, 
   3.905696323292132*^9, 3.905696644390504*^9, 3.9056966982405*^9, 
   3.905696777132847*^9, 3.905696865680059*^9, {3.905696915588646*^9, 
   3.905696931473971*^9}, 3.9056969802004633`*^9, 3.9056970127191477`*^9, 
   3.905697084699421*^9, 3.9056971458296003`*^9, 3.9056972033508244`*^9, 
   3.9056972482276983`*^9, 3.905697296158381*^9, 3.905697440305818*^9},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"0add7910-24dc-4521-97cc-220a95e244db"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{
  3.905694324811619*^9, 3.905694552766368*^9, 3.905694712964164*^9, 
   3.905694898592037*^9, 3.905694930048849*^9, 3.9056950039641113`*^9, 
   3.905695488859572*^9, 3.9056958911612587`*^9, 3.905696101489949*^9, 
   3.905696132859906*^9, 3.905696183160851*^9, 3.905696232605233*^9, 
   3.905696323292132*^9, 3.905696644390504*^9, 3.9056966982405*^9, 
   3.905696777132847*^9, 3.905696865680059*^9, {3.905696915588646*^9, 
   3.905696931473971*^9}, 3.9056969802004633`*^9, 3.9056970127191477`*^9, 
   3.905697084699421*^9, 3.9056971458296003`*^9, 3.9056972033508244`*^9, 
   3.9056972482276983`*^9, 3.905697296158381*^9, 3.905697440307537*^9},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"13a735a7-e094-4fe8-bb5a-7d6f5e29aa4a"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo, \
AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#]&, \
Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo],\n\t\t\t\t\
AssociationQ\n\t\t\t]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo, \
AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#]&, \
Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo],\n\t\t\t\t\
AssociationQ\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-GX0TLL\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        AllTrue[
        FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo, 
         AssociationQ], 
        AllTrue[
         Map[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#]& , 
          Keys[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo]], 
         AssociationQ]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Catalog_20231007-WMCGR2\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-9OYMAA\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20231007-4PW9Q8\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-KBDRFP\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-L6CURG\"\n]\n\n\nVerificationTest[\n\t\
SameQ[FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"], \
{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Catalog_20231007-OTAOFY\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], \
#]&, {\"BY\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-G5R6EN\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[MatchQ[Association, #]&,\n\t\t\tFlatten[\n\t\t\t\t{\n\t\t\t\t\tHead @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\t\t\t\tMap[Function @ \
Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models @ #, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\
\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-ADRCW8\"\n]\n\n\
\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`Catalog`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\t\
\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t\t\t],\
\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\
\t\t]\n\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\
\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-UR77BA\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\tMap[Context,\n\t\
\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Model`Catalog`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\
Model`Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-M9817Y\"\n]\n\n\nVerificationTest[\n\
\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\t\
Map[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"],\n\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Model`Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t\
]\n\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\
\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-SYKS8I\"\n\
]\n\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\tMap[Context,\
\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Model`Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t\
]\n\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\
\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-202AXM\"\n\
]\n\n\nVerificationTest[\n\tApply[And,\n\t\tMap[MatchQ[{}, #]&,\n\t\t\tMap[\n\
\t\t\t\tFunction[\n\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
Model`Catalog`var_Symbol,\n\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
][__],\n\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-B84UK6\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo, \
AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#]&, \
Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo],\n\t\t\t\t\
AssociationQ\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-GX0TLL\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{
  3.905694552774993*^9, 3.905694712974832*^9, 3.905694898610021*^9, 
   3.905694930058084*^9, 3.905695003986463*^9, 3.905695488880294*^9, 
   3.905695891174282*^9, 3.9056961015014153`*^9, 3.905696132882473*^9, 
   3.905696183170414*^9, 3.905696232626093*^9, 3.905696323313064*^9, 
   3.90569664441143*^9, 3.9056966982513027`*^9, 3.9056967771596107`*^9, 
   3.905696865700835*^9, {3.905696915608995*^9, 3.905696931486293*^9}, 
   3.905696980221427*^9, 3.90569701273956*^9, 3.905697084711411*^9, 
   3.9056971458499517`*^9, 3.905697203372355*^9, 3.90569724824879*^9, 
   3.905697296180378*^9, 3.905697440326064*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"356170f1-6f22-46c4-8ad4-514d2cb9d77a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "True", " ", "if", " ", "models", " ", "in", " ", "modelsExtraInfo", " ", 
    "are", " ", "a", " ", "subset", " ", "of", " ", "those", " ", "defined", 
    " ", "in", " ", "models"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
   RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
    RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"SubsetQ", "[", 
       RowBox[{
        RowBox[{"Keys", "[", "models", "]"}], ",", 
        RowBox[{"Keys", "[", "modelsExtraInfo", "]"}]}], "]"}], 
      "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
    RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9013547750980167`*^9, 3.901354787461472*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"7aa2432c-8b1c-4da0-9390-74fe2051cbf3"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20231007-ET7U5Q\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20231007-ET7U5Q"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.905694328761187*^9, 3.9056945528211393`*^9, 3.905694713023183*^9, 
   3.905694898652639*^9, 3.9056949301078863`*^9, 3.9056950040398693`*^9, 
   3.905695488927182*^9, 3.905695891222559*^9, 3.9056961015544243`*^9, 
   3.905696132933597*^9, 3.905696183219165*^9, 3.9056962326763067`*^9, 
   3.905696323363738*^9, 3.905696644440468*^9, 3.9056966983007383`*^9, 
   3.905696777214817*^9, 3.905696865751478*^9, {3.905696915656033*^9, 
   3.90569693153223*^9}, 3.905696980275074*^9, 3.905697012790388*^9, 
   3.905697084761043*^9, 3.905697145902742*^9, 3.905697203422892*^9, 
   3.9056972482953978`*^9, 3.9056972962328176`*^9, 3.905697440373802*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"97ad39c3-2d6c-4200-ad75-4925a2b401ff"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{
  3.905694328761187*^9, 3.9056945528211393`*^9, 3.905694713023183*^9, 
   3.905694898652639*^9, 3.9056949301078863`*^9, 3.9056950040398693`*^9, 
   3.905695488927182*^9, 3.905695891222559*^9, 3.9056961015544243`*^9, 
   3.905696132933597*^9, 3.905696183219165*^9, 3.9056962326763067`*^9, 
   3.905696323363738*^9, 3.905696644440468*^9, 3.9056966983007383`*^9, 
   3.905696777214817*^9, 3.905696865751478*^9, {3.905696915656033*^9, 
   3.90569693153223*^9}, 3.905696980275074*^9, 3.905697012790388*^9, 
   3.905697084761043*^9, 3.905697145902742*^9, 3.905697203422892*^9, 
   3.9056972482953978`*^9, 3.9056972962328176`*^9, 3.905697440375304*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"030d5e32-6652-474a-8046-61e97e267930"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And, {SubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo]}]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And, {SubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo]}]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-ET7U5Q\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        SubsetQ[
         Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], 
         Keys[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo]]}]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Catalog_20231007-WMCGR2\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-9OYMAA\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20231007-4PW9Q8\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-KBDRFP\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-L6CURG\"\n]\n\n\nVerificationTest[\n\t\
SameQ[FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"], \
{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Catalog_20231007-OTAOFY\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], \
#]&, {\"BY\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-G5R6EN\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[MatchQ[Association, #]&,\n\t\t\tFlatten[\n\t\t\t\t{\n\t\t\t\t\tHead @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\t\t\t\tMap[Function @ \
Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models @ #, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\
\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-ADRCW8\"\n]\n\n\
\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`Catalog`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\t\
\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t\t\t],\
\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\
\t\t]\n\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\
\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-UR77BA\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\tMap[Context,\n\t\
\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Model`Catalog`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\
Model`Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-M9817Y\"\n]\n\n\nVerificationTest[\n\
\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\t\
Map[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"],\n\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Model`Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t\
]\n\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\
\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-SYKS8I\"\n\
]\n\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\tMap[Context,\
\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Model`Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t\
]\n\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\
\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-202AXM\"\n\
]\n\n\nVerificationTest[\n\tApply[And,\n\t\tMap[MatchQ[{}, #]&,\n\t\t\tMap[\n\
\t\t\t\tFunction[\n\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
Model`Catalog`var_Symbol,\n\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
][__],\n\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-B84UK6\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo, \
AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#]&, \
Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo],\n\t\t\t\t\
AssociationQ\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-GX0TLL\"\n]\n\n\nVerificationTest[\n\tApply[And, \
{SubsetQ[Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo]}]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-ET7U5Q\"\n]\n\n\nEndTestSection[]\n\
"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{
  3.905694552843795*^9, 3.905694713042626*^9, 3.905694898665399*^9, 
   3.905694930129017*^9, 3.90569500404911*^9, 3.9056954889401093`*^9, 
   3.9056958912430277`*^9, 3.9056961015757933`*^9, 3.9056961329426947`*^9, 
   3.90569618323949*^9, 3.905696232689046*^9, 3.90569632337437*^9, 
   3.9056966444879427`*^9, 3.9056966983210163`*^9, 3.9056967772239637`*^9, 
   3.9056968657639303`*^9, {3.905696915670013*^9, 3.905696931553648*^9}, 
   3.905696980283996*^9, 3.905697012798891*^9, 3.905697084782009*^9, 
   3.905697145912191*^9, 3.905697203435357*^9, 3.905697248306471*^9, 
   3.9056972962428617`*^9, 3.905697440385742*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"bc396e91-5722-4212-8089-235e520914f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"if", " ", "provided"}], ",", " ", 
    RowBox[{
     RowBox[{
     "initial", " ", "guess", " ", "for", " ", "Ewc", " ", "is", " ", "a", 
      " ", "vector", " ", "and", " ", "for", " ", "Epd", " ", "is", " ", 
      "2"}], "-", 
     RowBox[{"dimensional", " ", "array"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
   RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "@", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"KeyExistsQ", "[", 
             RowBox[{
              RowBox[{"modelsExtraInfo", "[", "#", "]"}], ",", 
              "\"\<initialGuess\>\""}], "]"}], "\[IndentingNewLine]", ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"KeyExistsQ", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"modelsExtraInfo", "[", "#", "]"}], "[", 
                   "\"\<initialGuess\>\"", "]"}], ",", "\"\<Ewc\>\""}], "]"}],
                 ",", 
                RowBox[{"VectorQ", "[", 
                 RowBox[{"\"\<Ewc\>\"", "/.", 
                  RowBox[{
                   RowBox[{"modelsExtraInfo", "[", "#", "]"}], "[", 
                   "\"\<initialGuess\>\"", "]"}]}], "]"}], " ", ",", "True"}],
                "]"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"KeyExistsQ", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"modelsExtraInfo", "[", "#", "]"}], "[", 
                   "\"\<initialGuess\>\"", "]"}], ",", "\"\<Epd\>\""}], "]"}],
                 ",", 
                RowBox[{"ArrayQ", "[", 
                 RowBox[{
                  RowBox[{"\"\<Epd\>\"", "/.", 
                   RowBox[{
                    RowBox[{"modelsExtraInfo", "[", "#", "]"}], "[", 
                    "\"\<initialGuess\>\"", "]"}]}], ",", "2"}], "]"}], " ", 
                ",", "True"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "True"}], 
           "\[IndentingNewLine]", "]"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "modelsExtraInfo", "]"}]}], 
        "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", ")"}]}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9056956216150846`*^9, 3.9056957682019167`*^9}, {
   3.9056960889724703`*^9, 3.905696089677657*^9}, {3.905696147662774*^9, 
   3.905696163312677*^9}, 3.9056962109674463`*^9, {3.905696310579076*^9, 
   3.905696313228223*^9}, 3.905696634927816*^9, {3.90569668301264*^9, 
   3.9056966853667994`*^9}, {3.9056967606279488`*^9, 3.905696767828306*^9}, {
   3.9056968452485743`*^9, 3.905696854968943*^9}, {3.9056968987319403`*^9, 
   3.9056969205314007`*^9}, {3.9056969635302258`*^9, 3.905696969360742*^9}, {
   3.905697000945491*^9, 3.9056970037001667`*^9}, {3.905697034803935*^9, 
   3.905697037152671*^9}, {3.905697072904751*^9, 3.905697072991639*^9}, {
   3.905697125270204*^9, 3.905697134702752*^9}, {3.905697171586047*^9, 
   3.90569719109569*^9}, {3.905697229738011*^9, 3.9056972334467907`*^9}, 
   3.905697370259923*^9, {3.905697402961384*^9, 3.905697421678081*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"15fcc1e4-c273-479b-9d8f-8e1bebec80f8"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20231007-7BZ2P8\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20231007-7BZ2P8"],
  Editable->False]], "Print",
 CellChangeTimes->{3.90569693160981*^9, 3.90569698034694*^9, 
  3.905697012854797*^9, 3.905697084837433*^9, 3.9056971459739323`*^9, 
  3.9056972036588907`*^9, 3.9056972483724546`*^9, 3.905697296308893*^9, 
  3.9056974404375877`*^9},
 CellLabel->
  "During evaluation of \
In[25]:=",ExpressionUUID->"995392c6-2087-40ab-ad50-ea6e4c687c5d"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.90569693160981*^9, 3.90569698034694*^9, 
  3.905697012854797*^9, 3.905697084837433*^9, 3.9056971459739323`*^9, 
  3.9056972036588907`*^9, 3.9056972483724546`*^9, 3.905697296308893*^9, 
  3.9056974404393177`*^9},
 CellLabel->
  "During evaluation of \
In[25]:=",ExpressionUUID->"449b4089-0a09-4441-a3fc-ddefb1b92ab8"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tFlatten[\n\t\t\tMap[\n\t\t\t\tFunction[\n\t\t\t\t\t\
If[KeyExistsQ[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo @ #, \
\"initialGuess\"],\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tIf[\n\t\t\t\t\t\t\t\t\
KeyExistsQ[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#][\"\
initialGuess\"], \"Ewc\"],\n\t\t\t\t\t\t\t\tVectorQ[\"Ewc\" /. \
FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#][\"initialGuess\"]]\
,\n\t\t\t\t\t\t\t\tTrue\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tIf[\n\t\t\t\t\t\t\t\t\
KeyExistsQ[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#][\"\
initialGuess\"], \"Epd\"],\n\t\t\t\t\t\t\t\tArrayQ[\"Epd\" /. \
FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#][\"initialGuess\"],\
 2],\n\t\t\t\t\t\t\t\tTrue\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTrue\
\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo\n\t\t\t]\n\t\t]\n\t\
]", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\tMap[\n\t\t\t\t\
Function[\n\t\t\t\t\t\
If[KeyExistsQ[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo @ #, \
\"initialGuess\"],\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tIf[\n\t\t\t\t\t\t\t\t\
KeyExistsQ[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#][\"\
initialGuess\"], \"Ewc\"],\n\t\t\t\t\t\t\t\tVectorQ[\"Ewc\" /. \
FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#][\"initialGuess\"]]\
,\n\t\t\t\t\t\t\t\tTrue\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tIf[\n\t\t\t\t\t\t\t\t\
KeyExistsQ[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#][\"\
initialGuess\"], \"Epd\"],\n\t\t\t\t\t\t\t\tArrayQ[\"Epd\" /. \
FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#][\"initialGuess\"],\
 2],\n\t\t\t\t\t\t\t\tTrue\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTrue\
\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo\n\t\t\t]\n\t\t]\n\t]\
\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-7BZ2P8\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Flatten[
        Map[If[
          KeyExistsQ[
           FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#], 
           "initialGuess"], {
           If[
            KeyExistsQ[
             FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#][
             "initialGuess"], "Ewc"], 
            VectorQ[
             ReplaceAll["Ewc", 
              FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#][
              "initialGuess"]]], True], 
           If[
            KeyExistsQ[
             FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#][
             "initialGuess"], "Epd"], 
            ArrayQ[
             ReplaceAll["Epd", 
              FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#][
              "initialGuess"]], 2], True]}, True]& , 
         Keys[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo]]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Catalog_20231007-WMCGR2\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-9OYMAA\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20231007-4PW9Q8\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-KBDRFP\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-L6CURG\"\n]\n\n\nVerificationTest[\n\t\
SameQ[FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"], \
{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Catalog_20231007-OTAOFY\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], \
#]&, {\"BY\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-G5R6EN\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[MatchQ[Association, #]&,\n\t\t\tFlatten[\n\t\t\t\t{\n\t\t\t\t\tHead @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\t\t\t\tMap[Function @ \
Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models @ #, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\
\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-ADRCW8\"\n]\n\n\
\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`Catalog`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\t\
\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t\t\t],\
\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\
\t\t]\n\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\
\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-UR77BA\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\tMap[Context,\n\t\
\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Model`Catalog`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\
Model`Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-M9817Y\"\n]\n\n\nVerificationTest[\n\
\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\t\
Map[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"],\n\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Model`Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t\
]\n\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\
\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-SYKS8I\"\n\
]\n\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\tMap[Context,\
\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Model`Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t\
]\n\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\
\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-202AXM\"\n\
]\n\n\nVerificationTest[\n\tApply[And,\n\t\tMap[MatchQ[{}, #]&,\n\t\t\tMap[\n\
\t\t\t\tFunction[\n\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
Model`Catalog`var_Symbol,\n\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
][__],\n\t\t\t\t\t\t\tModel`Catalog`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-B84UK6\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo, \
AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#]&, \
Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo],\n\t\t\t\t\
AssociationQ\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20231007-GX0TLL\"\n]\n\n\nVerificationTest[\n\tApply[And, \
{SubsetQ[Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo]}]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-ET7U5Q\"\n]\n\n\nVerificationTest[\n\
\tApply[And,\n\t\tFlatten[\n\t\t\tMap[\n\t\t\t\tFunction[\n\t\t\t\t\t\
If[KeyExistsQ[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo @ #, \
\"initialGuess\"],\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tIf[\n\t\t\t\t\t\t\t\t\
KeyExistsQ[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#][\"\
initialGuess\"], \"Ewc\"],\n\t\t\t\t\t\t\t\tVectorQ[\"Ewc\" /. \
FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#][\"initialGuess\"]]\
,\n\t\t\t\t\t\t\t\tTrue\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tIf[\n\t\t\t\t\t\t\t\t\
KeyExistsQ[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#][\"\
initialGuess\"], \"Epd\"],\n\t\t\t\t\t\t\t\tArrayQ[\"Epd\" /. \
FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#][\"initialGuess\"],\
 2],\n\t\t\t\t\t\t\t\tTrue\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTrue\
\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo\n\t\t\t]\n\t\t]\n\t]\
\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20231007-7BZ2P8\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905696931630176*^9, 3.905696980356526*^9, 
  3.9056970128753233`*^9, 3.905697084858054*^9, 3.9056971459835587`*^9, 
  3.9056972036835947`*^9, 3.9056972483820353`*^9, 3.905697296317934*^9, 
  3.90569744045683*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"c12fa0aa-ec90-497b-8184-27dbe700a982"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"End", "[", "]"}]], "Input",
 CellChangeTimes->{{3.890680295645965*^9, 3.89068029650622*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"1e489da7-03ac-4c09-a3b0-3f18678c417b"],

Cell[BoxData["\<\"Model`Catalog`\"\>"], "Output",
 CellChangeTimes->{
  3.9013550027628717`*^9, 3.901355123836164*^9, 3.9056924877355623`*^9, 
   3.905694207921567*^9, 3.9056943396640263`*^9, {3.905694536854838*^9, 
   3.905694552920712*^9}, 3.905694713125835*^9, 3.905694898764999*^9, 
   3.905694930206113*^9, 3.905695004128769*^9, 3.905695489040553*^9, 
   3.905695891376938*^9, 3.905696101770749*^9, 3.9056961330422*^9, 
   3.905696183326474*^9, 3.905696232779904*^9, 3.905696323466345*^9, 
   3.90569664457686*^9, 3.9056966984048357`*^9, 3.905696777323195*^9, 
   3.905696865866527*^9, {3.9056969157556467`*^9, 3.905696931660145*^9}, 
   3.905696980389101*^9, 3.905697012907206*^9, 3.905697084889184*^9, 
   3.905697146016797*^9, 3.90569720371307*^9, 3.905697248412467*^9, 
   3.9056972963401537`*^9, 3.905697440469305*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"6770eb00-ed3b-478c-8f42-e4284756c235"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"add", " ", 
   RowBox[{"Begin", "[", "\"\<Context`\>\"", "]"}], " ", "and", " ", 
   RowBox[{"End", "[", "]"}], " ", "to", " ", "wlt", " ", "file"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.890686194230386*^9, 3.890686228283702*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"d681ce4c-fe5c-46cc-a106-c3fb97c91dc9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"helper", " ", "functions"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"countLines", "[", "file_String", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"readStream", "=", 
        RowBox[{"OpenRead", "[", "file", "]"}]}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"n", "=", "1"}], ",", "\[IndentingNewLine]", "temp"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"While", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"temp", "=!=", "EndOfFile"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"temp", "=", 
          RowBox[{"ReadLine", "[", "readStream", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"n", "=", 
          RowBox[{"n", "+", "1"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Close", "/@", 
       RowBox[{"{", "readStream", "}"}]}], ";", "\[IndentingNewLine]", 
      "n"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.890681841946844*^9, 3.890681899849094*^9}, {
  3.890682055663522*^9, 3.890682084827585*^9}, {3.890683635625399*^9, 
  3.890683720295089*^9}, {3.890685425949465*^9, 3.890685434516119*^9}, {
  3.890686231117095*^9, 3.890686238212121*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"8480e291-f089-46a8-93b3-cdc5392f18f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"replaceNthRecord", "[", 
   RowBox[{"file_String", ",", "n_Integer", ",", "replaceWith_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"readStream", "=", 
       RowBox[{"OpenRead", "[", "file", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"writeStream", "=", 
       RowBox[{"OpenWrite", "[", 
        RowBox[{"file", "<>", "\"\<temp\>\""}], "]"}]}], ",", 
      "\[IndentingNewLine]", "temp"}], "\[IndentingNewLine]", "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"WriteLine", "[", 
        RowBox[{"writeStream", ",", 
         RowBox[{"ReadLine", "[", "readStream", "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"n", "-", "1"}], "}"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"WriteLine", "[", 
      RowBox[{"writeStream", ",", 
       RowBox[{
        RowBox[{"ReadLine", "[", "readStream", "]"}], "<>", "\"\< \\r\\n\>\"",
         "<>", "replaceWith"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"temp", "=!=", "EndOfFile"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"temp", "=", 
         RowBox[{"ReadLine", "[", "readStream", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"UnsameQ", "[", 
           RowBox[{"temp", ",", "EndOfFile"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"WriteLine", "[", 
           RowBox[{"writeStream", ",", "temp"}], "]"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", 
     RowBox[{"Close", "/@", 
      RowBox[{"{", 
       RowBox[{"readStream", ",", "writeStream"}], "}"}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8906824011137114`*^9, 3.890682405708049*^9}, {
   3.890683066049664*^9, 3.8906830825042677`*^9}, {3.89068319056032*^9, 
   3.890683191547068*^9}, {3.89068338518532*^9, 3.890683430044886*^9}, {
   3.890683477495555*^9, 3.89068350860789*^9}, {3.890683563263863*^9, 
   3.890683572999384*^9}, {3.8906837588959513`*^9, 3.890683769652152*^9}, 
   3.890683975431652*^9, 3.890684184728485*^9, {3.890684538464937*^9, 
   3.890684546403357*^9}, 3.8906847013731937`*^9, 3.890684736359234*^9, {
   3.890684917937912*^9, 3.890684918964259*^9}, {3.890685003978653*^9, 
   3.8906850058353167`*^9}, {3.890685081266893*^9, 3.890685086440845*^9}, {
   3.890685162742771*^9, 3.890685164959052*^9}, {3.890685207547077*^9, 
   3.890685210133041*^9}, {3.890685379823967*^9, 3.890685396833392*^9}, {
   3.89068547363831*^9, 3.890685483195992*^9}, {3.8906856724322433`*^9, 
   3.890685672699678*^9}, {3.890685793209527*^9, 3.890685826416944*^9}, 
   3.8906858923977957`*^9, {3.890685924003189*^9, 3.890685959055036*^9}, {
   3.890686016304421*^9, 3.890686073140353*^9}, {3.890686249638393*^9, 
   3.8906862512145*^9}, {3.905698717773871*^9, 
   3.90569871802812*^9}},ExpressionUUID->"c6d94536-d712-4817-8c56-\
b5a9e698596b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"insert", " ", "into", " ", "wlt", " ", "file"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"replaceNthRecord", "[", 
    RowBox[{
    "testFileName", ",", "1", ",", "\"\<Begin[\\\"Model`Catalog`\\\"]\>\""}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CopyFile", "[", 
     RowBox[{
      RowBox[{"testFileName", "<>", "\"\<temp\>\""}], ",", "testFileName", 
      ",", 
      RowBox[{"OverwriteTarget", "->", "True"}]}], "]"}], ";"}], "\n", 
   RowBox[{"DeleteFile", "[", 
    RowBox[{"testFileName", "<>", "\"\<temp\>\""}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"numLines", "=", 
    RowBox[{"countLines", "[", "testFileName", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"replaceNthRecord", "[", 
    RowBox[{"testFileName", ",", 
     RowBox[{"numLines", "-", "3"}], ",", " ", "\"\<End[]\>\""}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CopyFile", "[", 
     RowBox[{
      RowBox[{"testFileName", "<>", "\"\<temp\>\""}], ",", "testFileName", 
      ",", 
      RowBox[{"OverwriteTarget", "->", "True"}]}], "]"}], ";"}], "\n", 
   RowBox[{"DeleteFile", "[", 
    RowBox[{"testFileName", "<>", "\"\<temp\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.890684439578331*^9, {3.8906861781312037`*^9, 3.890686181646003*^9}, {
   3.890686261099564*^9, 3.8906862940387907`*^9}, 3.891156970368805*^9, 
   3.891216542664113*^9, 3.905695879756626*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"9e83fb3a-481f-4cb8-b330-c26292abdf5f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlttemp\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.901355002827455*^9, 3.901355123899284*^9, 3.905692487801529*^9, 
   3.9056942079877567`*^9, 3.905694343774407*^9, 3.90569455297969*^9, 
   3.905694713169059*^9, 3.905694898801916*^9, 3.905694930270505*^9, 
   3.905695004198998*^9, 3.905695489109564*^9, 3.905695891441764*^9, 
   3.905696101835351*^9, 3.905696133111472*^9, 3.905696183399007*^9, 
   3.905696232848813*^9, 3.9056963235374393`*^9, 3.9056966446479588`*^9, 
   3.905696698470151*^9, 3.905696777378627*^9, 3.905696865927328*^9, {
   3.905696915820363*^9, 3.905696931737939*^9}, 3.905696980452283*^9, 
   3.9056970129634113`*^9, 3.9056970849556303`*^9, 3.90569714607834*^9, 
   3.9056972037788057`*^9, 3.905697248482485*^9, 3.905697296398283*^9, 
   3.905697440533243*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"4274b291-358d-4b7c-ad89-868e7a034e58"],

Cell[BoxData["325"], "Output",
 CellChangeTimes->{
  3.901355002827455*^9, 3.901355123899284*^9, 3.905692487801529*^9, 
   3.9056942079877567`*^9, 3.905694343774407*^9, 3.90569455297969*^9, 
   3.905694713169059*^9, 3.905694898801916*^9, 3.905694930270505*^9, 
   3.905695004198998*^9, 3.905695489109564*^9, 3.905695891441764*^9, 
   3.905696101835351*^9, 3.905696133111472*^9, 3.905696183399007*^9, 
   3.905696232848813*^9, 3.9056963235374393`*^9, 3.9056966446479588`*^9, 
   3.905696698470151*^9, 3.905696777378627*^9, 3.905696865927328*^9, {
   3.905696915820363*^9, 3.905696931737939*^9}, 3.905696980452283*^9, 
   3.9056970129634113`*^9, 3.9056970849556303`*^9, 3.90569714607834*^9, 
   3.9056972037788057`*^9, 3.905697248482485*^9, 3.905697296398283*^9, 
   3.905697440545415*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"f6eef6fe-c91b-46ec-9b8f-f0eb9173e07f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlttemp\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.901355002827455*^9, 3.901355123899284*^9, 3.905692487801529*^9, 
   3.9056942079877567`*^9, 3.905694343774407*^9, 3.90569455297969*^9, 
   3.905694713169059*^9, 3.905694898801916*^9, 3.905694930270505*^9, 
   3.905695004198998*^9, 3.905695489109564*^9, 3.905695891441764*^9, 
   3.905696101835351*^9, 3.905696133111472*^9, 3.905696183399007*^9, 
   3.905696232848813*^9, 3.9056963235374393`*^9, 3.9056966446479588`*^9, 
   3.905696698470151*^9, 3.905696777378627*^9, 3.905696865927328*^9, {
   3.905696915820363*^9, 3.905696931737939*^9}, 3.905696980452283*^9, 
   3.9056970129634113`*^9, 3.9056970849556303`*^9, 3.90569714607834*^9, 
   3.9056972037788057`*^9, 3.905697248482485*^9, 3.905697296398283*^9, 
   3.905697440556797*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"dcc32b93-e7c6-4637-95bb-9298f313dcfc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "should", " ", "see", " ", "a", " ", "green", " ", "check", " ", "mark", 
    " ", "if", " ", "all", " ", "tests", " ", "pass"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"tr", "=", 
   RowBox[{"TestReport", "[", "testFileName", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.905698643389641*^9, 
  3.905698643744013*^9}},ExpressionUUID->"e077b813-cdd0-4bd1-8dfd-\
78f30a4f8df7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: Catalog.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["16", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: Catalog.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["16", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["16", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0.0184479999999999999`3.212344305126691", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                   "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: Catalog.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     2469608035409720145 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905697440623984*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "1aff24f9-1324-4288-9cde-a73cb41f496f", "TestID" -> 
         "Catalog_20231007-WMCGR2", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "dc490234-ae59-4ea9-abc3-ab6eaa022b64", "Input" -> 
         HoldForm[Get["FernandoDuarte`LongRunRisk`Model`Catalog`"]; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.011895`4.225879444205277, "CPUTimeUsed" -> 0.011881999999999948`, 
         "MemoryUsed" -> -182072, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 3513849701244365723 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9056974406362047`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "528fb4aa-4ec3-4cb7-b3b0-0469865ef18e", "TestID" -> 
         "Catalog_20231007-9OYMAA", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "c5f8dfdb-f744-420e-b269-b9d7680c236d", "Input" -> HoldForm[
           
           MemberQ[$ContextPath, 
            "FernandoDuarte`LongRunRisk`Model`Catalog`"]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000024`1.5307262395435957, "CPUTimeUsed" -> 
         0.000024000000000246047`, "MemoryUsed" -> 3104, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 5511837777929572459 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905697440636459*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "7a687402-fc3d-49c9-96cf-4c1c3296a7cf", "TestID" -> 
         "Catalog_20231007-4PW9Q8", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "8185c300-37d5-42fd-8a63-e50911fd8aae", "Input" -> HoldForm[
           Apply[And, 
            Map[StringQ, 
             Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000021`1.4727342925659115, "CPUTimeUsed" -> 0.00002299999999966218,
          "MemoryUsed" -> 2560, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 3053442074409871623 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9056974406366987`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "41704963-c0b9-429c-b989-dfcf4db99501", "TestID" -> 
         "Catalog_20231007-KBDRFP", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "b1887c54-b728-45b7-95b3-5374cccfcfd3", "Input" -> HoldForm[
           Apply[And, 
            Map[StringQ, 
             Flatten[
              Map[{
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["name"], 
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                "shortname"], 
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["bibRef"], 
                
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["desc"]}& , 
               Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000056`1.898703024838192, "CPUTimeUsed" -> 0.00005699999999997374, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 940300113137464795 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9056974406369686`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "19168f1a-18fc-4b4b-8e2c-e2f2fc544ade", "TestID" -> 
         "Catalog_20231007-L6CURG", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "d916dfa5-607b-4502-ad0e-d7288cbb9f9e", "Input" -> HoldForm[
           Apply[And, 
            Map[NumberQ, 
             Flatten[
              Map[ReplaceRepeated[
                Part[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                 "parameters"], 
                 Span[1, All], 2], 
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                "parameters"]]& , 
               Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.002538`3.55500661559068, "CPUTimeUsed" -> 0.0025380000000003733`, 
         "MemoryUsed" -> 190472, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 6907398573579812592 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905697440639742*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "33e60b9c-1a43-4511-964b-d0644e0e52a1", "TestID" -> 
         "Catalog_20231007-OTAOFY", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "3914ce82-f891-4701-8961-69bbde656b58", "Input" -> 
         HoldForm[
          FernandoDuarte`LongRunRisk`Model`Catalog`models["BY"]["stateVars"] === {
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x[
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx[
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000022`1.4929376786542, "CPUTimeUsed" -> 0.00002300000000010627, 
         "MemoryUsed" -> 2608, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 6564897302679940696 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90569744063996*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "8135c239-272d-4656-9e12-c95890d361cb", "TestID" -> 
         "Catalog_20231007-G5R6EN", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "3cf7bc76-ea23-4355-ad6a-f45105fd45c4", "Input" -> HoldForm[
           Apply[And, 
            Map[MemberQ[
              Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]& , {
             "BY", "BKY"}]]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.00002`1.4515449934959728, "CPUTimeUsed" -> 
         0.000021000000000270802`, "MemoryUsed" -> 2800, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 3653584025887514300 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9056974406401777`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "9f6d648f-bea5-44e0-9561-7b18488cb383", "TestID" -> 
         "Catalog_20231007-ADRCW8", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "2a08ac99-8edc-4e35-af86-da957a8fdfb2", "Input" -> HoldForm[
           Apply[And, 
            Map[MatchQ[Association, #]& , 
             Flatten[{
               Head[FernandoDuarte`LongRunRisk`Model`Catalog`models], 
               Map[Head[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#]]& , 
                Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]}]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000033`1.6690289377098768, "CPUTimeUsed" -> 0.00003399999999942338,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 9022667664207525843 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90569744064043*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "66355dcd-3de4-4123-89e8-d79a646c970b", "TestID" -> 
         "Catalog_20231007-UR77BA", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "14b8d778-868b-4ea3-9528-020f39c7ca06", "Input" -> HoldForm[
           Apply[And, 
            Map[Apply[And, 
              
              Map[# === 
               "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                 "stateVars"], PatternTest[
                   Pattern[Model`Catalog`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                    SymbolName[#]]& ][
                   BlankSequence[]] :> Model`Catalog`var, Infinity]]]]& , 
             Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000619`2.942205646852112, "CPUTimeUsed" -> 0.0006200000000000649, 
         "MemoryUsed" -> 4480, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 3792466513627372730 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9056974406412597`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "9c1919fd-3d2a-4f28-a6fc-a4f7fbcf68a7", "TestID" -> 
         "Catalog_20231007-M9817Y", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "a99a5a32-7878-4ab5-8def-aece8f7d2a9d", "Input" -> HoldForm[
           Apply[And, 
            Map[Apply[And, 
              Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                 "stateVars"], PatternTest[
                   Pattern[Model`Catalog`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                   BlankSequence[]][
                   BlankSequence[]] :> Model`Catalog`var, Infinity]]]]& , 
             Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000091`2.1095563901530854, "CPUTimeUsed" -> 0.0000910000000002853, 
         "MemoryUsed" -> 2664, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 6250762432463487684 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9056974406415586`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "02d120fd-307e-424d-8203-f25458726673", "TestID" -> 
         "Catalog_20231007-SYKS8I", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "9a7dbc66-051e-442d-bd16-06f7b482cdd6", "Input" -> HoldForm[
           Apply[And, 
            Map[Apply[And, 
              Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                 "parameters"], PatternTest[
                   Pattern[Model`Catalog`var, 
                    Blank[Symbol]], MemberQ[
                   FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Model`Catalog`var, Infinity]]]]& , 
             Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.001483`3.3216561488603737, "CPUTimeUsed" -> 0.001482999999999457, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 2908440143169408249 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90569744064325*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "8280fd59-d56b-4148-b53d-bb784f8a2077", "TestID" -> 
         "Catalog_20231007-202AXM", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "8b583c2d-5275-49c7-b5ee-5a6080f654e8", "Input" -> HoldForm[
           Apply[And, 
            Map[Apply[And, 
              Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                 "stateVars"], PatternTest[
                   Pattern[Model`Catalog`var, 
                    Blank[Symbol]], MemberQ[
                   FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Model`Catalog`var, Infinity]]]]& , 
             Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000221`2.4949072715171026, "CPUTimeUsed" -> 
         0.00022200000000038855`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 4989909843134350911 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9056974406436787`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "74732465-275c-4bd1-a2d4-7186b9d9a670", "TestID" -> 
         "Catalog_20231007-B84UK6", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "552c801f-4c0c-44e1-a846-a8529a75a676", "Input" -> HoldForm[
           Apply[And, 
            Map[MatchQ[{}, #]& , 
             Map[Cases[
               FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
               "stateVars"], PatternTest[
                 Pattern[Model`Catalog`var, 
                  Blank[Symbol]], MemberQ[
                  Map[
                  StringDrop[#, -2]& , 
                   FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                  SymbolName[#]]& ][
                 BlankSequence[]] :> Model`Catalog`var, Infinity]& , 
              Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.001278`3.257045851654375, "CPUTimeUsed" -> 0.0012750000000001371`, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7770677567019899398 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9056974406453047`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "d436021f-b4fb-4f07-b9da-fe0a9308c7f2", "TestID" -> 
         "Catalog_20231007-GX0TLL", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "4d03a590-d313-4277-97a7-b02db0fa6a0d", "Input" -> HoldForm[
           Apply[And, {
             AllTrue[
             FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo, 
              AssociationQ], 
             AllTrue[
              Map[
              FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#]& , 
               Keys[
               FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo]], 
              AssociationQ]}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.00003`1.627636252551652, "CPUTimeUsed" -> 
         0.00003399999999986747, "MemoryUsed" -> 2560, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 3939717387835964074 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905697440645597*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "9281ef43-bbef-4c9c-94f6-d760dac9978e", "TestID" -> 
         "Catalog_20231007-ET7U5Q", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "be37b7a7-fc89-4fdc-919a-1fa566c031b7", "Input" -> HoldForm[
           Apply[And, {
             SubsetQ[
              Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], 
              Keys[
              FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo]]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000058`1.9139429913949313, "CPUTimeUsed" -> 0.00005699999999997374,
          "MemoryUsed" -> 2976, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4918676251880836616 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9056974406459126`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "6b7aa2a1-ff1f-44e6-aca3-95c23ab65803", "TestID" -> 
         "Catalog_20231007-7BZ2P8", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "24da04cc-8712-40f9-a548-97ba3edfbbf7", "Input" -> HoldForm[
           Apply[And, 
            Flatten[
             Map[If[
               KeyExistsQ[
                FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#], 
                "initialGuess"], {
                If[
                 KeyExistsQ[
                  FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#][
                  "initialGuess"], "Ewc"], 
                 VectorQ[
                  ReplaceAll["Ewc", 
                   
                   FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#]\
["initialGuess"]]], True], 
                If[
                 KeyExistsQ[
                  FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#][
                  "initialGuess"], "Epd"], 
                 ArrayQ[
                  ReplaceAll["Epd", 
                   
                   FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#]\
["initialGuess"]], 2], True]}, True]& , 
              Keys[
              FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000059`1.9213670094741357, "CPUTimeUsed" -> 0.00006000000000039307,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>]|>, "FailureResults" -> <||>, 
    "TestsNotEvaluatedKeys" -> {}, "TestsFailedWrongResultsKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {2469608035409720145, 3513849701244365723, 
     5511837777929572459, 3053442074409871623, 940300113137464795, 
     6907398573579812592, 6564897302679940696, 3653584025887514300, 
     9022667664207525843, 3792466513627372730, 6250762432463487684, 
     2908440143169408249, 4989909843134350911, 7770677567019899398, 
     3939717387835964074, 4918676251880836616}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.901355002988624*^9, 3.901355124183124*^9, 3.9056924880983973`*^9, 
   3.905694208306662*^9, 3.905694345431549*^9, 3.905694553308058*^9, 
   3.905694713231209*^9, 3.905694898873486*^9, 3.905694930596937*^9, 
   3.9056950045019217`*^9, 3.9056954894369173`*^9, 3.9056958917633877`*^9, 
   3.905696102160306*^9, 3.9056961334955177`*^9, 3.905696183693726*^9, 
   3.905696233166881*^9, 3.905696323938437*^9, 3.905696645008439*^9, 
   3.905696698772952*^9, 3.905696777663446*^9, 3.905696866212088*^9, {
   3.905696916111224*^9, 3.905696932028946*^9}, 3.905696980740431*^9, 
   3.9056970133134537`*^9, 3.905697085249597*^9, 3.905697146362317*^9, 
   3.905697204145425*^9, 3.9056972487674932`*^9, 3.90569729669658*^9, 
   3.9056974408276854`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"2f114c33-c4a3-437f-b88b-e43dae3962bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"expected", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Flatten", "@", 
       RowBox[{"{", 
        RowBox[{"(", 
         RowBox[{"ReleaseHold", "@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
            RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
         ")"}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"jj", ",", "1", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "value", " ", "of", " ", "next", " ", "two", " ", "lines", " ", "should", 
    " ", "be", " ", "true"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"numEntries", "=", 
     RowBox[{
      RowBox[{"Dimensions", "[", "actual", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"numCol", "=", "5"}], ";", "\[IndentingNewLine]", 
    RowBox[{"numRows", "=", 
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{"numEntries", "/", "numCol"}], "]"}], "+", "1"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"TableForm", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ArrayReshape", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"TableForm", "[", 
              RowBox[{"{", 
               RowBox[{"#1", ",", "#2"}], "}"}], "]"}], "&"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"actual", ",", "\[IndentingNewLine]", "expected"}], 
             "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}], 
          "\[IndentingNewLine]", "}"}], "\[Transpose]"}], ",", 
        RowBox[{"{", 
         RowBox[{"numRows", ",", "numCol"}], "}"}], ",", "\"\<--\>\""}], 
       "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{"TableDepth", "\[Rule]", "1"}]}], " ", "]"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.905694462163437*^9, 3.905694478942039*^9}, {
  3.905697309999281*^9, 3.905697352099519*^9}, {3.905698637086853*^9, 
  3.905698637247707*^9}},ExpressionUUID->"6f5d8175-57fb-411e-9b73-\
603eef4e4ca2"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.9056966989797487`*^9, 3.905696777862329*^9, 3.9056968664213037`*^9, {
   3.905696916316288*^9, 3.905696932237523*^9}, 3.9056969809460993`*^9, 
   3.905697013333847*^9, 3.90569708544799*^9, 3.9056971465669193`*^9, 
   3.9056972041662483`*^9, 3.905697248964579*^9, {3.905697296895108*^9, 
   3.905697352847706*^9}, 3.905697441022415*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"ea6bb4e9-4122-4aa4-a95c-2b3d7b0b313a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.9056966989797487`*^9, 3.905696777862329*^9, 3.9056968664213037`*^9, {
   3.905696916316288*^9, 3.905696932237523*^9}, 3.9056969809460993`*^9, 
   3.905697013333847*^9, 3.90569708544799*^9, 3.9056971465669193`*^9, 
   3.9056972041662483`*^9, 3.905697248964579*^9, {3.905697296895108*^9, 
   3.905697352847706*^9}, 3.905697441024789*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"09e88601-a655-4021-a1e5-4d494edc5492"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interactive Tests", "Subsection",
 CellChangeTimes->{{3.889905622471089*^9, 3.889905629759961*^9}, {
  3.889972063478182*^9, 
  3.889972065236586*^9}},ExpressionUUID->"2c4a83cf-8af5-4d19-89ae-\
a864a258310f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"packageFileName", "=", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DirectoryName", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "2"}], "]"}], ",", 
     "\"\<Kernel\>\"", ",", "\"\<Model\>\"", ",", 
     RowBox[{
      RowBox[{"FileBaseName", "[", 
       RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", "\"\<.wl\>\""}]}],
     "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", 
  RowBox[{
   RowBox[{"\"\<FernandoDuarte`LongRunRisk`Model`\>\"", "<>", 
    RowBox[{"FileBaseName", "[", 
     RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", "\"\<`\>\""}], ",", 
   "packageFileName"}], "]"}]}], "Input",
 CellChangeTimes->{{3.889968360919714*^9, 3.889968361169221*^9}, {
   3.889998753242611*^9, 3.8899987613556004`*^9}, 3.890825576987958*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"f275bdc7-d1c5-4b14-9c2f-42b3fa65a747"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Kernel/Model/Catalog.wl\"\>"], "Output",
 CellChangeTimes->{3.9013549740108128`*^9, 3.9056974613403387`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"9a20315a-d0d5-4045-beab-1cf422d85f63"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Keys", " ", "are", " ", "strings"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{"StringQ", "/@", 
     RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{
  3.89000889839254*^9, {3.890016339728188*^9, 3.890016342139681*^9}, {
   3.893004161637231*^9, 3.893004161876924*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"78177850-499e-456b-b442-fad780dafdf0"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.901354974151864*^9, 3.9056974615442963`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"02ea12a4-5fef-4ed9-a3ec-8edae7c37b64"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"string", " ", "fields"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{"StringQ", "/@", 
     RowBox[{"Flatten", "@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"models", "[", "#", "]"}], "[", "\"\<name\>\"", "]"}], 
           ",", 
           RowBox[{
            RowBox[{"models", "[", "#", "]"}], "[", "\"\<shortname\>\"", 
            "]"}], ",", 
           RowBox[{
            RowBox[{"models", "[", "#", "]"}], "[", "\"\<bibRef\>\"", "]"}], 
           ",", 
           RowBox[{
            RowBox[{"models", "[", "#", "]"}], "[", "\"\<desc\>\"", "]"}]}], 
          "}"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}]}], ")"}]}]}]], "Input",\

 CellChangeTimes->{{3.890008770382118*^9, 3.890008858894733*^9}, {
  3.890016345133547*^9, 3.8900163569166937`*^9}, {3.893003226448749*^9, 
  3.8930032321343946`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"a17059c2-5416-45b1-b84e-0c2f842f7fb5"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.901354974157668*^9, 3.90569746155824*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"ad9b7d0b-8d56-4025-bd8f-ebd2a87399dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"parameters", " ", "evaluate", " ", "to", " ", "numbers"}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{"NumberQ", "/@", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"models", "[", "#", "]"}], "[", "\"\<parameters\>\"", 
            "]"}], "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "2"}], "]"}], "]"}], "//.", 
          RowBox[{
           RowBox[{"models", "[", "#", "]"}], "[", "\"\<parameters\>\"", 
           "]"}]}], ")"}], "&"}], "/@", 
       RowBox[{"Keys", "[", "models", "]"}]}], "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.893002442739602*^9, 3.8930024527246227`*^9}, {
  3.893003235556836*^9, 3.893003243137875*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"eac6cf31-dd90-40a1-b538-ae578852c33b"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.901354974164603*^9, 3.905697461572413*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"a204c650-669f-46ba-a03c-07e5b72d2f94"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"can", " ", "find", " ", "some", " ", "models"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"Keys", "[", "models", "]"}], ",", "#"}], "]"}], "&"}], "/@", 
     
     RowBox[{"{", 
      RowBox[{"\"\<BY\>\"", ",", "\"\<BKY\>\""}], "}"}]}], ")"}]}]}]], "Input",\

 CellChangeTimes->{{3.8900087062162313`*^9, 3.890008740193614*^9}, {
  3.89001637048425*^9, 3.890016372993977*^9}, {3.893003256321348*^9, 
  3.893003261862228*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"78983d07-8f42-43d9-a50f-d26a03b2ee5c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.901354974170619*^9, 3.905697461578154*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"f5791620-cfce-4363-96bd-2622df93dcd2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"models", " ", "is", " ", "an", " ", "association"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"AllTrue", "[", 
    RowBox[{"models", ",", "AssociationQ"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "each", " ", "model", " ", "inside", " ", "models", " ", "is", " ", "an", 
     " ", "association"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"AllTrue", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"models", "[", "#", "]"}], "&"}], "/@", 
      RowBox[{"Keys", "[", "models", "]"}]}], ",", "AssociationQ"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8900086430073547`*^9, 3.890008684982678*^9}, {
  3.890010177349143*^9, 3.890010179091837*^9}, {3.8900163791247263`*^9, 
  3.890016449580503*^9}, {3.893003265285705*^9, 3.893003296133358*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"33533fdf-b808-460b-a76c-9a554476db8f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.901354974177949*^9, 3.9056974615952168`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"b8813f5c-76c6-49bb-8848-75764aad10d8"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.901354974177949*^9, 3.905697461597653*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"2be67d13-101a-4c1f-ae88-794b6292a4e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "exogenous", " ", "variables", " ", "are", " ", "in", " ", 
    "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"And", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
            "#", "===", 
             "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}]\
, ")"}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"Context", "/@", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"models", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
               "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"var_Symbol", "?", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                  ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}],
              "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.893001201934902*^9, 3.893001214021667*^9}, {
   3.893001245798745*^9, 3.8930012743606873`*^9}, {3.893001352341578*^9, 
   3.893001386197197*^9}, {3.893001448430169*^9, 3.893001448726687*^9}, 
   3.8930026482885447`*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"0ecadbe4-cf71-476b-8c76-ee242fab4284"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.901354974181698*^9, 3.905697461603252*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"2c3b678d-43e5-43fd-a164-a0e898255c50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "shocks", " ", "are", " ", "in", " ", "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"And", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
            "#", "===", "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], 
            ")"}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"Context", "/@", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"models", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
               "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"var_Symbol", "?", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
           ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{
  3.893001499960679*^9, {3.893002667440094*^9, 3.89300269939427*^9}, {
   3.893003083367228*^9, 3.893003083692607*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"5497c17b-b2dd-4e7c-a7af-d730dba6c11b"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.901354974190486*^9, 3.905697461617276*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"52977b56-daeb-49f4-985e-4e389920f593"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "parameters", " ", "are", " ", "in", " ", "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "\"\<parameters\>\"", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"And", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
             "#", "===", 
              "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], ")"}],
             "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{"Context", "/@", 
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"models", "[", "#", "]"}], "[", "\"\<parameters\>\"", 
                "]"}], ",", 
               RowBox[{
                RowBox[{"var_Symbol", "?", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                  ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], ")"}]}],
           ")"}]}], ")"}], "&"}], "/@", 
      RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"And", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
             "#", "===", 
              "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], ")"}],
             "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{"Context", "/@", 
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"models", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
                "]"}], ",", 
               RowBox[{
                RowBox[{"var_Symbol", "?", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                  ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], ")"}]}],
           ")"}]}], ")"}], "&"}], "/@", 
      RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{
  3.893001501399847*^9, {3.893002703969759*^9, 3.893002740019191*^9}, {
   3.893003056880762*^9, 3.893003109272599*^9}, {3.893003787588058*^9, 
   3.893003788104986*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"602c7d97-d584-412d-b870-0ca50055aa97"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.901354974194149*^9, 3.905697461623597*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"31d160cc-095f-46b0-ba66-475dc7a4e1dc"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.901354974194149*^9, 3.9056974616255693`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"c367b73d-760c-4ad1-9e9f-204a87684932"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "state", " ", "variables", " ", "do", " ", "not", " ", "have", " ", "any", 
    " ", "endogenous", " ", "variables"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"MatchQ", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", "#"}], "]"}], "&"}], "/@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cases", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"models", "[", "#", "]"}], "[", "\"\<stateVars\>\"", "]"}],
           ",", 
          RowBox[{
           RowBox[{
            RowBox[{"var_Symbol", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                  "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                 RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
              ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
         "]"}], "&"}], "/@", 
       RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.89300111387222*^9, 3.8930011727459707`*^9}, {
   3.893001247830225*^9, 3.893001299678648*^9}, {3.893001353751255*^9, 
   3.8930015072417727`*^9}, {3.893002707727394*^9, 3.893002708411419*^9}, {
   3.893002748062245*^9, 3.893002826831513*^9}, 3.89300297523416*^9, {
   3.893003086535989*^9, 3.893003086763905*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"1a2dcded-7e53-422c-80f9-ab1140dea2c3"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.901354974197874*^9, 3.9056974616413517`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"c878913c-268c-49b7-9164-e2102d431791"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"modelsExtraInfo", " ", "is", " ", "an", " ", "association"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"AllTrue", "[", 
    RowBox[{"modelsExtraInfo", ",", "AssociationQ"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "each", " ", "model", " ", "inside", " ", "modelsExtraInfo", " ", "is", 
     " ", "an", " ", "association"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"AllTrue", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"modelsExtraInfo", "[", "#", "]"}], "&"}], "/@", 
      RowBox[{"Keys", "[", "modelsExtraInfo", "]"}]}], ",", "AssociationQ"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.901353583738072*^9, 3.901353594897225*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"22c0137c-bdbb-4e8a-919e-b9ba199344a5"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.901354974201576*^9, 3.905697461651725*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"1be75156-fee5-4691-83da-bdb1818e5173"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.901354974201576*^9, 3.9056974616539097`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"a4d07c61-37af-43b7-9634-60ca4743f564"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "models", " ", "in", " ", "modelsExtraInfo", " ", "are", " ", "a", " ", 
    "subset", " ", "of", " ", "those", " ", "defined", " ", "in", " ", 
    "models"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"SubsetQ", "[", 
   RowBox[{
    RowBox[{"Keys", "[", "models", "]"}], ",", 
    RowBox[{"Keys", "[", "modelsExtraInfo", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.901353606406434*^9, 3.901353651160013*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"5d0d6c37-c913-4696-b5ea-fa4bc8e7f5f1"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.901354974225315*^9, 3.905697461664894*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"fbd3eba3-87fc-4a67-a5e8-031e1639a007"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"if", " ", "provided"}], ",", " ", 
    RowBox[{
     RowBox[{
     "initial", " ", "guess", " ", "for", " ", "Ewc", " ", "is", " ", "a", 
      " ", "vector", " ", "and", " ", "for", " ", "Epd", " ", "is", " ", 
      "2"}], "-", 
     RowBox[{"dimensional", " ", "array"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{"Flatten", "@", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"KeyExistsQ", "[", 
           RowBox[{
            RowBox[{"modelsExtraInfo", "[", "#", "]"}], ",", 
            "\"\<initialGuess\>\""}], "]"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"KeyExistsQ", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"modelsExtraInfo", "[", "#", "]"}], "[", 
                 "\"\<initialGuess\>\"", "]"}], ",", "\"\<Ewc\>\""}], "]"}], 
              ",", 
              RowBox[{"VectorQ", "[", 
               RowBox[{"\"\<Ewc\>\"", "/.", 
                RowBox[{
                 RowBox[{"modelsExtraInfo", "[", "#", "]"}], "[", 
                 "\"\<initialGuess\>\"", "]"}]}], "]"}], " ", ",", "True"}], 
             "]"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"KeyExistsQ", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"modelsExtraInfo", "[", "#", "]"}], "[", 
                 "\"\<initialGuess\>\"", "]"}], ",", "\"\<Epd\>\""}], "]"}], 
              ",", 
              RowBox[{"ArrayQ", "[", 
               RowBox[{
                RowBox[{"\"\<Epd\>\"", "/.", 
                 RowBox[{
                  RowBox[{"modelsExtraInfo", "[", "#", "]"}], "[", 
                  "\"\<initialGuess\>\"", "]"}]}], ",", "2"}], "]"}], " ", 
              ",", "True"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "True"}], 
         "\[IndentingNewLine]", "]"}], "&"}], "/@", 
       RowBox[{"Keys", "[", "modelsExtraInfo", "]"}]}], "\[IndentingNewLine]",
       ")"}]}], "\[IndentingNewLine]", ")"}]}]}]], "Input",
 CellChangeTimes->{{3.901353710509602*^9, 3.901353858822919*^9}, {
   3.901353922804742*^9, 3.9013539583277817`*^9}, {3.9013540371889668`*^9, 
   3.901354054019368*^9}, {3.901354592688126*^9, 3.901354622947588*^9}, {
   3.90135498400948*^9, 3.901354986990878*^9}, 3.905697389007025*^9, {
   3.905697427905238*^9, 3.905697428289213*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"6cc10cde-a6cb-404a-b3d1-b39522e85b5a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.9013549742287703`*^9, 3.901354987450778*^9}, 
   3.9056974616708193`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"1ca4e21e-fc0c-415f-9685-ec825afa766c"]
}, Open  ]]
}, Closed]]
},
WindowSize->{1397, 808},
WindowMargins->{{Automatic, 183}, {Automatic, 43}},
WindowStatusArea->"",
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.25 Inherited,
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9463f144-165a-4c11-9859-b1ba37118027"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 215, 4, 37, "Input",ExpressionUUID->"5936db62-753d-4c20-a941-1dfb10c21e69"],
Cell[776, 26, 1926, 41, 142, "Input",ExpressionUUID->"1f20a6f1-c8fe-4d25-91dc-21cad8616c89"],
Cell[CellGroupData[{
Cell[2727, 71, 255, 4, 67, "Subsection",ExpressionUUID->"bc721a90-5248-4709-baf0-508070e5c013"],
Cell[2985, 77, 341, 9, 37, "Input",ExpressionUUID->"61e9a1c2-4ad4-4fe4-8929-2a7bfa852efa"],
Cell[CellGroupData[{
Cell[3351, 90, 741, 13, 64, "Input",ExpressionUUID->"7373936c-ff06-42f3-99c4-9976b014d9be"],
Cell[4095, 105, 944, 13, 42, "Output",ExpressionUUID->"17f00b3a-69f0-423f-bb0b-ef619f39d59b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5076, 123, 251, 4, 37, "Input",ExpressionUUID->"56243fb4-4478-4214-a53b-c438a5bbcfe2"],
Cell[5330, 129, 911, 13, 42, "Output",ExpressionUUID->"818f463e-1eae-4357-b656-2e30de6a1bd5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6278, 147, 1936, 31, 116, "Input",ExpressionUUID->"9f314737-f9fe-4d9e-8551-523b0929d53e"],
Cell[CellGroupData[{
Cell[8239, 182, 987, 18, 29, "Print",ExpressionUUID->"373d0b3c-08c7-41c5-99c5-47f7ac564fa0"],
Cell[9229, 202, 886, 14, 29, "Print",ExpressionUUID->"182365f1-84dd-464e-8c92-8d4e3a56ea75"]
}, Open  ]],
Cell[10130, 219, 5431, 96, 42, "Output",ExpressionUUID->"a3b2dbcf-fcb2-4758-95fc-46f550340464"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15598, 320, 1278, 23, 90, "Input",ExpressionUUID->"30ea8f81-e3a5-4912-928a-3a488ce6e518"],
Cell[CellGroupData[{
Cell[16901, 347, 994, 18, 29, "Print",ExpressionUUID->"5c8131a9-6678-4e60-80fe-b49284f93dd8"],
Cell[17898, 367, 889, 14, 29, "Print",ExpressionUUID->"3c50c2c3-c2c9-4ff6-a7e2-bd5bd658e620"]
}, Open  ]],
Cell[18802, 384, 5625, 100, 42, "Output",ExpressionUUID->"e0d23e61-f134-472b-84b2-4fd07ff42221"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24464, 489, 2196, 36, 116, "Input",ExpressionUUID->"f65e45e8-2582-4d00-8615-d27896add0d0"],
Cell[CellGroupData[{
Cell[26685, 529, 990, 18, 29, "Print",ExpressionUUID->"9af7e38e-bb1a-4a91-968e-b5b687056c17"],
Cell[27678, 549, 887, 14, 29, "Print",ExpressionUUID->"e0b6be27-6422-494d-a905-69eea9a81256"]
}, Open  ]],
Cell[28580, 566, 5866, 106, 42, "Output",ExpressionUUID->"845a9662-0950-449e-bef4-c6771584f444"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34483, 677, 1570, 38, 142, "Input",ExpressionUUID->"5d749a31-d7a1-48d2-a85b-e58e3fb2c847"],
Cell[CellGroupData[{
Cell[36078, 719, 986, 18, 29, "Print",ExpressionUUID->"3ba8c955-46e8-4550-acdb-95b9deceb7db"],
Cell[37067, 739, 884, 14, 29, "Print",ExpressionUUID->"f45e42f0-7843-4b6f-997d-d4f29febd27c"]
}, Open  ]],
Cell[37966, 756, 7677, 133, 42, "Output",ExpressionUUID->"0f85a0ac-1e9f-4369-a90d-e16a3ade92c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45680, 894, 2323, 46, 116, "Input",ExpressionUUID->"9a7acfd9-2870-4210-a7af-7c10ed2af5d1"],
Cell[CellGroupData[{
Cell[48028, 944, 985, 18, 29, "Print",ExpressionUUID->"00ce0b76-1751-4af7-b56f-9261181f1179"],
Cell[49016, 964, 882, 14, 29, "Print",ExpressionUUID->"8fb8dab6-421c-42c3-9970-f9d545943b83"]
}, Open  ]],
Cell[49913, 981, 7804, 138, 42, "Output",ExpressionUUID->"72ff96d1-3c71-472e-86a9-63fb804a6919"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57754, 1124, 1555, 34, 168, "Input",ExpressionUUID->"3aa8b5cd-154c-4923-aed4-60a60049060a"],
Cell[CellGroupData[{
Cell[59334, 1162, 989, 18, 29, "Print",ExpressionUUID->"47335b5b-2a6d-44cc-88b6-098d2b49c19a"],
Cell[60326, 1182, 884, 14, 29, "Print",ExpressionUUID->"f3855eda-e49a-43e8-8343-5b12dfd64995"]
}, Open  ]],
Cell[61225, 1199, 8063, 137, 42, "Output",ExpressionUUID->"12ad515d-e1c2-4144-826c-d068deafef7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69325, 1341, 1281, 27, 116, "Input",ExpressionUUID->"4ebbc95c-22ea-48d7-bdec-0d430d2b154f"],
Cell[CellGroupData[{
Cell[70631, 1372, 994, 18, 29, "Print",ExpressionUUID->"2d383271-ae28-4d5c-87cc-e62a1faea65d"],
Cell[71628, 1392, 893, 14, 29, "Print",ExpressionUUID->"7284f96b-f58f-4bd5-8abe-a126418ee2af"]
}, Open  ]],
Cell[72536, 1409, 7638, 133, 42, "Output",ExpressionUUID->"f7426e02-a81a-4f7d-8dc0-3e4f7705110b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80211, 1547, 1822, 38, 116, "Input",ExpressionUUID->"0cc2f06b-6e8f-4978-97cc-c47753fea3f2"],
Cell[CellGroupData[{
Cell[82058, 1589, 984, 18, 29, "Print",ExpressionUUID->"ae9696f1-59f9-422d-8738-f850304172e1"],
Cell[83045, 1609, 881, 14, 29, "Print",ExpressionUUID->"c5e05aac-745e-49f5-af09-c5cf4085f219"]
}, Open  ]],
Cell[83941, 1626, 8660, 146, 42, "Output",ExpressionUUID->"0d943af1-a8c9-4fa8-a4d5-3f1f48ca92dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92638, 1777, 2497, 59, 246, "Input",ExpressionUUID->"c37f51a1-837c-4f11-a194-78705f4642f7"],
Cell[CellGroupData[{
Cell[95160, 1840, 985, 18, 29, "Print",ExpressionUUID->"80b96aca-1ca2-4186-a62b-70d6333b17a4"],
Cell[96148, 1860, 884, 14, 29, "Print",ExpressionUUID->"ba703129-a455-4eba-924b-99013af4a067"]
}, Open  ]],
Cell[97047, 1877, 11298, 189, 42, "Output",ExpressionUUID->"ed412ef2-ea9c-410d-9854-1009f7c728fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108382, 2071, 2117, 52, 220, "Input",ExpressionUUID->"21e8aec5-4a2d-4eec-a0e6-4a0295241e7d"],
Cell[CellGroupData[{
Cell[110524, 2127, 986, 18, 29, "Print",ExpressionUUID->"ba9c1901-5ef8-4ad8-8ca5-0173ac40e918"],
Cell[111513, 2147, 883, 14, 29, "Print",ExpressionUUID->"dbcd045e-1a84-442f-87d8-306537074f1e"]
}, Open  ]],
Cell[112411, 2164, 11315, 185, 42, "Output",ExpressionUUID->"044d33ce-120b-4571-a9fb-24380e3599ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123763, 2354, 3817, 93, 532, "Input",ExpressionUUID->"67116dee-9a87-405d-93eb-27ea07c14940"],
Cell[CellGroupData[{
Cell[127605, 2451, 982, 18, 29, "Print",ExpressionUUID->"690d7bb6-442e-4c39-bd86-54cce7495bd8"],
Cell[128590, 2471, 879, 14, 29, "Print",ExpressionUUID->"3be9f129-5603-4815-b2c6-52cffc350a4b"]
}, Open  ]],
Cell[129484, 2488, 12204, 195, 42, "Output",ExpressionUUID->"b1af25b8-6fbb-41fa-bfd7-a4f456c0b679"],
Cell[CellGroupData[{
Cell[141713, 2687, 982, 18, 29, "Print",ExpressionUUID->"6cd5a5d0-184a-4637-ac22-5f27cf0c7306"],
Cell[142698, 2707, 879, 14, 29, "Print",ExpressionUUID->"d0e67179-1a83-43ea-8f05-ddc0f824397a"]
}, Open  ]],
Cell[143592, 2724, 12982, 206, 42, "Output",ExpressionUUID->"3591f039-ca68-41a1-a89a-8fc7d4e338d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156611, 2935, 2261, 53, 246, "Input",ExpressionUUID->"eeb0f7ac-c9ae-4068-9a86-aa0d4212e5fe"],
Cell[CellGroupData[{
Cell[158897, 2992, 993, 18, 29, "Print",ExpressionUUID->"6f21c83e-5283-4af4-ac1a-7154125bc483"],
Cell[159893, 3012, 888, 14, 29, "Print",ExpressionUUID->"26412b6f-47f1-4048-9b52-d45c2a882b41"]
}, Open  ]],
Cell[160796, 3029, 13870, 222, 42, "Output",ExpressionUUID->"ef3d0a9c-2834-4f5d-8044-875e13779253"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174703, 3256, 1316, 30, 220, "Input",ExpressionUUID->"f5ca1345-d64e-4932-bad5-b6dd8e1f4392"],
Cell[CellGroupData[{
Cell[176044, 3290, 988, 18, 29, "Print",ExpressionUUID->"0add7910-24dc-4521-97cc-220a95e244db"],
Cell[177035, 3310, 885, 14, 29, "Print",ExpressionUUID->"13a735a7-e094-4fe8-bb5a-7d6f5e29aa4a"]
}, Open  ]],
Cell[177935, 3327, 13214, 213, 42, "Output",ExpressionUUID->"356170f1-6f22-46c4-8ad4-514d2cb9d77a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191186, 3545, 1017, 21, 194, "Input",ExpressionUUID->"7aa2432c-8b1c-4da0-9390-74fe2051cbf3"],
Cell[CellGroupData[{
Cell[192228, 3570, 991, 18, 29, "Print",ExpressionUUID->"97ad39c3-2d6c-4200-ad75-4925a2b401ff"],
Cell[193222, 3590, 888, 14, 29, "Print",ExpressionUUID->"030d5e32-6652-474a-8046-61e97e267930"]
}, Open  ]],
Cell[194125, 3607, 13011, 207, 42, "Output",ExpressionUUID->"bc396e91-5722-4212-8089-235e520914f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207173, 3819, 3753, 77, 454, "Input",ExpressionUUID->"15fcc1e4-c273-479b-9d8f-8e1bebec80f8"],
Cell[CellGroupData[{
Cell[210951, 3900, 558, 12, 29, "Print",ExpressionUUID->"995392c6-2087-40ab-ad50-ea6e4c687c5d"],
Cell[211512, 3914, 455, 8, 29, "Print",ExpressionUUID->"449b4089-0a09-4441-a3fc-ddefb1b92ab8"]
}, Open  ]],
Cell[211982, 3925, 15954, 255, 42, "Output",ExpressionUUID->"c12fa0aa-ec90-497b-8184-27dbe700a982"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227973, 4185, 195, 3, 37, "Input",ExpressionUUID->"1e489da7-03ac-4c09-a3b0-3f18678c417b"],
Cell[228171, 4190, 907, 13, 42, "Output",ExpressionUUID->"6770eb00-ed3b-478c-8f42-e4284756c235"]
}, Open  ]],
Cell[229093, 4206, 356, 7, 37, "Input",ExpressionUUID->"d681ce4c-fe5c-46cc-a106-c3fb97c91dc9"],
Cell[229452, 4215, 1502, 33, 402, "Input",ExpressionUUID->"8480e291-f089-46a8-93b3-cdc5392f18f2"],
Cell[230957, 4250, 3236, 67, 532, "Input",ExpressionUUID->"c6d94536-d712-4817-8c56-b5a9e698596b"],
Cell[CellGroupData[{
Cell[234218, 4321, 1563, 37, 246, "Input",ExpressionUUID->"9e83fb3a-481f-4cb8-b330-c26292abdf5f"],
Cell[235784, 4360, 1100, 19, 69, "Output",ExpressionUUID->"4274b291-358d-4b7c-ad89-868e7a034e58"],
Cell[236887, 4381, 866, 13, 42, "Output",ExpressionUUID->"f6eef6fe-c91b-46ec-9b8f-f0eb9173e07f"],
Cell[237756, 4396, 1100, 19, 69, "Output",ExpressionUUID->"dcc32b93-e7c6-4637-95bb-9298f313dcfc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238893, 4420, 435, 11, 64, "Input",ExpressionUUID->"e077b813-cdd0-4bd1-8dfd-78f30a4f8df7"],
Cell[239331, 4433, 30552, 574, 76, "Output",ExpressionUUID->"2f114c33-c4a3-437f-b88b-e43dae3962bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[269920, 5012, 3379, 90, 480, "Input",ExpressionUUID->"6f5d8175-57fb-411e-9b73-603eef4e4ca2"],
Cell[273302, 5104, 470, 7, 42, "Output",ExpressionUUID->"ea6bb4e9-4122-4aa4-a95c-2b3d7b0b313a"],
Cell[273775, 5113, 470, 7, 42, "Output",ExpressionUUID->"09e88601-a655-4021-a1e5-4d494edc5492"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[274294, 5126, 214, 4, 67, "Subsection",ExpressionUUID->"2c4a83cf-8af5-4d19-89ae-a864a258310f"],
Cell[CellGroupData[{
Cell[274533, 5134, 930, 21, 64, "Input",ExpressionUUID->"f275bdc7-d1c5-4b14-9c2f-42b3fa65a747"],
Cell[275466, 5157, 270, 3, 42, "Output",ExpressionUUID->"9a20315a-d0d5-4045-beab-1cf422d85f63"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275773, 5165, 479, 12, 64, "Input",ExpressionUUID->"78177850-499e-456b-b442-fad780dafdf0"],
Cell[276255, 5179, 175, 2, 42, "Output",ExpressionUUID->"02ea12a4-5fef-4ed9-a3ec-8edae7c37b64"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276467, 5186, 1110, 30, 64, "Input",ExpressionUUID->"a17059c2-5416-45b1-b84e-0c2f842f7fb5"],
Cell[277580, 5218, 172, 2, 42, "Output",ExpressionUUID->"ad9b7d0b-8d56-4025-bd8f-ebd2a87399dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277789, 5225, 949, 25, 64, "Input",ExpressionUUID->"eac6cf31-dd90-40a1-b538-ae578852c33b"],
Cell[278741, 5252, 174, 2, 42, "Output",ExpressionUUID->"a204c650-669f-46ba-a03c-07e5b72d2f94"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278952, 5259, 681, 19, 64, "Input",ExpressionUUID->"78983d07-8f42-43d9-a50f-d26a03b2ee5c"],
Cell[279636, 5280, 174, 2, 42, "Output",ExpressionUUID->"f5791620-cfce-4363-96bd-2622df93dcd2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279847, 5287, 938, 22, 116, "Input",ExpressionUUID->"33533fdf-b808-460b-a76c-9a554476db8f"],
Cell[280788, 5311, 176, 2, 42, "Output",ExpressionUUID->"b8813f5c-76c6-49bb-8848-75764aad10d8"],
Cell[280967, 5315, 174, 2, 42, "Output",ExpressionUUID->"2be67d13-101a-4c1f-ae88-794b6292a4e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281178, 5322, 1977, 51, 168, "Input",ExpressionUUID->"0ecadbe4-cf71-476b-8c76-ee242fab4284"],
Cell[283158, 5375, 174, 2, 42, "Output",ExpressionUUID->"2c3b678d-43e5-43fd-a164-a0e898255c50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283369, 5382, 1671, 44, 142, "Input",ExpressionUUID->"5497c17b-b2dd-4e7c-a7af-d730dba6c11b"],
Cell[285043, 5428, 174, 2, 42, "Output",ExpressionUUID->"52977b56-daeb-49f4-985e-4e389920f593"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285254, 5435, 3058, 81, 324, "Input",ExpressionUUID->"602c7d97-d584-412d-b870-0ca50055aa97"],
Cell[288315, 5518, 174, 2, 42, "Output",ExpressionUUID->"31d160cc-095f-46b0-ba66-475dc7a4e1dc"],
Cell[288492, 5522, 176, 2, 42, "Output",ExpressionUUID->"c367b73d-760c-4ad1-9e9f-204a87684932"]
}, Open  ]],
Cell[CellGroupData[{
Cell[288705, 5529, 1824, 45, 194, "Input",ExpressionUUID->"1a2dcded-7e53-422c-80f9-ab1140dea2c3"],
Cell[290532, 5576, 176, 2, 42, "Output",ExpressionUUID->"c878913c-268c-49b7-9164-e2102d431791"]
}, Open  ]],
Cell[CellGroupData[{
Cell[290745, 5583, 840, 21, 116, "Input",ExpressionUUID->"22c0137c-bdbb-4e8a-919e-b9ba199344a5"],
Cell[291588, 5606, 174, 2, 42, "Output",ExpressionUUID->"1be75156-fee5-4691-83da-bdb1818e5173"],
Cell[291765, 5610, 176, 2, 42, "Output",ExpressionUUID->"a4d07c61-37af-43b7-9634-60ca4743f564"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291978, 5617, 552, 12, 64, "Input",ExpressionUUID->"5d0d6c37-c913-4696-b5ea-fa4bc8e7f5f1"],
Cell[292533, 5631, 174, 2, 42, "Output",ExpressionUUID->"fbd3eba3-87fc-4a67-a5e8-031e1639a007"]
}, Open  ]],
Cell[CellGroupData[{
Cell[292744, 5638, 2856, 64, 402, "Input",ExpressionUUID->"6cc10cde-a6cb-404a-b3d1-b39522e85b5a"],
Cell[295603, 5704, 206, 3, 62, "Output",ExpressionUUID->"1ca4e21e-fc0c-415f-9685-ec825afa766c"]
}, Open  ]]
}, Closed]]
}
]
*)

