(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    314815,       6126]
NotebookOptionsPosition[    255976,       5059]
NotebookOutlinePosition[    302334,       5914]
CellTagsIndexPosition[    302291,       5911]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"Quit", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.889964198656839*^9, 3.889964203363894*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"5936db62-753d-4c20-a941-1dfb10c21e69"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"testFileName", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DirectoryName", "[", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "1"}], "]"}], ",", 
      RowBox[{
       RowBox[{"FileBaseName", "[", 
        RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", 
       "\"\<.wlt\>\""}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pacletDir", "=", 
   RowBox[{"DirectoryName", "[", 
    RowBox[{"testFileName", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", "pacletDir", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testContextBase", "=", 
   RowBox[{"FileBaseName", "[", "testFileName", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$ContextPath", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"$ContextPath", ",", 
     RowBox[{"Except", "[", "\"\<PacletizedResourceFunctions`\>\"", "]"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8890661685133457`*^9, 3.889066220685074*^9}, {
   3.8890662555512333`*^9, 3.889066299901951*^9}, {3.889066581166473*^9, 
   3.8890665847967653`*^9}, {3.889066731765956*^9, 3.889066745674687*^9}, {
   3.889431410824514*^9, 3.88943144002302*^9}, 3.889502968269744*^9, {
   3.889998928469849*^9, 3.889998928670561*^9}, {3.890676553021196*^9, 
   3.890676564028514*^9}, 3.890676636594749*^9, {3.890679618620262*^9, 
   3.89067961902995*^9}, {3.8908254134370813`*^9, 3.890825413876319*^9}, {
   3.890825459205497*^9, 3.890825473041605*^9}, {3.890825503118348*^9, 
   3.8908255374530487`*^9}, {3.891021675325671*^9, 3.891021675545487*^9}, {
   3.8911588731924877`*^9, 3.891158877904397*^9}, {3.8911592499395514`*^9, 
   3.8911592502376633`*^9}, {3.891314843074428*^9, 3.8913148458084183`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"1f20a6f1-c8fe-4d25-91dc-21cad8616c89"],

Cell[CellGroupData[{

Cell["CI Tests", "Subsection",
 CellChangeTimes->{{3.8895791922306013`*^9, 3.889579196409403*^9}, {
  3.889905620469079*^9, 3.8899056207707977`*^9}, {3.889967624152501*^9, 
  3.889967626012704*^9}},ExpressionUUID->"bc721a90-5248-4709-baf0-\
508070e5c013"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FileNames", "[", "testFileName", "]"}], "===", 
     RowBox[{"{", "}"}]}], ",", "Nothing", ",", 
    RowBox[{"DeleteFile", "[", "testFileName", "]"}]}], "]"}], ";"}]], "Input",\

 CellLabel->"In[6]:=",ExpressionUUID->"61e9a1c2-4ad4-4fe4-8929-2a7bfa852efa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"confirm", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"testContext", "=", 
  RowBox[{
  "\"\<FernandoDuarte`LongRunRisk`Model`\>\"", "<>", "testContextBase", "<>", 
   "\"\<`\>\""}]}]}], "Input",
 CellChangeTimes->{{3.8906795325443907`*^9, 3.8906795357982817`*^9}, 
   3.890679566064293*^9, {3.8906796081672497`*^9, 3.8906796258061447`*^9}, {
   3.890679757679096*^9, 3.890679766260743*^9}, 3.890679874010334*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"7373936c-ff06-42f3-99c4-9976b014d9be"],

Cell[BoxData["\<\"FernandoDuarte`LongRunRisk`Model`Catalog`\"\>"], "Output",
 CellChangeTimes->{3.901354999236985*^9, 3.9013551225229177`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"43404c29-bf60-4db0-8e7d-7643057b8cd7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Begin", "[", "\"\<Catalog`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.890680288696157*^9, 3.8906802887021513`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"56243fb4-4478-4214-a53b-c438a5bbcfe2"],

Cell[BoxData["\<\"Catalog`\"\>"], "Output",
 CellChangeTimes->{3.901354999240387*^9, 3.901355122528211*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"ff57e4e4-570d-4369-bfe8-bdf67083d544"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Get", "[", "\"\<FernandoDuarte`LongRunRisk`Model`Catalog`\>\"", "]"}], 
    ";"}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8899652151465197`*^9, 3.889965235350771*^9}, 
   3.8899652808817787`*^9, {3.889967731242805*^9, 3.8899677356636972`*^9}, {
   3.889967971867523*^9, 3.889967975146998*^9}, {3.889968339451161*^9, 
   3.88996834001075*^9}, 3.889968619774049*^9, {3.8899688826075077`*^9, 
   3.88996888992594*^9}, {3.88996899475625*^9, 3.8899690018858624`*^9}, {
   3.8899691256166267`*^9, 3.8899691257757883`*^9}, {3.889969207667478*^9, 
   3.8899692141700287`*^9}, {3.8899692798779783`*^9, 3.889969288274632*^9}, 
   3.889969387087708*^9, 3.889969585993528*^9, {3.8899702972149563`*^9, 
   3.889970314454108*^9}, {3.890603045806611*^9, 3.890603046578224*^9}, 
   3.890603139674321*^9, {3.890676572733183*^9, 3.890676585108572*^9}, {
   3.890679071059198*^9, 3.890679121055434*^9}, {3.89067917308251*^9, 
   3.890679177122958*^9}, 3.890679328121275*^9, {3.8906795122187853`*^9, 
   3.890679514391316*^9}, {3.890679606901452*^9, 3.8906796293121653`*^9}, {
   3.890679668768669*^9, 3.890679669902752*^9}, {3.8906797200186*^9, 
   3.890679786626452*^9}, {3.890679828108779*^9, 3.890679882954316*^9}, {
   3.891156663445282*^9, 3.891156670699563*^9}, {3.891216568237528*^9, 
   3.8912165691387577`*^9}, {3.891317362457469*^9, 3.891317362760808*^9}, {
   3.89185255696913*^9, 3.8918525572447157`*^9}, {3.893003809097685*^9, 
   3.893003815813273*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"9f314737-f9fe-4d9e-8551-523b0929d53e"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230818-EZ0IPS\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230818-EZ0IPS"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9013550015959177`*^9, 3.901355122849064*^9},
 CellLabel->
  "During evaluation of \
In[10]:=",ExpressionUUID->"a4f9e92f-d998-47bd-895c-cc88c6adce46"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.9013550015959177`*^9, 3.9013551228724117`*^9},
 CellLabel->
  "During evaluation of \
In[10]:=",ExpressionUUID->"642d3119-cbc6-4950-8360-583b30c55fc3"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Get @ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = Null, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tGet @ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\
\t,\n\tNull\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-EZ0IPS\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> Null, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.056, "AbsoluteTiming" -> 0.056, 
   "InputString" :> ToString[
     Unevaluated[Get["FernandoDuarte`LongRunRisk`Model`Catalog`"]; Null], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230818-EZ0IPS\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.9013550016231194`*^9, 3.901355122878662*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"10e32ad5-0113-4d7e-8fa7-e0165f0c6526"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"MemberQ", "[", 
    RowBox[{
    "$ContextPath", ",", 
     "\"\<FernandoDuarte`LongRunRisk`Model`Catalog`\>\""}], "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.889901579125684*^9, {3.889965035911569*^9, 3.889965039550325*^9}, {
   3.889965296152458*^9, 3.889965305191854*^9}, 3.8899653858152437`*^9, 
   3.889967740469187*^9, {3.889968345370779*^9, 3.889968347169169*^9}, {
   3.889968526692542*^9, 3.8899685355316963`*^9}, {3.889968649261517*^9, 
   3.889968660343141*^9}, 3.889969395693264*^9, {3.88996958684683*^9, 
   3.8899695947482367`*^9}, {3.889970300225127*^9, 3.889970329366473*^9}, {
   3.890603050754869*^9, 3.8906030512673264`*^9}, 3.890603142316881*^9, 
   3.89067659639168*^9, {3.890679255090239*^9, 3.890679318737549*^9}, 
   3.890679634337233*^9, 3.890679895680545*^9, {3.891156682413542*^9, 
   3.8911566938989573`*^9}, 3.891216575158337*^9, {3.893003827318541*^9, 
   3.893003834977784*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"30ea8f81-e3a5-4912-928a-3a488ce6e518"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230818-9IB3BO\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230818-9IB3BO"],
  Editable->False]], "Print",
 CellChangeTimes->{3.901355001798633*^9, 3.901355122915556*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"5858684d-f3c0-4bde-89a7-42191d2a28c3"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.901355001798633*^9, 3.9013551229167833`*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"ba3c265c-889b-4198-bca8-7e1147a4de5f"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tMemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230818-9IB3BO\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      MemberQ[$ContextPath, "FernandoDuarte`LongRunRisk`Model`Catalog`"]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230818-EZ0IPS\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-9IB3BO\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.901355001922152*^9, 3.901355122934442*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"0c59c5a7-44c9-4280-8b5f-b0428daa151c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"True", " ", "if", " ", "Keys", " ", "are", " ", "strings"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"StringQ", "/@", 
      RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
   ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.889965468632722*^9, 3.889965535681717*^9}, {
   3.889965687921562*^9, 3.889965719041513*^9}, {3.8899657564745703`*^9, 
   3.8899657868805656`*^9}, {3.889965818275572*^9, 3.88996587402346*^9}, {
   3.8899660417909737`*^9, 3.889966042024665*^9}, {3.889967536877624*^9, 
   3.88996754071059*^9}, {3.8899676626847277`*^9, 3.889967663326408*^9}, {
   3.889967743694665*^9, 3.889967744059184*^9}, {3.8899677859095707`*^9, 
   3.8899678081741953`*^9}, {3.8899679955631647`*^9, 3.889968003395926*^9}, {
   3.889969462764024*^9, 3.8899694656136417`*^9}, {3.889969517081333*^9, 
   3.8899695670076637`*^9}, {3.889970354531378*^9, 3.889970361426557*^9}, 
   3.889970446358612*^9, 3.889971586268968*^9, 3.8899720413397284`*^9, {
   3.890016031161611*^9, 3.8900160360345497`*^9}, {3.890676734948654*^9, 
   3.890676751540125*^9}, {3.890676845455442*^9, 3.8906768494530687`*^9}, {
   3.890677074824079*^9, 3.890677087212*^9}, {3.89067716026512*^9, 
   3.890677182253841*^9}, {3.890677263672217*^9, 3.890677304382949*^9}, {
   3.890677341975574*^9, 3.890677356067058*^9}, {3.8906773977299557`*^9, 
   3.8906774089663153`*^9}, 3.890677598758559*^9, {3.890679268914014*^9, 
   3.890679269116164*^9}, {3.890679349751339*^9, 3.890679350122447*^9}, {
   3.891156731517645*^9, 3.891156737082999*^9}, 3.891156798479602*^9, {
   3.891316377112542*^9, 3.891316402888419*^9}, 3.891317076710834*^9, {
   3.8913171358178368`*^9, 3.891317143464329*^9}, 3.891317307401203*^9, 
   3.891317424039097*^9, {3.8930033595674267`*^9, 3.8930033895976143`*^9}, 
   3.893003633526842*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"f65e45e8-2582-4d00-8615-d27896add0d0"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230818-Q9619E\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230818-Q9619E"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9013550019579287`*^9, 3.901355122973522*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"59fe35da-e0bc-4872-b6ab-7178b3e0ba8b"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.9013550019579287`*^9, 3.901355122974861*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"21887f66-23e5-4a20-b768-b6be16c12f2d"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20230818-Q9619E\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[StringQ, 
        Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230818-EZ0IPS\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-9IB3BO\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20230818-Q9619E\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.901355001964418*^9, 3.901355122980299*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"c6675733-f5cf-4a69-ba2b-6d8f1e528647"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "True", " ", "if", " ", "fields", " ", "listed", " ", "are", " ", 
     "strings"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"StringQ", "/@", 
      RowBox[{"Flatten", "@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"models", "[", "#", "]"}], "[", "\"\<name\>\"", "]"}], 
            ",", 
            RowBox[{
             RowBox[{"models", "[", "#", "]"}], "[", "\"\<shortname\>\"", 
             "]"}], ",", 
            RowBox[{
             RowBox[{"models", "[", "#", "]"}], "[", "\"\<bibRef\>\"", "]"}], 
            ",", 
            RowBox[{
             RowBox[{"models", "[", "#", "]"}], "[", "\"\<desc\>\"", "]"}]}], 
           "}"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}]}], ")"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.890016052447173*^9, {3.8906792711540194`*^9, 3.890679271381631*^9}, {
   3.890679354610903*^9, 3.890679355945959*^9}, {3.891156741863173*^9, 
   3.8911567524768667`*^9}, 3.891156797693831*^9, {3.893003392469846*^9, 
   3.893003404206932*^9}, 3.893003633527791*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"5d749a31-d7a1-48d2-a85b-e58e3fb2c847"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230818-J79VTR\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230818-J79VTR"],
  Editable->False]], "Print",
 CellChangeTimes->{3.901355002006213*^9, 3.9013551230175133`*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"7fa5b65f-f0c4-4a56-b5e9-3c1725cb37c6"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.901355002006213*^9, 3.9013551230189533`*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"e84cfe09-38ed-4cb2-9490-65b686f714ec"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction @ {\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-J79VTR\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[StringQ, 
        Flatten[
         Map[{
           FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["name"], 
           FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["shortname"], 
           FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["bibRef"], 
           FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["desc"]}& , 
          Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230818-EZ0IPS\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-9IB3BO\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20230818-Q9619E\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-J79VTR\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.901355002026352*^9, 3.901355123037631*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"7dec6abc-7c00-4bdb-a7ce-15168bf650a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "True", " ", "if", " ", "parameters", " ", "evaluate", " ", "to", " ", 
     "numbers"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"NumberQ", "/@", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"models", "[", "#", "]"}], "[", "\"\<parameters\>\"", 
             "]"}], "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "2"}], "]"}], "]"}], "//.", 
           RowBox[{
            RowBox[{"models", "[", "#", "]"}], "[", "\"\<parameters\>\"", 
            "]"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "models", "]"}]}], "]"}]}], ")"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.889965468632722*^9, 3.889965535681717*^9}, {
   3.889965687921562*^9, 3.889965719041513*^9}, {3.8899657564745703`*^9, 
   3.8899657868805656`*^9}, {3.889965818275572*^9, 3.88996587402346*^9}, {
   3.8899660417909737`*^9, 3.889966042024665*^9}, {3.889967536877624*^9, 
   3.88996754071059*^9}, {3.8899676626847277`*^9, 3.889967663326408*^9}, {
   3.889967743694665*^9, 3.889967744059184*^9}, {3.8899677859095707`*^9, 
   3.8899678081741953`*^9}, {3.8899679955631647`*^9, 3.889968003395926*^9}, {
   3.889969462764024*^9, 3.8899694656136417`*^9}, {3.889969517081333*^9, 
   3.8899695670076637`*^9}, {3.889970354531378*^9, 3.889970361426557*^9}, 
   3.889970446358612*^9, 3.889971586268968*^9, 3.8899720413397284`*^9, {
   3.890016031161611*^9, 3.8900160360345497`*^9}, {3.8900160737670794`*^9, 
   3.890016085435741*^9}, {3.890676438175074*^9, 3.890676444283903*^9}, {
   3.890678425473001*^9, 3.890678429341833*^9}, {3.890679273563212*^9, 
   3.890679273764824*^9}, {3.890679359602653*^9, 3.890679360228259*^9}, {
   3.891156743395533*^9, 3.8911567603400497`*^9}, 3.891156796052576*^9, {
   3.893003422246476*^9, 3.8930034280669127`*^9}, 3.893003633528655*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"9a7acfd9-2870-4210-a7af-7c10ed2af5d1"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230818-TYBNVE\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230818-TYBNVE"],
  Editable->False]], "Print",
 CellChangeTimes->{3.901355002070557*^9, 3.9013551230801163`*^9},
 CellLabel->
  "During evaluation of \
In[14]:=",ExpressionUUID->"a86b6c89-f718-486e-91ce-9c00142a0aeb"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.901355002070557*^9, 3.901355123081565*^9},
 CellLabel->
  "During evaluation of \
In[14]:=",ExpressionUUID->"da3e594a-8efc-4519-ad12-726c9d2c01a1"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\
Part[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], 1;;, \
2] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\
\t\t\t\t],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\
\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
Part[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], 1;;, \
2] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\
\t\t\t\t],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\
\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-TYBNVE\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.003, "AbsoluteTiming" -> 0.003, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[NumberQ, 
        Flatten[
         Map[ReplaceRepeated[
           Part[
            FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["parameters"], 
            
            Span[1, All], 2], 
           FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
           "parameters"]]& , 
          Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230818-EZ0IPS\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-9IB3BO\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20230818-Q9619E\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-J79VTR\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-TYBNVE\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.901355002090757*^9, 3.9013551231005087`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"bca4b315-2abf-42b7-9303-a8cf83615970"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"True", " ", "if", " ", "equal", " ", "to", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", 
       RowBox[{"sx", "[", "t", "]"}]}], "}"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"models", "[", "\"\<BY\>\"", "]"}], "[", "\"\<stateVars\>\"", 
    "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.889966121134981*^9, 3.889966129513671*^9}, {
  3.8899675430265427`*^9, 3.889967546703742*^9}, {3.889967666639736*^9, 
  3.8899676668939447`*^9}, {3.889967746374608*^9, 3.889967746668034*^9}, {
  3.88996781333914*^9, 3.8899678201195583`*^9}, {3.88996801609513*^9, 
  3.88996801967063*^9}, {3.8900161094568357`*^9, 3.890016118394877*^9}, {
  3.8930036435184603`*^9, 3.893003645890563*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"3aa8b5cd-154c-4923-aed4-60a60049060a"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230818-O92FQK\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230818-O92FQK"],
  Editable->False]], "Print",
 CellChangeTimes->{3.901355002129588*^9, 3.901355123137883*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"dd09f9de-ca21-4f7f-adf1-8cda12e1adf8"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.901355002129588*^9, 3.901355123139182*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"b6bef6e7-cfd0-499b-a996-f0b7c9e86f53"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = {
   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x[
   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx[
   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"]\n\t,\n\
\t{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-O92FQK\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> {
     FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x[
     FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
     FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx[
     FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]}, "Success" -> 
   True, "FailureType" -> None, "OutputLog" -> {}, "Messages" -> {}, 
   "MessagesText" -> {}, "MessagesExpressions" -> {}, "Timing" -> 0., 
   "AbsoluteTiming" -> 0., "InputString" :> ToString[
     Unevaluated[
      FernandoDuarte`LongRunRisk`Model`Catalog`models["BY"]["stateVars"]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230818-EZ0IPS\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-9IB3BO\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20230818-Q9619E\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-J79VTR\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-TYBNVE\"\n]\n\n\nVerificationTest[\n\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"]\n\t,\n\
\t{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-O92FQK\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.9013550021551113`*^9, 3.901355123146369*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"43009e71-909c-41a8-b623-473ddf9a6ac0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "True", " ", "if", " ", "it", " ", "can", " ", "find", " ", "models", " ",
      "listed"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"Keys", "[", "models", "]"}], ",", "#"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<BY\>\"", ",", "\"\<BKY\>\""}], "}"}]}], ")"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.889966137593294*^9, 3.889966157676291*^9}, {
   3.8899675483847713`*^9, 3.889967551583518*^9}, {3.8899676691600733`*^9, 
   3.889967669364262*^9}, {3.889967748725914*^9, 3.889967749007223*^9}, {
   3.889967825028019*^9, 3.8899678304574842`*^9}, {3.889968028194545*^9, 
   3.889968031839179*^9}, {3.890016134135317*^9, 3.890016138691626*^9}, {
   3.891156767252892*^9, 3.891156793864086*^9}, {3.893003452582478*^9, 
   3.893003458742921*^9}, 3.893003633529361*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"4ebbc95c-22ea-48d7-bdec-0d430d2b154f"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230818-JMDSLH\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230818-JMDSLH"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9013550021767893`*^9, 3.9013551231820183`*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"d2e1fd4d-7662-45a2-a43f-8464be3e120e"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.9013550021767893`*^9, 3.90135512320158*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"60197f36-46d5-43dc-a9a5-4e6294a4f267"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-JMDSLH\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[MemberQ[
         Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]& , {
        "BY", "BKY"}]]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230818-EZ0IPS\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-9IB3BO\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20230818-Q9619E\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-J79VTR\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-TYBNVE\"\n]\n\n\nVerificationTest[\n\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"]\n\t,\n\
\t{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-O92FQK\"\n]\n\n\nVerificationTest[\n\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-JMDSLH\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.901355002207388*^9, 3.901355123205996*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"2a407487-ade7-4822-b99c-69bf765c383a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "True", " ", "if", " ", "models", " ", "is", " ", "an", " ", 
     "association", " ", "and", " ", "each", " ", "model", " ", "inside", " ",
      "models", " ", "is", " ", "itself", " ", "an", " ", "association"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"AssociationQ", "/@", 
      RowBox[{"Flatten", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Head", "[", "models", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", 
            RowBox[{"models", "[", "#", "]"}], "]"}], "&"}], "/@", 
          RowBox[{"Keys", "[", "models", "]"}]}]}], "}"}]}]}], ")"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.8899661404752703`*^9, 3.889966162544742*^9}, {
  3.88996755330625*^9, 3.8899675539045153`*^9}, {3.8899676717688217`*^9, 
  3.889967672005005*^9}, {3.88996775093589*^9, 3.8899677512290583`*^9}, {
  3.889967834057867*^9, 3.88996783977798*^9}, {3.889968042239496*^9, 
  3.889968052278575*^9}, {3.890016146817315*^9, 3.8900161536190767`*^9}, {
  3.890676356555853*^9, 3.8906763787792273`*^9}, {3.891156776109173*^9, 
  3.891156782485037*^9}, {3.893003483301791*^9, 3.89300354824457*^9}, {
  3.8930036512791853`*^9, 3.893003654903037*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"0cc2f06b-6e8f-4978-97cc-c47753fea3f2"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230818-378O7D\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230818-378O7D"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9013550022465763`*^9, 3.9013551232453117`*^9},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"7a2824a5-4ddc-452a-a9e9-8550e1b8b74c"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.9013550022465763`*^9, 3.90135512324666*^9},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"f1fbe5a3-7f42-465e-ac85-09cc51ef24af"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[AssociationQ,\n\t\t\tFlatten[\n\t\t\t\t{\n\t\t\t\t\t\
Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\t\t\t\t\
Map[Function @ Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models @ #, \
Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\t]\n\
\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = False, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[AssociationQ,\n\t\t\tFlatten[\n\t\
\t\t\t{\n\t\t\t\t\tHead @ FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\
\t\t\t\tMap[Function @ Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models \
@ #, Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\
\t]\n\t\t]\n\t]\n\t,\n\tFalse\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-378O7D\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> False, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[AssociationQ, 
        Flatten[{
          Head[FernandoDuarte`LongRunRisk`Model`Catalog`models], 
          Map[Head[
            FernandoDuarte`LongRunRisk`Model`Catalog`models[#]]& , 
           Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]}]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230818-EZ0IPS\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-9IB3BO\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20230818-Q9619E\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-J79VTR\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-TYBNVE\"\n]\n\n\nVerificationTest[\n\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"]\n\t,\n\
\t{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-O92FQK\"\n]\n\n\nVerificationTest[\n\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-JMDSLH\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[AssociationQ,\n\t\t\tFlatten[\n\t\t\t\t{\n\t\t\t\t\tHead @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\t\t\t\tMap[Function @ \
Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models @ #, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\
\t]\n\t,\n\tFalse\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-378O7D\"\n]\n\
\n\nEndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.901355002256878*^9, 3.901355123265486*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"642aa479-91b1-4d54-84df-2d526ad1bea0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "True", " ", "if", " ", "all", " ", "exogenous", " ", "variables", " ", 
    "are", " ", "in", " ", "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
   RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
    RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"And", "@@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "#", "===", 
               "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\"\
"}], ")"}], "&"}], "/@", 
            RowBox[{"(", 
             RowBox[{"Context", "/@", 
              RowBox[{"Cases", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"models", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
                 "]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"var_Symbol", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", 
                "Infinity"}], "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
       RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}], "\[IndentingNewLine]",
     ",", 
    RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.893001201934902*^9, 3.893001214021667*^9}, {
   3.893001245798745*^9, 3.8930012743606873`*^9}, {3.893001352341578*^9, 
   3.893001386197197*^9}, {3.893001448430169*^9, 3.893001448726687*^9}, 
   3.8930026482885447`*^9, {3.893003559352929*^9, 3.89300358223393*^9}, 
   3.893003660158228*^9, {3.893003695869608*^9, 3.893003703297862*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"c37f51a1-837c-4f11-a194-78705f4642f7"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230818-S2LCS4\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230818-S2LCS4"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9013550022930593`*^9, 3.901355123307602*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"0db816e6-b084-4982-a228-45196364bdd2"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.9013550022930593`*^9, 3.901355123326602*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"7b6cabb3-1f7b-4c02-9687-1e9bba1d9025"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\t\
Map[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\
\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Catalog`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\
\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\
\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\
\n\t]", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Catalog`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\
\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\
\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\
\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-S2LCS4\"\n]\n\
\n", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.001, "AbsoluteTiming" -> 0.001, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[Apply[And, 
         Map[# === "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
          
          Map[Context, 
           Cases[
            FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["stateVars"], 
            PatternTest[
              Pattern[Catalog`var, 
               Blank[Symbol]], MemberQ[
               Map[
               StringDrop[#, -2]& , 
                FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars], 
               
               SymbolName[#]]& ][
              BlankSequence[]] :> Catalog`var, Infinity]]]]& , 
        Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230818-EZ0IPS\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-9IB3BO\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20230818-Q9619E\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-J79VTR\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-TYBNVE\"\n]\n\n\nVerificationTest[\n\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"]\n\t,\n\
\t{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-O92FQK\"\n]\n\n\nVerificationTest[\n\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-JMDSLH\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[AssociationQ,\n\t\t\tFlatten[\n\t\t\t\t{\n\t\t\t\t\tHead @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\t\t\t\tMap[Function @ \
Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models @ #, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\
\t]\n\t,\n\tFalse\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-378O7D\"\n]\n\
\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Catalog`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\
\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\
\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\
\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-S2LCS4\"\n]\n\
\n\nEndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.901355002323772*^9, 3.901355123337223*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"ee33c667-d266-473e-bc50-dcb590f3e58a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "True", " ", "if", " ", "all", " ", "shocks", " ", "are", " ", "in", " ", 
    "context", " ", "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
   RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
    RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"And", "@@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "#", "===", 
               "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], ")"}], 
             "&"}], "/@", 
            RowBox[{"(", 
             RowBox[{"Context", "/@", 
              RowBox[{"Cases", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"models", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
                 "]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                  "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], "]"}]}],
              ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
       RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}], "\[IndentingNewLine]",
     ",", 
    RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.893001499960679*^9, {3.893002667440094*^9, 3.89300269939427*^9}, {
   3.893003083367228*^9, 3.893003083692607*^9}, {3.893003561913405*^9, 
   3.8930035855859337`*^9}, {3.89300366280791*^9, 3.893003690890905*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"21e8aec5-4a2d-4eec-a0e6-4a0295241e7d"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230818-YAL7TY\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230818-YAL7TY"],
  Editable->False]], "Print",
 CellChangeTimes->{3.901355002363224*^9, 3.901355123378151*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"55f4da71-d81b-4bb3-9065-c8e7ab98fe07"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.901355002363224*^9, 3.901355123379291*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"d9038e10-9c3c-4d1e-8c25-3769491f8805"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\t\
Map[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\
Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\
\"]&,\n\t\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\
Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-YAL7TY\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[Apply[And, 
         Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
          Map[Context, 
           Cases[
            FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["stateVars"], 
            PatternTest[
              Pattern[Catalog`var, 
               Blank[Symbol]], MatchQ[
               SymbolName[#], "eps"]& ][
              BlankSequence[]][
              BlankSequence[]] :> Catalog`var, Infinity]]]]& , 
        Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230818-EZ0IPS\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-9IB3BO\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20230818-Q9619E\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-J79VTR\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-TYBNVE\"\n]\n\n\nVerificationTest[\n\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"]\n\t,\n\
\t{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-O92FQK\"\n]\n\n\nVerificationTest[\n\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-JMDSLH\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[AssociationQ,\n\t\t\tFlatten[\n\t\t\t\t{\n\t\t\t\t\tHead @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\t\t\t\tMap[Function @ \
Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models @ #, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\
\t]\n\t,\n\tFalse\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-378O7D\"\n]\n\
\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Catalog`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\
\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\
\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\
\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-S2LCS4\"\n]\n\
\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\
\"]&,\n\t\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\
Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-YAL7TY\"\n]\n\n\nEndTestSection[]\n\
"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.901355002387678*^9, 3.901355123384831*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"87fcc2a8-4126-4859-95d1-d7289a320f43"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "True", " ", "if", "  ", "all", " ", "parameters", " ", "are", " ", "in", 
    " ", "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
    RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<parameters\>\"", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
               ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"models", "[", "#", "]"}], "[", 
                  "\"\<parameters\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{"var_Symbol", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
              ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
    RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
               ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"models", "[", "#", "]"}], "[", "\"\<stateVars\>\"",
                   "]"}], ",", 
                 RowBox[{
                  RowBox[{"var_Symbol", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
              ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{
  3.893001501399847*^9, {3.893002703969759*^9, 3.893002740019191*^9}, {
   3.893003056880762*^9, 3.893003109272599*^9}, {3.8930035658891783`*^9, 
   3.893003613143814*^9}, {3.8930036660094976`*^9, 3.8930036677270737`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"67116dee-9a87-405d-93eb-27ea07c14940"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230818-O8TATH\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230818-O8TATH"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9013550024283047`*^9, 3.9013551234309053`*^9},
 CellLabel->
  "During evaluation of \
In[20]:=",ExpressionUUID->"9f1098b2-ec32-4b20-af1c-378dddf7ced9"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.9013550024283047`*^9, 3.901355123436355*^9},
 CellLabel->
  "During evaluation of \
In[20]:=",ExpressionUUID->"049e220f-d410-455c-a8fb-356bec0c181f"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\t\
Map[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"],\n\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t\
]", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\tMap[Context,\
\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"],\n\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t\
]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-O8TATH\"\n]\n\n",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.002, "AbsoluteTiming" -> 0.002, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[Apply[And, 
         Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
          Map[Context, 
           Cases[
            FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["parameters"], 
            PatternTest[
              Pattern[Catalog`var, 
               Blank[Symbol]], MemberQ[
              FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
               SymbolName[#]]& ] :> Catalog`var, Infinity]]]]& , 
        Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230818-EZ0IPS\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-9IB3BO\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20230818-Q9619E\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-J79VTR\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-TYBNVE\"\n]\n\n\nVerificationTest[\n\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"]\n\t,\n\
\t{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-O92FQK\"\n]\n\n\nVerificationTest[\n\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-JMDSLH\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[AssociationQ,\n\t\t\tFlatten[\n\t\t\t\t{\n\t\t\t\t\tHead @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\t\t\t\tMap[Function @ \
Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models @ #, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\
\t]\n\t,\n\tFalse\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-378O7D\"\n]\n\
\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Catalog`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\
\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\
\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\
\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-S2LCS4\"\n]\n\
\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\
\"]&,\n\t\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\
Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-YAL7TY\"\n]\n\n\nVerificationTest[\n\
\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\t\
Map[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"],\n\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t\
]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-O8TATH\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.901355002448378*^9, 3.901355123450432*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"2e97d322-76e5-4e77-8f30-7f0b4533bbc6"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230818-WHJ85T\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230818-WHJ85T"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9013550024283047`*^9, 3.901355123523369*^9},
 CellLabel->
  "During evaluation of \
In[20]:=",ExpressionUUID->"b8cef9a8-d900-4e59-84db-ce89e57b8be7"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.9013550024283047`*^9, 3.901355123541634*^9},
 CellLabel->
  "During evaluation of \
In[20]:=",ExpressionUUID->"bacca1e2-4ed5-43dd-a9b9-88030bdc51bf"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\t\
Map[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t\
]", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\tMap[Context,\
\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t\
]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-WHJ85T\"\n]\n\n",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[Apply[And, 
         Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
          Map[Context, 
           Cases[
            FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["stateVars"], 
            PatternTest[
              Pattern[Catalog`var, 
               Blank[Symbol]], MemberQ[
              FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
               SymbolName[#]]& ] :> Catalog`var, Infinity]]]]& , 
        Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230818-EZ0IPS\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-9IB3BO\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20230818-Q9619E\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-J79VTR\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-TYBNVE\"\n]\n\n\nVerificationTest[\n\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"]\n\t,\n\
\t{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-O92FQK\"\n]\n\n\nVerificationTest[\n\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-JMDSLH\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[AssociationQ,\n\t\t\tFlatten[\n\t\t\t\t{\n\t\t\t\t\tHead @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\t\t\t\tMap[Function @ \
Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models @ #, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\
\t]\n\t,\n\tFalse\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-378O7D\"\n]\n\
\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Catalog`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\
\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\
\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\
\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-S2LCS4\"\n]\n\
\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\
\"]&,\n\t\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\
Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-YAL7TY\"\n]\n\n\nVerificationTest[\n\
\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\t\
Map[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"],\n\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t\
]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-O8TATH\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\tMap[Context,\
\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t\
]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-WHJ85T\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.901355002448378*^9, 3.901355123544607*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"510f7899-c111-4ebc-b181-87f1689030dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "True", " ", "if", " ", "state", " ", "variables", " ", "do", " ", "not", 
    " ", "have", " ", "any", " ", "endogenous", " ", "variables"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
   RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
    RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"MatchQ", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", "#"}], "]"}], "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"models", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
             "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"var_Symbol", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                   RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
           "]"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}], ")"}]}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.89300111387222*^9, 3.8930011727459707`*^9}, {
   3.893001247830225*^9, 3.893001299678648*^9}, {3.893001353751255*^9, 
   3.8930015072417727`*^9}, {3.893002707727394*^9, 3.893002708411419*^9}, {
   3.893002748062245*^9, 3.893002826831513*^9}, 3.89300297523416*^9, {
   3.893003086535989*^9, 3.893003086763905*^9}, {3.893003573506647*^9, 
   3.893003597674356*^9}, {3.8930036740071383`*^9, 3.893003681466465*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"eeb0f7ac-c9ae-4068-9a86-aa0d4212e5fe"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230818-8QV3HS\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230818-8QV3HS"],
  Editable->False]], "Print",
 CellChangeTimes->{3.90135500254027*^9, 3.90135512362425*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"fe82d254-51e6-4fb6-a21b-9d4732b29452"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.90135500254027*^9, 3.9013551236422367`*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"ab441088-3174-4b3f-a991-04aad138ba5a"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[MatchQ[{}, #]&,\n\t\t\tMap[\n\t\t\t\tFunction[\n\t\t\t\
\t\tCases[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
Catalog`var_Symbol,\n\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\tMemberQ[\n\t\
\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
][__],\n\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\n\t\t\
\t\t\t]\n\t\t\t\t],\n\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t]\n\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[MatchQ[{}, #]&,\n\t\t\tMap[\n\t\t\
\t\tFunction[\n\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
Catalog`var_Symbol,\n\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\tMemberQ[\n\t\
\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
][__],\n\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\n\t\t\
\t\t\t]\n\t\t\t\t],\n\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-8QV3HS\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.001, "AbsoluteTiming" -> 0.001, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[MatchQ[{}, #]& , 
        Map[Cases[
          FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["stateVars"], 
          PatternTest[
            Pattern[Catalog`var, 
             Blank[Symbol]], MemberQ[
             Map[
             StringDrop[#, -2]& , 
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars], 
             
             SymbolName[#]]& ][
            BlankSequence[]] :> Catalog`var, Infinity]& , 
         Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230818-EZ0IPS\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-9IB3BO\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20230818-Q9619E\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-J79VTR\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-TYBNVE\"\n]\n\n\nVerificationTest[\n\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"]\n\t,\n\
\t{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-O92FQK\"\n]\n\n\nVerificationTest[\n\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-JMDSLH\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[AssociationQ,\n\t\t\tFlatten[\n\t\t\t\t{\n\t\t\t\t\tHead @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\t\t\t\tMap[Function @ \
Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models @ #, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\
\t]\n\t,\n\tFalse\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-378O7D\"\n]\n\
\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Catalog`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\
\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\
\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\
\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-S2LCS4\"\n]\n\
\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\
\"]&,\n\t\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\
Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-YAL7TY\"\n]\n\n\nVerificationTest[\n\
\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\t\
Map[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"],\n\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t\
]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-O8TATH\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\tMap[Context,\
\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t\
]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-WHJ85T\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[MatchQ[{}, #]&,\n\t\t\tMap[\n\t\t\t\t\
Function[\n\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
Catalog`var_Symbol,\n\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\tMemberQ[\n\t\
\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
][__],\n\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\n\t\t\
\t\t\t]\n\t\t\t\t],\n\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-8QV3HS\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.901355002560134*^9, 3.901355123647376*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"b124026d-dad5-4688-8aaa-a9ba94930662"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "True", " ", "if", " ", "modelsExtraInfo", " ", "is", " ", "an", " ", 
    "association", " ", "and", " ", "each", " ", "model", " ", "inside", " ", 
    "modelsExtraInfo", " ", "is", " ", "an", " ", "association"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
   RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
    RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AllTrue", "[", 
        RowBox[{"modelsExtraInfo", ",", "AssociationQ"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"AllTrue", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"modelsExtraInfo", "[", "#", "]"}], "&"}], "/@", 
          RowBox[{"Keys", "[", "modelsExtraInfo", "]"}]}], ",", 
         "AssociationQ"}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.901354712476226*^9, 3.901354720626876*^9}, 
   3.901354757130762*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"f5ca1345-d64e-4932-bad5-b6dd8e1f4392"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230818-BV7QIC\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230818-BV7QIC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.901355002596871*^9, 3.9013551236840754`*^9},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"5198a873-9265-4129-851f-d2fa9a6763d1"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.901355002596871*^9, 3.9013551237029057`*^9},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"f876161e-759d-4e62-a394-0dc36e9bbaa2"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo, \
AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#]&, \
Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo],\n\t\t\t\t\
AssociationQ\n\t\t\t]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo, \
AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#]&, \
Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo],\n\t\t\t\t\
AssociationQ\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-BV7QIC\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        AllTrue[
        FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo, 
         AssociationQ], 
        AllTrue[
         Map[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#]& , 
          Keys[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo]], 
         AssociationQ]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230818-EZ0IPS\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-9IB3BO\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20230818-Q9619E\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-J79VTR\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-TYBNVE\"\n]\n\n\nVerificationTest[\n\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"]\n\t,\n\
\t{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-O92FQK\"\n]\n\n\nVerificationTest[\n\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-JMDSLH\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[AssociationQ,\n\t\t\tFlatten[\n\t\t\t\t{\n\t\t\t\t\tHead @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\t\t\t\tMap[Function @ \
Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models @ #, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\
\t]\n\t,\n\tFalse\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-378O7D\"\n]\n\
\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Catalog`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\
\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\
\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\
\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-S2LCS4\"\n]\n\
\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\
\"]&,\n\t\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\
Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-YAL7TY\"\n]\n\n\nVerificationTest[\n\
\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\t\
Map[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"],\n\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t\
]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-O8TATH\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\tMap[Context,\
\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t\
]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-WHJ85T\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[MatchQ[{}, #]&,\n\t\t\tMap[\n\t\t\t\t\
Function[\n\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
Catalog`var_Symbol,\n\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\tMemberQ[\n\t\
\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
][__],\n\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\n\t\t\
\t\t\t]\n\t\t\t\t],\n\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-8QV3HS\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo, \
AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#]&, \
Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo],\n\t\t\t\t\
AssociationQ\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-BV7QIC\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.901355002620672*^9, 3.901355123707529*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"821f1e90-536d-4746-818a-245b4430f52b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "True", " ", "if", " ", "models", " ", "in", " ", "modelsExtraInfo", " ", 
    "are", " ", "a", " ", "subset", " ", "of", " ", "those", " ", "defined", 
    " ", "in", " ", "models"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
   RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
    RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"SubsetQ", "[", 
       RowBox[{
        RowBox[{"Keys", "[", "models", "]"}], ",", 
        RowBox[{"Keys", "[", "modelsExtraInfo", "]"}]}], "]"}], 
      "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
    RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9013547750980167`*^9, 3.901354787461472*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"7aa2432c-8b1c-4da0-9390-74fe2051cbf3"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230818-SBMA65\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230818-SBMA65"],
  Editable->False]], "Print",
 CellChangeTimes->{3.901355002657137*^9, 3.90135512375016*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"ba4ee7b5-a95d-4d61-8a94-2e5e52f500ab"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.901355002657137*^9, 3.90135512376912*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"e05de2f3-dc80-450a-9294-5289faacf2e5"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And, {SubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo]}]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And, {SubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo]}]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-SBMA65\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        SubsetQ[
         Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], 
         Keys[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo]]}]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230818-EZ0IPS\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-9IB3BO\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20230818-Q9619E\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-J79VTR\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-TYBNVE\"\n]\n\n\nVerificationTest[\n\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"]\n\t,\n\
\t{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-O92FQK\"\n]\n\n\nVerificationTest[\n\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-JMDSLH\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[AssociationQ,\n\t\t\tFlatten[\n\t\t\t\t{\n\t\t\t\t\tHead @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\t\t\t\tMap[Function @ \
Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models @ #, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\
\t]\n\t,\n\tFalse\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-378O7D\"\n]\n\
\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Catalog`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\
\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\
\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\
\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-S2LCS4\"\n]\n\
\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\
\"]&,\n\t\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\
Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-YAL7TY\"\n]\n\n\nVerificationTest[\n\
\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\t\
Map[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"],\n\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t\
]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-O8TATH\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\tMap[Context,\
\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t\
]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-WHJ85T\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[MatchQ[{}, #]&,\n\t\t\tMap[\n\t\t\t\t\
Function[\n\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
Catalog`var_Symbol,\n\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\tMemberQ[\n\t\
\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
][__],\n\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\n\t\t\
\t\t\t]\n\t\t\t\t],\n\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-8QV3HS\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo, \
AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#]&, \
Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo],\n\t\t\t\t\
AssociationQ\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-BV7QIC\"\n]\n\n\nVerificationTest[\n\tApply[And, \
{SubsetQ[Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo]}]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-SBMA65\"\n]\n\n\nEndTestSection[]\n\
"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.901355002677319*^9, 3.901355123773847*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"6d35919c-9e8b-430e-b0c2-4d4c824a60db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "True", " ", "if", " ", "Ewc", " ", "in", " ", "initialGuess", " ", 
     "inside", " ", "modelsExtraInfo", " ", "is", " ", "a", " ", "list", " ", 
     "with", " ", "a", " ", "single", " ", "number", " ", "and"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
    "if", " ", "Epd", " ", "in", " ", "initialGuess", " ", "inside", " ", 
     "modelsExtraInfo", " ", "exists"}], ",", " ", 
    RowBox[{
    "it", " ", "has", " ", "dimensions", " ", "consistent", " ", "with", " ", 
     "numStocks", " ", "in", " ", "models"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
   RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
    RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"VectorQ", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"modelsExtraInfo", "[", "\"\<BY\>\"", "]"}], "[", 
             "\"\<initialGuess\>\"", "]"}], "[", "\"\<Ewc\>\"", "]"}], ",", 
           "NumberQ"}], "]"}], " ", "&&", " ", 
         RowBox[{
          RowBox[{"Dimensions", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"modelsExtraInfo", "[", "\"\<BY\>\"", "]"}], "[", 
             "\"\<initialGuess\>\"", "]"}], "[", "\"\<Ewc\>\"", "]"}], "]"}], 
          "==", 
          RowBox[{"{", "1", "}"}]}]}], ")"}], " ", ",", "\[IndentingNewLine]", 
       RowBox[{"And", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Implies", "[", 
            RowBox[{
             RowBox[{"KeyExistsQ", "[", 
              RowBox[{
               RowBox[{"modelsExtraInfo", "[", "#", "]"}], ",", 
               "\"\<initialGuess\>\""}], "]"}], ",", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Dimensions", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsExtraInfo", "[", "#", "]"}], "[", 
                  "\"\<initialGuess\>\"", "]"}], "[", "\"\<Epd\>\"", "]"}], 
                "]"}], "==", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Count", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"models", "[", "#", "]"}], "[", 
                    "\"\<parameters\>\"", "]"}], ",", " ", 
                   RowBox[{"mud", "[", "_Integer", "]"}], ",", " ", 
                   "Infinity"}], "]"}], ",", "1"}], "}"}]}], ")"}]}], "]"}], 
           "&"}], "/@", 
          RowBox[{"Keys", "[", "modelsExtraInfo", "]"}]}], ")"}]}]}], 
      "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
    RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9013548101359787`*^9, 3.901354928094619*^9}, 
   3.901355109464764*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"334254d6-ef9b-468f-9a92-aba24077ad39"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Catalog_20230818-HONONJ\"\>"}],
  SequenceForm["Adding test: ", "Catalog_20230818-HONONJ"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9013550027280197`*^9, 3.901355123810321*^9},
 CellLabel->
  "During evaluation of \
In[25]:=",ExpressionUUID->"96d0fad2-0d9d-49d0-98d9-f02ac6bf6ec0"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>"], "Print",
 CellChangeTimes->{3.9013550027280197`*^9, 3.901355123811511*^9},
 CellLabel->
  "During evaluation of \
In[25]:=",ExpressionUUID->"3ff74205-7162-4ac0-b3b8-ee15b2317a11"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\t\
And[VectorQ[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo @ \
\"BY\"[\"initialGuess\"][\"Ewc\"], NumberQ],\n\t\t\t\tEqual[Dimensions @ \
FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo @ \
\"BY\"[\"initialGuess\"][\"Ewc\"],\n\t\t\t\t\t{1}\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction @ Implies[\n\t\t\t\t\t\t\
KeyExistsQ[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo @ #, \
\"initialGuess\"],\n\t\t\t\t\t\tEqual[\n\t\t\t\t\t\t\tDimensions @ \
FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo @ \
#[\"initialGuess\"][\"Epd\"],\n\t\t\t\t\t\t\t\
{Count[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
Catalog`mud @ _Integer, Infinity], 1}\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\
Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo\n\t\t\t\t]\n\t\
\t\t]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = False, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t\
And[VectorQ[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo @ \
\"BY\"[\"initialGuess\"][\"Ewc\"], NumberQ],\n\t\t\t\tEqual[Dimensions @ \
FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo @ \
\"BY\"[\"initialGuess\"][\"Ewc\"],\n\t\t\t\t\t{1}\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction @ Implies[\n\t\t\t\t\t\t\
KeyExistsQ[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo @ #, \
\"initialGuess\"],\n\t\t\t\t\t\tEqual[\n\t\t\t\t\t\t\tDimensions @ \
FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo @ \
#[\"initialGuess\"][\"Epd\"],\n\t\t\t\t\t\t\t\
{Count[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
Catalog`mud @ _Integer, Infinity], 1}\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\
Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo\n\t\t\t\t]\n\t\
\t\t]\n\t\t}\n\t]\n\t,\n\tFalse\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-HONONJ\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> False, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        And[
         VectorQ[
          FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo["BY"][
          "initialGuess"]["Ewc"], NumberQ], Dimensions[
           FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo["BY"][
           "initialGuess"]["Ewc"]] == {1}], 
        Apply[And, 
         Map[Implies[
           KeyExistsQ[
            FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#], 
            "initialGuess"], Dimensions[
             FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#][
             "initialGuess"]["Epd"]] == {
             Count[
              FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
              "parameters"], 
              Catalog`mud[
               Blank[Integer]], Infinity], 1}]& , 
          Keys[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo]]]}]],
      InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Catalog\"]\n\n\nVerificationTest[\n\tGet @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\
\tTestID->\"Catalog_20230818-EZ0IPS\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Catalog`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-9IB3BO\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"Catalog_20230818-Q9619E\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\
\"name\"],\n\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"bibRef\"],\n\t\t\t\t\t\
\tFernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"desc\"]\n\t\t\t\t\t},\n\
\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-J79VTR\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[NumberQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\
\t\tPart[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
1;;, 2] //. \
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\t\t\t\
],\n\t\t\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\
]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-TYBNVE\"\n]\n\n\nVerificationTest[\n\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[\"BY\"][\"stateVars\"]\n\t,\n\
\t{FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx @ \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-O92FQK\"\n]\n\n\nVerificationTest[\n\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-JMDSLH\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tMap[AssociationQ,\n\t\t\tFlatten[\n\t\t\t\t{\n\t\t\t\t\tHead @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models,\n\t\t\t\t\tMap[Function @ \
Head @ FernandoDuarte`LongRunRisk`Model`Catalog`models @ #, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models]\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\
\t]\n\t,\n\tFalse\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-378O7D\"\n]\n\
\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Catalog`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\
\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\
\t\t\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\
\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-S2LCS4\"\n]\n\
\n\nVerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\
\"]&,\n\t\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\
Catalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-YAL7TY\"\n]\n\n\nVerificationTest[\n\
\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\tApply[And,\n\t\t\t\t\t\
Map[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"],\n\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t\
]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-O8TATH\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\tMap[Context,\
\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[Catalog`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tKeys @ FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t]\n\t\
]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-WHJ85T\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[MatchQ[{}, #]&,\n\t\t\tMap[\n\t\t\t\t\
Function[\n\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"],\n\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
Catalog`var_Symbol,\n\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\tMemberQ[\n\t\
\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
][__],\n\t\t\t\t\t\t\tCatalog`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\n\t\t\
\t\t\t]\n\t\t\t\t],\n\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-8QV3HS\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo, \
AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#]&, \
Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo],\n\t\t\t\t\
AssociationQ\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-BV7QIC\"\n]\n\n\nVerificationTest[\n\tApply[And, \
{SubsetQ[Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo]}]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"Catalog_20230818-SBMA65\"\n]\n\n\nVerificationTest[\n\
\tApply[And,\n\t\t{\n\t\t\t\
And[VectorQ[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo @ \
\"BY\"[\"initialGuess\"][\"Ewc\"], NumberQ],\n\t\t\t\tEqual[Dimensions @ \
FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo @ \
\"BY\"[\"initialGuess\"][\"Ewc\"],\n\t\t\t\t\t{1}\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction @ Implies[\n\t\t\t\t\t\t\
KeyExistsQ[FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo @ #, \
\"initialGuess\"],\n\t\t\t\t\t\tEqual[\n\t\t\t\t\t\t\tDimensions @ \
FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo @ \
#[\"initialGuess\"][\"Epd\"],\n\t\t\t\t\t\t\t\
{Count[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"], \
Catalog`mud @ _Integer, Infinity], 1}\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\
Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo\n\t\t\t\t]\n\t\
\t\t]\n\t\t}\n\t]\n\t,\n\tFalse\n\t,\n\t{}\n\t,\n\t\
TestID->\"Catalog_20230818-HONONJ\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.901355002755817*^9, 3.901355123829152*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"6c074c89-bba2-48ee-afb0-f2760ef4c6c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"End", "[", "]"}]], "Input",
 CellChangeTimes->{{3.890680295645965*^9, 3.89068029650622*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"1e489da7-03ac-4c09-a3b0-3f18678c417b"],

Cell[BoxData["\<\"Catalog`\"\>"], "Output",
 CellChangeTimes->{3.9013550027628717`*^9, 3.901355123836164*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"484351e7-7ed2-44ff-94b6-56b84ffca410"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"add", " ", 
   RowBox[{"Begin", "[", "\"\<Context`\>\"", "]"}], " ", "and", " ", 
   RowBox[{"End", "[", "]"}], " ", "to", " ", "wlt", " ", "file"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.890686194230386*^9, 3.890686228283702*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"d681ce4c-fe5c-46cc-a106-c3fb97c91dc9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"helper", " ", "functions"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"countLines", "[", "file_String", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"readStream", "=", 
        RowBox[{"OpenRead", "[", "file", "]"}]}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"n", "=", "1"}], ",", "\[IndentingNewLine]", "temp"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"While", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"temp", "=!=", "EndOfFile"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"temp", "=", 
          RowBox[{"ReadLine", "[", "readStream", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"n", "=", 
          RowBox[{"n", "+", "1"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Close", "/@", 
       RowBox[{"{", "readStream", "}"}]}], ";", "\[IndentingNewLine]", 
      "n"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.890681841946844*^9, 3.890681899849094*^9}, {
  3.890682055663522*^9, 3.890682084827585*^9}, {3.890683635625399*^9, 
  3.890683720295089*^9}, {3.890685425949465*^9, 3.890685434516119*^9}, {
  3.890686231117095*^9, 3.890686238212121*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"8480e291-f089-46a8-93b3-cdc5392f18f2"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "replaceNthRecord", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"replaceNthRecord", "[", 
   RowBox[{"file_String", ",", "n_Integer", ",", "replaceWith_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"readStream", "=", 
       RowBox[{"OpenRead", "[", "file", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"writeStream", "=", 
       RowBox[{"OpenWrite", "[", 
        RowBox[{"file", "<>", "\"\<temp\>\""}], "]"}]}], ",", 
      "\[IndentingNewLine]", "temp"}], "\[IndentingNewLine]", "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"WriteLine", "[", 
        RowBox[{"writeStream", ",", 
         RowBox[{"ReadLine", "[", "readStream", "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"n", "-", "1"}], "}"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"WriteLine", "[", 
      RowBox[{"writeStream", ",", 
       RowBox[{
        RowBox[{"ReadLine", "[", "readStream", "]"}], "<>", "\"\< \\r\\n\>\"",
         "<>", "replaceWith"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"temp", "=!=", "EndOfFile"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"temp", "=", 
         RowBox[{"ReadLine", "[", "readStream", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"UnsameQ", "[", 
           RowBox[{"temp", ",", "EndOfFile"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"WriteLine", "[", 
           RowBox[{"writeStream", ",", "temp"}], "]"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", 
     RowBox[{"Close", "/@", 
      RowBox[{"{", 
       RowBox[{"readStream", ",", "writeStream"}], "}"}]}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8906824011137114`*^9, 3.890682405708049*^9}, {
   3.890683066049664*^9, 3.8906830825042677`*^9}, {3.89068319056032*^9, 
   3.890683191547068*^9}, {3.89068338518532*^9, 3.890683430044886*^9}, {
   3.890683477495555*^9, 3.89068350860789*^9}, {3.890683563263863*^9, 
   3.890683572999384*^9}, {3.8906837588959513`*^9, 3.890683769652152*^9}, 
   3.890683975431652*^9, 3.890684184728485*^9, {3.890684538464937*^9, 
   3.890684546403357*^9}, 3.8906847013731937`*^9, 3.890684736359234*^9, {
   3.890684917937912*^9, 3.890684918964259*^9}, {3.890685003978653*^9, 
   3.8906850058353167`*^9}, {3.890685081266893*^9, 3.890685086440845*^9}, {
   3.890685162742771*^9, 3.890685164959052*^9}, {3.890685207547077*^9, 
   3.890685210133041*^9}, {3.890685379823967*^9, 3.890685396833392*^9}, {
   3.89068547363831*^9, 3.890685483195992*^9}, {3.8906856724322433`*^9, 
   3.890685672699678*^9}, {3.890685793209527*^9, 3.890685826416944*^9}, 
   3.8906858923977957`*^9, {3.890685924003189*^9, 3.890685959055036*^9}, {
   3.890686016304421*^9, 3.890686073140353*^9}, {3.890686249638393*^9, 
   3.8906862512145*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"c6d94536-d712-4817-8c56-b5a9e698596b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"insert", " ", "into", " ", "wlt", " ", "file"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"replaceNthRecord", "[", 
    RowBox[{
    "testFileName", ",", "1", ",", "\"\<Begin[\\\"Catalog`\\\"]\>\""}], "]"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CopyFile", "[", 
     RowBox[{
      RowBox[{"testFileName", "<>", "\"\<temp\>\""}], ",", "testFileName", 
      ",", 
      RowBox[{"OverwriteTarget", "->", "True"}]}], "]"}], ";"}], "\n", 
   RowBox[{"DeleteFile", "[", 
    RowBox[{"testFileName", "<>", "\"\<temp\>\""}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"numLines", "=", 
    RowBox[{"countLines", "[", "testFileName", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"replaceNthRecord", "[", 
    RowBox[{"testFileName", ",", 
     RowBox[{"numLines", "-", "3"}], ",", " ", "\"\<End[]\>\""}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CopyFile", "[", 
     RowBox[{
      RowBox[{"testFileName", "<>", "\"\<temp\>\""}], ",", "testFileName", 
      ",", 
      RowBox[{"OverwriteTarget", "->", "True"}]}], "]"}], ";"}], "\n", 
   RowBox[{"DeleteFile", "[", 
    RowBox[{"testFileName", "<>", "\"\<temp\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.890684439578331*^9, {3.8906861781312037`*^9, 3.890686181646003*^9}, {
   3.890686261099564*^9, 3.8906862940387907`*^9}, 3.891156970368805*^9, 
   3.891216542664113*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"9e83fb3a-481f-4cb8-b330-c26292abdf5f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlttemp\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.901355002827455*^9, 3.901355123899284*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"2c4a414c-4a80-4460-b25f-7bd260b33d91"],

Cell[BoxData["321"], "Output",
 CellChangeTimes->{3.901355002827455*^9, 3.901355123907591*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"b096d74d-44d0-44a5-89d3-983d0958e0e7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlttemp\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.901355002827455*^9, 3.9013551239205847`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"ce57995e-1a60-47ec-96f6-ae8f98ebba36"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tr", "=", 
  RowBox[{"TestReport", "[", "testFileName", "]"}]}]], "Input",
 CellLabel->"In[38]:=",ExpressionUUID->"e077b813-cdd0-4bd1-8dfd-78f30a4f8df7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: Catalog.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["16", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: Catalog.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["16", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["16", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0.0176290000000000002`3.192622692943384", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                   "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: Catalog.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     2524745101314687337 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9013551239838867`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "fea705ec-13a1-426e-a96a-2cb7e173a7d1", "TestID" -> 
         "Catalog_20230818-EZ0IPS", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "14fe0d47-0dde-4a8a-9a17-0c657f76b4a8", "Input" -> 
         HoldForm[Get["FernandoDuarte`LongRunRisk`Model`Catalog`"]; Null], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[Null],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.011173`4.198684796598012, "CPUTimeUsed" -> 0.011174999999999713`, 
         "MemoryUsed" -> -182016, "ExpectedOutput" -> HoldForm[Null], 
         "Outcome" -> "Success"|>], 1760978382552566969 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.901355123995362*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "dbdaafb1-9731-4003-a050-8bdcd571c456", "TestID" -> 
         "Catalog_20230818-9IB3BO", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "946917e9-992c-4631-b51a-ad18d649987c", "Input" -> HoldForm[
           
           MemberQ[$ContextPath, 
            "FernandoDuarte`LongRunRisk`Model`Catalog`"]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000026`1.5654883458028126, "CPUTimeUsed" -> 
         0.000025999999999637424`, "MemoryUsed" -> 3104, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 3848560878771573040 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9013551239956207`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "e0c40bb6-68f1-4830-8371-8f42586b3348", "TestID" -> 
         "Catalog_20230818-Q9619E", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "894bd4c9-f3ec-4dea-b6ed-93c30746c27d", "Input" -> HoldForm[
           Apply[And, 
            Map[StringQ, 
             Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000025`1.5484550065040317, "CPUTimeUsed" -> 
         0.000025000000000385825`, "MemoryUsed" -> 2560, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 8946356687632719448 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9013551239958725`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "d5fa3b32-b09b-464e-953b-efcf01c31999", "TestID" -> 
         "Catalog_20230818-J79VTR", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "42514bc6-8238-4ab2-8385-e29888ad7bba", "Input" -> HoldForm[
           Apply[And, 
            Map[StringQ, 
             Flatten[
              Map[{
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["name"], 
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                "shortname"], 
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["bibRef"], 
                
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["desc"]}& , 
               Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000055`1.8908776873262378, "CPUTimeUsed" -> 0.00005600000000027805,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 867316389275546409 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9013551239961367`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "877df8cc-98de-4d93-aefe-dbb6649b1033", "TestID" -> 
         "Catalog_20230818-TYBNVE", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "9e35a6c1-3d35-490d-88f4-b5acc505a5ef", "Input" -> HoldForm[
           Apply[And, 
            Map[NumberQ, 
             Flatten[
              Map[ReplaceRepeated[
                Part[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                 "parameters"], 
                 Span[1, All], 2], 
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                "parameters"]]& , 
               Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.002482`3.545316774994705, "CPUTimeUsed" -> 0.002482999999999791, 
         "MemoryUsed" -> 190472, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 5500938946825709855 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90135512399884*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "028b27ea-4440-4276-874f-7104b6b64eda", "TestID" -> 
         "Catalog_20230818-O92FQK", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "41559609-f5db-4651-9165-cd0267e5a872", "Input" -> HoldForm[
           FernandoDuarte`LongRunRisk`Model`Catalog`models["BY"][
           "stateVars"]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[{
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x[
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx[
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000021`1.4727342925659124, "CPUTimeUsed" -> 0.00002199999999996649,
          "MemoryUsed" -> 2688, "ExpectedOutput" -> HoldForm[{
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`x[
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t], 
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sx[
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]}], 
         "Outcome" -> "Success"|>], 914380413003860376 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.901355123999066*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "80e9499a-d652-4d54-aae2-451eaf119367", "TestID" -> 
         "Catalog_20230818-JMDSLH", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "80b31e3c-1c3e-4ee5-95c7-798421490cfd", "Input" -> HoldForm[
           Apply[And, 
            Map[MemberQ[
              Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]& , {
             "BY", "BKY"}]]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000021`1.4727342925659135, "CPUTimeUsed" -> 
         0.0000219999999995224, "MemoryUsed" -> 2800, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 4481224523406606249 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9013551239992867`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "c9947488-18e9-4c19-85fa-9c7df8ff6e4e", "TestID" -> 
         "Catalog_20230818-378O7D", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "d188dac4-2f13-4687-8204-868ff62ef995", "Input" -> HoldForm[
           Apply[And, 
            Map[AssociationQ, 
             Flatten[{
               Head[FernandoDuarte`LongRunRisk`Model`Catalog`models], 
               Map[Head[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#]]& , 
                Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]}]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[False], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00003`1.6276362525516561, "CPUTimeUsed" -> 
         0.000031000000000336314`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[False], "Outcome" -> "Success"|>], 3190079812417127568 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9013551239995437`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "b12ebda9-197e-4fe9-909e-72ecd419e0f6", "TestID" -> 
         "Catalog_20230818-S2LCS4", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "d9bde359-1bd3-4323-adb6-7fc914175dcb", "Input" -> HoldForm[
           Apply[And, 
            Map[Apply[And, 
              
              Map[# === 
               "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                 "stateVars"], PatternTest[
                   Pattern[Catalog`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                    SymbolName[#]]& ][
                   BlankSequence[]] :> Catalog`var, Infinity]]]]& , 
             Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000635`2.9532887231239697, "CPUTimeUsed" -> 0.0006369999999997766, 
         "MemoryUsed" -> 4480, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 1230729391656980068 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9013551240003977`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "674a67f2-4a1c-4979-a64d-93a44d6210bf", "TestID" -> 
         "Catalog_20230818-YAL7TY", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "daf0a979-0194-46c9-befc-f17a118790a0", "Input" -> HoldForm[
           Apply[And, 
            Map[Apply[And, 
              Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                 "stateVars"], PatternTest[
                   Pattern[Catalog`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                   BlankSequence[]][
                   BlankSequence[]] :> Catalog`var, Infinity]]]]& , 
             Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000093`2.118997946385929, "CPUTimeUsed" -> 0.00009299999999967667, 
         "MemoryUsed" -> 2664, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 1264406515485823886 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.901355124000705*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "b2136a62-4faa-487d-ba07-1c7ae2615c00", "TestID" -> 
         "Catalog_20230818-O8TATH", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "9dd35c93-f7eb-4e7d-82d3-32fa803d39a7", "Input" -> HoldForm[
           Apply[And, 
            Map[Apply[And, 
              Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                 "parameters"], PatternTest[
                   Pattern[Catalog`var, 
                    Blank[Symbol]], MemberQ[
                   FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Catalog`var, Infinity]]]]& , 
             Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.001507`3.3286282501466258, "CPUTimeUsed" -> 0.0015079999999998428`,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 2242933516134157153 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.901355124002421*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "2419bce6-a555-4a72-aa76-7e6144629876", "TestID" -> 
         "Catalog_20230818-WHJ85T", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "15e1ee8c-0597-4f8a-b337-2d1134c82bd5", "Input" -> HoldForm[
           Apply[And, 
            Map[Apply[And, 
              Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                 "stateVars"], PatternTest[
                   Pattern[Catalog`var, 
                    Blank[Symbol]], MemberQ[
                   FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Catalog`var, Infinity]]]]& , 
             Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00022`2.4929376786542004, "CPUTimeUsed" -> 0.000220000000000109, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 6984144052854998016 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.901355124002853*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "aef7a8f3-2c8d-4789-83c4-02bb9ab66cb3", "TestID" -> 
         "Catalog_20230818-8QV3HS", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "7ee816c2-4cf1-4da0-a831-52b0c5ae9d50", "Input" -> HoldForm[
           Apply[And, 
            Map[MatchQ[{}, #]& , 
             Map[Cases[
               FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
               "stateVars"], PatternTest[
                 Pattern[Catalog`var, 
                  Blank[Symbol]], MemberQ[
                  Map[
                  StringDrop[#, -2]& , 
                   FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                  SymbolName[#]]& ][
                 BlankSequence[]] :> Catalog`var, Infinity]& , 
              Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.001179`3.222028802927083, "CPUTimeUsed" -> 0.0011790000000000411`, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 8161952573617055623 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9013551240042276`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "b28bc920-8574-48cf-98c0-d59ee649995d", "TestID" -> 
         "Catalog_20230818-BV7QIC", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "9e139c68-e398-47c2-a3fa-f2c1c3825ec2", "Input" -> HoldForm[
           Apply[And, {
             AllTrue[
             FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo, 
              AssociationQ], 
             AllTrue[
              Map[
              FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#]& , 
               Keys[
               FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo]], 
              AssociationQ]}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000022`1.4929376786542, "CPUTimeUsed" -> 
         0.00002399999999935787, "MemoryUsed" -> 2560, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 8917891900712022191 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90135512400444*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "867c9b4a-c265-4a2e-88b1-f0591d96dd7f", "TestID" -> 
         "Catalog_20230818-SBMA65", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "bf961ef7-bc91-40d0-b778-67c012e72e33", "Input" -> HoldForm[
           Apply[And, {
             SubsetQ[
              Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], 
              Keys[
              FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo]]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000052`1.8665183414667932, "CPUTimeUsed" -> 0.00005200000000016303,
          "MemoryUsed" -> 2912, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4279310150491347371 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9013551240047116`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "9a228122-f038-4883-be6a-eb2dfd7cf8fc", "TestID" -> 
         "Catalog_20230818-HONONJ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Catalog.wlt", "EvaluationID" -> 
         "c158920f-7e2c-4e19-afa2-b9ded1949012", "Input" -> HoldForm[
           Apply[And, {
             And[
              VectorQ[
               FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[
                "BY"["initialGuess"]["Ewc"]], NumberQ], Dimensions[
                FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[
                 "BY"["initialGuess"]["Ewc"]]] == {1}], 
             Apply[And, 
              Map[Implies[
                KeyExistsQ[
                 FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[#], 
                 "initialGuess"], Dimensions[
                  FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo[
                   #["initialGuess"]["Epd"]]] == {
                  Count[
                   FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                   "parameters"], 
                   Catalog`mud[
                    Blank[Integer]], Infinity], 1}]& , 
               Keys[
               FernandoDuarte`LongRunRisk`Model`Catalog`modelsExtraInfo]]]}]],
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[False], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000088`2.094997669982163, "CPUTimeUsed" -> 0.00008799999999986596, 
         "MemoryUsed" -> 2856, "ExpectedOutput" -> HoldForm[False], "Outcome" -> 
         "Success"|>]|>, "FailureResults" -> <||>, 
    "TestsNotEvaluatedKeys" -> {}, "TestsFailedWrongResultsKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {2524745101314687337, 1760978382552566969, 
     3848560878771573040, 8946356687632719448, 867316389275546409, 
     5500938946825709855, 914380413003860376, 4481224523406606249, 
     3190079812417127568, 1230729391656980068, 1264406515485823886, 
     2242933516134157153, 6984144052854998016, 8161952573617055623, 
     8917891900712022191, 4279310150491347371}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.901355002988624*^9, 3.901355124183124*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"1bc9aee3-aafc-42fc-9bcb-107bb5ed45ae"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interactive Tests", "Subsection",
 CellChangeTimes->{{3.889905622471089*^9, 3.889905629759961*^9}, {
  3.889972063478182*^9, 
  3.889972065236586*^9}},ExpressionUUID->"2c4a83cf-8af5-4d19-89ae-\
a864a258310f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"packageFileName", "=", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DirectoryName", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "2"}], "]"}], ",", 
     "\"\<Kernel\>\"", ",", "\"\<Model\>\"", ",", 
     RowBox[{
      RowBox[{"FileBaseName", "[", 
       RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", "\"\<.wl\>\""}]}],
     "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", 
  RowBox[{
   RowBox[{"\"\<FernandoDuarte`LongRunRisk`Model`\>\"", "<>", 
    RowBox[{"FileBaseName", "[", 
     RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", "\"\<`\>\""}], ",", 
   "packageFileName"}], "]"}]}], "Input",
 CellChangeTimes->{{3.889968360919714*^9, 3.889968361169221*^9}, {
   3.889998753242611*^9, 3.8899987613556004`*^9}, 3.890825576987958*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"f275bdc7-d1c5-4b14-9c2f-42b3fa65a747"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Kernel/Model/Catalog.wl\"\>"], "Output",
 CellChangeTimes->{3.9013549740108128`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"d254662f-839e-4d39-b6d5-c2e46ac20636"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Keys", " ", "are", " ", "strings"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{"StringQ", "/@", 
     RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{
  3.89000889839254*^9, {3.890016339728188*^9, 3.890016342139681*^9}, {
   3.893004161637231*^9, 3.893004161876924*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"78177850-499e-456b-b442-fad780dafdf0"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.901354974151864*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"d3075a09-ecd3-41d9-996b-727807babcb8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"string", " ", "fields"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{"StringQ", "/@", 
     RowBox[{"Flatten", "@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"models", "[", "#", "]"}], "[", "\"\<name\>\"", "]"}], 
           ",", 
           RowBox[{
            RowBox[{"models", "[", "#", "]"}], "[", "\"\<shortname\>\"", 
            "]"}], ",", 
           RowBox[{
            RowBox[{"models", "[", "#", "]"}], "[", "\"\<bibRef\>\"", "]"}], 
           ",", 
           RowBox[{
            RowBox[{"models", "[", "#", "]"}], "[", "\"\<desc\>\"", "]"}]}], 
          "}"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}]}], ")"}]}]}]], "Input",\

 CellChangeTimes->{{3.890008770382118*^9, 3.890008858894733*^9}, {
  3.890016345133547*^9, 3.8900163569166937`*^9}, {3.893003226448749*^9, 
  3.8930032321343946`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"a17059c2-5416-45b1-b84e-0c2f842f7fb5"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.901354974157668*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"3b6292df-94f6-4eaa-ae45-81d213830ccd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"parameters", " ", "evaluate", " ", "to", " ", "numbers"}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{"NumberQ", "/@", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"models", "[", "#", "]"}], "[", "\"\<parameters\>\"", 
            "]"}], "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "2"}], "]"}], "]"}], "//.", 
          RowBox[{
           RowBox[{"models", "[", "#", "]"}], "[", "\"\<parameters\>\"", 
           "]"}]}], ")"}], "&"}], "/@", 
       RowBox[{"Keys", "[", "models", "]"}]}], "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.893002442739602*^9, 3.8930024527246227`*^9}, {
  3.893003235556836*^9, 3.893003243137875*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"eac6cf31-dd90-40a1-b538-ae578852c33b"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.901354974164603*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"431eed05-7327-41b8-85ba-53a65db3a012"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"can", " ", "find", " ", "some", " ", "models"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"Keys", "[", "models", "]"}], ",", "#"}], "]"}], "&"}], "/@", 
     
     RowBox[{"{", 
      RowBox[{"\"\<BY\>\"", ",", "\"\<BKY\>\""}], "}"}]}], ")"}]}]}]], "Input",\

 CellChangeTimes->{{3.8900087062162313`*^9, 3.890008740193614*^9}, {
  3.89001637048425*^9, 3.890016372993977*^9}, {3.893003256321348*^9, 
  3.893003261862228*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"78983d07-8f42-43d9-a50f-d26a03b2ee5c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.901354974170619*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"2a239aea-63e0-45ad-936f-895260807bf1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"models", " ", "is", " ", "an", " ", "association"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"AllTrue", "[", 
    RowBox[{"models", ",", "AssociationQ"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "each", " ", "model", " ", "inside", " ", "models", " ", "is", " ", "an", 
     " ", "association"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"AllTrue", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"models", "[", "#", "]"}], "&"}], "/@", 
      RowBox[{"Keys", "[", "models", "]"}]}], ",", "AssociationQ"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8900086430073547`*^9, 3.890008684982678*^9}, {
  3.890010177349143*^9, 3.890010179091837*^9}, {3.8900163791247263`*^9, 
  3.890016449580503*^9}, {3.893003265285705*^9, 3.893003296133358*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"33533fdf-b808-460b-a76c-9a554476db8f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.901354974177949*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"2b2a220d-b4e1-49aa-b0df-f19bb732fe26"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.90135497417869*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"fb3f4ce8-0c38-4403-bb4f-c38bfe5af386"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "exogenous", " ", "variables", " ", "are", " ", "in", " ", 
    "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"And", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
            "#", "===", 
             "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}]\
, ")"}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"Context", "/@", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"models", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
               "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"var_Symbol", "?", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                  ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}],
              "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.893001201934902*^9, 3.893001214021667*^9}, {
   3.893001245798745*^9, 3.8930012743606873`*^9}, {3.893001352341578*^9, 
   3.893001386197197*^9}, {3.893001448430169*^9, 3.893001448726687*^9}, 
   3.8930026482885447`*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"0ecadbe4-cf71-476b-8c76-ee242fab4284"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.901354974181698*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"aecaa8cb-d539-4a10-b771-9fccac7b0614"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "shocks", " ", "are", " ", "in", " ", "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"And", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
            "#", "===", "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], 
            ")"}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"Context", "/@", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"models", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
               "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"var_Symbol", "?", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
           ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
     RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{
  3.893001499960679*^9, {3.893002667440094*^9, 3.89300269939427*^9}, {
   3.893003083367228*^9, 3.893003083692607*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"5497c17b-b2dd-4e7c-a7af-d730dba6c11b"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.901354974190486*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"be424646-922b-4721-8c2b-79eef7e09e91"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "parameters", " ", "are", " ", "in", " ", "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "\"\<parameters\>\"", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"And", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
             "#", "===", 
              "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], ")"}],
             "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{"Context", "/@", 
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"models", "[", "#", "]"}], "[", "\"\<parameters\>\"", 
                "]"}], ",", 
               RowBox[{
                RowBox[{"var_Symbol", "?", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                  ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], ")"}]}],
           ")"}]}], ")"}], "&"}], "/@", 
      RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"And", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
             "#", "===", 
              "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], ")"}],
             "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{"Context", "/@", 
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"models", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
                "]"}], ",", 
               RowBox[{
                RowBox[{"var_Symbol", "?", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                  ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], ")"}]}],
           ")"}]}], ")"}], "&"}], "/@", 
      RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{
  3.893001501399847*^9, {3.893002703969759*^9, 3.893002740019191*^9}, {
   3.893003056880762*^9, 3.893003109272599*^9}, {3.893003787588058*^9, 
   3.893003788104986*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"602c7d97-d584-412d-b870-0ca50055aa97"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.901354974194149*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"9bc75337-cfe0-4884-bec3-e2b510a384b4"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9013549741949368`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"715125ab-71de-4a9f-8e7e-2eb985a5d241"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "state", " ", "variables", " ", "do", " ", "not", " ", "have", " ", "any", 
    " ", "endogenous", " ", "variables"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"MatchQ", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", "#"}], "]"}], "&"}], "/@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cases", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"models", "[", "#", "]"}], "[", "\"\<stateVars\>\"", "]"}],
           ",", 
          RowBox[{
           RowBox[{
            RowBox[{"var_Symbol", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                  "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                 RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
              ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
         "]"}], "&"}], "/@", 
       RowBox[{"Keys", "[", "models", "]"}]}], ")"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.89300111387222*^9, 3.8930011727459707`*^9}, {
   3.893001247830225*^9, 3.893001299678648*^9}, {3.893001353751255*^9, 
   3.8930015072417727`*^9}, {3.893002707727394*^9, 3.893002708411419*^9}, {
   3.893002748062245*^9, 3.893002826831513*^9}, 3.89300297523416*^9, {
   3.893003086535989*^9, 3.893003086763905*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"1a2dcded-7e53-422c-80f9-ab1140dea2c3"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.901354974197874*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"a37bcf98-ff97-4901-b888-8c7056026937"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"modelsExtraInfo", " ", "is", " ", "an", " ", "association"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"AllTrue", "[", 
    RowBox[{"modelsExtraInfo", ",", "AssociationQ"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "each", " ", "model", " ", "inside", " ", "modelsExtraInfo", " ", "is", 
     " ", "an", " ", "association"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"AllTrue", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"modelsExtraInfo", "[", "#", "]"}], "&"}], "/@", 
      RowBox[{"Keys", "[", "modelsExtraInfo", "]"}]}], ",", "AssociationQ"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.901353583738072*^9, 3.901353594897225*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"22c0137c-bdbb-4e8a-919e-b9ba199344a5"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.901354974201576*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"9bbd33ba-0d92-4ec7-8920-d711fd1a7328"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.901354974202423*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"5a92b41c-cd7e-4383-a85e-b6b82b32bc1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "models", " ", "in", " ", "modelsExtraInfo", " ", "are", " ", "a", " ", 
    "subset", " ", "of", " ", "those", " ", "defined", " ", "in", " ", 
    "models"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"SubsetQ", "[", 
   RowBox[{
    RowBox[{"Keys", "[", "models", "]"}], ",", 
    RowBox[{"Keys", "[", "modelsExtraInfo", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.901353606406434*^9, 3.901353651160013*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"5d0d6c37-c913-4696-b5ea-fa4bc8e7f5f1"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.901354974225315*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"e1b26ab8-c9a2-4656-a5c0-283490fbb2c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Ewc", " ", "in", " ", "initialGuess", " ", "inside", " ", 
    "modelsExtraInfo", " ", "is", " ", "a", " ", "list", " ", "with", " ", 
    "a", " ", "single", " ", "number"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"VectorQ", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"modelsExtraInfo", "[", "\"\<BY\>\"", "]"}], "[", 
        "\"\<initialGuess\>\"", "]"}], "[", "\"\<Ewc\>\"", "]"}], ",", 
      "NumberQ"}], "]"}], " ", "&&", " ", 
    RowBox[{
     RowBox[{"Dimensions", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"modelsExtraInfo", "[", "\"\<BY\>\"", "]"}], "[", 
        "\"\<initialGuess\>\"", "]"}], "[", "\"\<Ewc\>\"", "]"}], "]"}], "==", 
     RowBox[{"{", "1", "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "if", " ", "Epd", " ", "in", " ", "initialGuess", " ", "inside", " ", 
      "modelsExtraInfo", " ", "exists"}], ",", " ", 
     RowBox[{
     "it", " ", "has", " ", "dimensions", " ", "consistent", " ", "with", " ",
       "numStocks", " ", "in", " ", "models"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Implies", "[", 
        RowBox[{
         RowBox[{"KeyExistsQ", "[", 
          RowBox[{
           RowBox[{"modelsExtraInfo", "[", "#", "]"}], ",", 
           "\"\<initialGuess\>\""}], "]"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Dimensions", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"modelsExtraInfo", "[", "#", "]"}], "[", 
              "\"\<initialGuess\>\"", "]"}], "[", "\"\<Epd\>\"", "]"}], "]"}],
            "==", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Count", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"models", "[", "#", "]"}], "[", "\"\<parameters\>\"", 
                "]"}], ",", " ", 
               RowBox[{
               "FernandoDuarte`LongRunRisk`Model`Parameters`mud", "[", 
                "_Integer", "]"}], ",", " ", "Infinity"}], "]"}], ",", "1"}], 
            "}"}]}], ")"}]}], "]"}], "&"}], "/@", 
      RowBox[{"Keys", "[", "modelsExtraInfo", "]"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.901353710509602*^9, 3.901353858822919*^9}, {
  3.901353922804742*^9, 3.9013539583277817`*^9}, {3.9013540371889668`*^9, 
  3.901354054019368*^9}, {3.901354592688126*^9, 3.901354622947588*^9}, {
  3.90135498400948*^9, 3.901354986990878*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"6cc10cde-a6cb-404a-b3d1-b39522e85b5a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.9013549742287703`*^9, 3.901354987450778*^9}},
 CellLabel->"Out[24]=",ExpressionUUID->"e064d958-cdec-4d28-a317-47e714192b5d"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.9013549742287703`*^9, 3.9013549874521933`*^9}},
 CellLabel->"Out[25]=",ExpressionUUID->"8202c245-282e-4118-a701-9e5b0d72d594"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 942},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowStatusArea->"",
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.25 Inherited,
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9463f144-165a-4c11-9859-b1ba37118027"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 215, 4, 37, "Input",ExpressionUUID->"5936db62-753d-4c20-a941-1dfb10c21e69"],
Cell[776, 26, 1926, 41, 142, "Input",ExpressionUUID->"1f20a6f1-c8fe-4d25-91dc-21cad8616c89"],
Cell[CellGroupData[{
Cell[2727, 71, 255, 4, 67, "Subsection",ExpressionUUID->"bc721a90-5248-4709-baf0-508070e5c013"],
Cell[2985, 77, 341, 9, 37, "Input",ExpressionUUID->"61e9a1c2-4ad4-4fe4-8929-2a7bfa852efa"],
Cell[CellGroupData[{
Cell[3351, 90, 539, 10, 64, "Input",ExpressionUUID->"7373936c-ff06-42f3-99c4-9976b014d9be"],
Cell[3893, 102, 220, 2, 42, "Output",ExpressionUUID->"43404c29-bf60-4db0-8e7d-7643057b8cd7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4150, 109, 219, 3, 37, "Input",ExpressionUUID->"56243fb4-4478-4214-a53b-c438a5bbcfe2"],
Cell[4372, 114, 185, 2, 42, "Output",ExpressionUUID->"ff57e4e4-570d-4369-bfe8-bdf67083d544"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4594, 121, 1799, 28, 90, "Input",ExpressionUUID->"9f314737-f9fe-4d9e-8551-523b0929d53e"],
Cell[CellGroupData[{
Cell[6418, 153, 391, 9, 29, "Print",ExpressionUUID->"a4f9e92f-d998-47bd-895c-cc88c6adce46"],
Cell[6812, 164, 290, 5, 29, "Print",ExpressionUUID->"642d3119-cbc6-4950-8360-583b30c55fc3"]
}, Open  ]],
Cell[7117, 172, 4832, 87, 42, "Output",ExpressionUUID->"10e32ad5-0113-4d7e-8fa7-e0165f0c6526"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11986, 264, 1250, 22, 90, "Input",ExpressionUUID->"30ea8f81-e3a5-4912-928a-3a488ce6e518"],
Cell[CellGroupData[{
Cell[13261, 290, 389, 9, 29, "Print",ExpressionUUID->"5858684d-f3c0-4bde-89a7-42191d2a28c3"],
Cell[13653, 301, 288, 5, 29, "Print",ExpressionUUID->"ba3c265c-889b-4198-bca8-7e1147a4de5f"]
}, Open  ]],
Cell[13956, 309, 5040, 91, 42, "Output",ExpressionUUID->"0c59c5a7-44c9-4280-8b5f-b0428daa151c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19033, 405, 2171, 35, 116, "Input",ExpressionUUID->"f65e45e8-2582-4d00-8615-d27896add0d0"],
Cell[CellGroupData[{
Cell[21229, 444, 391, 9, 29, "Print",ExpressionUUID->"59fe35da-e0bc-4872-b6ab-7178b3e0ba8b"],
Cell[21623, 455, 288, 5, 29, "Print",ExpressionUUID->"21887f66-23e5-4a20-b768-b6be16c12f2d"]
}, Open  ]],
Cell[21926, 463, 5280, 97, 42, "Output",ExpressionUUID->"c6675733-f5cf-4a69-ba2b-6d8f1e528647"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27243, 565, 1544, 37, 116, "Input",ExpressionUUID->"5d749a31-d7a1-48d2-a85b-e58e3fb2c847"],
Cell[CellGroupData[{
Cell[28812, 606, 391, 9, 29, "Print",ExpressionUUID->"7fa5b65f-f0c4-4a56-b5e9-3c1725cb37c6"],
Cell[29206, 617, 288, 5, 29, "Print",ExpressionUUID->"e84cfe09-38ed-4cb2-9490-65b686f714ec"]
}, Open  ]],
Cell[29509, 625, 7094, 124, 42, "Output",ExpressionUUID->"7dec6abc-7c00-4bdb-a7ce-15168bf650a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36640, 754, 2293, 44, 116, "Input",ExpressionUUID->"9a7acfd9-2870-4210-a7af-7c10ed2af5d1"],
Cell[CellGroupData[{
Cell[38958, 802, 391, 9, 29, "Print",ExpressionUUID->"a86b6c89-f718-486e-91ce-9c00142a0aeb"],
Cell[39352, 813, 286, 5, 29, "Print",ExpressionUUID->"da3e594a-8efc-4519-ad12-726c9d2c01a1"]
}, Open  ]],
Cell[39653, 821, 7224, 129, 42, "Output",ExpressionUUID->"bca4b315-2abf-42b7-9303-a8cf83615970"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46914, 955, 1091, 22, 116, "Input",ExpressionUUID->"3aa8b5cd-154c-4923-aed4-60a60049060a"],
Cell[CellGroupData[{
Cell[48030, 981, 389, 9, 29, "Print",ExpressionUUID->"dd09f9de-ca21-4f7f-adf1-8cda12e1adf8"],
Cell[48422, 992, 286, 5, 29, "Print",ExpressionUUID->"b6bef6e7-cfd0-499b-a996-f0b7c9e86f53"]
}, Open  ]],
Cell[48723, 1000, 7430, 128, 42, "Output",ExpressionUUID->"43009e71-909c-41a8-b623-473ddf9a6ac0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56190, 1133, 1281, 27, 116, "Input",ExpressionUUID->"4ebbc95c-22ea-48d7-bdec-0d430d2b154f"],
Cell[CellGroupData[{
Cell[57496, 1164, 393, 9, 29, "Print",ExpressionUUID->"d2e1fd4d-7662-45a2-a43f-8464be3e120e"],
Cell[57892, 1175, 287, 5, 29, "Print",ExpressionUUID->"60197f36-46d5-43dc-a9a5-4e6294a4f267"]
}, Open  ]],
Cell[58194, 1183, 7045, 124, 42, "Output",ExpressionUUID->"2a407487-ade7-4822-b99c-69bf765c383a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65276, 1312, 1601, 33, 116, "Input",ExpressionUUID->"0cc2f06b-6e8f-4978-97cc-c47753fea3f2"],
Cell[CellGroupData[{
Cell[66902, 1349, 393, 9, 29, "Print",ExpressionUUID->"7a2824a5-4ddc-452a-a9e9-8550e1b8b74c"],
Cell[67298, 1360, 287, 5, 29, "Print",ExpressionUUID->"f1fbe5a3-7f42-465e-ac85-09cc51ef24af"]
}, Open  ]],
Cell[67600, 1368, 8023, 137, 42, "Output",ExpressionUUID->"642aa479-91b1-4d54-84df-2d526ad1bea0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75660, 1510, 2497, 59, 220, "Input",ExpressionUUID->"c37f51a1-837c-4f11-a194-78705f4642f7"],
Cell[CellGroupData[{
Cell[78182, 1573, 391, 9, 29, "Print",ExpressionUUID->"0db816e6-b084-4982-a228-45196364bdd2"],
Cell[78576, 1584, 288, 5, 29, "Print",ExpressionUUID->"7b6cabb3-1f7b-4c02-9687-1e9bba1d9025"]
}, Open  ]],
Cell[78879, 1592, 10628, 176, 42, "Output",ExpressionUUID->"ee33c667-d266-473e-bc50-dcb590f3e58a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89544, 1773, 2117, 52, 194, "Input",ExpressionUUID->"21e8aec5-4a2d-4eec-a0e6-4a0295241e7d"],
Cell[CellGroupData[{
Cell[91686, 1829, 389, 9, 29, "Print",ExpressionUUID->"55f4da71-d81b-4bb3-9065-c8e7ab98fe07"],
Cell[92078, 1840, 286, 5, 29, "Print",ExpressionUUID->"d9038e10-9c3c-4d1e-8c25-3769491f8805"]
}, Open  ]],
Cell[92379, 1848, 10651, 176, 42, "Output",ExpressionUUID->"87fcc2a8-4126-4859-95d1-d7289a320f43"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103067, 2029, 3817, 93, 454, "Input",ExpressionUUID->"67116dee-9a87-405d-93eb-27ea07c14940"],
Cell[CellGroupData[{
Cell[106909, 2126, 393, 9, 29, "Print",ExpressionUUID->"9f1098b2-ec32-4b20-af1c-378dddf7ced9"],
Cell[107305, 2137, 288, 5, 29, "Print",ExpressionUUID->"049e220f-d410-455c-a8fb-356bec0c181f"]
}, Open  ]],
Cell[107608, 2145, 11520, 185, 42, "Output",ExpressionUUID->"2e97d322-76e5-4e77-8f30-7f0b4533bbc6"],
Cell[CellGroupData[{
Cell[119153, 2334, 391, 9, 29, "Print",ExpressionUUID->"b8cef9a8-d900-4e59-84db-ce89e57b8be7"],
Cell[119547, 2345, 288, 5, 29, "Print",ExpressionUUID->"bacca1e2-4ed5-43dd-a9b9-88030bdc51bf"]
}, Open  ]],
Cell[119850, 2353, 12286, 196, 42, "Output",ExpressionUUID->"510f7899-c111-4ebc-b181-87f1689030dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132173, 2554, 2261, 53, 220, "Input",ExpressionUUID->"eeb0f7ac-c9ae-4068-9a86-aa0d4212e5fe"],
Cell[CellGroupData[{
Cell[134459, 2611, 387, 9, 29, "Print",ExpressionUUID->"fe82d254-51e6-4fb6-a21b-9d4732b29452"],
Cell[134849, 2622, 287, 5, 29, "Print",ExpressionUUID->"ab441088-3174-4b3f-a991-04aad138ba5a"]
}, Open  ]],
Cell[135151, 2630, 13173, 212, 42, "Output",ExpressionUUID->"b124026d-dad5-4688-8aaa-a9ba94930662"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148361, 2847, 1316, 30, 220, "Input",ExpressionUUID->"f5ca1345-d64e-4932-bad5-b6dd8e1f4392"],
Cell[CellGroupData[{
Cell[149702, 2881, 391, 9, 29, "Print",ExpressionUUID->"5198a873-9265-4129-851f-d2fa9a6763d1"],
Cell[150096, 2892, 288, 5, 29, "Print",ExpressionUUID->"f876161e-759d-4e62-a394-0dc36e9bbaa2"]
}, Open  ]],
Cell[150399, 2900, 12551, 203, 42, "Output",ExpressionUUID->"821f1e90-536d-4746-818a-245b4430f52b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162987, 3108, 1017, 21, 194, "Input",ExpressionUUID->"7aa2432c-8b1c-4da0-9390-74fe2051cbf3"],
Cell[CellGroupData[{
Cell[164029, 3133, 388, 9, 29, "Print",ExpressionUUID->"ba4ee7b5-a95d-4d61-8a94-2e5e52f500ab"],
Cell[164420, 3144, 285, 5, 29, "Print",ExpressionUUID->"e05de2f3-dc80-450a-9294-5289faacf2e5"]
}, Open  ]],
Cell[164720, 3152, 12338, 197, 42, "Output",ExpressionUUID->"6d35919c-9e8b-430e-b0c2-4d4c824a60db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177095, 3354, 3086, 73, 298, "Input",ExpressionUUID->"334254d6-ef9b-468f-9a92-aba24077ad39"],
Cell[CellGroupData[{
Cell[180206, 3431, 391, 9, 29, "Print",ExpressionUUID->"96d0fad2-0d9d-49d0-98d9-f02ac6bf6ec0"],
Cell[180600, 3442, 288, 5, 29, "Print",ExpressionUUID->"3ff74205-7162-4ac0-b3b8-ee15b2317a11"]
}, Open  ]],
Cell[180903, 3450, 15522, 250, 42, "Output",ExpressionUUID->"6c074c89-bba2-48ee-afb0-f2760ef4c6c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196462, 3705, 195, 3, 37, "Input",ExpressionUUID->"1e489da7-03ac-4c09-a3b0-3f18678c417b"],
Cell[196660, 3710, 188, 2, 42, "Output",ExpressionUUID->"484351e7-7ed2-44ff-94b6-56b84ffca410"]
}, Open  ]],
Cell[196863, 3715, 356, 7, 37, "Input",ExpressionUUID->"d681ce4c-fe5c-46cc-a106-c3fb97c91dc9"],
Cell[197222, 3724, 1502, 33, 402, "Input",ExpressionUUID->"8480e291-f089-46a8-93b3-cdc5392f18f2"],
Cell[198727, 3759, 3288, 67, 558, "Input",ExpressionUUID->"c6d94536-d712-4817-8c56-b5a9e698596b"],
Cell[CellGroupData[{
Cell[202040, 3830, 1534, 37, 246, "Input",ExpressionUUID->"9e83fb3a-481f-4cb8-b330-c26292abdf5f"],
Cell[203577, 3869, 407, 8, 42, "Output",ExpressionUUID->"2c4a414c-4a80-4460-b25f-7bd260b33d91"],
Cell[203987, 3879, 173, 2, 42, "Output",ExpressionUUID->"b096d74d-44d0-44a5-89d3-983d0958e0e7"],
Cell[204163, 3883, 409, 8, 42, "Output",ExpressionUUID->"ce57995e-1a60-47ec-96f6-ae8f98ebba36"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204609, 3896, 177, 3, 37, "Input",ExpressionUUID->"e077b813-cdd0-4bd1-8dfd-78f30a4f8df7"],
Cell[204789, 3901, 29997, 562, 76, "Output",ExpressionUUID->"1bc9aee3-aafc-42fc-9bcb-107bb5ed45ae"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[234835, 4469, 214, 4, 67, "Subsection",ExpressionUUID->"2c4a83cf-8af5-4d19-89ae-a864a258310f"],
Cell[CellGroupData[{
Cell[235074, 4477, 930, 21, 64, "Input",ExpressionUUID->"f275bdc7-d1c5-4b14-9c2f-42b3fa65a747"],
Cell[236007, 4500, 246, 3, 42, "Output",ExpressionUUID->"d254662f-839e-4d39-b6d5-c2e46ac20636"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236290, 4508, 479, 12, 64, "Input",ExpressionUUID->"78177850-499e-456b-b442-fad780dafdf0"],
Cell[236772, 4522, 151, 2, 42, "Output",ExpressionUUID->"d3075a09-ecd3-41d9-996b-727807babcb8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236960, 4529, 1110, 30, 64, "Input",ExpressionUUID->"a17059c2-5416-45b1-b84e-0c2f842f7fb5"],
Cell[238073, 4561, 151, 2, 42, "Output",ExpressionUUID->"3b6292df-94f6-4eaa-ae45-81d213830ccd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238261, 4568, 949, 25, 64, "Input",ExpressionUUID->"eac6cf31-dd90-40a1-b538-ae578852c33b"],
Cell[239213, 4595, 152, 2, 42, "Output",ExpressionUUID->"431eed05-7327-41b8-85ba-53a65db3a012"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239402, 4602, 681, 19, 64, "Input",ExpressionUUID->"78983d07-8f42-43d9-a50f-d26a03b2ee5c"],
Cell[240086, 4623, 152, 2, 42, "Output",ExpressionUUID->"2a239aea-63e0-45ad-936f-895260807bf1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240275, 4630, 938, 22, 116, "Input",ExpressionUUID->"33533fdf-b808-460b-a76c-9a554476db8f"],
Cell[241216, 4654, 152, 2, 42, "Output",ExpressionUUID->"2b2a220d-b4e1-49aa-b0df-f19bb732fe26"],
Cell[241371, 4658, 151, 2, 42, "Output",ExpressionUUID->"fb3f4ce8-0c38-4403-bb4f-c38bfe5af386"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241559, 4665, 1977, 51, 142, "Input",ExpressionUUID->"0ecadbe4-cf71-476b-8c76-ee242fab4284"],
Cell[243539, 4718, 152, 2, 42, "Output",ExpressionUUID->"aecaa8cb-d539-4a10-b771-9fccac7b0614"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243728, 4725, 1671, 44, 142, "Input",ExpressionUUID->"5497c17b-b2dd-4e7c-a7af-d730dba6c11b"],
Cell[245402, 4771, 152, 2, 42, "Output",ExpressionUUID->"be424646-922b-4721-8c2b-79eef7e09e91"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245591, 4778, 3058, 81, 272, "Input",ExpressionUUID->"602c7d97-d584-412d-b870-0ca50055aa97"],
Cell[248652, 4861, 152, 2, 42, "Output",ExpressionUUID->"9bc75337-cfe0-4884-bec3-e2b510a384b4"],
Cell[248807, 4865, 154, 2, 42, "Output",ExpressionUUID->"715125ab-71de-4a9f-8e7e-2eb985a5d241"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248998, 4872, 1824, 45, 168, "Input",ExpressionUUID->"1a2dcded-7e53-422c-80f9-ab1140dea2c3"],
Cell[250825, 4919, 152, 2, 42, "Output",ExpressionUUID->"a37bcf98-ff97-4901-b888-8c7056026937"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251014, 4926, 840, 21, 116, "Input",ExpressionUUID->"22c0137c-bdbb-4e8a-919e-b9ba199344a5"],
Cell[251857, 4949, 152, 2, 42, "Output",ExpressionUUID->"9bbd33ba-0d92-4ec7-8920-d711fd1a7328"],
Cell[252012, 4953, 152, 2, 42, "Output",ExpressionUUID->"5a92b41c-cd7e-4383-a85e-b6b82b32bc1b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252201, 4960, 552, 12, 64, "Input",ExpressionUUID->"5d0d6c37-c913-4696-b5ea-fa4bc8e7f5f1"],
Cell[252756, 4974, 152, 2, 42, "Output",ExpressionUUID->"e1b26ab8-c9a2-4656-a5c0-283490fbb2c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252945, 4981, 2639, 66, 194, "Input",ExpressionUUID->"6cc10cde-a6cb-404a-b3d1-b39522e85b5a"],
Cell[255587, 5049, 178, 2, 42, "Output",ExpressionUUID->"e064d958-cdec-4d28-a317-47e714192b5d"],
Cell[255768, 5053, 180, 2, 62, "Output",ExpressionUUID->"8202c245-282e-4118-a701-9e5b0d72d594"]
}, Open  ]]
}, Open  ]]
}
]
*)

