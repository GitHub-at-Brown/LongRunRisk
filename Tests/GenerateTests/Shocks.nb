(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    366593,       7209]
NotebookOptionsPosition[    306184,       6123]
NotebookOutlinePosition[    352546,       6978]
CellTagsIndexPosition[    352503,       6975]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"Quit", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.889964198656839*^9, 3.889964203363894*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"4f3f1a60-cc68-4ae9-bddd-46c77aa4048b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"testFileName", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DirectoryName", "[", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "1"}], "]"}], ",", 
      RowBox[{
       RowBox[{"FileBaseName", "[", 
        RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", 
       "\"\<.wlt\>\""}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pacletDir", "=", 
   RowBox[{"DirectoryName", "[", 
    RowBox[{"testFileName", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", "pacletDir", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testContextBase", "=", 
   RowBox[{"FileBaseName", "[", "testFileName", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$ContextPath", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"$ContextPath", ",", 
     RowBox[{"Except", "[", "\"\<PacletizedResourceFunctions`\>\"", "]"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8890661685133457`*^9, 3.889066220685074*^9}, {
   3.8890662555512333`*^9, 3.889066299901951*^9}, {3.889066581166473*^9, 
   3.8890665847967653`*^9}, {3.889066731765956*^9, 3.889066745674687*^9}, {
   3.889431410824514*^9, 3.88943144002302*^9}, 3.889502968269744*^9, {
   3.889998928469849*^9, 3.889998928670561*^9}, {3.890676553021196*^9, 
   3.890676564028514*^9}, 3.890676636594749*^9, {3.890679618620262*^9, 
   3.89067961902995*^9}, {3.8908254134370813`*^9, 3.890825413876319*^9}, {
   3.890825459205497*^9, 3.890825473041605*^9}, {3.890825503118348*^9, 
   3.8908255374530487`*^9}, {3.891021675325671*^9, 3.891021675545487*^9}, {
   3.8911588731924877`*^9, 3.891158877904397*^9}, {3.8911592499395514`*^9, 
   3.8911592502376633`*^9}, {3.891313793187236*^9, 3.891313806196443*^9}, {
   3.8913138758190536`*^9, 3.8913138873897676`*^9}, 3.891313958162628*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"ab6d9e49-903f-4057-a633-2e798b92a515"],

Cell[CellGroupData[{

Cell["CI Tests", "Subsection",
 CellChangeTimes->{{3.8895791922306013`*^9, 3.889579196409403*^9}, {
  3.889905620469079*^9, 3.8899056207707977`*^9}, {3.889967624152501*^9, 
  3.889967626012704*^9}},ExpressionUUID->"5216b0c6-0b30-4607-beca-\
83054aa122f9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FileNames", "[", "testFileName", "]"}], "===", 
     RowBox[{"{", "}"}]}], ",", "Nothing", ",", 
    RowBox[{"DeleteFile", "[", "testFileName", "]"}]}], "]"}], ";"}]], "Input",\

 CellChangeTimes->{3.8913138191474037`*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"7e75b048-8961-47de-91cb-6d1bd22efb8c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"confirm", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"testContext", "=", 
  RowBox[{
  "\"\<FernandoDuarte`LongRunRisk`Model`\>\"", "<>", "testContextBase", "<>", 
   "\"\<`\>\""}]}]}], "Input",
 CellChangeTimes->{{3.889968360919714*^9, 3.889968361169221*^9}, 
   3.89001596275924*^9, 3.8913138582704678`*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"7c745d6c-f8d5-490b-9a4e-eab39840f4de"],

Cell[BoxData["\<\"FernandoDuarte`LongRunRisk`Model`Shocks`\"\>"], "Output",
 CellChangeTimes->{3.905698280492528*^9, 3.905698428115782*^9, 
  3.905698583269641*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"d298714a-9fb3-483f-8f05-7bf73cfb21ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Begin", "[", "\"\<Model`Shocks`\>\"", "]"}]], "Input",
 CellChangeTimes->{3.891313883957979*^9, 3.905697598118075*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"9bbb6f3f-a98d-4f9c-ad17-544ce59b7b2a"],

Cell[BoxData["\<\"Model`Shocks`\"\>"], "Output",
 CellChangeTimes->{3.905698280501293*^9, 3.905698428120263*^9, 
  3.90569858327542*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"5c1687df-740f-47ec-bf0a-a5570a0dfd34"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Needs", "[", "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\"", "]"}], 
    ";", "\[IndentingNewLine]", "True"}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.8899652151465197`*^9, 3.889965235350771*^9}, 
   3.8899652808817787`*^9, {3.889967731242805*^9, 3.8899677356636972`*^9}, {
   3.889967971867523*^9, 3.889967975146998*^9}, {3.889968339451161*^9, 
   3.88996834001075*^9}, 3.889968619774049*^9, {3.8899688826075077`*^9, 
   3.88996888992594*^9}, {3.88996899475625*^9, 3.8899690018858624`*^9}, {
   3.8899691256166267`*^9, 3.8899691257757883`*^9}, {3.889969207667478*^9, 
   3.8899692141700287`*^9}, {3.8899692798779783`*^9, 3.889969288274632*^9}, 
   3.889969387087708*^9, 3.889969585993528*^9, {3.8899702972149563`*^9, 
   3.889970314454108*^9}, 3.8912159556478643`*^9, {3.905697627390712*^9, 
   3.905697644774135*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"27b72c9c-3767-4dd9-883c-12b885785f0a"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20231007-7Y2T7Y\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20231007-7Y2T7Y"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9056982807803173`*^9, 3.905698428397705*^9, 
  3.905698583548669*^9},
 CellLabel->
  "During evaluation of \
In[10]:=",ExpressionUUID->"78d9ad1f-1320-43f9-b977-734b4fbc4e8f"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.9056982807803173`*^9, 3.905698428397705*^9, 
  3.905698583576867*^9},
 CellLabel->
  "During evaluation of \
In[10]:=",ExpressionUUID->"3fef21e9-f122-402a-8658-9d1f3e009f32"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Needs @ \"FernandoDuarte`LongRunRisk`Model`Shocks`\";\n\tTrue", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tNeeds @ \"FernandoDuarte`LongRunRisk`Model`Shocks`\";\
\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-7Y2T7Y\"\n\
]\n\n", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$ = True,
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.011, "AbsoluteTiming" -> 0.012, 
   "InputString" :> ToString[
     Unevaluated[Needs["FernandoDuarte`LongRunRisk`Model`Shocks`"]; True], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\
\n\t,\n\tTestID->\"Shocks_20231007-7Y2T7Y\"\n]\n\n\nEndTestSection[]\n"}, "\<\
\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.9056982808129063`*^9, 3.905698428427223*^9, 
  3.905698583586725*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"39be6c16-c7e5-4239-94f7-1a017c23f67f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", "\t", 
   RowBox[{"MemberQ", "[", 
    RowBox[{
    "$ContextPath", ",", "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}],
     "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{
  3.889901579125684*^9, {3.889965035911569*^9, 3.889965039550325*^9}, {
   3.889965296152458*^9, 3.889965305191854*^9}, 3.8899653858152437`*^9, 
   3.889967740469187*^9, {3.889968345370779*^9, 3.889968347169169*^9}, {
   3.889968526692542*^9, 3.8899685355316963`*^9}, {3.889968649261517*^9, 
   3.889968660343141*^9}, 3.889969395693264*^9, {3.88996958684683*^9, 
   3.8899695947482367`*^9}, {3.889970300225127*^9, 3.889970329366473*^9}, 
   3.891215962399996*^9, 3.905697627391603*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"565bb1f7-e9c6-4ed3-b28a-a5d567ae3826"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20231007-V0Z0JM\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20231007-V0Z0JM"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9056982808585033`*^9, 3.905698428471983*^9, 
  3.905698583632908*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"402191e5-306f-4f1b-a43c-474eabe645fc"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.9056982808585033`*^9, 3.905698428471983*^9, 
  3.905698583634544*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"195bf5db-bd39-4a04-95fd-25d53b191b69"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tMemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20231007-V0Z0JM\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      MemberQ[$ContextPath, "FernandoDuarte`LongRunRisk`Model`Shocks`"]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\
\n\t,\n\tTestID->\"Shocks_20231007-7Y2T7Y\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-V0Z0JM\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905698280878931*^9, 3.9056984284920197`*^9, 
  3.9056985836421003`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"1c32f704-6197-4cd1-a7e2-bb680dc26f0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "should", " ", "be", " ", "true", " ", "if", " ", "rulesE", " ", "can", 
     " ", "be", " ", "found"}], "*)"}], "\[IndentingNewLine]", "\t", 
   RowBox[{"Not", "[", 
    RowBox[{
     RowBox[{"Names", "[", "\"\<*rulesE\>\"", "]"}], "===", 
     RowBox[{"{", "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.8899706175264597`*^9, 3.889970628972746*^9}, 
   3.889972029349813*^9, 3.905697627392408*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"3ca54cb5-c283-4f3b-8e12-834ba756dc26"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20231007-U78NUC\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20231007-U78NUC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905698280942278*^9, 3.905698428547014*^9, 
  3.905698583709484*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"7320cd47-bfa0-4bfe-9c01-ca16c32652f3"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.905698280942278*^9, 3.905698428547014*^9, 
  3.9056985837114887`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"ecca5418-77e8-48f2-9d58-036c91c06404"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "!SameQ[Names @ \"*rulesE\", {}]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Shocks_20231007-U78NUC\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.023, "AbsoluteTiming" -> 0.023, 
   "InputString" :> ToString[
     Unevaluated[
      Not[Names["*rulesE"] === {}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\
\n\t,\n\tTestID->\"Shocks_20231007-7Y2T7Y\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-V0Z0JM\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20231007-U78NUC\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905698280951388*^9, 3.905698428567246*^9, 
  3.905698583731431*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"f68262c9-a251-4db2-b246-8500bfb67880"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"shocks", " ", "have", " ", "zero", " ", "means"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{"Flatten", "@", 
      RowBox[{"{", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}], "/.", 
             RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "0"}], 
          "\[IndentingNewLine]", "\t\t", ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
              "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
              "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
         "\[IndentingNewLine]", "\t", "]"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
              RowBox[{"t", ",", "ii"}], "]"}], "/.", 
             RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "0"}], 
          "\[IndentingNewLine]", "\t\t", ",", 
          RowBox[{"{", 
           RowBox[{"ii", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
         "\[IndentingNewLine]", "\t", "]"}]}], "\[IndentingNewLine]", "}"}]}],
      "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.889965468632722*^9, 3.889965535681717*^9}, {
   3.889965687921562*^9, 3.889965719041513*^9}, {3.8899657564745703`*^9, 
   3.8899657868805656`*^9}, {3.889965818275572*^9, 3.88996587402346*^9}, {
   3.8899660417909737`*^9, 3.889966042024665*^9}, {3.889967536877624*^9, 
   3.88996754071059*^9}, {3.8899676626847277`*^9, 3.889967663326408*^9}, {
   3.889967743694665*^9, 3.889967744059184*^9}, {3.8899677859095707`*^9, 
   3.8899678081741953`*^9}, {3.8899679955631647`*^9, 3.889968003395926*^9}, {
   3.889969462764024*^9, 3.8899694656136417`*^9}, {3.889969517081333*^9, 
   3.8899695670076637`*^9}, {3.889970354531378*^9, 3.889970361426557*^9}, 
   3.889970446358612*^9, 3.889971586268968*^9, 3.8899720413397284`*^9, {
   3.90569762739326*^9, 3.905697731427184*^9}, {3.90569852132406*^9, 
   3.905698522651073*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"59480a4b-bd79-4729-a954-787da9c6bd4a"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20231007-LTX8WA\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20231007-LTX8WA"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905698281001033*^9, 3.905698428599924*^9, 
  3.90569858378831*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"ea0e4f14-5a85-46ec-b8bd-11c060fe6ab5"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.905698281001033*^9, 3.905698428599924*^9, 
  3.90569858378979*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"b3b68196-800e-4846-beea-e564753385a3"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`\
Shocks`t] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
0],\n\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`\
Shocks`t] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
0],\n\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-LTX8WA\"\
\n]\n\n", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Flatten[{
         Table[ReplaceAll[
            FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
            Model`Shocks`t], 
            FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]] === 
          0, {Model`Shocks`f, {
           "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
         Table[ReplaceAll[
            FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
            Model`Shocks`t, Model`Shocks`ii], 
            FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]] === 
          0, {Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\
\n\t,\n\tTestID->\"Shocks_20231007-7Y2T7Y\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-V0Z0JM\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20231007-U78NUC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`\
Shocks`t] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
0],\n\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-LTX8WA\"\
\n]\n\n\nEndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905698281019431*^9, 3.9056984286301622`*^9, 
  3.905698583797482*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"7ad6cdbe-f087-4b5b-97f8-d2fac3060a09"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "shocks", " ", "have", " ", "variance", " ", "equal", " ", "to", " ", 
     "one"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{"Flatten", "@", 
      RowBox[{"{", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}], "^", "2"}], "/.", 
             RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "1"}], 
          "\[IndentingNewLine]", "\t\t", ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
              "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
              "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
         "\[IndentingNewLine]", "\t", "]"}], "\[IndentingNewLine]", "\t", ",",
         "\[IndentingNewLine]", "\t", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
               RowBox[{"t", ",", "ii"}], "]"}], "^", "2"}], "/.", 
             RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "1"}], 
          "\[IndentingNewLine]", "\t\t", ",", 
          RowBox[{"{", 
           RowBox[{"ii", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
         "\[IndentingNewLine]", "\t", "]"}]}], "\[IndentingNewLine]", "}"}]}],
      "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.889966121134981*^9, 3.889966129513671*^9}, {
  3.8899675430265427`*^9, 3.889967546703742*^9}, {3.889967666639736*^9, 
  3.8899676668939447`*^9}, {3.889967746374608*^9, 3.889967746668034*^9}, {
  3.88996781333914*^9, 3.8899678201195583`*^9}, {3.88996801609513*^9, 
  3.88996801967063*^9}, {3.9056977180794153`*^9, 3.9056977598962517`*^9}, {
  3.9056985266133757`*^9, 3.905698527761218*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"47f4c0e3-a3cf-4b90-9890-6fdd8e20e5d0"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20231007-84HPWC\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20231007-84HPWC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905698281085931*^9, 3.9056984286958923`*^9, 
  3.9056985838667507`*^9},
 CellLabel->
  "During evaluation of \
In[14]:=",ExpressionUUID->"40b32858-2ce0-417c-be15-57aa9d3db1fe"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.905698281085931*^9, 3.9056984286958923`*^9, 
  3.905698583868422*^9},
 CellLabel->
  "During evaluation of \
In[14]:=",ExpressionUUID->"65b5bc6c-984f-4c6b-8226-89f00a141d03"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-84HPWC\"\
\n]\n\n", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.026000000000000002`, 
   "AbsoluteTiming" -> 0.026000000000000002`, "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Flatten[{
         Table[
         ReplaceAll[
           FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
             Model`Shocks`t]^2, 
            FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]] === 
          1, {Model`Shocks`f, {
           "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
         Table[
         ReplaceAll[
           FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
             Model`Shocks`t, Model`Shocks`ii]^2, 
            FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]] === 
          1, {Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\
\n\t,\n\tTestID->\"Shocks_20231007-7Y2T7Y\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-V0Z0JM\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20231007-U78NUC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`\
Shocks`t] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
0],\n\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-LTX8WA\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-84HPWC\"\
\n]\n\n\nEndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905698281105184*^9, 3.905698428714993*^9, 
  3.905698583887718*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"78808034-e4c8-4018-ac7a-272b2ed75ba6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"shocks", " ", "have", " ", "zero", " ", "third", " ", "moment"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{"Flatten", "@", 
      RowBox[{"{", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}], "^", "3"}], "/.", 
             RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "0"}], 
          "\[IndentingNewLine]", "\t\t", ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
              "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
              "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
         "\[IndentingNewLine]", "\t", "]"}], ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
               RowBox[{"t", ",", "ii"}], "]"}], "^", "3"}], "/.", 
             RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "0"}], 
          "\[IndentingNewLine]", "\t\t", ",", 
          RowBox[{"{", 
           RowBox[{"ii", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
         "\[IndentingNewLine]", "\t", "]"}]}], "\[IndentingNewLine]", "}"}]}],
      "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.889966137593294*^9, 3.889966157676291*^9}, {
  3.8899675483847713`*^9, 3.889967551583518*^9}, {3.8899676691600733`*^9, 
  3.889967669364262*^9}, {3.889967748725914*^9, 3.889967749007223*^9}, {
  3.889967825028019*^9, 3.8899678304574842`*^9}, {3.889968028194545*^9, 
  3.889968031839179*^9}, {3.905697770216473*^9, 3.9056977979974422`*^9}, {
  3.905698392671227*^9, 3.90569839392868*^9}, {3.905698530591648*^9, 
  3.905698531770916*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"8f45a60c-12d1-47b3-95b3-29eeef517d37"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20231007-1AQ24U\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20231007-1AQ24U"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9056982811567574`*^9, 3.905698428767181*^9, 
  3.905698583932289*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"178b4f74-fc8b-43ad-a3c1-1ad2ab2e43b7"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.9056982811567574`*^9, 3.905698428767181*^9, 
  3.905698583933548*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"02e29f22-2c05-4c47-aba6-5ca5ba58c572"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-1AQ24U\"\
\n]\n\n", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.003, "AbsoluteTiming" -> 0.003, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Flatten[{
         Table[
         ReplaceAll[
           FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
             Model`Shocks`t]^3, 
            FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]] === 
          0, {Model`Shocks`f, {
           "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
         Table[
         ReplaceAll[
           FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
             Model`Shocks`t, Model`Shocks`ii]^3, 
            FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]] === 
          0, {Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\
\n\t,\n\tTestID->\"Shocks_20231007-7Y2T7Y\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-V0Z0JM\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20231007-U78NUC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`\
Shocks`t] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
0],\n\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-LTX8WA\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-84HPWC\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-1AQ24U\"\
\n]\n\n\nEndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.9056982811761103`*^9, 3.905698428785653*^9, 
  3.905698583940908*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"7f2c030a-13dc-44b3-b929-5256f37aaecb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "shocks", " ", "have", " ", "fourth", " ", "moment", " ", "equal", " ", 
     "to", " ", "three"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{"Flatten", "@", 
      RowBox[{"{", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}], "^", "4"}], "/.", 
             RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "3"}], 
          "\[IndentingNewLine]", "\t\t", ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
              "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
              "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
         "\[IndentingNewLine]", "\t", "]"}], "\[IndentingNewLine]", "\t", ",",
         "\[IndentingNewLine]", "\t", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
               RowBox[{"t", ",", "ii"}], "]"}], "^", "4"}], "/.", 
             RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "3"}], 
          "\[IndentingNewLine]", "\t\t", ",", 
          RowBox[{"{", 
           RowBox[{"ii", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
         "\[IndentingNewLine]", "\t", "]"}]}], "\[IndentingNewLine]", "}"}]}],
      "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.8899661404752703`*^9, 3.889966162544742*^9}, {
   3.88996755330625*^9, 3.8899675539045153`*^9}, {3.8899676717688217`*^9, 
   3.889967672005005*^9}, {3.88996775093589*^9, 3.8899677512290583`*^9}, {
   3.889967834057867*^9, 3.88996783977798*^9}, {3.889968042239496*^9, 
   3.889968052278575*^9}, {3.905697804776496*^9, 3.905697830677374*^9}, 
   3.905698398052775*^9, {3.905698534571245*^9, 3.905698535781271*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"34c5906b-b701-4e99-ac6d-68e658cecc0f"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20231007-13B46Z\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20231007-13B46Z"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905698281227708*^9, 3.905698428836554*^9, 
  3.9056985839941893`*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"a89bea54-92f7-4790-85e1-baf4d25b3529"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.905698281227708*^9, 3.905698428836554*^9, 
  3.9056985839954653`*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"d1ad5912-532c-497b-b6b0-fe6041fc095b"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 3],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 3],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 3],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 3],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-13B46Z\"\
\n]\n\n", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.004, "AbsoluteTiming" -> 0.004, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Flatten[{
         Table[
         ReplaceAll[
           FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
             Model`Shocks`t]^4, 
            FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]] === 
          3, {Model`Shocks`f, {
           "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
         Table[
         ReplaceAll[
           FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
             Model`Shocks`t, Model`Shocks`ii]^4, 
            FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]] === 
          3, {Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\
\n\t,\n\tTestID->\"Shocks_20231007-7Y2T7Y\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-V0Z0JM\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20231007-U78NUC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`\
Shocks`t] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
0],\n\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-LTX8WA\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-84HPWC\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-1AQ24U\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 3],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 3],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-13B46Z\"\
\n]\n\n\nEndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905698281246375*^9, 3.905698428856748*^9, 
  3.905698584005855*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"355fa08c-d09f-498e-904f-80ea2f77d29e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"shocks", " ", "are", " ", "uncorrelated"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{"Flatten", "@", 
      RowBox[{"{", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{"0", "===", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"f", "===", "g"}], ",", "0", ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}], "*", 
               RowBox[{
                RowBox[{"eps", "[", "g", "]"}], "[", "t", "]"}]}], "/.", 
              RowBox[{"rulesE", "[", "t", "]"}]}]}], "]"}]}], 
          "\[IndentingNewLine]", "\t\t", ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
              "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
              "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}], 
          "\[IndentingNewLine]", "\t\t", ",", 
          RowBox[{"{", 
           RowBox[{"g", ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
              "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
              "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
         "\[IndentingNewLine]", "\t", "]"}], "\[IndentingNewLine]", "\t", ",",
         "\[IndentingNewLine]", "\t", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{"0", "===", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
               RowBox[{"t", ",", "ii"}], "]"}], "*", 
              RowBox[{
               RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}]}], "/.", 
             RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], 
          "\[IndentingNewLine]", "\t\t", ",", 
          RowBox[{"{", 
           RowBox[{"ii", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}], 
          "\[IndentingNewLine]", "\t\t", ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<x\>\"", ",", "\"\<pi\>\"", ",", "\"\<pibar\>\"", ",", 
              "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", "\"\<sc\>\"", ",", 
              "\"\<sp\>\""}], "}"}]}], "}"}]}], "\[IndentingNewLine]", "\t", 
         "]"}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
     ")"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.889966171785048*^9, 3.889966259267709*^9}, {
  3.88996755849631*^9, 3.889967559615136*^9}, {3.8899676744105577`*^9, 
  3.8899676746563673`*^9}, {3.889967753296865*^9, 3.8899677536392727`*^9}, {
  3.889967845814172*^9, 3.889967850648691*^9}, {3.8899680615384283`*^9, 
  3.889968069633069*^9}, {3.905697868041627*^9, 3.9056978960900383`*^9}, {
  3.905698540092669*^9, 3.9056985420822144`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"ac65904e-36a9-4c48-8329-9424b41234c5"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20231007-JAIJWX\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20231007-JAIJWX"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905698281294128*^9, 3.905698428903556*^9, 
  3.905698584052109*^9},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"acf76f96-6b42-4118-846e-861f2e043eeb"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.905698281294128*^9, 3.905698428903556*^9, 
  3.905698584053541*^9},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"e7295a7a-c79b-4f28-acb1-e95c72d88ce8"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\tTable[\n\t\t\t\t\tSameQ[0,\n\t\t\
\t\t\t\tIf[SameQ[Model`Shocks`f, Model`Shocks`g],\n\t\t\t\t\t\t\t0,\n\t\t\t\t\
\t\t\t(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`\
Shocks`t] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`g][Model`Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]\n\t\t\t\t\t\
\t]\n\t\t\t\t\t],\n\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\
\", \"sg\", \"sx\", \"sc\", \"sp\"}},\n\t\t\t\t\t{Model`Shocks`g, {\"x\", \
\"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t],\n\t\t\
\t\tTable[\n\t\t\t\t\tSameQ[0,\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`t, \
Model`Shocks`ii] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]\n\t\t\t\t\t\
],\n\t\t\t\t\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}},\n\t\t\t\
\t\t{Model`Shocks`f, {\"x\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\tTable[\n\t\
\t\t\t\tSameQ[0,\n\t\t\t\t\t\tIf[SameQ[Model`Shocks`f, Model`Shocks`g],\n\t\t\
\t\t\t\t\t0,\n\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`Shocks`t] \
* FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`g][Model`Shocks`t])\
 /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]\n\t\t\t\t\t\
\t]\n\t\t\t\t\t],\n\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\
\", \"sg\", \"sx\", \"sc\", \"sp\"}},\n\t\t\t\t\t{Model`Shocks`g, {\"x\", \
\"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t],\n\t\t\
\t\tTable[\n\t\t\t\t\tSameQ[0,\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`t, \
Model`Shocks`ii] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]\n\t\t\t\t\t\
],\n\t\t\t\t\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}},\n\t\t\t\
\t\t{Model`Shocks`f, {\"x\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20231007-JAIJWX\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.002, "AbsoluteTiming" -> 0.002, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Flatten[{
         Table[0 === If[Model`Shocks`f === Model`Shocks`g, 0, 
            ReplaceAll[
            FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
              Model`Shocks`t] 
             FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`g][
              Model`Shocks`t], 
             FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
             Model`Shocks`t]]], {
          Model`Shocks`f, {
           "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}, {
          Model`Shocks`g, {
           "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
         Table[
         0 === ReplaceAll[
           FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
             Model`Shocks`t, Model`Shocks`ii] 
            FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
             Model`Shocks`t], 
            FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]], {
          Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}, {
          Model`Shocks`f, {"x", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\
\n\t,\n\tTestID->\"Shocks_20231007-7Y2T7Y\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-V0Z0JM\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20231007-U78NUC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`\
Shocks`t] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
0],\n\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-LTX8WA\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-84HPWC\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-1AQ24U\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 3],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 3],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-13B46Z\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[\n\t\t\t\t\tSameQ[0,\n\t\t\t\t\t\tIf[SameQ[Model`Shocks`f, \
Model`Shocks`g],\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`Shocks`t] \
* FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`g][Model`Shocks`t])\
 /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]\n\t\t\t\t\t\
\t]\n\t\t\t\t\t],\n\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\
\", \"sg\", \"sx\", \"sc\", \"sp\"}},\n\t\t\t\t\t{Model`Shocks`g, {\"x\", \
\"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t],\n\t\t\
\t\tTable[\n\t\t\t\t\tSameQ[0,\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`t, \
Model`Shocks`ii] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]\n\t\t\t\t\t\
],\n\t\t\t\t\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}},\n\t\t\t\
\t\t{Model`Shocks`f, {\"x\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20231007-JAIJWX\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905698281312851*^9, 3.905698428914197*^9, 
  3.905698584070837*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"620faf93-4544-4831-870b-dc6eeb99335f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"taugd", " ", "works", " ", "as", " ", "correlation", " ", 
     RowBox[{"b", "/", "w"}], " ", "shocks", " ", "to", " ", "consumption", 
     " ", "and", " ", "dividends"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"StringDelete", "[", 
        RowBox[{"#", ",", 
         RowBox[{
          RowBox[{"\"\<FernandoDuarte\>\"", "|", "\"\<`\>\""}], "~~", "__", 
          "~~", "\"\<`\>\""}]}], "]"}], "&"}], "/@", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ToString", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
             RowBox[{"t", ",", "ii"}], "]"}], "*", 
            RowBox[{
             RowBox[{"eps", "[", "\"\<dc\>\"", "]"}], "[", "t", "]"}]}], "/.", 
           RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}]}], ")"}], "===", 
    RowBox[{"{", 
     RowBox[{
     "\"\<taugd[1]\>\"", ",", "\"\<taugd[i]\>\"", ",", "\"\<taugd[j]\>\""}], 
     "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.889966276655841*^9, 3.889966329628468*^9}, 
   3.889966470569511*^9, {3.8899666206897087`*^9, 3.889966642167533*^9}, {
   3.8899666930281763`*^9, 3.889966714268526*^9}, {3.889966746437366*^9, 
   3.8899668192799807`*^9}, 3.889966968372637*^9, {3.8899676779101973`*^9, 
   3.889967678143958*^9}, {3.8899677558359327`*^9, 3.889967756159708*^9}, {
   3.8899678548486967`*^9, 3.88996786321723*^9}, {3.9056980257146263`*^9, 
   3.905698045424459*^9}, {3.905698337460082*^9, 3.9056983705455837`*^9}, 
   3.9056985461615753`*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"8425dca0-fd15-42a1-8e6b-e6fb544a45b1"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20231007-RTEJ8P\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20231007-RTEJ8P"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9056982813609247`*^9, 3.905698428963354*^9, 
  3.905698584121151*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"262e4cf8-ed43-496f-8c00-1b6d34773902"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.9056982813609247`*^9, 3.905698428963354*^9, 
  3.9056985841226377`*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"cb4c7e3d-be2e-468d-816d-a42856554ef4"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "SameQ[\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\tStringDelete[#, \
StringExpression[\"FernandoDuarte\" | \"`\", __, \"`\"]]\n\t\t\t],\n\t\t\t\
Table[ToString[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`\
Shocks`t, Model`Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\
\"][Model`Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]],\n\t\t\t\t\
{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t]\n\t\t],\n\t\t\
{\"taugd[1]\", \"taugd[i]\", \"taugd[j]\"}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tSameQ[\n\t\tMap[\n\t\t\tFunction[\n\t\t\t\t\
StringDelete[#, StringExpression[\"FernandoDuarte\" | \"`\", __, \"`\"]]\n\t\t\
\t],\n\t\t\t\
Table[ToString[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`\
Shocks`t, Model`Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\
\"][Model`Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]],\n\t\t\t\t\
{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t]\n\t\t],\n\t\t\
{\"taugd[1]\", \"taugd[i]\", \"taugd[j]\"}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\
\tTestID->\"Shocks_20231007-RTEJ8P\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[Map[StringDelete[#, 
         StringExpression[
          Alternatives["FernandoDuarte", "`"], 
          BlankSequence[], "`"]]& , 
        Table[
         ToString[
          ReplaceAll[
          FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
            Model`Shocks`t, Model`Shocks`ii] 
           FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][Model`Shocks`t], 
           
           FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]]], {
         Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]] === {
       "taugd[1]", "taugd[i]", "taugd[j]"}], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\
\n\t,\n\tTestID->\"Shocks_20231007-7Y2T7Y\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-V0Z0JM\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20231007-U78NUC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`\
Shocks`t] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
0],\n\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-LTX8WA\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-84HPWC\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-1AQ24U\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 3],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 3],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-13B46Z\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[\n\t\t\t\t\tSameQ[0,\n\t\t\t\t\t\tIf[SameQ[Model`Shocks`f, \
Model`Shocks`g],\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`Shocks`t] \
* FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`g][Model`Shocks`t])\
 /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]\n\t\t\t\t\t\
\t]\n\t\t\t\t\t],\n\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\
\", \"sg\", \"sx\", \"sc\", \"sp\"}},\n\t\t\t\t\t{Model`Shocks`g, {\"x\", \
\"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t],\n\t\t\
\t\tTable[\n\t\t\t\t\tSameQ[0,\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`t, \
Model`Shocks`ii] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]\n\t\t\t\t\t\
],\n\t\t\t\t\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}},\n\t\t\t\
\t\t{Model`Shocks`f, {\"x\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20231007-JAIJWX\"\n]\n\n\nVerificationTest[\n\tSameQ[\n\t\t\
Map[\n\t\t\tFunction[\n\t\t\t\tStringDelete[#, \
StringExpression[\"FernandoDuarte\" | \"`\", __, \"`\"]]\n\t\t\t],\n\t\t\t\
Table[ToString[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`\
Shocks`t, Model`Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\
\"][Model`Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]],\n\t\t\t\t\
{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t]\n\t\t],\n\t\t\
{\"taugd[1]\", \"taugd[i]\", \"taugd[j]\"}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\
\tTestID->\"Shocks_20231007-RTEJ8P\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905698281372122*^9, 3.90569842898244*^9, 
  3.905698584130324*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"ca7de34a-6fc7-42f9-be71-bb6489da4977"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"should", " ", "all", " ", "return", " ", "true"}], ",", " ", 
     RowBox[{
     "confirming", " ", "that", " ", "rulesE", " ", "returns", " ", "same", 
      " ", "expression", " ", "unevaluated"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{"Flatten", "@", 
      RowBox[{"{", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"expr", "/.", 
             RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "expr"}], 
          "\[IndentingNewLine]", "\t\t", ",", 
          RowBox[{"{", 
           RowBox[{"expr", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"eps", "[", "f", "]"}], "[", 
               RowBox[{"t", "+", "1"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"f", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
                  "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
                  "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
             "]"}]}], "}"}]}], "\[IndentingNewLine]", "\t", "]"}], 
        "\[IndentingNewLine]", "\t", ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"expr", "/.", 
             RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "expr"}], 
          "\[IndentingNewLine]", "\t\t", ",", 
          RowBox[{"{", 
           RowBox[{"expr", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"eps", "[", 
                RowBox[{"ToExpression", "@", "f"}], "]"}], "[", "t", "]"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"f", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
                  "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
                  "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
             "]"}]}], "}"}]}], "\[IndentingNewLine]", "\t", "]"}], 
        "\[IndentingNewLine]", "\t", ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"expr", "/.", 
             RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "expr"}], 
          "\[IndentingNewLine]", "\t\t", ",", 
          RowBox[{"{", 
           RowBox[{"expr", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
               RowBox[{
                RowBox[{"t", "+", "1"}], ",", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"eps", "[", "dd", "]"}], "[", 
               RowBox[{"t", ",", "i"}], "]"}]}], "}"}]}], "}"}]}], 
         "\[IndentingNewLine]", "\t", "]"}]}], "\[IndentingNewLine]", "}"}]}],
      "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.889965468632722*^9, 3.889965535681717*^9}, {
  3.889965687921562*^9, 3.889965748623394*^9}, {3.889965898517263*^9, 
  3.889965927180188*^9}, {3.8899670123313913`*^9, 3.889967110342752*^9}, {
  3.889967191054615*^9, 3.889967303783434*^9}, {3.8899676854688587`*^9, 
  3.88996768572717*^9}, {3.889967763265728*^9, 3.889967763628764*^9}, {
  3.889967883379265*^9, 3.889967894944208*^9}, {3.889968130363205*^9, 
  3.889968136461113*^9}, {3.905697958232336*^9, 3.905697965841962*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"e65fd894-d9b6-444c-a52d-afb666f1e5bc"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20231007-AB2KMZ\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20231007-AB2KMZ"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905698281568334*^9, 3.905698429030233*^9, 
  3.90569858418062*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"b26857e9-eb61-4c5f-8241-fad1f5d176c1"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.905698281568334*^9, 3.905698429030233*^9, 
  3.90569858418218*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"d242b7c0-ba0a-4a70-8414-e485dce90e31"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\tTable[SameQ[Model`Shocks`expr \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`\
Shocks`t + 1],\n\t\t\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \
\"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\
\t\t],\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[ToExpression @ \
Model`Shocks`f][Model`Shocks`t],\n\t\t\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\
\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t\t\t]\n\t\t\t\
\t\t}\n\t\t\t\t],\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`t + 1, \
Model`Shocks`i], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`dd][Model`Shocks`t, \
Model`Shocks`i]}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`\
Shocks`t + 1],\n\t\t\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \
\"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\
\t\t],\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[ToExpression @ \
Model`Shocks`f][Model`Shocks`t],\n\t\t\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\
\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t\t\t]\n\t\t\t\
\t\t}\n\t\t\t\t],\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`t + 1, \
Model`Shocks`i], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`dd][Model`Shocks`t, \
Model`Shocks`i]}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-AB2KMZ\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.001, "AbsoluteTiming" -> 0.001, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Flatten[{
         Table[ReplaceAll[Model`Shocks`expr, 
            FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]] === 
          Model`Shocks`expr, {Model`Shocks`expr, 
           Table[
            FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
            Model`Shocks`t + 1], {
            Model`Shocks`f, {
             "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
         Table[ReplaceAll[Model`Shocks`expr, 
            FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]] === 
          Model`Shocks`expr, {Model`Shocks`expr, 
           Table[
            FernandoDuarte`LongRunRisk`Model`Shocks`eps[
             ToExpression[Model`Shocks`f]][Model`Shocks`t], {
            Model`Shocks`f, {
             "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
         Table[ReplaceAll[Model`Shocks`expr, 
            FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]] === 
          Model`Shocks`expr, {Model`Shocks`expr, {
            FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
            Model`Shocks`t + 1, Model`Shocks`i], 
            FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`dd][
            Model`Shocks`t, Model`Shocks`i]}}]}]]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\
\n\t,\n\tTestID->\"Shocks_20231007-7Y2T7Y\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-V0Z0JM\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20231007-U78NUC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`\
Shocks`t] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
0],\n\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-LTX8WA\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-84HPWC\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-1AQ24U\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 3],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 3],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-13B46Z\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[\n\t\t\t\t\tSameQ[0,\n\t\t\t\t\t\tIf[SameQ[Model`Shocks`f, \
Model`Shocks`g],\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`Shocks`t] \
* FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`g][Model`Shocks`t])\
 /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]\n\t\t\t\t\t\
\t]\n\t\t\t\t\t],\n\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\
\", \"sg\", \"sx\", \"sc\", \"sp\"}},\n\t\t\t\t\t{Model`Shocks`g, {\"x\", \
\"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t],\n\t\t\
\t\tTable[\n\t\t\t\t\tSameQ[0,\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`t, \
Model`Shocks`ii] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]\n\t\t\t\t\t\
],\n\t\t\t\t\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}},\n\t\t\t\
\t\t{Model`Shocks`f, {\"x\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20231007-JAIJWX\"\n]\n\n\nVerificationTest[\n\tSameQ[\n\t\t\
Map[\n\t\t\tFunction[\n\t\t\t\tStringDelete[#, \
StringExpression[\"FernandoDuarte\" | \"`\", __, \"`\"]]\n\t\t\t],\n\t\t\t\
Table[ToString[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`\
Shocks`t, Model`Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\
\"][Model`Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]],\n\t\t\t\t\
{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t]\n\t\t],\n\t\t\
{\"taugd[1]\", \"taugd[i]\", \"taugd[j]\"}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\
\tTestID->\"Shocks_20231007-RTEJ8P\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tFlatten[\n\t\t\t{\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`\
Shocks`t + 1],\n\t\t\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \
\"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\
\t\t],\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[ToExpression @ \
Model`Shocks`f][Model`Shocks`t],\n\t\t\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\
\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t\t\t]\n\t\t\t\
\t\t}\n\t\t\t\t],\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`t + 1, \
Model`Shocks`i], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`dd][Model`Shocks`t, \
Model`Shocks`i]}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-AB2KMZ\"\n]\n\n\nEndTestSection[]\n\
"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.9056982815768623`*^9, 3.905698429154068*^9, 
  3.90569858419882*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"720532d5-69eb-4da9-9f41-f7f91f3e8ad2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"should", " ", "all", " ", "return", " ", "true"}], ",", " ", 
     RowBox[{
     "confirming", " ", "that", " ", "rulesE", " ", "returns", " ", "same", 
      " ", "expression", " ", "unevaluated"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{"Flatten", "@", 
      RowBox[{"{", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"expr", "/.", 
             RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "expr"}], 
          "\[IndentingNewLine]", "\t\t", ",", 
          RowBox[{"{", 
           RowBox[{"expr", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"eps", "[", "f", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"f", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
                  "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
                  "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
             "]"}]}], "}"}]}], "\[IndentingNewLine]", "\t", "]"}], 
        "\[IndentingNewLine]", "\t", ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "/.", 
             RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", 
           RowBox[{"eps", "[", "\"\<dd\>\"", "]"}]}], "\[IndentingNewLine]", 
          "\t\t", ",", 
          RowBox[{"{", 
           RowBox[{"ii", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
         "\[IndentingNewLine]", "\t", "]"}]}], "\[IndentingNewLine]", "}"}]}],
      "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.889965945368053*^9, 3.889965955550915*^9}, 
   3.889967308405003*^9, {3.889967351208173*^9, 3.889967389985118*^9}, {
   3.8899676882980556`*^9, 3.889967688505946*^9}, {3.889967766805999*^9, 
   3.889967767119522*^9}, {3.889967900939595*^9, 3.8899679066172323`*^9}, {
   3.8899681466423407`*^9, 3.889968150087781*^9}, {3.905697977518311*^9, 
   3.9056979804003553`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"f6a47068-4ccb-4fea-9136-2dc604d17939"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20231007-GN2PEF\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20231007-GN2PEF"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905698281621986*^9, 3.905698429334981*^9, 
  3.905698584375531*^9},
 CellLabel->
  "During evaluation of \
In[20]:=",ExpressionUUID->"bee9ffe9-918b-4689-9f50-eff3b4c111c5"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.905698281621986*^9, 3.905698429334981*^9, 
  3.905698584376882*^9},
 CellLabel->
  "During evaluation of \
In[20]:=",ExpressionUUID->"b893642d-6e96-47d9-a791-01aea4186986"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\tTable[SameQ[Model`Shocks`expr \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps @ Model`Shocks`f,\n\t\t\t\t\
\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \
\"sc\", \"sp\"}}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps @ \"dd\"],\n\t\t\t\t\t\
{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\t\
\t]\n\t]", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$,
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps @ Model`Shocks`f,\n\t\t\t\t\
\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \
\"sc\", \"sp\"}}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps @ \"dd\"],\n\t\t\t\t\t\
{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\t\
\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-GN2PEF\"\n\
]\n\n", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Flatten[{
         Table[ReplaceAll[Model`Shocks`expr, 
            FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]] === 
          Model`Shocks`expr, {Model`Shocks`expr, 
           Table[
            FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f], {
            Model`Shocks`f, {
             "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
         Table[ReplaceAll[
            FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"], 
            FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]] === 
          FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"], {
          Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\
\n\t,\n\tTestID->\"Shocks_20231007-7Y2T7Y\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-V0Z0JM\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20231007-U78NUC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`\
Shocks`t] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
0],\n\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-LTX8WA\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-84HPWC\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-1AQ24U\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 3],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 3],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-13B46Z\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[\n\t\t\t\t\tSameQ[0,\n\t\t\t\t\t\tIf[SameQ[Model`Shocks`f, \
Model`Shocks`g],\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`Shocks`t] \
* FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`g][Model`Shocks`t])\
 /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]\n\t\t\t\t\t\
\t]\n\t\t\t\t\t],\n\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\
\", \"sg\", \"sx\", \"sc\", \"sp\"}},\n\t\t\t\t\t{Model`Shocks`g, {\"x\", \
\"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t],\n\t\t\
\t\tTable[\n\t\t\t\t\tSameQ[0,\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`t, \
Model`Shocks`ii] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]\n\t\t\t\t\t\
],\n\t\t\t\t\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}},\n\t\t\t\
\t\t{Model`Shocks`f, {\"x\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20231007-JAIJWX\"\n]\n\n\nVerificationTest[\n\tSameQ[\n\t\t\
Map[\n\t\t\tFunction[\n\t\t\t\tStringDelete[#, \
StringExpression[\"FernandoDuarte\" | \"`\", __, \"`\"]]\n\t\t\t],\n\t\t\t\
Table[ToString[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`\
Shocks`t, Model`Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\
\"][Model`Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]],\n\t\t\t\t\
{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t]\n\t\t],\n\t\t\
{\"taugd[1]\", \"taugd[i]\", \"taugd[j]\"}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\
\tTestID->\"Shocks_20231007-RTEJ8P\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tFlatten[\n\t\t\t{\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`\
Shocks`t + 1],\n\t\t\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \
\"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\
\t\t],\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[ToExpression @ \
Model`Shocks`f][Model`Shocks`t],\n\t\t\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\
\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t\t\t]\n\t\t\t\
\t\t}\n\t\t\t\t],\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`t + 1, \
Model`Shocks`i], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`dd][Model`Shocks`t, \
Model`Shocks`i]}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-AB2KMZ\"\n]\n\n\nVerificationTest[\n\
\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps @ Model`Shocks`f,\n\t\t\t\t\
\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \
\"sc\", \"sp\"}}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps @ \"dd\"],\n\t\t\t\t\t\
{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\t\
\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-GN2PEF\"\n\
]\n\n\nEndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905698281640437*^9, 3.9056984293546343`*^9, 
  3.90569858439569*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"d2bb75f5-f834-4bd1-94f0-f4ebd5854f06"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
   RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"should", " ", "all", " ", "return", " ", "true"}], ",", " ", 
      RowBox[{
      "confirming", " ", "that", " ", "rulesE", " ", "returns", " ", "same", 
       " ", "expression", " ", "unevaluated"}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "@", 
       RowBox[{"{", "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"expr", "/.", 
              RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "expr"}], 
           "\[IndentingNewLine]", "\t\t", ",", 
           RowBox[{"{", 
            RowBox[{"expr", ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"eps", "[", "f", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"f", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<xx\>\"", ",", "\"\<adc\>\"", ",", "\"\<p\>\"", ",", 
                   "\"\<rhobar\>\"", ",", "\"\<ssg\>\"", ",", "\"\<ssx\>\"", 
                   ",", "\"\<sdc\>\"", ",", "\"\<spi\>\""}], "}"}]}], "}"}]}],
               "]"}]}], "}"}]}], "\[IndentingNewLine]", "\t", "]"}], 
         "\[IndentingNewLine]", "\t", ",", "\[IndentingNewLine]", "\t", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"eps", "[", "\"\<ddd\>\"", "]"}], "/.", 
              RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", 
            RowBox[{"eps", "[", "\"\<ddd\>\"", "]"}]}], "\[IndentingNewLine]",
            "\t\t", ",", 
           RowBox[{"{", 
            RowBox[{"ii", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
          "\[IndentingNewLine]", "\t", "]"}]}], "\[IndentingNewLine]", 
        "}"}]}], "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", ",", 
    RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.889966053895102*^9, 3.8899660943950768`*^9}, 
   3.88996731051445*^9, {3.889967405843053*^9, 3.88996742813382*^9}, {
   3.889967691817891*^9, 3.889967692066221*^9}, {3.88996776934571*^9, 
   3.889967769680554*^9}, {3.88996790988997*^9, 3.8899679148886423`*^9}, {
   3.8899681574763317`*^9, 3.889968162961051*^9}, {3.90569798416434*^9, 
   3.905697987450232*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"914981bf-41ce-4fda-9d3a-e450b0107da7"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20231007-Y35BZB\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20231007-Y35BZB"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905698281690641*^9, 3.905698429400425*^9, 
  3.905698584444007*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"1c9338f7-5337-4b61-9402-da4c149f8ea5"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.905698281690641*^9, 3.905698429400425*^9, 
  3.905698584445299*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"c1ad09ca-ed98-4d61-b2d8-fef7b1f01f32"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\tTable[SameQ[Model`Shocks`expr \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps @ Model`Shocks`f,\n\t\t\t\t\
\t\t\t{\n\t\t\t\t\t\t\t\tModel`Shocks`f,\n\t\t\t\t\t\t\t\t{\"xx\", \"adc\", \
\"p\", \"rhobar\", \"ssg\", \"ssx\", \"sdc\", \"spi\"}\n\t\t\t\t\t\t\t}\n\t\t\
\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"ddd\"] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps @ \"ddd\"],\n\t\t\t\t\t\
{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\t\
\t]\n\t]", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$,
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps @ Model`Shocks`f,\n\t\t\t\t\
\t\t\t{\n\t\t\t\t\t\t\t\tModel`Shocks`f,\n\t\t\t\t\t\t\t\t{\"xx\", \"adc\", \
\"p\", \"rhobar\", \"ssg\", \"ssx\", \"sdc\", \"spi\"}\n\t\t\t\t\t\t\t}\n\t\t\
\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"ddd\"] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps @ \"ddd\"],\n\t\t\t\t\t\
{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\t\
\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-Y35BZB\"\n\
]\n\n", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Flatten[{
         Table[ReplaceAll[Model`Shocks`expr, 
            FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]] === 
          Model`Shocks`expr, {Model`Shocks`expr, 
           Table[
            FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f], {
            Model`Shocks`f, {
             "xx", "adc", "p", "rhobar", "ssg", "ssx", "sdc", "spi"}}]}], 
         Table[ReplaceAll[
            FernandoDuarte`LongRunRisk`Model`Shocks`eps["ddd"], 
            FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]] === 
          FernandoDuarte`LongRunRisk`Model`Shocks`eps["ddd"], {
          Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\
\n\t,\n\tTestID->\"Shocks_20231007-7Y2T7Y\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-V0Z0JM\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20231007-U78NUC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`\
Shocks`t] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
0],\n\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-LTX8WA\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-84HPWC\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-1AQ24U\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 3],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 3],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-13B46Z\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[\n\t\t\t\t\tSameQ[0,\n\t\t\t\t\t\tIf[SameQ[Model`Shocks`f, \
Model`Shocks`g],\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`Shocks`t] \
* FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`g][Model`Shocks`t])\
 /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]\n\t\t\t\t\t\
\t]\n\t\t\t\t\t],\n\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\
\", \"sg\", \"sx\", \"sc\", \"sp\"}},\n\t\t\t\t\t{Model`Shocks`g, {\"x\", \
\"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t],\n\t\t\
\t\tTable[\n\t\t\t\t\tSameQ[0,\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`t, \
Model`Shocks`ii] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]\n\t\t\t\t\t\
],\n\t\t\t\t\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}},\n\t\t\t\
\t\t{Model`Shocks`f, {\"x\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20231007-JAIJWX\"\n]\n\n\nVerificationTest[\n\tSameQ[\n\t\t\
Map[\n\t\t\tFunction[\n\t\t\t\tStringDelete[#, \
StringExpression[\"FernandoDuarte\" | \"`\", __, \"`\"]]\n\t\t\t],\n\t\t\t\
Table[ToString[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`\
Shocks`t, Model`Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\
\"][Model`Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]],\n\t\t\t\t\
{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t]\n\t\t],\n\t\t\
{\"taugd[1]\", \"taugd[i]\", \"taugd[j]\"}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\
\tTestID->\"Shocks_20231007-RTEJ8P\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tFlatten[\n\t\t\t{\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`\
Shocks`t + 1],\n\t\t\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \
\"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\
\t\t],\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[ToExpression @ \
Model`Shocks`f][Model`Shocks`t],\n\t\t\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\
\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t\t\t]\n\t\t\t\
\t\t}\n\t\t\t\t],\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`t + 1, \
Model`Shocks`i], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`dd][Model`Shocks`t, \
Model`Shocks`i]}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-AB2KMZ\"\n]\n\n\nVerificationTest[\n\
\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps @ Model`Shocks`f,\n\t\t\t\t\
\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \
\"sc\", \"sp\"}}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps @ \"dd\"],\n\t\t\t\t\t\
{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\t\
\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-GN2PEF\"\n\
]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps @ Model`Shocks`f,\n\t\t\t\t\
\t\t\t{\n\t\t\t\t\t\t\t\tModel`Shocks`f,\n\t\t\t\t\t\t\t\t{\"xx\", \"adc\", \
\"p\", \"rhobar\", \"ssg\", \"ssx\", \"sdc\", \"spi\"}\n\t\t\t\t\t\t\t}\n\t\t\
\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"ddd\"] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps @ \"ddd\"],\n\t\t\t\t\t\
{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\t\
\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-Y35BZB\"\n\
]\n\n\nEndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905698281699497*^9, 3.905698429410248*^9, 
  3.9056985844562607`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"523f93ff-8df5-4f4d-a2cb-f4b8a0ebe9b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
   RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"should", " ", "all", " ", "return", " ", "true"}], ",", " ", 
      RowBox[{
      "confirming", " ", "that", " ", "rulesE", " ", "returns", " ", "same", 
       " ", "expression", " ", "unevaluated"}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "@", 
       RowBox[{"{", "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"expr", "/.", 
              RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "expr"}], 
           "\[IndentingNewLine]", "\t\t", ",", 
           RowBox[{"{", 
            RowBox[{"expr", ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"eps", "[", "f", "]"}], "[", "tt", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"f", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<xx\>\"", ",", "\"\<adc\>\"", ",", "\"\<p\>\"", ",", 
                   "\"\<rhobar\>\"", ",", "\"\<ssg\>\"", ",", "\"\<ssx\>\"", 
                   ",", "\"\<sdc\>\"", ",", "\"\<spi\>\""}], "}"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"tt", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"t", "+", "1"}], ",", 
                   RowBox[{"t", "-", "1"}], ",", "s", ",", 
                   RowBox[{"t", "+", "h"}]}], "}"}]}], "}"}]}], "]"}]}], 
            "}"}]}], "\[IndentingNewLine]", "\t", "]"}], 
         "\[IndentingNewLine]", "\t", ",", "\[IndentingNewLine]", "\t", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"expr", "/.", 
              RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "expr"}], 
           "\[IndentingNewLine]", "\t\t", ",", 
           RowBox[{"{", 
            RowBox[{"expr", ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
                RowBox[{"tt", ",", "ii"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"ii", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"tt", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"t", "+", "1"}], ",", 
                   RowBox[{"t", "-", "1"}], ",", "s", ",", 
                   RowBox[{"t", "+", "h"}]}], "}"}]}], "}"}]}], "]"}]}], 
            "}"}]}], "\[IndentingNewLine]", "\t", "]"}]}], 
        "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ")"}]}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.889965962245503*^9, 3.889966019800927*^9}, 
   3.889967313667658*^9, {3.889967436454067*^9, 3.889967519755422*^9}, {
   3.889967695147917*^9, 3.889967695356472*^9}, {3.889967773026466*^9, 
   3.8899677733587008`*^9}, {3.88996791844978*^9, 3.8899679231592207`*^9}, {
   3.8899681691524878`*^9, 3.889968173601953*^9}, {3.905697990515615*^9, 
   3.905697993761915*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"06d2e2ec-ced8-46ed-a22e-1d614e760ba6"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20231007-DGPHWZ\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20231007-DGPHWZ"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905698281743704*^9, 3.905698429454315*^9, 
  3.905698584498117*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"eb7ead7b-934a-46c7-82b0-a103407a9482"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.905698281743704*^9, 3.905698429454315*^9, 
  3.905698584499509*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"66459573-9716-4815-b49d-91fed61eff46"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\tTable[SameQ[Model`Shocks`expr \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`\
Shocks`tt],\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tModel`Shocks`f,\n\t\t\t\t\t\t\t\
\t{\"xx\", \"adc\", \"p\", \"rhobar\", \"ssg\", \"ssx\", \"sdc\", \"spi\"}\n\t\
\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{Model`Shocks`tt, {Model`Shocks`t + 1, \
Model`Shocks`t - 1, Model`Shocks`s, Model`Shocks`t + Model`Shocks`h}}\n\t\t\t\
\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`tt, \
Model`Shocks`ii],\n\t\t\t\t\t\t\t{Model`Shocks`ii, {1, Model`Shocks`i, \
Model`Shocks`j}},\n\t\t\t\t\t\t\t{Model`Shocks`tt, {Model`Shocks`t + 1, \
Model`Shocks`t - 1, Model`Shocks`s, Model`Shocks`t + Model`Shocks`h}}\n\t\t\t\
\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`\
Shocks`tt],\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tModel`Shocks`f,\n\t\t\t\t\t\t\t\
\t{\"xx\", \"adc\", \"p\", \"rhobar\", \"ssg\", \"ssx\", \"sdc\", \"spi\"}\n\t\
\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{Model`Shocks`tt, {Model`Shocks`t + 1, \
Model`Shocks`t - 1, Model`Shocks`s, Model`Shocks`t + Model`Shocks`h}}\n\t\t\t\
\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`tt, \
Model`Shocks`ii],\n\t\t\t\t\t\t\t{Model`Shocks`ii, {1, Model`Shocks`i, \
Model`Shocks`j}},\n\t\t\t\t\t\t\t{Model`Shocks`tt, {Model`Shocks`t + 1, \
Model`Shocks`t - 1, Model`Shocks`s, Model`Shocks`t + Model`Shocks`h}}\n\t\t\t\
\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20231007-DGPHWZ\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Flatten[{
         Table[ReplaceAll[Model`Shocks`expr, 
            FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]] === 
          Model`Shocks`expr, {Model`Shocks`expr, 
           Table[
            FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
            Model`Shocks`tt], {
            Model`Shocks`f, {
             "xx", "adc", "p", "rhobar", "ssg", "ssx", "sdc", "spi"}}, {
            Model`Shocks`tt, {
             Model`Shocks`t + 1, Model`Shocks`t - 1, Model`Shocks`s, 
              Model`Shocks`t + Model`Shocks`h}}]}], 
         Table[ReplaceAll[Model`Shocks`expr, 
            FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]] === 
          Model`Shocks`expr, {Model`Shocks`expr, 
           Table[
            FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
            Model`Shocks`tt, Model`Shocks`ii], {
            Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}, {
            Model`Shocks`tt, {
             Model`Shocks`t + 1, Model`Shocks`t - 1, Model`Shocks`s, 
              Model`Shocks`t + Model`Shocks`h}}]}]}]]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\
\n\t,\n\tTestID->\"Shocks_20231007-7Y2T7Y\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-V0Z0JM\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20231007-U78NUC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`\
Shocks`t] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
0],\n\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-LTX8WA\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-84HPWC\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-1AQ24U\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 3],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 3],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-13B46Z\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[\n\t\t\t\t\tSameQ[0,\n\t\t\t\t\t\tIf[SameQ[Model`Shocks`f, \
Model`Shocks`g],\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`Shocks`t] \
* FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`g][Model`Shocks`t])\
 /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]\n\t\t\t\t\t\
\t]\n\t\t\t\t\t],\n\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\
\", \"sg\", \"sx\", \"sc\", \"sp\"}},\n\t\t\t\t\t{Model`Shocks`g, {\"x\", \
\"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t],\n\t\t\
\t\tTable[\n\t\t\t\t\tSameQ[0,\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`t, \
Model`Shocks`ii] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]\n\t\t\t\t\t\
],\n\t\t\t\t\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}},\n\t\t\t\
\t\t{Model`Shocks`f, {\"x\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20231007-JAIJWX\"\n]\n\n\nVerificationTest[\n\tSameQ[\n\t\t\
Map[\n\t\t\tFunction[\n\t\t\t\tStringDelete[#, \
StringExpression[\"FernandoDuarte\" | \"`\", __, \"`\"]]\n\t\t\t],\n\t\t\t\
Table[ToString[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`\
Shocks`t, Model`Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\
\"][Model`Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]],\n\t\t\t\t\
{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t]\n\t\t],\n\t\t\
{\"taugd[1]\", \"taugd[i]\", \"taugd[j]\"}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\
\tTestID->\"Shocks_20231007-RTEJ8P\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tFlatten[\n\t\t\t{\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`\
Shocks`t + 1],\n\t\t\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \
\"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\
\t\t],\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[ToExpression @ \
Model`Shocks`f][Model`Shocks`t],\n\t\t\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\
\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t\t\t]\n\t\t\t\
\t\t}\n\t\t\t\t],\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`t + 1, \
Model`Shocks`i], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`dd][Model`Shocks`t, \
Model`Shocks`i]}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-AB2KMZ\"\n]\n\n\nVerificationTest[\n\
\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps @ Model`Shocks`f,\n\t\t\t\t\
\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \
\"sc\", \"sp\"}}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps @ \"dd\"],\n\t\t\t\t\t\
{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\t\
\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-GN2PEF\"\n\
]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps @ Model`Shocks`f,\n\t\t\t\t\
\t\t\t{\n\t\t\t\t\t\t\t\tModel`Shocks`f,\n\t\t\t\t\t\t\t\t{\"xx\", \"adc\", \
\"p\", \"rhobar\", \"ssg\", \"ssx\", \"sdc\", \"spi\"}\n\t\t\t\t\t\t\t}\n\t\t\
\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"ddd\"] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps @ \"ddd\"],\n\t\t\t\t\t\
{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\t\
\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-Y35BZB\"\n\
]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`\
Shocks`tt],\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tModel`Shocks`f,\n\t\t\t\t\t\t\t\
\t{\"xx\", \"adc\", \"p\", \"rhobar\", \"ssg\", \"ssx\", \"sdc\", \"spi\"}\n\t\
\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{Model`Shocks`tt, {Model`Shocks`t + 1, \
Model`Shocks`t - 1, Model`Shocks`s, Model`Shocks`t + Model`Shocks`h}}\n\t\t\t\
\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`tt, \
Model`Shocks`ii],\n\t\t\t\t\t\t\t{Model`Shocks`ii, {1, Model`Shocks`i, \
Model`Shocks`j}},\n\t\t\t\t\t\t\t{Model`Shocks`tt, {Model`Shocks`t + 1, \
Model`Shocks`t - 1, Model`Shocks`s, Model`Shocks`t + Model`Shocks`h}}\n\t\t\t\
\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20231007-DGPHWZ\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.9056982817613983`*^9, 3.905698429483535*^9, 
  3.905698584515922*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"f6c1461e-1fc7-4a68-a4b5-ddba5b1424f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"rulesE", " ", "works", " ", "for", " ", "any", " ", "context"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{"Flatten", "@", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"NewContext`eps", "[", "f", "]"}], "[", "t", "]"}], "/.", 
             RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "0"}], 
          "\[IndentingNewLine]", "\t\t", ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
              "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
              "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
         "\[IndentingNewLine]", "\t", "]"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"NewContext`eps", "[", "\"\<dd\>\"", "]"}], "[", 
              RowBox[{"t", ",", "ii"}], "]"}], "/.", 
             RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "0"}], 
          "\[IndentingNewLine]", "\t\t", ",", 
          RowBox[{"{", 
           RowBox[{"ii", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
         "\[IndentingNewLine]", "\t", "]"}]}], "\[IndentingNewLine]", "}"}]}],
      "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.889965468632722*^9, 3.889965535681717*^9}, {
   3.889965687921562*^9, 3.889965719041513*^9}, {3.8899657564745703`*^9, 
   3.8899657868805656`*^9}, {3.889965818275572*^9, 3.88996587402346*^9}, {
   3.8899660417909737`*^9, 3.889966042024665*^9}, {3.889967536877624*^9, 
   3.88996754071059*^9}, {3.8899676626847277`*^9, 3.889967663326408*^9}, {
   3.889967743694665*^9, 3.889967744059184*^9}, {3.8899677859095707`*^9, 
   3.8899678081741953`*^9}, {3.8899679955631647`*^9, 3.889968003395926*^9}, {
   3.889969462764024*^9, 3.8899694656136417`*^9}, {3.889969517081333*^9, 
   3.8899695670076637`*^9}, {3.889970354531378*^9, 3.889970361426557*^9}, 
   3.889970446358612*^9, 3.889971586268968*^9, 3.8899720413397284`*^9, {
   3.892123492323592*^9, 3.8921234936326303`*^9}, 3.9056976273944674`*^9, {
   3.905698086366324*^9, 3.905698117465567*^9}, {3.90569856334508*^9, 
   3.905698564812944*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"8441869b-d2b5-42f4-b9e2-b0fe622f4eae"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20231007-GZIC0T\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20231007-GZIC0T"],
  Editable->False]], "Print",
 CellChangeTimes->{3.90569828180862*^9, 3.905698429532777*^9, 
  3.905698584559712*^9},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"48369642-cb83-46fb-b323-5e4f81a86026"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.90569828180862*^9, 3.905698429532777*^9, 
  3.905698584561057*^9},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"6749b62b-d9ed-4539-9c22-cdb3473adc52"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[NewContext`eps[Model`Shocks`f][Model`Shocks`t] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[NewContext`eps[\"dd\"][Model`Shocks`t, Model`Shocks`ii] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[NewContext`eps[Model`Shocks`f][Model`Shocks`t] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[NewContext`eps[\"dd\"][Model`Shocks`t, Model`Shocks`ii] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-GZIC0T\"\
\n]\n\n", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Flatten[{
         Table[ReplaceAll[
            NewContext`eps[Model`Shocks`f][Model`Shocks`t], 
            FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]] === 
          0, {Model`Shocks`f, {
           "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
         Table[ReplaceAll[
            NewContext`eps["dd"][Model`Shocks`t, Model`Shocks`ii], 
            FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]] === 
          0, {Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\
\n\t,\n\tTestID->\"Shocks_20231007-7Y2T7Y\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-V0Z0JM\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20231007-U78NUC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`\
Shocks`t] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
0],\n\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-LTX8WA\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-84HPWC\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-1AQ24U\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 3],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 3],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-13B46Z\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[\n\t\t\t\t\tSameQ[0,\n\t\t\t\t\t\tIf[SameQ[Model`Shocks`f, \
Model`Shocks`g],\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`Shocks`t] \
* FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`g][Model`Shocks`t])\
 /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]\n\t\t\t\t\t\
\t]\n\t\t\t\t\t],\n\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\
\", \"sg\", \"sx\", \"sc\", \"sp\"}},\n\t\t\t\t\t{Model`Shocks`g, {\"x\", \
\"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t],\n\t\t\
\t\tTable[\n\t\t\t\t\tSameQ[0,\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`t, \
Model`Shocks`ii] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]\n\t\t\t\t\t\
],\n\t\t\t\t\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}},\n\t\t\t\
\t\t{Model`Shocks`f, {\"x\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20231007-JAIJWX\"\n]\n\n\nVerificationTest[\n\tSameQ[\n\t\t\
Map[\n\t\t\tFunction[\n\t\t\t\tStringDelete[#, \
StringExpression[\"FernandoDuarte\" | \"`\", __, \"`\"]]\n\t\t\t],\n\t\t\t\
Table[ToString[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`\
Shocks`t, Model`Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\
\"][Model`Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]],\n\t\t\t\t\
{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t]\n\t\t],\n\t\t\
{\"taugd[1]\", \"taugd[i]\", \"taugd[j]\"}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\
\tTestID->\"Shocks_20231007-RTEJ8P\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tFlatten[\n\t\t\t{\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`\
Shocks`t + 1],\n\t\t\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \
\"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\
\t\t],\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[ToExpression @ \
Model`Shocks`f][Model`Shocks`t],\n\t\t\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\
\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t\t\t]\n\t\t\t\
\t\t}\n\t\t\t\t],\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`t + 1, \
Model`Shocks`i], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`dd][Model`Shocks`t, \
Model`Shocks`i]}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-AB2KMZ\"\n]\n\n\nVerificationTest[\n\
\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps @ Model`Shocks`f,\n\t\t\t\t\
\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \
\"sc\", \"sp\"}}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps @ \"dd\"],\n\t\t\t\t\t\
{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\t\
\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-GN2PEF\"\n\
]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps @ Model`Shocks`f,\n\t\t\t\t\
\t\t\t{\n\t\t\t\t\t\t\t\tModel`Shocks`f,\n\t\t\t\t\t\t\t\t{\"xx\", \"adc\", \
\"p\", \"rhobar\", \"ssg\", \"ssx\", \"sdc\", \"spi\"}\n\t\t\t\t\t\t\t}\n\t\t\
\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"ddd\"] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps @ \"ddd\"],\n\t\t\t\t\t\
{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\t\
\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-Y35BZB\"\n\
]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`\
Shocks`tt],\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tModel`Shocks`f,\n\t\t\t\t\t\t\t\
\t{\"xx\", \"adc\", \"p\", \"rhobar\", \"ssg\", \"ssx\", \"sdc\", \"spi\"}\n\t\
\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{Model`Shocks`tt, {Model`Shocks`t + 1, \
Model`Shocks`t - 1, Model`Shocks`s, Model`Shocks`t + Model`Shocks`h}}\n\t\t\t\
\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`tt, \
Model`Shocks`ii],\n\t\t\t\t\t\t\t{Model`Shocks`ii, {1, Model`Shocks`i, \
Model`Shocks`j}},\n\t\t\t\t\t\t\t{Model`Shocks`tt, {Model`Shocks`t + 1, \
Model`Shocks`t - 1, Model`Shocks`s, Model`Shocks`t + Model`Shocks`h}}\n\t\t\t\
\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20231007-DGPHWZ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[NewContext`eps[Model`Shocks`f][Model`Shocks`t] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[NewContext`eps[\"dd\"][Model`Shocks`t, Model`Shocks`ii] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-GZIC0T\"\
\n]\n\n\nEndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.9056982818169737`*^9, 3.905698429541751*^9, 
  3.905698584568906*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"f3e7aee8-544b-49b3-8784-baf2d9a20bc6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "rulesE", " ", "works", " ", "for", " ", "original", " ", "context"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{"Flatten", "@", 
      RowBox[{"{", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
               "FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps", "[", 
                "f", "]"}], "[", "t", "]"}], "^", "2"}], "/.", 
             RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "1"}], 
          "\[IndentingNewLine]", "\t\t", ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
              "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
              "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
         "\[IndentingNewLine]", "\t", "]"}], "\[IndentingNewLine]", "\t", ",",
         "\[IndentingNewLine]", "\t", 
        RowBox[{"Table", "[", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
               "FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps", "[", 
                "\"\<dd\>\"", "]"}], "[", 
               RowBox[{"t", ",", "ii"}], "]"}], "^", "2"}], "/.", 
             RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "1"}], 
          "\[IndentingNewLine]", "\t\t", ",", 
          RowBox[{"{", 
           RowBox[{"ii", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
         "\[IndentingNewLine]", "\t", "]"}]}], "\[IndentingNewLine]", "}"}]}],
      "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.889966121134981*^9, 3.889966129513671*^9}, {
  3.8899675430265427`*^9, 3.889967546703742*^9}, {3.889967666639736*^9, 
  3.8899676668939447`*^9}, {3.889967746374608*^9, 3.889967746668034*^9}, {
  3.88996781333914*^9, 3.8899678201195583`*^9}, {3.88996801609513*^9, 
  3.88996801967063*^9}, {3.892123507832917*^9, 3.892123514171039*^9}, {
  3.9056981223464212`*^9, 3.905698191286211*^9}, {3.9056985701545067`*^9, 
  3.905698571452526*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"687cf478-d5ea-420d-9b1b-a0c92484ec3a"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20231007-JPYKSE\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20231007-JPYKSE"],
  Editable->False]], "Print",
 CellChangeTimes->{3.90569828187154*^9, 3.9056984295963783`*^9, 
  3.9056985846255913`*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"89663482-c12b-483b-aef4-847448cc5767"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.90569828187154*^9, 3.9056984295963783`*^9, 
  3.9056985846271353`*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"32501be1-bd1c-4e49-a8ab-5953cd28f75b"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps[Model`Shocks`\
f][Model`Shocks`t] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps[\"dd\"][\
Model`Shocks`t, Model`Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps[Model`Shocks`\
f][Model`Shocks`t] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps[\"dd\"][\
Model`Shocks`t, Model`Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-JPYKSE\"\
\n]\n\n", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.003, "AbsoluteTiming" -> 0.003, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Flatten[{
         Table[
         ReplaceAll[
           FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps[
             Model`Shocks`f][Model`Shocks`t]^2, 
            FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]] === 
          1, {Model`Shocks`f, {
           "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
         Table[
         ReplaceAll[
           FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps["dd"][
             Model`Shocks`t, Model`Shocks`ii]^2, 
            FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]] === 
          1, {Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\
\n\t,\n\tTestID->\"Shocks_20231007-7Y2T7Y\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-V0Z0JM\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20231007-U78NUC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`\
Shocks`t] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
0],\n\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-LTX8WA\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-84HPWC\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-1AQ24U\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][\
Model`Shocks`t] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 3],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`\
t, Model`Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 3],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-13B46Z\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[\n\t\t\t\t\tSameQ[0,\n\t\t\t\t\t\tIf[SameQ[Model`Shocks`f, \
Model`Shocks`g],\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`Shocks`t] \
* FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`g][Model`Shocks`t])\
 /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]\n\t\t\t\t\t\
\t]\n\t\t\t\t\t],\n\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\
\", \"sg\", \"sx\", \"sc\", \"sp\"}},\n\t\t\t\t\t{Model`Shocks`g, {\"x\", \
\"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t],\n\t\t\
\t\tTable[\n\t\t\t\t\tSameQ[0,\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`t, \
Model`Shocks`ii] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]\n\t\t\t\t\t\
],\n\t\t\t\t\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}},\n\t\t\t\
\t\t{Model`Shocks`f, {\"x\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20231007-JAIJWX\"\n]\n\n\nVerificationTest[\n\tSameQ[\n\t\t\
Map[\n\t\t\tFunction[\n\t\t\t\tStringDelete[#, \
StringExpression[\"FernandoDuarte\" | \"`\", __, \"`\"]]\n\t\t\t],\n\t\t\t\
Table[ToString[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`\
Shocks`t, Model`Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\
\"][Model`Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t]],\n\t\t\t\t\
{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t]\n\t\t],\n\t\t\
{\"taugd[1]\", \"taugd[i]\", \"taugd[j]\"}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\
\tTestID->\"Shocks_20231007-RTEJ8P\"\n]\n\n\nVerificationTest[\n\tApply[And,\n\
\t\tFlatten[\n\t\t\t{\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`\
Shocks`t + 1],\n\t\t\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \
\"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\
\t\t],\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[ToExpression @ \
Model`Shocks`f][Model`Shocks`t],\n\t\t\t\t\t\t\t{Model`Shocks`f, {\"x\", \"dc\
\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t\t\t]\n\t\t\t\
\t\t}\n\t\t\t\t],\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`t + 1, \
Model`Shocks`i], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`dd][Model`Shocks`t, \
Model`Shocks`i]}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-AB2KMZ\"\n]\n\n\nVerificationTest[\n\
\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps @ Model`Shocks`f,\n\t\t\t\t\
\t\t\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \
\"sc\", \"sp\"}}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps @ \"dd\"],\n\t\t\t\t\t\
{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\t\
\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-GN2PEF\"\n\
]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps @ Model`Shocks`f,\n\t\t\t\t\
\t\t\t{\n\t\t\t\t\t\t\t\tModel`Shocks`f,\n\t\t\t\t\t\t\t\t{\"xx\", \"adc\", \
\"p\", \"rhobar\", \"ssg\", \"ssx\", \"sdc\", \"spi\"}\n\t\t\t\t\t\t\t}\n\t\t\
\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"ddd\"] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps @ \"ddd\"],\n\t\t\t\t\t\
{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\t\
\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-Y35BZB\"\n\
]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][Model`\
Shocks`tt],\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tModel`Shocks`f,\n\t\t\t\t\t\t\t\
\t{\"xx\", \"adc\", \"p\", \"rhobar\", \"ssg\", \"ssx\", \"sdc\", \"spi\"}\n\t\
\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{Model`Shocks`tt, {Model`Shocks`t + 1, \
Model`Shocks`t - 1, Model`Shocks`s, Model`Shocks`t + Model`Shocks`h}}\n\t\t\t\
\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tTable[SameQ[Model`Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], \
Model`Shocks`expr],\n\t\t\t\t\t{\n\t\t\t\t\t\tModel`Shocks`expr,\n\t\t\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Model`Shocks`tt, \
Model`Shocks`ii],\n\t\t\t\t\t\t\t{Model`Shocks`ii, {1, Model`Shocks`i, \
Model`Shocks`j}},\n\t\t\t\t\t\t\t{Model`Shocks`tt, {Model`Shocks`t + 1, \
Model`Shocks`t - 1, Model`Shocks`s, Model`Shocks`t + Model`Shocks`h}}\n\t\t\t\
\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20231007-DGPHWZ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[NewContext`eps[Model`Shocks`f][Model`Shocks`t] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[NewContext`eps[\"dd\"][Model`Shocks`t, Model`Shocks`ii] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 0],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-GZIC0T\"\
\n]\n\n\nVerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps[Model`Shocks`\
f][Model`Shocks`t] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t],\n\t\t\t\t\
Table[SameQ[(FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps[\"dd\"][\
Model`Shocks`t, Model`Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Model`Shocks`t], 1],\n\t\t\t\t\
\t{Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}\n\t\t\t\t]\n\t\t\t}\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20231007-JPYKSE\"\
\n]\n\n\nEndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905698281880933*^9, 3.905698429606597*^9, 
  3.9056985846340933`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"4e9ebf44-99f8-431f-9168-9743c06444b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"End", "[", "]"}]], "Input",
 CellChangeTimes->{{3.890680295645965*^9, 3.89068029650622*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"2f383e79-a813-4173-8302-13431f2ea3e7"],

Cell[BoxData["\<\"Model`Shocks`\"\>"], "Output",
 CellChangeTimes->{3.905698281899091*^9, 3.905698429625483*^9, 
  3.905698584651691*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"674cd85d-9015-475c-8a33-a6a5aa19e167"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"replaceNthRecord", "[", 
   RowBox[{"file_String", ",", "n_Integer", ",", "replaceWith_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"readStream", "=", 
       RowBox[{"OpenRead", "[", "file", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"writeStream", "=", 
       RowBox[{"OpenWrite", "[", 
        RowBox[{"file", "<>", "\"\<temp\>\""}], "]"}]}], ",", 
      "\[IndentingNewLine]", "temp"}], "\[IndentingNewLine]", "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"WriteLine", "[", 
        RowBox[{"writeStream", ",", 
         RowBox[{"ReadLine", "[", "readStream", "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"n", "-", "1"}], "}"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"WriteLine", "[", 
      RowBox[{"writeStream", ",", 
       RowBox[{
        RowBox[{"ReadLine", "[", "readStream", "]"}], "<>", "\"\< \\r\\n\>\"",
         "<>", "replaceWith"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"temp", "=!=", "EndOfFile"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"temp", "=", 
         RowBox[{"ReadLine", "[", "readStream", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"UnsameQ", "[", 
           RowBox[{"temp", ",", "EndOfFile"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"WriteLine", "[", 
           RowBox[{"writeStream", ",", "temp"}], "]"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", 
     RowBox[{"Close", "/@", 
      RowBox[{"{", 
       RowBox[{"readStream", ",", "writeStream"}], "}"}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8906824011137114`*^9, 3.890682405708049*^9}, {
   3.890683066049664*^9, 3.8906830825042677`*^9}, {3.89068319056032*^9, 
   3.890683191547068*^9}, {3.89068338518532*^9, 3.890683430044886*^9}, {
   3.890683477495555*^9, 3.89068350860789*^9}, {3.890683563263863*^9, 
   3.890683572999384*^9}, {3.8906837588959513`*^9, 3.890683769652152*^9}, 
   3.890683975431652*^9, 3.890684184728485*^9, {3.890684538464937*^9, 
   3.890684546403357*^9}, 3.8906847013731937`*^9, 3.890684736359234*^9, {
   3.890684917937912*^9, 3.890684918964259*^9}, {3.890685003978653*^9, 
   3.8906850058353167`*^9}, {3.890685081266893*^9, 3.890685086440845*^9}, {
   3.890685162742771*^9, 3.890685164959052*^9}, {3.890685207547077*^9, 
   3.890685210133041*^9}, {3.890685379823967*^9, 3.890685396833392*^9}, {
   3.89068547363831*^9, 3.890685483195992*^9}, {3.8906856724322433`*^9, 
   3.890685672699678*^9}, {3.890685793209527*^9, 3.890685826416944*^9}, 
   3.8906858923977957`*^9, {3.890685924003189*^9, 3.890685959055036*^9}, {
   3.890686016304421*^9, 3.890686073140353*^9}, {3.890686249638393*^9, 
   3.8906862512145*^9}, {3.905698734151863*^9, 
   3.9056987343580627`*^9}},ExpressionUUID->"ff4f7790-c7da-4912-ad54-\
cff407dd65b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"insert", " ", "into", " ", "wlt", " ", "file"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"replaceNthRecord", "[", 
    RowBox[{
    "testFileName", ",", "1", ",", "\"\<Begin[\\\"Model`Shocks`\\\"]\>\""}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CopyFile", "[", 
     RowBox[{
      RowBox[{"testFileName", "<>", "\"\<temp\>\""}], ",", "testFileName", 
      ",", 
      RowBox[{"OverwriteTarget", "->", "True"}]}], "]"}], ";"}], "\n", 
   RowBox[{"DeleteFile", "[", 
    RowBox[{"testFileName", "<>", "\"\<temp\>\""}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"numLines", "=", 
    RowBox[{"countLines", "[", "testFileName", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"replaceNthRecord", "[", 
    RowBox[{"testFileName", ",", 
     RowBox[{"numLines", "-", "3"}], ",", " ", "\"\<End[]\>\""}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CopyFile", "[", 
     RowBox[{
      RowBox[{"testFileName", "<>", "\"\<temp\>\""}], ",", "testFileName", 
      ",", 
      RowBox[{"OverwriteTarget", "->", "True"}]}], "]"}], ";"}], "\n", 
   RowBox[{"DeleteFile", "[", 
    RowBox[{"testFileName", "<>", "\"\<temp\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.890684439578331*^9, {3.8906861781312037`*^9, 3.890686181646003*^9}, {
   3.890686261099564*^9, 3.8906862940387907`*^9}, 3.891156970368805*^9, 
   3.891216542664113*^9, 3.905695879756626*^9, 3.9056982536579647`*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"80e65cc6-5862-4eea-8486-6bf475d5da3b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlttemp\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.905698281947783*^9, 3.9056984296787*^9, 
  3.905698584705024*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"2766e342-7cd1-4e46-a724-8feede241584"],

Cell[BoxData[
 RowBox[{"countLines", 
  "[", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>", "]"}]], "Output",
 CellChangeTimes->{3.905698281947783*^9, 3.9056984296787*^9, 
  3.905698584706436*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"8ee62d5c-2de3-4ec5-a03a-20b3d1a5816a"],

Cell[BoxData[
 RowBox[{"replaceNthRecord", "[", 
  RowBox[{"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>", ",", 
   RowBox[{
    RowBox[{"-", "3"}], "+", 
    RowBox[{
    "countLines", 
     "[", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>", "]"}]}], 
   ",", "\<\"End[]\"\>"}], "]"}]], "Output",
 CellChangeTimes->{3.905698281947783*^9, 3.9056984296787*^9, 
  3.905698584707447*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"728600c3-0345-4dcd-b45b-43b736a6856e"],

Cell[BoxData[
 TemplateBox[{
  "CopyFile", "fdnfnd", 
   "\"Directory or file \
\\\"\\!\\(\\*RowBox[{\\\"\\\\\\\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlttemp\\\\\\\"\\\"}]\\)\\\" \
not found.\"", 2, 33, 1, 24970234400959804272, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.905698281976287*^9, 3.905698429706283*^9, 
  3.905698584732356*^9},
 CellLabel->
  "During evaluation of \
In[28]:=",ExpressionUUID->"87d507a1-1b24-4262-9cfe-964512c3b4c0"],

Cell[BoxData[
 TemplateBox[{
  "DeleteFile", "fdnfnd", 
   "\"Directory or file \
\\\"\\!\\(\\*RowBox[{\\\"\\\\\\\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlttemp\\\\\\\"\\\"}]\\)\\\" \
not found.\"", 2, 34, 2, 24970234400959804272, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.905698281976287*^9, 3.905698429706283*^9, 
  3.905698584737297*^9},
 CellLabel->
  "During evaluation of \
In[28]:=",ExpressionUUID->"dda3af75-c191-4035-a81e-eca19b6d5991"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.905698281947783*^9, 3.9056984296787*^9, 
  3.905698584740354*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"c08465cd-24ff-4210-bcae-17a65155c377"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "should", " ", "see", " ", "a", " ", "green", " ", "check", " ", "mark", 
    " ", "if", " ", "all", " ", "tests", " ", "pass"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"tr", "=", 
   RowBox[{"TestReport", "[", "testFileName", "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.895362673691435*^9, {3.905698595701936*^9, 
   3.905698609082397*^9}},ExpressionUUID->"be6ba0ec-dcd9-4861-85ab-\
395df1e6baec"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: Shocks.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["15", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: Shocks.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["15", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["15", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0.035383`3.5232183912112576", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: Shocks.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     5713929132181905563 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9056985848005295`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "e8da338b-59b4-4b68-a847-047848a672df", "TestID" -> 
         "Shocks_20231007-7Y2T7Y", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "17b45fab-3033-4b96-a86a-b5d3f923d113", "Input" -> 
         HoldForm[Needs["FernandoDuarte`LongRunRisk`Model`Shocks`"]; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00003`1.6276362525516561, "CPUTimeUsed" -> 
         0.000030999999999448136`, "MemoryUsed" -> 2760, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 786826304735829491 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9056985848008432`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "1fc57a31-02ee-4e21-a127-ab03074f5889", "TestID" -> 
         "Shocks_20231007-V0Z0JM", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "692fc9f0-2818-4122-96be-45e3a07c1b65", "Input" -> HoldForm[
           MemberQ[$ContextPath, "FernandoDuarte`LongRunRisk`Model`Shocks`"]],
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000022`1.492937678654201, "CPUTimeUsed" -> 
         0.000020999999999826713`, "MemoryUsed" -> 3104, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 8478826686833409260 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90569858480108*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "ff35eee5-fcf3-4b37-a78f-86ee9421a05f", "TestID" -> 
         "Shocks_20231007-U78NUC", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "9910a775-9f17-4259-91e0-61cca9d8a58a", "Input" -> HoldForm[
           Not[Names["*rulesE"] === {}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.020409`4.460336723512223, "CPUTimeUsed" -> 
         0.02041900000000041, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 6901984846602616453 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9056985848218803`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "59948b78-9cd0-4169-876a-96f68d5babb3", "TestID" -> 
         "Shocks_20231007-LTX8WA", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "849193ce-bfa6-488b-ad83-f36b7269d06e", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[ReplaceAll[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
                 Model`Shocks`t], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 0, {
               Model`Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
              Table[ReplaceAll[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                 Model`Shocks`t, Model`Shocks`ii], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 0, {
               Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000209`2.4706612839430475, "CPUTimeUsed" -> 
         0.00021000000000048757`, "MemoryUsed" -> 3616, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 85456238938349967 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905698584822397*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "f7073a86-19a6-41ca-9d96-7c32a9e6a27b", "TestID" -> 
         "Shocks_20231007-84HPWC", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "b940825a-6015-4402-8ec6-a0d960c27a7d", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[
              ReplaceAll[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
                  Model`Shocks`t]^2, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 1, {
               Model`Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
              Table[
              ReplaceAll[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                  Model`Shocks`t, Model`Shocks`ii]^2, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 1, {
               Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.003084`3.6396293672109135, "CPUTimeUsed" -> 0.003126999999999658, 
         "MemoryUsed" -> 3736, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 151512259200916340 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9056985848257465`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "3d088dcb-f687-4108-b940-c137c9cc182a", "TestID" -> 
         "Shocks_20231007-1AQ24U", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "487c0158-4b88-43f5-b53d-71b70c7a7f50", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[
              ReplaceAll[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
                  Model`Shocks`t]^3, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 0, {
               Model`Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
              Table[
              ReplaceAll[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                  Model`Shocks`t, Model`Shocks`ii]^3, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 0, {
               Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00288`3.6099074855912248, "CPUTimeUsed" -> 0.0029119999999998036`, 
         "MemoryUsed" -> 3736, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 3660129184477620092 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9056985848288865`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "228b2a2f-e9ee-4c23-afbb-caec734219dd", "TestID" -> 
         "Shocks_20231007-13B46Z", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "9bacf242-ab77-4e35-b7af-e17ef8300b11", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[
              ReplaceAll[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
                  Model`Shocks`t]^4, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 3, {
               Model`Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
              Table[
              ReplaceAll[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                  Model`Shocks`t, Model`Shocks`ii]^4, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 3, {
               Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.002852`3.6056645190118215, "CPUTimeUsed" -> 0.002886999999999862, 
         "MemoryUsed" -> 3736, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 8216137216718553870 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9056985848320174`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "fa3a8209-5801-43c5-877b-791c27b32bf1", "TestID" -> 
         "Shocks_20231007-JAIJWX", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "60e21f78-3a15-4658-8911-e977b78b3d58", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[0 === If[Model`Shocks`f === Model`Shocks`g, 0, 
                 ReplaceAll[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
                   Model`Shocks`t] 
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`g][
                   Model`Shocks`t], 
                  FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                  Model`Shocks`t]]], {
               Model`Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}, {
               Model`Shocks`g, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
              Table[
              0 === ReplaceAll[
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                  Model`Shocks`t, Model`Shocks`ii] 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
                  Model`Shocks`t], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]], {
               Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}, {
               Model`Shocks`f, {
                "x", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.001547`3.3400053115313613, "CPUTimeUsed" -> 0.0015480000000001048`,
          "MemoryUsed" -> 5656, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 3957978834378780822 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905698584833802*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "d9f765a8-ca02-448f-9ac4-eaa822305a6c", "TestID" -> 
         "Shocks_20231007-RTEJ8P", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "94b15112-d20f-466f-a4af-fb42d87232c4", "Input" -> 
         HoldForm[Map[StringDelete[#, 
              StringExpression[
               Alternatives["FernandoDuarte", "`"], 
               BlankSequence[], "`"]]& , 
             Table[
              ToString[
               ReplaceAll[
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                 Model`Shocks`t, Model`Shocks`ii] 
                FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                 Model`Shocks`t], 
                FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                Model`Shocks`t]]], {
              Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]] === {
            "taugd[1]", "taugd[i]", "taugd[j]"}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000099`2.146150192429544, "CPUTimeUsed" -> 0.00009900000000007125, 
         "MemoryUsed" -> 2624, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 8732094352124546517 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9056985848341775`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "b7c52539-77b2-472c-861b-418c05618228", "TestID" -> 
         "Shocks_20231007-AB2KMZ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "db358d04-1d82-454e-a4cc-91b497d42ba7", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[ReplaceAll[Model`Shocks`expr, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === Model`Shocks`expr, {Model`Shocks`expr, 
                Table[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
                 Model`Shocks`t + 1], {
                 Model`Shocks`f, {
                  "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
              Table[ReplaceAll[Model`Shocks`expr, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === Model`Shocks`expr, {Model`Shocks`expr, 
                Table[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps[
                  ToExpression[Model`Shocks`f]][Model`Shocks`t], {
                 Model`Shocks`f, {
                  "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
              Table[ReplaceAll[Model`Shocks`expr, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === Model`Shocks`expr, {
               Model`Shocks`expr, {
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                 Model`Shocks`t + 1, Model`Shocks`i], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`dd][
                 Model`Shocks`t, Model`Shocks`i]}}]}]]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000394`2.746011219657568, "CPUTimeUsed" -> 0.0003959999999998409, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 3864753104803145943 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9056985848348374`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "79915c06-e45f-4554-959a-ee64175fc847", "TestID" -> 
         "Shocks_20231007-GN2PEF", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "14c3068e-fb67-4143-a23e-33b7f41256e3", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[ReplaceAll[Model`Shocks`expr, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === Model`Shocks`expr, {Model`Shocks`expr, 
                Table[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps[
                 Model`Shocks`f], {
                 Model`Shocks`f, {
                  "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
              Table[ReplaceAll[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"], {
               Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000203`2.4580110357452067, "CPUTimeUsed" -> 
         0.00020299999999995322`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 920432500616857940 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9056985848352704`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "4fb8a9c9-0ddb-4aaf-a6f3-e3bc8a122ac7", "TestID" -> 
         "Shocks_20231007-Y35BZB", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "a48e0dfb-ffe4-4e25-af5b-1f7daaec17b2", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[ReplaceAll[Model`Shocks`expr, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === Model`Shocks`expr, {Model`Shocks`expr, 
                Table[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps[
                 Model`Shocks`f], {
                 Model`Shocks`f, {
                  "xx", "adc", "p", "rhobar", "ssg", "ssx", "sdc", "spi"}}]}], 
              Table[ReplaceAll[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["ddd"], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["ddd"], {
               Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00021`2.4727342925659133, "CPUTimeUsed" -> 0.00021000000000004349`,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 2179653427331108125 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905698584835737*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a3bf3971-7e14-4bc5-be6f-934b30a26082", "TestID" -> 
         "Shocks_20231007-DGPHWZ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "2a88f8e5-e58c-4439-a345-d52514cd4232", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[ReplaceAll[Model`Shocks`expr, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === Model`Shocks`expr, {Model`Shocks`expr, 
                Table[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps[Model`Shocks`f][
                 Model`Shocks`tt], {
                 Model`Shocks`f, {
                  "xx", "adc", "p", "rhobar", "ssg", "ssx", "sdc", "spi"}}, {
                 Model`Shocks`tt, {
                  Model`Shocks`t + 1, Model`Shocks`t - 1, Model`Shocks`s, 
                   Model`Shocks`t + Model`Shocks`h}}]}], 
              Table[ReplaceAll[Model`Shocks`expr, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === Model`Shocks`expr, {Model`Shocks`expr, 
                Table[
                 FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                 Model`Shocks`tt, Model`Shocks`ii], {
                 Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}, {
                 Model`Shocks`tt, {
                  Model`Shocks`t + 1, Model`Shocks`t - 1, Model`Shocks`s, 
                   Model`Shocks`t + Model`Shocks`h}}]}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000294`2.618862328244151, "CPUTimeUsed" -> 0.0002950000000003783, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 8700649707003137069 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905698584836252*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "8e92afda-fd66-4e6b-9844-82f06b57f3b0", "TestID" -> 
         "Shocks_20231007-GZIC0T", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "9b3bdd00-2061-4882-877b-1afc477762bd", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[ReplaceAll[
                 NewContext`eps[Model`Shocks`f][Model`Shocks`t], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 0, {
               Model`Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
              Table[ReplaceAll[
                 NewContext`eps["dd"][Model`Shocks`t, Model`Shocks`ii], 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 0, {
               Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000179`2.403368028811887, "CPUTimeUsed" -> 0.00017899999999970717`,
          "MemoryUsed" -> 3616, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 1847466528589694089 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905698584836656*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "9e072f88-f87e-43bb-a7a6-97c5bb28ccbb", "TestID" -> 
         "Shocks_20231007-JPYKSE", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "EvaluationID" -> 
         "d877895e-2fff-4dd2-b1a3-44fd5ad0cbbc", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Table[
              ReplaceAll[
                FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps[
                  Model`Shocks`f][Model`Shocks`t]^2, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 1, {
               Model`Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
              Table[
              ReplaceAll[
                FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps["dd"][
                  Model`Shocks`t, Model`Shocks`ii]^2, 
                 FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[
                 Model`Shocks`t]] === 1, {
               Model`Shocks`ii, {1, Model`Shocks`i, Model`Shocks`j}}]}]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.002971`3.623417649635658, "CPUTimeUsed" -> 0.0030050000000003685`, 
         "MemoryUsed" -> 3800, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>]|>, "FailureResults" -> <||>, 
    "TestsNotEvaluatedKeys" -> {}, "TestsFailedWrongResultsKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {5713929132181905563, 786826304735829491, 
     8478826686833409260, 6901984846602616453, 85456238938349967, 
     151512259200916340, 3660129184477620092, 8216137216718553870, 
     3957978834378780822, 8732094352124546517, 3864753104803145943, 
     920432500616857940, 2179653427331108125, 8700649707003137069, 
     1847466528589694089}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.905698282274191*^9, 3.905698429992105*^9, 
  3.9056985850189333`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"f3cb95f1-76e2-4462-9f29-e6a78053312e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expected", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
        ")"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "value", " ", "of", " ", "next", " ", "two", " ", "lines", " ", "should", 
    " ", "be", " ", "true"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"numEntries", "=", 
     RowBox[{
      RowBox[{"Dimensions", "[", "actual", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"numCol", "=", "5"}], ";", "\[IndentingNewLine]", 
    RowBox[{"numRows", "=", 
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{"numEntries", "/", "numCol"}], "]"}], "+", "1"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"TableForm", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ArrayReshape", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"TableForm", "[", 
              RowBox[{"{", 
               RowBox[{"#1", ",", "#2"}], "}"}], "]"}], "&"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"actual", ",", "\[IndentingNewLine]", "expected"}], 
             "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}], 
          "\[IndentingNewLine]", "}"}], "\[Transpose]"}], ",", 
        RowBox[{"{", 
         RowBox[{"numRows", ",", "numCol"}], "}"}], ",", "\"\<--\>\""}], 
       "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{"TableDepth", "\[Rule]", "1"}]}], " ", "]"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.905694462163437*^9, 3.905694478942039*^9}, {
  3.905697309999281*^9, 3.905697352099519*^9}, {3.905698612065154*^9, 
  3.905698626285748*^9}},ExpressionUUID->"e13ff325-0ae4-4963-a791-\
a969bfc312f8"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9056982822846947`*^9, 3.905698430002391*^9, 
  3.905698585029706*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"ef8c5055-089f-40f3-860a-c900a8097811"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9056982822846947`*^9, 3.905698430002391*^9, 
  3.9056985850307283`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"e255bf47-6c34-4c05-9061-a36069150332"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interactive Tests", "Subsection",
 CellChangeTimes->{{3.889905622471089*^9, 3.889905629759961*^9}, {
  3.889972063478182*^9, 
  3.889972065236586*^9}},ExpressionUUID->"110fa690-a939-4013-acf2-\
a07d9942e533"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"packageFileName", "=", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DirectoryName", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "2"}], "]"}], ",", 
     "\"\<Kernel\>\"", ",", "\"\<Model\>\"", ",", 
     RowBox[{
      RowBox[{"FileBaseName", "[", 
       RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", "\"\<.wl\>\""}]}],
     "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", 
  RowBox[{
   RowBox[{"\"\<FernandoDuarte`LongRunRisk`Model`\>\"", "<>", 
    RowBox[{"FileBaseName", "[", 
     RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", "\"\<`\>\""}], ",", 
   "packageFileName"}], "]"}]}], "Input",
 CellChangeTimes->{{3.889968360919714*^9, 3.889968361169221*^9}, {
   3.889998753242611*^9, 3.8899987613556004`*^9}, 3.890825576987958*^9, {
   3.890987450098063*^9, 3.8909874502616673`*^9}, {3.8913139456297817`*^9, 
   3.891313945811431*^9}, {3.891313975885231*^9, 3.8913139761850777`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"77f983dd-5a7a-48fb-8b9e-40e0b6bd9c47"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Kernel/Model/Shocks.wl\"\>"], "Output",
 CellChangeTimes->{3.905698493074874*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"08de2b9b-2a3e-49a0-88ea-18d7c023d897"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"should", " ", "all", " ", "give", " ", "zero"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"0", "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}], "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
          "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
          "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"0", "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
          RowBox[{"t", ",", "ii"}], "]"}], "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.889965468632722*^9, 3.889965535681717*^9}, {
  3.889965687921562*^9, 3.889965719041513*^9}, {3.8899657564745703`*^9, 
  3.8899657868805656`*^9}, {3.889965818275572*^9, 3.88996587402346*^9}, {
  3.8899660417909737`*^9, 3.889966042024665*^9}, {3.889967536877624*^9, 
  3.88996754071059*^9}, {3.8900165538878927`*^9, 3.89001658162351*^9}, {
  3.890016737000123*^9, 3.890016738407667*^9}, {3.890016800216386*^9, 
  3.890016807685783*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"2dfc73dc-9874-44f6-99c5-c5e524d0d887"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905698493226025*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"71654c83-b94c-45af-8bbb-a74890ee3878"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905698493227273*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"040181e1-6828-49a8-ae75-dc0ac4e2b6c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"should", " ", "all", " ", "give", " ", "one"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"1", "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}], "^", "2"}], "/.", 
         
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
          "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
          "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"1", "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
           RowBox[{"t", ",", "ii"}], "]"}], "^", "2"}], "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.889966121134981*^9, 3.889966129513671*^9}, {
  3.8899675430265427`*^9, 3.889967546703742*^9}, {3.890016583815317*^9, 
  3.890016592774984*^9}, {3.890016733215493*^9, 3.890016734665518*^9}, {
  3.890016813177075*^9, 3.890016818682664*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"71c0d248-cf19-479f-94a0-7aad059cee6f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9056984932546387`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"87d7b032-64f2-4a11-81f6-42247c0fec9d"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.90569849325602*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"c8694b9a-e8b8-4e6c-b38a-bd16cc964aec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"should", " ", "all", " ", "give", " ", "zero"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"0", "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}], "^", "3"}], "/.", 
         
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
          "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
          "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"0", "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
           RowBox[{"t", ",", "ii"}], "]"}], "^", "3"}], "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.889966137593294*^9, 3.889966157676291*^9}, {
  3.8899675483847713`*^9, 3.889967551583518*^9}, {3.890016598169224*^9, 
  3.890016599024119*^9}, {3.8900166398231497`*^9, 3.8900166447507772`*^9}, {
  3.890016728032583*^9, 3.8900167295430813`*^9}, {3.890016823054276*^9, 
  3.890016828517232*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"94047c1a-8725-44f4-ac9f-feb42bcb9445"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905698493285008*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"2bbd11cc-93f0-4e50-9f79-4d8dd246b058"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905698493286316*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"284b487a-2dad-4c84-9740-7aff1ed11531"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"should", " ", "all", " ", "give", " ", "three"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"3", "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}], "^", "4"}], "/.", 
         
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
          "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
          "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"3", "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
           RowBox[{"t", ",", "ii"}], "]"}], "^", "4"}], "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8899661404752703`*^9, 3.889966162544742*^9}, {
  3.88996755330625*^9, 3.8899675539045153`*^9}, {3.890016601009963*^9, 
  3.890016602175623*^9}, {3.890016647031019*^9, 3.890016654765329*^9}, {
  3.890016724631262*^9, 3.890016725648046*^9}, {3.890016832581925*^9, 
  3.8900168622944813`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"d3d28ca6-8af9-4491-966a-9f486632a1b2"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9056984932908773`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"0605bc5b-6d58-422f-95b9-c80db38c36af"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905698493292038*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"fdb9054e-5ec1-4b1a-850e-5aad7560d9c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"should", " ", "all", " ", "give", " ", "zero"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"0", "===", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"f", "===", "g"}], ",", "0", ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}], "*", 
             RowBox[{
              RowBox[{"eps", "[", "g", "]"}], "[", "t", "]"}]}], "/.", 
            RowBox[{"rulesE", "[", "t", "]"}]}]}], "]"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"f", ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
            "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
            "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"g", ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
            "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
            "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"0", "===", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
             RowBox[{"t", ",", "ii"}], "]"}], "*", 
            RowBox[{
             RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}]}], "/.", 
           RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"f", ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<x\>\"", ",", "\"\<pi\>\"", ",", "\"\<pibar\>\"", ",", 
            "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", "\"\<sc\>\"", ",", 
            "\"\<sp\>\""}], "}"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.889966171785048*^9, 3.889966259267709*^9}, {
   3.88996755849631*^9, 3.889967559615136*^9}, {3.890016604049556*^9, 
   3.890016605279772*^9}, {3.890016664063781*^9, 3.890016667093809*^9}, 
   3.890016719343944*^9, {3.89001688967313*^9, 3.890016972670947*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"a7d66a75-eb75-4db5-8559-b86f3e46ec2c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905698493304652*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"722c15e6-ccdf-44ae-93f5-ea0ff531aa78"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905698493305937*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"58c97eea-6d9f-47f7-af07-de9b4b1844ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"should", " ", "all", " ", "give", " ", 
    RowBox[{"taugd", "[", "ii", "]"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<taugd[1]\>\"", ",", "\"\<taugd[i]\>\"", ",", "\"\<taugd[j]\>\""}], 
      "}"}], "===", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"StringDelete", "[", 
         RowBox[{"#", ",", 
          RowBox[{
           RowBox[{"\"\<FernandoDuarte\>\"", "|", "\"\<`\>\""}], "~~", "__", 
           "~~", "\"\<`\>\""}]}], "]"}], "&"}], "/@", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ToString", "@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
              RowBox[{"t", ",", "ii"}], "]"}], "*", 
             RowBox[{
              RowBox[{"eps", "[", "\"\<dc\>\"", "]"}], "[", "t", "]"}]}], "/.", 
            RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}]}], ")"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.889966276655841*^9, 3.889966329628468*^9}, 
   3.889966470569511*^9, {3.8899666206897087`*^9, 3.889966642167533*^9}, {
   3.8899666930281763`*^9, 3.889966714268526*^9}, {3.889966746437366*^9, 
   3.8899668192799807`*^9}, 3.889966968372637*^9, {3.890016685103952*^9, 
   3.890016706173997*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"77f48b1e-39a4-4398-8e14-b61e1b5bb4b2"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905698493309979*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"d91b73f3-5dbe-440a-ace6-8fb6491420ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"should", " ", "all", " ", "give", " ", "three"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"3", "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}], "^", "4"}], "/.", 
         
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
          "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
          "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"3", "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
           RowBox[{"t", ",", "ii"}], "]"}], "^", "4"}], "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.889966177455817*^9, 3.889966177853951*^9}, {
  3.889966992360574*^9, 3.889966992849523*^9}, {3.8899675664876623`*^9, 
  3.889967570401917*^9}, {3.890016610865726*^9, 3.890016612256692*^9}, {
  3.890016748169524*^9, 3.890016753197629*^9}, {3.890016979912045*^9, 
  3.890016985910692*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"41addf54-ea48-4c50-bf60-96c814dcbe5e"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9056984933195047`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"a0a6b728-2fdd-4094-bba7-a19fc738c5a1"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905698493320815*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"9900c00d-4c74-4247-8451-44cffb344100"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"should", " ", "all", " ", "give", " ", "zero"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"0", "===", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"f", "===", "g"}], ",", "0", ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}], "^", "2"}], 
             "*", 
             RowBox[{
              RowBox[{"eps", "[", "g", "]"}], "[", "t", "]"}]}], "/.", 
            RowBox[{"rulesE", "[", "t", "]"}]}]}], "]"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"f", ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
            "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
            "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"g", ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
            "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
            "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"0", "===", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
              RowBox[{"t", ",", "ii"}], "]"}], "^", "2"}], "*", 
            RowBox[{
             RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}]}], "/.", 
           RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"f", ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<x\>\"", ",", "\"\<pi\>\"", ",", "\"\<pibar\>\"", ",", 
            "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", "\"\<sc\>\"", ",", 
            "\"\<sp\>\""}], "}"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8899675877972183`*^9, 3.889967602226403*^9}, {
  3.8900166143143044`*^9, 3.890016615313992*^9}, {3.8900167583453693`*^9, 
  3.8900167602455273`*^9}, {3.89001699365699*^9, 3.890017007454585*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"26f91dcc-6134-4ff7-ad9c-74f7ed4468e0"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905698493338952*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"5db4acc0-5d08-48de-9600-434499dc5868"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9056984933442574`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"7a26bdcd-c43e-4f24-b3fb-0f998fec5449"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"should", " ", "all", " ", "return", " ", "true"}], ",", " ", 
    RowBox[{
    "confirming", " ", "that", " ", "rulesE", " ", "returns", " ", "same", 
     " ", "expression", " ", "unevaluated"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"expr", "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "expr"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"expr", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", "f", "]"}], "[", 
           RowBox[{"t", "+", "1"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
              "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
              "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], "]"}]}], 
       "}"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"expr", "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "expr"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"expr", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", 
            RowBox[{"ToExpression", "@", "f"}], "]"}], "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
              "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
              "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], "]"}]}], 
       "}"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"expr", "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "expr"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"expr", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
           RowBox[{
            RowBox[{"t", "+", "1"}], ",", "i"}], "]"}], ",", 
          RowBox[{
           RowBox[{"eps", "[", "dd", "]"}], "[", 
           RowBox[{"t", ",", "i"}], "]"}]}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.889965468632722*^9, 3.889965535681717*^9}, {
   3.889965687921562*^9, 3.889965748623394*^9}, {3.889965898517263*^9, 
   3.889965927180188*^9}, {3.8899670123313913`*^9, 3.889967110342752*^9}, {
   3.889967191054615*^9, 3.889967303783434*^9}, {3.89001661779342*^9, 
   3.890016621056472*^9}, 3.8900167671909723`*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"9e829da2-205b-44fa-9e15-21f48d820e5f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905698493352968*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"edf7c38d-5443-4338-9f4d-1167655c8ab3"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905698493354453*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"e25d7274-444b-4e99-8ef0-04369f8448dc"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905698493355304*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"c380068c-79c5-429e-acb3-0635c6a8f6d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"should", " ", "all", " ", "return", " ", "true"}], ",", " ", 
    RowBox[{
    "confirming", " ", "that", " ", "rulesE", " ", "returns", " ", "same", 
     " ", "expression", " ", "unevaluated"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"expr", "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "expr"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"expr", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"eps", "[", "f", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
              "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
              "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], "]"}]}], 
       "}"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", 
       RowBox[{"eps", "[", "\"\<dd\>\"", "]"}]}], "\[IndentingNewLine]", ",", 
      
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.889965945368053*^9, 3.889965955550915*^9}, 
   3.889967308405003*^9, {3.889967351208173*^9, 3.889967389985118*^9}, 
   3.890016622216301*^9, {3.8900167738332148`*^9, 3.890016774829447*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"4c16b666-deb6-4987-8dcc-8aab6d8299ab"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9056984933592978`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"20eea8da-8943-41ca-a628-465a2ed80fdc"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9056984933606987`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"c0814fde-97a1-4e90-8552-4231b8a5fe3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"should", " ", "all", " ", "return", " ", "true"}], ",", " ", 
    RowBox[{
    "confirming", " ", "that", " ", "rulesE", " ", "returns", " ", "same", 
     " ", "expression", " ", "unevaluated"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"expr", "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "expr"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"expr", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"eps", "[", "f", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<xx\>\"", ",", "\"\<adc\>\"", ",", "\"\<p\>\"", ",", 
              "\"\<rhobar\>\"", ",", "\"\<ssg\>\"", ",", "\"\<ssx\>\"", ",", 
              "\"\<sdc\>\"", ",", "\"\<spi\>\""}], "}"}]}], "}"}]}], "]"}]}], 
       "}"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"eps", "[", "\"\<ddd\>\"", "]"}], "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", 
       RowBox[{"eps", "[", "\"\<ddd\>\"", "]"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.889966053895102*^9, 3.8899660943950768`*^9}, 
   3.88996731051445*^9, {3.889967405843053*^9, 3.88996742813382*^9}, {
   3.8900166244167767`*^9, 3.890016625279937*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"02b5060b-5840-4cc6-a0d0-f444ab39ba3e"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905698493374601*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"bea89cd6-7861-4e0c-9f0e-c57360bc3326"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905698493376017*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"9887326d-445c-464b-b658-052bfeac46dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"should", " ", "all", " ", "return", " ", "true"}], ",", " ", 
    RowBox[{
    "confirming", " ", "that", " ", "rulesE", " ", "returns", " ", "same", 
     " ", "expression", " ", "unevaluated"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"expr", "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "expr"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"expr", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", "f", "]"}], "[", "tt", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<xx\>\"", ",", "\"\<adc\>\"", ",", "\"\<p\>\"", ",", 
              "\"\<rhobar\>\"", ",", "\"\<ssg\>\"", ",", "\"\<ssx\>\"", ",", 
              "\"\<sdc\>\"", ",", "\"\<spi\>\""}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"tt", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"t", "+", "1"}], ",", 
              RowBox[{"t", "-", "1"}], ",", "s", ",", 
              RowBox[{"t", "+", "h"}]}], "}"}]}], "}"}]}], "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"expr", "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "expr"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"expr", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
           RowBox[{"tt", ",", "ii"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"ii", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"tt", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"t", "+", "1"}], ",", 
              RowBox[{"t", "-", "1"}], ",", "s", ",", 
              RowBox[{"t", "+", "h"}]}], "}"}]}], "}"}]}], "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.889965962245503*^9, 3.889966019800927*^9}, 
   3.889967313667658*^9, {3.889967436454067*^9, 3.889967519755422*^9}, {
   3.890016627163189*^9, 3.890016628977816*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"fd59bfd6-0526-4d91-8edf-d3cef9d6ee95"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905698493381691*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"2d4b3bd8-c2b7-4834-a203-17b760c262cb"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905698493383339*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"bca0cf53-404a-4d2e-ac3f-e4c8c163d858"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"should", " ", "all", " ", "give", " ", "zero"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"0", "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"NewContext`eps", "[", "f", "]"}], "[", "t", "]"}], "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
          "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
          "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"0", "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"NewContext`eps", "[", "\"\<dd\>\"", "]"}], "[", 
          RowBox[{"t", ",", "ii"}], "]"}], "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.889965468632722*^9, 3.889965535681717*^9}, {
  3.889965687921562*^9, 3.889965719041513*^9}, {3.8899657564745703`*^9, 
  3.8899657868805656`*^9}, {3.889965818275572*^9, 3.88996587402346*^9}, {
  3.8899660417909737`*^9, 3.889966042024665*^9}, {3.889967536877624*^9, 
  3.88996754071059*^9}, {3.8900165538878927`*^9, 3.89001658162351*^9}, {
  3.890016737000123*^9, 3.890016738407667*^9}, {3.890016800216386*^9, 
  3.890016807685783*^9}, {3.8921231727183647`*^9, 3.8921231824244347`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"8db86947-a5d4-4fa2-9739-736685d119e7"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905698493391961*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"40ffe2c6-757b-4183-9cc5-96f4a6eff767"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905698493393261*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"89e6ebdf-b8ba-4fec-aeae-5a1bda517359"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"should", " ", "all", " ", "give", " ", "one"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"1", "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps", "[", "f", 
            "]"}], "[", "t", "]"}], "^", "2"}], "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
          "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
          "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"1", "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps", "[", 
            "\"\<dd\>\"", "]"}], "[", 
           RowBox[{"t", ",", "ii"}], "]"}], "^", "2"}], "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.889966121134981*^9, 3.889966129513671*^9}, {
  3.8899675430265427`*^9, 3.889967546703742*^9}, {3.890016583815317*^9, 
  3.890016592774984*^9}, {3.890016733215493*^9, 3.890016734665518*^9}, {
  3.890016813177075*^9, 3.890016818682664*^9}, {3.8921234241138163`*^9, 
  3.8921234389938107`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"3f54fbff-f324-4f3e-b3bc-0dea54295dde"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905698493399293*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"2de94245-a303-49e8-9779-6a4e282d861b"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905698493400676*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"442cacf4-f5d7-441a-92a8-26efc8ffb055"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{863, 801},
WindowMargins->{{Automatic, -1366}, {Automatic, 45}},
WindowStatusArea->"",
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.25 Inherited,
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"8a2fa114-2632-48cd-95a6-be23d2dae59c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 215, 4, 37, "Input",ExpressionUUID->"4f3f1a60-cc68-4ae9-bddd-46c77aa4048b"],
Cell[776, 26, 2000, 42, 220, "Input",ExpressionUUID->"ab6d9e49-903f-4057-a633-2e798b92a515"],
Cell[CellGroupData[{
Cell[2801, 72, 255, 4, 67, "Subsection",ExpressionUUID->"5216b0c6-0b30-4607-beca-83054aa122f9"],
Cell[3059, 78, 385, 10, 37, "Input",ExpressionUUID->"7e75b048-8961-47de-91cb-6d1bd22efb8c"],
Cell[CellGroupData[{
Cell[3469, 92, 436, 9, 64, "Input",ExpressionUUID->"7c745d6c-f8d5-490b-9a4e-eab39840f4de"],
Cell[3908, 103, 242, 3, 42, "Output",ExpressionUUID->"d298714a-9fb3-483f-8f05-7bf73cfb21ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4187, 111, 220, 3, 37, "Input",ExpressionUUID->"9bbb6f3f-a98d-4f9c-ad17-544ce59b7b2a"],
Cell[4410, 116, 214, 3, 42, "Output",ExpressionUUID->"5c1687df-740f-47ec-bf0a-a5570a0dfd34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4661, 124, 1177, 20, 116, "Input",ExpressionUUID->"27b72c9c-3767-4dd9-883c-12b885785f0a"],
Cell[CellGroupData[{
Cell[5863, 148, 414, 10, 29, "Print",ExpressionUUID->"78d9ad1f-1320-43f9-b977-734b4fbc4e8f"],
Cell[6280, 160, 312, 6, 29, "Print",ExpressionUUID->"3fef21e9-f122-402a-8658-9d1f3e009f32"]
}, Open  ]],
Cell[6607, 169, 4874, 88, 69, "Output",ExpressionUUID->"39be6c16-c7e5-4239-94f7-1a017c23f67f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11518, 262, 985, 18, 90, "Input",ExpressionUUID->"565bb1f7-e9c6-4ed3-b28a-a5d567ae3826"],
Cell[CellGroupData[{
Cell[12528, 284, 414, 10, 29, "Print",ExpressionUUID->"402191e5-306f-4f1b-a43c-474eabe645fc"],
Cell[12945, 296, 312, 6, 29, "Print",ExpressionUUID->"195bf5db-bd39-4a04-95fd-25d53b191b69"]
}, Open  ]],
Cell[13272, 305, 5063, 92, 69, "Output",ExpressionUUID->"1c32f704-6197-4cd1-a7e2-bb680dc26f0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18372, 402, 767, 16, 116, "Input",ExpressionUUID->"3ca54cb5-c283-4f3b-8e12-834ba756dc26"],
Cell[CellGroupData[{
Cell[19164, 422, 412, 10, 29, "Print",ExpressionUUID->"7320cd47-bfa0-4bfe-9c01-ca16c32652f3"],
Cell[19579, 434, 312, 6, 29, "Print",ExpressionUUID->"ecca5418-77e8-48f2-9d58-036c91c06404"]
}, Open  ]],
Cell[19906, 443, 5080, 92, 69, "Output",ExpressionUUID->"f68262c9-a251-4db2-b246-8500bfb67880"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25023, 540, 2905, 60, 428, "Input",ExpressionUUID->"59480a4b-bd79-4729-a954-787da9c6bd4a"],
Cell[CellGroupData[{
Cell[27953, 604, 411, 10, 29, "Print",ExpressionUUID->"ea0e4f14-5a85-46ec-b8bd-11c060fe6ab5"],
Cell[28367, 616, 309, 6, 29, "Print",ExpressionUUID->"b3b68196-800e-4846-beea-e564753385a3"]
}, Open  ]],
Cell[28691, 625, 7520, 132, 69, "Output",ExpressionUUID->"7ad6cdbe-f087-4b5b-97f8-d2fac3060a09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36248, 762, 2594, 57, 428, "Input",ExpressionUUID->"47f4c0e3-a3cf-4b90-9890-6fdd8e20e5d0"],
Cell[CellGroupData[{
Cell[38867, 823, 416, 10, 29, "Print",ExpressionUUID->"40b32858-2ce0-417c-be15-57aa9d3db1fe"],
Cell[39286, 835, 312, 6, 29, "Print",ExpressionUUID->"65b5bc6c-984f-4c6b-8226-89f00a141d03"]
}, Open  ]],
Cell[39613, 844, 8323, 147, 69, "Output",ExpressionUUID->"78808034-e4c8-4018-ac7a-272b2ed75ba6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47973, 996, 2585, 56, 402, "Input",ExpressionUUID->"8f45a60c-12d1-47b3-95b3-29eeef517d37"],
Cell[CellGroupData[{
Cell[50583, 1056, 414, 10, 29, "Print",ExpressionUUID->"178b4f74-fc8b-43ad-a3c1-1ad2ab2e43b7"],
Cell[51000, 1068, 312, 6, 29, "Print",ExpressionUUID->"02e29f22-2c05-4c47-aba6-5ca5ba58c572"]
}, Open  ]],
Cell[51327, 1077, 9008, 158, 69, "Output",ExpressionUUID->"7f2c030a-13dc-44b3-b929-5256f37aaecb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60372, 1240, 2632, 57, 428, "Input",ExpressionUUID->"34c5906b-b701-4e99-ac6d-68e658cecc0f"],
Cell[CellGroupData[{
Cell[63029, 1301, 414, 10, 29, "Print",ExpressionUUID->"a89bea54-92f7-4790-85e1-baf4d25b3529"],
Cell[63446, 1313, 312, 6, 29, "Print",ExpressionUUID->"d1ad5912-532c-497b-b6b0-fe6041fc095b"]
}, Open  ]],
Cell[63773, 1322, 9721, 169, 69, "Output",ExpressionUUID->"355fa08c-d09f-498e-904f-80ea2f77d29e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73531, 1496, 3514, 78, 480, "Input",ExpressionUUID->"ac65904e-36a9-4c48-8329-9424b41234c5"],
Cell[CellGroupData[{
Cell[77070, 1578, 412, 10, 29, "Print",ExpressionUUID->"acf76f96-6b42-4118-846e-861f2e043eeb"],
Cell[77485, 1590, 310, 6, 29, "Print",ExpressionUUID->"e7295a7a-c79b-4f28-acb1-e95c72d88ce8"]
}, Open  ]],
Cell[77810, 1599, 12405, 208, 69, "Output",ExpressionUUID->"620faf93-4544-4831-870b-dc6eeb99335f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90252, 1812, 2205, 49, 195, "Input",ExpressionUUID->"8425dca0-fd15-42a1-8e6b-e6fb544a45b1"],
Cell[CellGroupData[{
Cell[92482, 1865, 414, 10, 29, "Print",ExpressionUUID->"262e4cf8-ed43-496f-8c00-1b6d34773902"],
Cell[92899, 1877, 314, 6, 29, "Print",ExpressionUUID->"cb4c7e3d-be2e-468d-816d-a42856554ef4"]
}, Open  ]],
Cell[93228, 1886, 11291, 189, 69, "Output",ExpressionUUID->"ca7de34a-6fc7-42f9-be71-bb6489da4977"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104556, 2080, 4150, 92, 662, "Input",ExpressionUUID->"e65fd894-d9b6-444c-a52d-afb666f1e5bc"],
Cell[CellGroupData[{
Cell[108731, 2176, 411, 10, 29, "Print",ExpressionUUID->"b26857e9-eb61-4c5f-8241-fad1f5d176c1"],
Cell[109145, 2188, 309, 6, 29, "Print",ExpressionUUID->"d242b7c0-ba0a-4a70-8414-e485dce90e31"]
}, Open  ]],
Cell[109469, 2197, 14991, 243, 69, "Output",ExpressionUUID->"720532d5-69eb-4da9-9f41-f7f91f3e8ad2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124497, 2445, 2745, 60, 506, "Input",ExpressionUUID->"f6a47068-4ccb-4fea-9136-2dc604d17939"],
Cell[CellGroupData[{
Cell[127267, 2509, 412, 10, 29, "Print",ExpressionUUID->"bee9ffe9-918b-4689-9f50-eff3b4c111c5"],
Cell[127682, 2521, 310, 6, 29, "Print",ExpressionUUID->"b893642d-6e96-47d9-a791-01aea4186986"]
}, Open  ]],
Cell[128007, 2530, 14110, 226, 69, "Output",ExpressionUUID->"d2bb75f5-f834-4bd1-94f0-f4ebd5854f06"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142154, 2761, 2836, 61, 532, "Input",ExpressionUUID->"914981bf-41ce-4fda-9d3a-e450b0107da7"],
Cell[CellGroupData[{
Cell[145015, 2826, 412, 10, 29, "Print",ExpressionUUID->"1c9338f7-5337-4b61-9402-da4c149f8ea5"],
Cell[145430, 2838, 310, 6, 29, "Print",ExpressionUUID->"c1ad09ca-ed98-4d61-b2d8-fef7b1f01f32"]
}, Open  ]],
Cell[145755, 2847, 15141, 241, 69, "Output",ExpressionUUID->"523f93ff-8df5-4f4d-a2cb-f4b8a0ebe9b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160933, 3093, 3705, 83, 584, "Input",ExpressionUUID->"06d2e2ec-ced8-46ed-a22e-1d614e760ba6"],
Cell[CellGroupData[{
Cell[164663, 3180, 412, 10, 29, "Print",ExpressionUUID->"eb7ead7b-934a-46c7-82b0-a103407a9482"],
Cell[165078, 3192, 310, 6, 29, "Print",ExpressionUUID->"66459573-9716-4815-b49d-91fed61eff46"]
}, Open  ]],
Cell[165403, 3201, 17620, 278, 69, "Output",ExpressionUUID->"f6c1461e-1fc7-4a68-a4b5-ddba5b1424f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183060, 3484, 3042, 61, 454, "Input",ExpressionUUID->"8441869b-d2b5-42f4-b9e2-b0fe622f4eae"],
Cell[CellGroupData[{
Cell[186127, 3549, 411, 10, 29, "Print",ExpressionUUID->"48369642-cb83-46fb-b323-5e4f81a86026"],
Cell[186541, 3561, 309, 6, 29, "Print",ExpressionUUID->"6749b62b-d9ed-4539-9c22-cdb3473adc52"]
}, Open  ]],
Cell[186865, 3570, 16391, 259, 69, "Output",ExpressionUUID->"f3e7aee8-544b-49b3-8784-baf2d9a20bc6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203293, 3834, 2769, 62, 480, "Input",ExpressionUUID->"687cf478-d5ea-420d-9b1b-a0c92484ec3a"],
Cell[CellGroupData[{
Cell[206087, 3900, 415, 10, 29, "Print",ExpressionUUID->"89663482-c12b-483b-aef4-847448cc5767"],
Cell[206505, 3912, 313, 6, 29, "Print",ExpressionUUID->"32501be1-bd1c-4e49-a8ab-5953cd28f75b"]
}, Open  ]],
Cell[206833, 3921, 17432, 278, 69, "Output",ExpressionUUID->"4e9ebf44-99f8-431f-9168-9743c06444b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224302, 4204, 195, 3, 37, "Input",ExpressionUUID->"2f383e79-a813-4173-8302-13431f2ea3e7"],
Cell[224500, 4209, 216, 3, 42, "Output",ExpressionUUID->"674cd85d-9015-475c-8a33-a6a5aa19e167"]
}, Open  ]],
Cell[224731, 4215, 3239, 67, 532, "Input",ExpressionUUID->"ff4f7790-c7da-4912-ad54-cff407dd65b4"],
Cell[CellGroupData[{
Cell[227995, 4286, 1586, 37, 246, "Input",ExpressionUUID->"80e65cc6-5862-4eea-8486-6bf475d5da3b"],
Cell[229584, 4325, 428, 9, 121, "Output",ExpressionUUID->"2766e342-7cd1-4e46-a724-8feede241584"],
Cell[230015, 4336, 322, 6, 69, "Output",ExpressionUUID->"8ee62d5c-2de3-4ec5-a03a-20b3d1a5816a"],
Cell[230340, 4344, 557, 13, 121, "Output",ExpressionUUID->"728600c3-0345-4dcd-b45b-43b736a6856e"],
Cell[230900, 4359, 514, 12, 57, "Message",ExpressionUUID->"87d507a1-1b24-4262-9cfe-964512c3b4c0"],
Cell[231417, 4373, 516, 12, 57, "Message",ExpressionUUID->"dda3af75-c191-4035-a81e-eca19b6d5991"],
Cell[231936, 4387, 200, 3, 42, "Output",ExpressionUUID->"c08465cd-24ff-4210-bcae-17a65155c377"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232173, 4395, 461, 12, 64, "Input",ExpressionUUID->"be6ba0ec-dcd9-4861-85ab-395df1e6baec"],
Cell[232637, 4409, 32801, 614, 76, "Output",ExpressionUUID->"f3cb95f1-76e2-4462-9f29-e6a78053312e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265475, 5028, 3346, 89, 584, "Input",ExpressionUUID->"e13ff325-0ae4-4963-a791-a969bfc312f8"],
Cell[268824, 5119, 201, 3, 42, "Output",ExpressionUUID->"ef8c5055-089f-40f3-860a-c900a8097811"],
Cell[269028, 5124, 203, 3, 42, "Output",ExpressionUUID->"e255bf47-6c34-4c05-9061-a36069150332"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[269280, 5133, 214, 4, 67, "Subsection",ExpressionUUID->"110fa690-a939-4013-acf2-a07d9942e533"],
Cell[CellGroupData[{
Cell[269519, 5141, 1082, 23, 142, "Input",ExpressionUUID->"77f983dd-5a7a-48fb-8b9e-40e0b6bd9c47"],
Cell[270604, 5166, 243, 3, 69, "Output",ExpressionUUID->"08de2b9b-2a3e-49a0-88ea-18d7c023d897"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270884, 5174, 1912, 47, 246, "Input",ExpressionUUID->"2dfc73dc-9874-44f6-99c5-c5e524d0d887"],
Cell[272799, 5223, 151, 2, 42, "Output",ExpressionUUID->"71654c83-b94c-45af-8bbb-a74890ee3878"],
Cell[272953, 5227, 151, 2, 42, "Output",ExpressionUUID->"040181e1-6828-49a8-ae75-dc0ac4e2b6c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273141, 5234, 1791, 47, 246, "Input",ExpressionUUID->"71c0d248-cf19-479f-94a0-7aad059cee6f"],
Cell[274935, 5283, 154, 2, 42, "Output",ExpressionUUID->"87d7b032-64f2-4a11-81f6-42247c0fec9d"],
Cell[275092, 5287, 151, 2, 42, "Output",ExpressionUUID->"c8694b9a-e8b8-4e6c-b38a-bd16cc964aec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275280, 5294, 1847, 48, 246, "Input",ExpressionUUID->"94047c1a-8725-44f4-ac9f-feb42bcb9445"],
Cell[277130, 5344, 152, 2, 42, "Output",ExpressionUUID->"2bbd11cc-93f0-4e50-9f79-4d8dd246b058"],
Cell[277285, 5348, 152, 2, 42, "Output",ExpressionUUID->"284b487a-2dad-4c84-9740-7aff1ed11531"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277474, 5355, 1845, 48, 246, "Input",ExpressionUUID->"d3d28ca6-8af9-4491-966a-9f486632a1b2"],
Cell[279322, 5405, 154, 2, 42, "Output",ExpressionUUID->"0605bc5b-6d58-422f-95b9-c80db38c36af"],
Cell[279479, 5409, 152, 2, 42, "Output",ExpressionUUID->"fdb9054e-5ec1-4b1a-850e-5aad7560d9c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279668, 5416, 2882, 72, 298, "Input",ExpressionUUID->"a7d66a75-eb75-4db5-8559-b86f3e46ec2c"],
Cell[282553, 5490, 152, 2, 42, "Output",ExpressionUUID->"722c15e6-ccdf-44ae-93f5-ea0ff531aa78"],
Cell[282708, 5494, 152, 2, 42, "Output",ExpressionUUID->"58c97eea-6d9f-47f7-af07-de9b4b1844ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[282897, 5501, 1736, 43, 195, "Input",ExpressionUUID->"77f48b1e-39a4-4398-8e14-b61e1b5bb4b2"],
Cell[284636, 5546, 152, 2, 42, "Output",ExpressionUUID->"d91b73f3-5dbe-440a-ace6-8fb6491420ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284825, 5553, 1842, 48, 246, "Input",ExpressionUUID->"41addf54-ea48-4c50-bf60-96c814dcbe5e"],
Cell[286670, 5603, 154, 2, 42, "Output",ExpressionUUID->"a0a6b728-2fdd-4094-bba7-a19fc738c5a1"],
Cell[286827, 5607, 152, 2, 42, "Output",ExpressionUUID->"9900c00d-4c74-4247-8451-44cffb344100"]
}, Open  ]],
Cell[CellGroupData[{
Cell[287016, 5614, 2903, 74, 298, "Input",ExpressionUUID->"26f91dcc-6134-4ff7-ad9c-74f7ed4468e0"],
Cell[289922, 5690, 152, 2, 42, "Output",ExpressionUUID->"5db4acc0-5d08-48de-9600-434499dc5868"],
Cell[290077, 5694, 154, 2, 42, "Output",ExpressionUUID->"7a26bdcd-c43e-4f24-b3fb-0f998fec5449"]
}, Open  ]],
Cell[CellGroupData[{
Cell[290268, 5701, 3175, 80, 454, "Input",ExpressionUUID->"9e829da2-205b-44fa-9e15-21f48d820e5f"],
Cell[293446, 5783, 152, 2, 42, "Output",ExpressionUUID->"edf7c38d-5443-4338-9f4d-1167655c8ab3"],
Cell[293601, 5787, 152, 2, 42, "Output",ExpressionUUID->"e25d7274-444b-4e99-8ef0-04369f8448dc"],
Cell[293756, 5791, 152, 2, 42, "Output",ExpressionUUID->"c380068c-79c5-429e-acb3-0635c6a8f6d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293945, 5798, 1931, 48, 324, "Input",ExpressionUUID->"4c16b666-deb6-4987-8dcc-8aab6d8299ab"],
Cell[295879, 5848, 154, 2, 42, "Output",ExpressionUUID->"20eea8da-8943-41ca-a628-465a2ed80fdc"],
Cell[296036, 5852, 154, 2, 42, "Output",ExpressionUUID->"c0814fde-97a1-4e90-8552-4231b8a5fe3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[296227, 5859, 1933, 47, 376, "Input",ExpressionUUID->"02b5060b-5840-4cc6-a0d0-f444ab39ba3e"],
Cell[298163, 5908, 152, 2, 42, "Output",ExpressionUUID->"bea89cd6-7861-4e0c-9f0e-c57360bc3326"],
Cell[298318, 5912, 152, 2, 42, "Output",ExpressionUUID->"9887326d-445c-464b-b658-052bfeac46dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298507, 5919, 2680, 68, 402, "Input",ExpressionUUID->"fd59bfd6-0526-4d91-8edf-d3cef9d6ee95"],
Cell[301190, 5989, 152, 2, 42, "Output",ExpressionUUID->"2d4b3bd8-c2b7-4834-a203-17b760c262cb"],
Cell[301345, 5993, 152, 2, 42, "Output",ExpressionUUID->"bca0cf53-404a-4d2e-ac3f-e4c8c163d858"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301534, 6000, 1985, 47, 246, "Input",ExpressionUUID->"8db86947-a5d4-4fa2-9739-736685d119e7"],
Cell[303522, 6049, 152, 2, 42, "Output",ExpressionUUID->"40ffe2c6-757b-4183-9cc5-96f4a6eff767"],
Cell[303677, 6053, 152, 2, 42, "Output",ExpressionUUID->"89e6ebdf-b8ba-4fec-aeae-5a1bda517359"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303866, 6060, 1980, 51, 324, "Input",ExpressionUUID->"3f54fbff-f324-4f3e-b3bc-0dea54295dde"],
Cell[305849, 6113, 152, 2, 42, "Output",ExpressionUUID->"2de94245-a303-49e8-9779-6a4e282d861b"],
Cell[306004, 6117, 152, 2, 62, "Output",ExpressionUUID->"442cacf4-f5d7-441a-92a8-26efc8ffb055"]
}, Open  ]]
}, Open  ]]
}
]
*)

