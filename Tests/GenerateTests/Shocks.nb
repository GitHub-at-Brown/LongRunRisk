(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    388985,       7534]
NotebookOptionsPosition[    328402,       6441]
NotebookOutlinePosition[    374764,       7296]
CellTagsIndexPosition[    374721,       7293]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"Quit", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.889964198656839*^9, 3.889964203363894*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"4f3f1a60-cc68-4ae9-bddd-46c77aa4048b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"testFileName", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DirectoryName", "[", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "1"}], "]"}], ",", 
      RowBox[{
       RowBox[{"FileBaseName", "[", 
        RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", 
       "\"\<.wlt\>\""}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pacletDir", "=", 
   RowBox[{"DirectoryName", "[", 
    RowBox[{"testFileName", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", "pacletDir", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testContextBase", "=", 
   RowBox[{"FileBaseName", "[", "testFileName", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$ContextPath", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"$ContextPath", ",", 
     RowBox[{"Except", "[", "\"\<PacletizedResourceFunctions`\>\"", "]"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8890661685133457`*^9, 3.889066220685074*^9}, {
   3.8890662555512333`*^9, 3.889066299901951*^9}, {3.889066581166473*^9, 
   3.8890665847967653`*^9}, {3.889066731765956*^9, 3.889066745674687*^9}, {
   3.889431410824514*^9, 3.88943144002302*^9}, 3.889502968269744*^9, {
   3.889998928469849*^9, 3.889998928670561*^9}, {3.890676553021196*^9, 
   3.890676564028514*^9}, 3.890676636594749*^9, {3.890679618620262*^9, 
   3.89067961902995*^9}, {3.8908254134370813`*^9, 3.890825413876319*^9}, {
   3.890825459205497*^9, 3.890825473041605*^9}, {3.890825503118348*^9, 
   3.8908255374530487`*^9}, {3.891021675325671*^9, 3.891021675545487*^9}, {
   3.8911588731924877`*^9, 3.891158877904397*^9}, {3.8911592499395514`*^9, 
   3.8911592502376633`*^9}, {3.891313793187236*^9, 3.891313806196443*^9}, {
   3.8913138758190536`*^9, 3.8913138873897676`*^9}, 3.891313958162628*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"ab6d9e49-903f-4057-a633-2e798b92a515"],

Cell[CellGroupData[{

Cell["CI Tests", "Subsection",
 CellChangeTimes->{{3.8895791922306013`*^9, 3.889579196409403*^9}, {
  3.889905620469079*^9, 3.8899056207707977`*^9}, {3.889967624152501*^9, 
  3.889967626012704*^9}},ExpressionUUID->"5216b0c6-0b30-4607-beca-\
83054aa122f9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FileNames", "[", "testFileName", "]"}], "===", 
     RowBox[{"{", "}"}]}], ",", "Nothing", ",", 
    RowBox[{"DeleteFile", "[", "testFileName", "]"}]}], "]"}], ";"}]], "Input",\

 CellChangeTimes->{3.8913138191474037`*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"7e75b048-8961-47de-91cb-6d1bd22efb8c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"confirm", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"testContext", "=", 
  RowBox[{
  "\"\<FernandoDuarte`LongRunRisk`Model`\>\"", "<>", "testContextBase", "<>", 
   "\"\<`\>\""}]}]}], "Input",
 CellChangeTimes->{{3.889968360919714*^9, 3.889968361169221*^9}, 
   3.89001596275924*^9, 3.8913138582704678`*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"7c745d6c-f8d5-490b-9a4e-eab39840f4de"],

Cell[BoxData["\<\"FernandoDuarte`LongRunRisk`Model`Shocks`\"\>"], "Output",
 CellChangeTimes->{3.895362688747032*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"ecabf5cd-d6ec-4b0c-b0b5-6f7fb2297b83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Begin", "[", "\"\<Shocks`\>\"", "]"}]], "Input",
 CellChangeTimes->{3.891313883957979*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"9bbb6f3f-a98d-4f9c-ad17-544ce59b7b2a"],

Cell[BoxData["\<\"Shocks`\"\>"], "Output",
 CellChangeTimes->{3.895362688751092*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"0f057ac0-a65d-43b4-a61a-81d1927476d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", "\t", 
   RowBox[{
   "Needs", "[", "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\"", "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8899652151465197`*^9, 3.889965235350771*^9}, 
   3.8899652808817787`*^9, {3.889967731242805*^9, 3.8899677356636972`*^9}, {
   3.889967971867523*^9, 3.889967975146998*^9}, {3.889968339451161*^9, 
   3.88996834001075*^9}, 3.889968619774049*^9, {3.8899688826075077`*^9, 
   3.88996888992594*^9}, {3.88996899475625*^9, 3.8899690018858624`*^9}, {
   3.8899691256166267`*^9, 3.8899691257757883`*^9}, {3.889969207667478*^9, 
   3.8899692141700287`*^9}, {3.8899692798779783`*^9, 3.889969288274632*^9}, 
   3.889969387087708*^9, 3.889969585993528*^9, {3.8899702972149563`*^9, 
   3.889970314454108*^9}, 3.8912159556478643`*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"27b72c9c-3767-4dd9-883c-12b885785f0a"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20230610-7XMM72\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20230610-7XMM72"],
  Editable->False]], "Print",
 CellChangeTimes->{3.895362689100456*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"fd42c15a-8ebc-41ba-8af2-6263aacbd020"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.895362689128475*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"c9d6505b-3d06-49bd-a433-733e675d1e32"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Needs @ \"FernandoDuarte`LongRunRisk`Model`Shocks`\"", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = Null, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tNeeds @ \"FernandoDuarte`LongRunRisk`Model`Shocks`\"\n\
\t,\n\tNull\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-7XMM72\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> Null, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.011, "AbsoluteTiming" -> 0.011, 
   "InputString" :> ToString[
     Unevaluated[
      Needs["FernandoDuarte`LongRunRisk`Model`Shocks`"]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-7XMM72\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.8953626891347313`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"d0637161-1a84-4747-bbf9-3c20250dee38"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", "\t", 
   RowBox[{"MemberQ", "[", 
    RowBox[{
    "$ContextPath", ",", "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}],
     "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.889901579125684*^9, {3.889965035911569*^9, 3.889965039550325*^9}, {
   3.889965296152458*^9, 3.889965305191854*^9}, 3.8899653858152437`*^9, 
   3.889967740469187*^9, {3.889968345370779*^9, 3.889968347169169*^9}, {
   3.889968526692542*^9, 3.8899685355316963`*^9}, {3.889968649261517*^9, 
   3.889968660343141*^9}, 3.889969395693264*^9, {3.88996958684683*^9, 
   3.8899695947482367`*^9}, {3.889970300225127*^9, 3.889970329366473*^9}, 
   3.891215962399996*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"565bb1f7-e9c6-4ed3-b28a-a5d567ae3826"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20230610-PJZSVW\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20230610-PJZSVW"],
  Editable->False]], "Print",
 CellChangeTimes->{3.895362689166664*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"e74a89d9-6c2e-4db6-a44b-0eb04962ea0a"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.89536268916796*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"7203910a-b666-4456-8707-914b159d8966"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tMemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-PJZSVW\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      MemberQ[$ContextPath, "FernandoDuarte`LongRunRisk`Model`Shocks`"]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-7XMM72\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-PJZSVW\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.895362689180015*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"469c8097-8e3c-4be5-8d69-81526b2d6a18"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "should", " ", "be", " ", "true", " ", "if", " ", "rulesE", " ", "can", 
     " ", "be", " ", "found"}], "*)"}], "\[IndentingNewLine]", "\t", 
   RowBox[{"Not", "[", 
    RowBox[{
     RowBox[{"Names", "[", "\"\<*rulesE\>\"", "]"}], "===", 
     RowBox[{"{", "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8899706175264597`*^9, 3.889970628972746*^9}, 
   3.889972029349813*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"3ca54cb5-c283-4f3b-8e12-834ba756dc26"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20230610-R3SZX4\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20230610-R3SZX4"],
  Editable->False]], "Print",
 CellChangeTimes->{3.895362689225916*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"65cb2ce0-64b3-44ea-9582-7677b280f00f"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.89536268922749*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"059c31bb-727f-4830-b0df-d3e89060c542"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "!SameQ[Names @ \"*rulesE\", {}]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"Shocks_20230610-R3SZX4\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.021, "AbsoluteTiming" -> 0.021, 
   "InputString" :> ToString[
     Unevaluated[
      Not[Names["*rulesE"] === {}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-7XMM72\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-PJZSVW\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20230610-R3SZX4\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.895362689242385*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"3bda0d18-9683-494b-a38e-ab3924345f82"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"should", " ", "all", " ", "give", " ", "zero"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}], "/.", 
        RowBox[{"rulesE", "[", "t", "]"}]}], "\[IndentingNewLine]", "\t\t", 
       ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
           "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
           "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", "\t", "]"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
         RowBox[{"t", ",", "ii"}], "]"}], "/.", 
        RowBox[{"rulesE", "[", "t", "]"}]}], "\[IndentingNewLine]", "\t\t", 
       ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", "\t", "]"}]}], "\[IndentingNewLine]", "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.889965468632722*^9, 3.889965535681717*^9}, {
   3.889965687921562*^9, 3.889965719041513*^9}, {3.8899657564745703`*^9, 
   3.8899657868805656`*^9}, {3.889965818275572*^9, 3.88996587402346*^9}, {
   3.8899660417909737`*^9, 3.889966042024665*^9}, {3.889967536877624*^9, 
   3.88996754071059*^9}, {3.8899676626847277`*^9, 3.889967663326408*^9}, {
   3.889967743694665*^9, 3.889967744059184*^9}, {3.8899677859095707`*^9, 
   3.8899678081741953`*^9}, {3.8899679955631647`*^9, 3.889968003395926*^9}, {
   3.889969462764024*^9, 3.8899694656136417`*^9}, {3.889969517081333*^9, 
   3.8899695670076637`*^9}, {3.889970354531378*^9, 3.889970361426557*^9}, 
   3.889970446358612*^9, 3.889971586268968*^9, 3.8899720413397284`*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"59480a4b-bd79-4729-a954-787da9c6bd4a"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20230610-LCIGAM\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20230610-LCIGAM"],
  Editable->False]], "Print",
 CellChangeTimes->{3.895362689277725*^9},
 CellLabel->
  "During evaluation of \
In[14]:=",ExpressionUUID->"60a9e712-af9f-4300-8be8-7a053063f003"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.895362689279015*^9},
 CellLabel->
  "During evaluation of \
In[14]:=",ExpressionUUID->"ab71d870-1d03-480e-a5e5-27c6aaa24022"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "{\n\t\tTable[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`\
t] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\
\t{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t}", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = {{0, 0, 0, 
   0, 0, 0, 0, 0}, {0, 0, 0}}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\t{\n\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`f, {\
\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\
\tTable[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\
\t{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, \
0, 0, 0, 0, 0},\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-LCIGAM\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> {{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0}}, "Success" -> True, 
   "FailureType" -> None, "OutputLog" -> {}, "Messages" -> {}, 
   "MessagesText" -> {}, "MessagesExpressions" -> {}, "Timing" -> 0., 
   "AbsoluteTiming" -> 0., "InputString" :> ToString[
     Unevaluated[{
       Table[
        ReplaceAll[
         FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t], 
         FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
        Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
       Table[
        ReplaceAll[
         FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
         Shocks`t, Shocks`ii], 
         FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
        Shocks`ii, {1, Shocks`i, Shocks`j}}]}], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-7XMM72\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-PJZSVW\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20230610-R3SZX4\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`f, {\
\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\
\tTable[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\
\t{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, \
0, 0, 0, 0, 0},\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-LCIGAM\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.895362689291811*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"321916d4-c944-4a49-9a55-8d412ee4381d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"should", " ", "all", " ", "give", " ", "one"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}], "^", "2"}], "/.", 
        RowBox[{"rulesE", "[", "t", "]"}]}], "\[IndentingNewLine]", "\t\t", 
       ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
           "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
           "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", "\t", "]"}], "\[IndentingNewLine]", "\t", ",", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
          RowBox[{"t", ",", "ii"}], "]"}], "^", "2"}], "/.", 
        RowBox[{"rulesE", "[", "t", "]"}]}], "\[IndentingNewLine]", "\t\t", 
       ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", "\t", "]"}]}], "\[IndentingNewLine]", "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.889966121134981*^9, 3.889966129513671*^9}, {
  3.8899675430265427`*^9, 3.889967546703742*^9}, {3.889967666639736*^9, 
  3.8899676668939447`*^9}, {3.889967746374608*^9, 3.889967746668034*^9}, {
  3.88996781333914*^9, 3.8899678201195583`*^9}, {3.88996801609513*^9, 
  3.88996801967063*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"47f4c0e3-a3cf-4b90-9890-6fdd8e20e5d0"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20230610-B7YF3O\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20230610-B7YF3O"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8953626893427067`*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"43add517-0775-49fa-8076-3b50596b5db4"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.895362689343978*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"81b70c89-0256-4e96-a780-5831e0c8d0a9"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "{\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`\
t] ^ 2) /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = {{1, 1, 1, 
   1, 1, 1, 1, 1}, {1, 1, 1}}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 2) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{1, 1, 1, 1, 1, 1, 1, 1},\
\n\t\t{1, 1, 1}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-B7YF3O\"\n]\
\n\n", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> {{1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 1}}, "Success" -> True, 
   "FailureType" -> None, "OutputLog" -> {}, "Messages" -> {}, 
   "MessagesText" -> {}, "MessagesExpressions" -> {}, "Timing" -> 
   0.026000000000000002`, "AbsoluteTiming" -> 0.026000000000000002`, 
   "InputString" :> ToString[
     Unevaluated[{
       Table[
        ReplaceAll[
        FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t]^2, 
         FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
        Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
       Table[
        ReplaceAll[
        FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
          Shocks`t, Shocks`ii]^2, 
         FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
        Shocks`ii, {1, Shocks`i, Shocks`j}}]}], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-7XMM72\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-PJZSVW\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20230610-R3SZX4\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`f, {\
\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\
\tTable[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\
\t{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, \
0, 0, 0, 0, 0},\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-LCIGAM\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 2) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{1, 1, 1, 1, 1, 1, 1, 1},\
\n\t\t{1, 1, 1}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-B7YF3O\"\n]\
\n\n\nEndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.895362689358749*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"5e44b615-7a56-4ede-a7be-751c6dac1885"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"should", " ", "all", " ", "give", " ", "zero"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}], "^", "3"}], "/.", 
        RowBox[{"rulesE", "[", "t", "]"}]}], "\[IndentingNewLine]", "\t\t", 
       ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
           "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
           "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", "\t", "]"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
          RowBox[{"t", ",", "ii"}], "]"}], "^", "3"}], "/.", 
        RowBox[{"rulesE", "[", "t", "]"}]}], "\[IndentingNewLine]", "\t\t", 
       ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", "\t", "]"}]}], "\[IndentingNewLine]", "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.889966137593294*^9, 3.889966157676291*^9}, {
  3.8899675483847713`*^9, 3.889967551583518*^9}, {3.8899676691600733`*^9, 
  3.889967669364262*^9}, {3.889967748725914*^9, 3.889967749007223*^9}, {
  3.889967825028019*^9, 3.8899678304574842`*^9}, {3.889968028194545*^9, 
  3.889968031839179*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"8f45a60c-12d1-47b3-95b3-29eeef517d37"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20230610-5O0ERJ\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20230610-5O0ERJ"],
  Editable->False]], "Print",
 CellChangeTimes->{3.895362689394671*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"dc1d4f46-188a-4478-8303-74268cc6639b"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.8953626893959627`*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"55da281d-5d54-4939-9694-5b708cc0351d"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "{\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`\
t] ^ 3) /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = {{0, 0, 0, 
   0, 0, 0, 0, 0}, {0, 0, 0}}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 3) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, 0, 0, 0, 0, 0},\
\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-5O0ERJ\"\n]\
\n\n", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> {{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0}}, "Success" -> True, 
   "FailureType" -> None, "OutputLog" -> {}, "Messages" -> {}, 
   "MessagesText" -> {}, "MessagesExpressions" -> {}, "Timing" -> 0.003, 
   "AbsoluteTiming" -> 0.003, "InputString" :> ToString[
     Unevaluated[{
       Table[
        ReplaceAll[
        FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t]^3, 
         FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
        Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
       Table[
        ReplaceAll[
        FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
          Shocks`t, Shocks`ii]^3, 
         FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
        Shocks`ii, {1, Shocks`i, Shocks`j}}]}], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-7XMM72\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-PJZSVW\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20230610-R3SZX4\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`f, {\
\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\
\tTable[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\
\t{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, \
0, 0, 0, 0, 0},\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-LCIGAM\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 2) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{1, 1, 1, 1, 1, 1, 1, 1},\
\n\t\t{1, 1, 1}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-B7YF3O\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 3) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, 0, 0, 0, 0, 0},\
\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-5O0ERJ\"\n]\
\n\n\nEndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.895362689408703*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"34b9e1b9-d67c-4f34-9fdc-06bf6ca04b1a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"should", " ", "all", " ", "give", " ", "three"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}], "^", "4"}], "/.", 
        RowBox[{"rulesE", "[", "t", "]"}]}], "\[IndentingNewLine]", "\t\t", 
       ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
           "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
           "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", "\t", "]"}], "\[IndentingNewLine]", "\t", ",", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
          RowBox[{"t", ",", "ii"}], "]"}], "^", "4"}], "/.", 
        RowBox[{"rulesE", "[", "t", "]"}]}], "\[IndentingNewLine]", "\t\t", 
       ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", "\t", "]"}]}], "\[IndentingNewLine]", "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.8899661404752703`*^9, 3.889966162544742*^9}, {
  3.88996755330625*^9, 3.8899675539045153`*^9}, {3.8899676717688217`*^9, 
  3.889967672005005*^9}, {3.88996775093589*^9, 3.8899677512290583`*^9}, {
  3.889967834057867*^9, 3.88996783977798*^9}, {3.889968042239496*^9, 
  3.889968052278575*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"34c5906b-b701-4e99-ac6d-68e658cecc0f"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20230610-6K6OZX\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20230610-6K6OZX"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8953626894454327`*^9},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"3755a6a6-3b0a-4aec-90b8-92c070e6c359"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.895362689447051*^9},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"d6442270-8d8f-4a54-955e-53e243dd76ea"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "{\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`\
t] ^ 4) /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = {{3, 3, 3, 
   3, 3, 3, 3, 3}, {3, 3, 3}}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 4) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{3, 3, 3, 3, 3, 3, 3, 3},\
\n\t\t{3, 3, 3}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-6K6OZX\"\n]\
\n\n", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> {{3, 3, 3, 3, 3, 3, 3, 3}, {3, 3, 3}}, "Success" -> True, 
   "FailureType" -> None, "OutputLog" -> {}, "Messages" -> {}, 
   "MessagesText" -> {}, "MessagesExpressions" -> {}, "Timing" -> 0.003, 
   "AbsoluteTiming" -> 0.003, "InputString" :> ToString[
     Unevaluated[{
       Table[
        ReplaceAll[
        FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t]^4, 
         FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
        Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
       Table[
        ReplaceAll[
        FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
          Shocks`t, Shocks`ii]^4, 
         FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
        Shocks`ii, {1, Shocks`i, Shocks`j}}]}], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-7XMM72\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-PJZSVW\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20230610-R3SZX4\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`f, {\
\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\
\tTable[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\
\t{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, \
0, 0, 0, 0, 0},\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-LCIGAM\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 2) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{1, 1, 1, 1, 1, 1, 1, 1},\
\n\t\t{1, 1, 1}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-B7YF3O\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 3) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, 0, 0, 0, 0, 0},\
\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-5O0ERJ\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 4) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{3, 3, 3, 3, 3, 3, 3, 3},\
\n\t\t{3, 3, 3}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-6K6OZX\"\n]\
\n\n\nEndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.895362689460182*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"31d8af40-7aaa-430f-a508-732ae0b0e6e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"should", " ", "all", " ", "give", " ", "zero"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"f", "===", "g"}], ",", "0", ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}], "*", 
           RowBox[{
            RowBox[{"eps", "[", "g", "]"}], "[", "t", "]"}]}], "/.", 
          RowBox[{"rulesE", "[", "t", "]"}]}]}], "]"}], "\[IndentingNewLine]",
        "\t\t", ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
           "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
           "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}], 
       "\[IndentingNewLine]", "\t\t", ",", 
       RowBox[{"{", 
        RowBox[{"g", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
           "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
           "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", "\t", "]"}], "\[IndentingNewLine]", "\t", ",", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
          RowBox[{"t", ",", "ii"}], "]"}], "*", 
         RowBox[{
          RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}]}], "/.", 
        RowBox[{"rulesE", "[", "t", "]"}]}], "\[IndentingNewLine]", "\t\t", 
       ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}], 
       "\[IndentingNewLine]", "\t\t", ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<x\>\"", ",", "\"\<pi\>\"", ",", "\"\<pibar\>\"", ",", 
           "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", "\"\<sc\>\"", ",", 
           "\"\<sp\>\""}], "}"}]}], "}"}]}], "\[IndentingNewLine]", "\t", 
      "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.889966171785048*^9, 3.889966259267709*^9}, {
  3.88996755849631*^9, 3.889967559615136*^9}, {3.8899676744105577`*^9, 
  3.8899676746563673`*^9}, {3.889967753296865*^9, 3.8899677536392727`*^9}, {
  3.889967845814172*^9, 3.889967850648691*^9}, {3.8899680615384283`*^9, 
  3.889968069633069*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"ac65904e-36a9-4c48-8329-9424b41234c5"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20230610-8KJ8DP\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20230610-8KJ8DP"],
  Editable->False]], "Print",
 CellChangeTimes->{3.895362689495479*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"7636729e-2280-4cca-8e62-780f57bbf351"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.89536268950885*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"2baf7a58-8676-41d8-ad63-320cd1fe516a"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "{\n\t\tTable[\n\t\t\tIf[SameQ[Shocks`f, Shocks`g],\n\t\t\t\t0,\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]\n\t\t\t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}},\n\t\t\t{Shocks`g, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`ii, {1, Shocks`i, Shocks`j}},\n\t\t\t{Shocks`f, {\"x\", \"pi\", \
\"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t]\n\t}", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = {{{0, 0, 0, 
   0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0}, {
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0}}}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\t{\n\t\tTable[\n\t\t\tIf[SameQ[Shocks`f, Shocks`g],\n\t\
\t\t\t0,\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]\n\t\t\t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}},\n\t\t\t{Shocks`g, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`ii, {1, Shocks`i, Shocks`j}},\n\t\t\t{Shocks`f, {\"x\", \"pi\", \
\"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{\n\t\t\
\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, \
0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, \
0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t\
{0, 0, 0, 0, 0, 0, 0, 0}\n\t\t},\n\t\t{\n\t\t\t{0, 0, 0, 0, 0, 0, 0},\n\t\t\t\
{0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0}\n\t\t}\n\t}\n\t,\n\t{}\n\t\
,\n\tTestID->\"Shocks_20230610-8KJ8DP\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> {{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 
     0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 
     0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 
     0}}, {{0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
     0}}}, "Success" -> True, "FailureType" -> None, "OutputLog" -> {}, 
   "Messages" -> {}, "MessagesText" -> {}, "MessagesExpressions" -> {}, 
   "Timing" -> 0.002, "AbsoluteTiming" -> 0.002, "InputString" :> ToString[
     Unevaluated[{
       Table[
        If[Shocks`f === Shocks`g, 0, 
         ReplaceAll[
         FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] 
          FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][Shocks`t], 
          FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]]], {
        Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}, {
        Shocks`g, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
       Table[
        ReplaceAll[
        FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][Shocks`t, Shocks`ii]
           FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t], 
         FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
        Shocks`ii, {1, Shocks`i, Shocks`j}}, {
        Shocks`f, {"x", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-7XMM72\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-PJZSVW\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20230610-R3SZX4\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`f, {\
\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\
\tTable[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\
\t{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, \
0, 0, 0, 0, 0},\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-LCIGAM\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 2) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{1, 1, 1, 1, 1, 1, 1, 1},\
\n\t\t{1, 1, 1}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-B7YF3O\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 3) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, 0, 0, 0, 0, 0},\
\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-5O0ERJ\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 4) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{3, 3, 3, 3, 3, 3, 3, 3},\
\n\t\t{3, 3, 3}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-6K6OZX\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\tTable[\n\t\t\tIf[SameQ[Shocks`f, Shocks`g],\
\n\t\t\t\t0,\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]\n\t\t\t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}},\n\t\t\t{Shocks`g, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`ii, {1, Shocks`i, Shocks`j}},\n\t\t\t{Shocks`f, {\"x\", \"pi\", \
\"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{\n\t\t\
\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, \
0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, \
0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t\
{0, 0, 0, 0, 0, 0, 0, 0}\n\t\t},\n\t\t{\n\t\t\t{0, 0, 0, 0, 0, 0, 0},\n\t\t\t\
{0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0}\n\t\t}\n\t}\n\t,\n\t{}\n\t\
,\n\tTestID->\"Shocks_20230610-8KJ8DP\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.8953626895151176`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"e9b89878-ab66-4851-81b9-c97293111b27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"should", " ", "all", " ", "give", " ", 
     RowBox[{"taugd", "[", "ii", "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"StringDelete", "[", 
      RowBox[{"#", ",", 
       RowBox[{
        RowBox[{"\"\<FernandoDuarte\>\"", "|", "\"\<`\>\""}], "~~", "__", 
        "~~", "\"\<`\>\""}]}], "]"}], "&"}], "/@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ToString", "@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
           RowBox[{"t", ",", "ii"}], "]"}], "*", 
          RowBox[{
           RowBox[{"eps", "[", "\"\<dc\>\"", "]"}], "[", "t", "]"}]}], "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.889966276655841*^9, 3.889966329628468*^9}, 
   3.889966470569511*^9, {3.8899666206897087`*^9, 3.889966642167533*^9}, {
   3.8899666930281763`*^9, 3.889966714268526*^9}, {3.889966746437366*^9, 
   3.8899668192799807`*^9}, 3.889966968372637*^9, {3.8899676779101973`*^9, 
   3.889967678143958*^9}, {3.8899677558359327`*^9, 3.889967756159708*^9}, {
   3.8899678548486967`*^9, 3.88996786321723*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"8425dca0-fd15-42a1-8e6b-e6fb544a45b1"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20230610-Z8UMT4\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20230610-Z8UMT4"],
  Editable->False]], "Print",
 CellChangeTimes->{3.895362689550497*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"2979722d-86d3-45d8-9115-99d2c3f693ed"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.8953626895559397`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"d10bfea9-2eee-4641-b340-7d288710d372"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Map[\n\t\tFunction[\n\t\t\tStringDelete[#, \
StringExpression[\"FernandoDuarte\" | \"`\", __, \"`\"]]\n\t\t],\n\t\t\
Table[ToString[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]],\n\t\t\t\
{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = {
  "taugd[1]", "taugd[i]", "taugd[j]"}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tMap[\n\t\tFunction[\n\t\t\tStringDelete[#, \
StringExpression[\"FernandoDuarte\" | \"`\", __, \"`\"]]\n\t\t],\n\t\t\
Table[ToString[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]],\n\t\t\t\
{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t]\n\t,\n\t{\"taugd[1]\", \
\"taugd[i]\", \"taugd[j]\"}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-Z8UMT4\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> {"taugd[1]", "taugd[i]", "taugd[j]"}, "Success" -> True, 
   "FailureType" -> None, "OutputLog" -> {}, "Messages" -> {}, 
   "MessagesText" -> {}, "MessagesExpressions" -> {}, "Timing" -> 0., 
   "AbsoluteTiming" -> 0., "InputString" :> ToString[
     Unevaluated[
      Map[StringDelete[#, 
        StringExpression[
         Alternatives["FernandoDuarte", "`"], 
         BlankSequence[], "`"]]& , 
       Table[
        ToString[
         ReplaceAll[
         FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
           Shocks`t, Shocks`ii] 
          FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][Shocks`t], 
          FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]]], {
        Shocks`ii, {1, Shocks`i, Shocks`j}}]]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-7XMM72\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-PJZSVW\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20230610-R3SZX4\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`f, {\
\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\
\tTable[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\
\t{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, \
0, 0, 0, 0, 0},\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-LCIGAM\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 2) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{1, 1, 1, 1, 1, 1, 1, 1},\
\n\t\t{1, 1, 1}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-B7YF3O\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 3) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, 0, 0, 0, 0, 0},\
\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-5O0ERJ\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 4) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{3, 3, 3, 3, 3, 3, 3, 3},\
\n\t\t{3, 3, 3}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-6K6OZX\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\tTable[\n\t\t\tIf[SameQ[Shocks`f, Shocks`g],\
\n\t\t\t\t0,\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]\n\t\t\t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}},\n\t\t\t{Shocks`g, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`ii, {1, Shocks`i, Shocks`j}},\n\t\t\t{Shocks`f, {\"x\", \"pi\", \
\"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{\n\t\t\
\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, \
0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, \
0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t\
{0, 0, 0, 0, 0, 0, 0, 0}\n\t\t},\n\t\t{\n\t\t\t{0, 0, 0, 0, 0, 0, 0},\n\t\t\t\
{0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0}\n\t\t}\n\t}\n\t,\n\t{}\n\t\
,\n\tTestID->\"Shocks_20230610-8KJ8DP\"\n]\n\n\nVerificationTest[\n\tMap[\n\t\
\tFunction[\n\t\t\tStringDelete[#, StringExpression[\"FernandoDuarte\" | \
\"`\", __, \"`\"]]\n\t\t],\n\t\t\
Table[ToString[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]],\n\t\t\t\
{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t]\n\t,\n\t{\"taugd[1]\", \
\"taugd[i]\", \"taugd[j]\"}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-Z8UMT4\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.8953626895660686`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"bd56cbda-8feb-45a3-a712-226ce3c6206b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"should", " ", "all", " ", "give", " ", "three"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}], "^", "4"}], "/.", 
        RowBox[{"rulesE", "[", "t", "]"}]}], "\[IndentingNewLine]", "\t\t", 
       ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
           "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
           "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", "\t", "]"}], "\[IndentingNewLine]", "\t", ",", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
          RowBox[{"t", ",", "ii"}], "]"}], "^", "4"}], "/.", 
        RowBox[{"rulesE", "[", "t", "]"}]}], "\[IndentingNewLine]", "\t\t", 
       ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", "\t", "]"}]}], "\[IndentingNewLine]", "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.889966177455817*^9, 3.889966177853951*^9}, {
  3.889966992360574*^9, 3.889966992849523*^9}, {3.8899675664876623`*^9, 
  3.889967570401917*^9}, {3.889967680488591*^9, 3.88996768073554*^9}, {
  3.889967758125637*^9, 3.889967758450981*^9}, {3.88996786680688*^9, 
  3.889967871147208*^9}, {3.8899681073226833`*^9, 3.889968110849965*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"c7178cc4-faa6-4799-b297-497d10856f43"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20230610-DQXRBH\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20230610-DQXRBH"],
  Editable->False]], "Print",
 CellChangeTimes->{3.895362689603701*^9},
 CellLabel->
  "During evaluation of \
In[20]:=",ExpressionUUID->"e87e7613-3654-413b-9829-9b1a79912327"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.89536268961591*^9},
 CellLabel->
  "During evaluation of \
In[20]:=",ExpressionUUID->"e9ecc716-0b84-415c-9d40-68ba1f716819"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "{\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`\
t] ^ 4) /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = {{3, 3, 3, 
   3, 3, 3, 3, 3}, {3, 3, 3}}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 4) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{3, 3, 3, 3, 3, 3, 3, 3},\
\n\t\t{3, 3, 3}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-DQXRBH\"\n]\
\n\n", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> {{3, 3, 3, 3, 3, 3, 3, 3}, {3, 3, 3}}, "Success" -> True, 
   "FailureType" -> None, "OutputLog" -> {}, "Messages" -> {}, 
   "MessagesText" -> {}, "MessagesExpressions" -> {}, "Timing" -> 0.003, 
   "AbsoluteTiming" -> 0.003, "InputString" :> ToString[
     Unevaluated[{
       Table[
        ReplaceAll[
        FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t]^4, 
         FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
        Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
       Table[
        ReplaceAll[
        FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
          Shocks`t, Shocks`ii]^4, 
         FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
        Shocks`ii, {1, Shocks`i, Shocks`j}}]}], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-7XMM72\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-PJZSVW\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20230610-R3SZX4\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`f, {\
\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\
\tTable[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\
\t{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, \
0, 0, 0, 0, 0},\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-LCIGAM\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 2) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{1, 1, 1, 1, 1, 1, 1, 1},\
\n\t\t{1, 1, 1}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-B7YF3O\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 3) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, 0, 0, 0, 0, 0},\
\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-5O0ERJ\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 4) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{3, 3, 3, 3, 3, 3, 3, 3},\
\n\t\t{3, 3, 3}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-6K6OZX\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\tTable[\n\t\t\tIf[SameQ[Shocks`f, Shocks`g],\
\n\t\t\t\t0,\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]\n\t\t\t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}},\n\t\t\t{Shocks`g, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`ii, {1, Shocks`i, Shocks`j}},\n\t\t\t{Shocks`f, {\"x\", \"pi\", \
\"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{\n\t\t\
\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, \
0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, \
0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t\
{0, 0, 0, 0, 0, 0, 0, 0}\n\t\t},\n\t\t{\n\t\t\t{0, 0, 0, 0, 0, 0, 0},\n\t\t\t\
{0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0}\n\t\t}\n\t}\n\t,\n\t{}\n\t\
,\n\tTestID->\"Shocks_20230610-8KJ8DP\"\n]\n\n\nVerificationTest[\n\tMap[\n\t\
\tFunction[\n\t\t\tStringDelete[#, StringExpression[\"FernandoDuarte\" | \
\"`\", __, \"`\"]]\n\t\t],\n\t\t\
Table[ToString[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]],\n\t\t\t\
{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t]\n\t,\n\t{\"taugd[1]\", \
\"taugd[i]\", \"taugd[j]\"}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-Z8UMT4\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 4) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{3, 3, 3, 3, 3, 3, 3, 3},\
\n\t\t{3, 3, 3}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-DQXRBH\"\n]\
\n\n\nEndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.895362689620613*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"23810a74-65e9-40ad-af31-cb5dddbc3a1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"should", " ", "all", " ", "give", " ", "zero"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"f", "===", "g"}], ",", "0", ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}], "^", "2"}], "*", 
           RowBox[{
            RowBox[{"eps", "[", "g", "]"}], "[", "t", "]"}]}], "/.", 
          RowBox[{"rulesE", "[", "t", "]"}]}]}], "]"}], "\[IndentingNewLine]",
        "\t\t", ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
           "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
           "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}], 
       "\[IndentingNewLine]", "\t\t", ",", 
       RowBox[{"{", 
        RowBox[{"g", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
           "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
           "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", "\t", "]"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
           RowBox[{"t", ",", "ii"}], "]"}], "^", "2"}], "*", 
         RowBox[{
          RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}]}], "/.", 
        RowBox[{"rulesE", "[", "t", "]"}]}], "\[IndentingNewLine]", "\t\t", 
       ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}], 
       "\[IndentingNewLine]", "\t\t", ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<x\>\"", ",", "\"\<pi\>\"", ",", "\"\<pibar\>\"", ",", 
           "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", "\"\<sc\>\"", ",", 
           "\"\<sp\>\""}], "}"}]}], "}"}]}], "\[IndentingNewLine]", "\t", 
      "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.8899675877972183`*^9, 3.889967602226403*^9}, {
  3.889967682858871*^9, 3.8899676830660887`*^9}, {3.889967760636098*^9, 
  3.889967760939219*^9}, {3.889967873898391*^9, 3.8899678791078978`*^9}, {
  3.8899681168408318`*^9, 3.8899681204301453`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"6c9f977c-c7f8-4829-9121-f90a2c87c257"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20230610-S35S1M\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20230610-S35S1M"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8953626896668262`*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"70b78825-04cf-4f35-a65c-8f9f9fbb6516"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.895362689668298*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"fe2497e0-69c0-45c4-958c-1a7c407a1b69"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "{\n\t\tTable[\n\t\t\tIf[SameQ[Shocks`f, Shocks`g],\n\t\t\t\t0,\n\t\t\t\t\
((FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 2) * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]\n\t\t\t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}},\n\t\t\t{Shocks`g, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\t\
Table[((FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] ^ 2) * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}},\n\t\t\t{Shocks`f, {\"x\", \"pi\", \"pibar\", \
\"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t]\n\t}", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = {{{0, 0, 0, 
   0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0}, {
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0}}}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\t{\n\t\tTable[\n\t\t\tIf[SameQ[Shocks`f, Shocks`g],\n\t\
\t\t\t0,\n\t\t\t\t\
((FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 2) * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]\n\t\t\t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}},\n\t\t\t{Shocks`g, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\t\
Table[((FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] ^ 2) * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}},\n\t\t\t{Shocks`f, {\"x\", \"pi\", \"pibar\", \
\"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{\n\t\t\t{0, 0, \
0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, \
0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\
\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, \
0, 0, 0, 0, 0}\n\t\t},\n\t\t{\n\t\t\t{0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, \
0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0}\n\t\t}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-S35S1M\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> {{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 
     0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 
     0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 
     0}}, {{0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
     0}}}, "Success" -> True, "FailureType" -> None, "OutputLog" -> {}, 
   "Messages" -> {}, "MessagesText" -> {}, "MessagesExpressions" -> {}, 
   "Timing" -> 0.022, "AbsoluteTiming" -> 0.021, "InputString" :> ToString[
     Unevaluated[{
       Table[
        If[Shocks`f === Shocks`g, 0, 
         ReplaceAll[
         FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t]^2 
          FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][Shocks`t], 
          FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]]], {
        Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}, {
        Shocks`g, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
       Table[
        ReplaceAll[
        FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
           Shocks`t, Shocks`ii]^2 
         FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t], 
         FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
        Shocks`ii, {1, Shocks`i, Shocks`j}}, {
        Shocks`f, {"x", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-7XMM72\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-PJZSVW\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20230610-R3SZX4\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`f, {\
\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\
\tTable[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\
\t{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, \
0, 0, 0, 0, 0},\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-LCIGAM\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 2) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{1, 1, 1, 1, 1, 1, 1, 1},\
\n\t\t{1, 1, 1}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-B7YF3O\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 3) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, 0, 0, 0, 0, 0},\
\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-5O0ERJ\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 4) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{3, 3, 3, 3, 3, 3, 3, 3},\
\n\t\t{3, 3, 3}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-6K6OZX\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\tTable[\n\t\t\tIf[SameQ[Shocks`f, Shocks`g],\
\n\t\t\t\t0,\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]\n\t\t\t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}},\n\t\t\t{Shocks`g, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`ii, {1, Shocks`i, Shocks`j}},\n\t\t\t{Shocks`f, {\"x\", \"pi\", \
\"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{\n\t\t\
\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, \
0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, \
0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t\
{0, 0, 0, 0, 0, 0, 0, 0}\n\t\t},\n\t\t{\n\t\t\t{0, 0, 0, 0, 0, 0, 0},\n\t\t\t\
{0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0}\n\t\t}\n\t}\n\t,\n\t{}\n\t\
,\n\tTestID->\"Shocks_20230610-8KJ8DP\"\n]\n\n\nVerificationTest[\n\tMap[\n\t\
\tFunction[\n\t\t\tStringDelete[#, StringExpression[\"FernandoDuarte\" | \
\"`\", __, \"`\"]]\n\t\t],\n\t\t\
Table[ToString[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]],\n\t\t\t\
{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t]\n\t,\n\t{\"taugd[1]\", \
\"taugd[i]\", \"taugd[j]\"}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-Z8UMT4\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 4) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{3, 3, 3, 3, 3, 3, 3, 3},\
\n\t\t{3, 3, 3}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-DQXRBH\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\tTable[\n\t\t\tIf[SameQ[Shocks`f, Shocks`g],\
\n\t\t\t\t0,\n\t\t\t\t\
((FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 2) * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]\n\t\t\t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}},\n\t\t\t{Shocks`g, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\t\
Table[((FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] ^ 2) * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}},\n\t\t\t{Shocks`f, {\"x\", \"pi\", \"pibar\", \
\"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{\n\t\t\t{0, 0, \
0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, \
0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\
\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, \
0, 0, 0, 0, 0}\n\t\t},\n\t\t{\n\t\t\t{0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, \
0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0}\n\t\t}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-S35S1M\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.8953626896821737`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"8363fd9d-a4d6-46b0-984c-c17f0ece25e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"should", " ", "all", " ", "return", " ", "true"}], ",", " ", 
     RowBox[{
     "confirming", " ", "that", " ", "rulesE", " ", "returns", " ", "same", 
      " ", "expression", " ", "unevaluated"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"expr", "/.", 
          RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "expr"}], 
       "\[IndentingNewLine]", "\t\t", ",", 
       RowBox[{"{", 
        RowBox[{"expr", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"eps", "[", "f", "]"}], "[", 
            RowBox[{"t", "+", "1"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"f", ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
               "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
               "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], "]"}]}], 
        "}"}]}], "\[IndentingNewLine]", "\t", "]"}], "\[IndentingNewLine]", 
     "\t", ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"expr", "/.", 
          RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "expr"}], 
       "\[IndentingNewLine]", "\t\t", ",", 
       RowBox[{"{", 
        RowBox[{"expr", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"eps", "[", 
             RowBox[{"ToExpression", "@", "f"}], "]"}], "[", "t", "]"}], ",", 
           
           RowBox[{"{", 
            RowBox[{"f", ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
               "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
               "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], "]"}]}], 
        "}"}]}], "\[IndentingNewLine]", "\t", "]"}], "\[IndentingNewLine]", 
     "\t", ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"expr", "/.", 
          RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "expr"}], 
       "\[IndentingNewLine]", "\t\t", ",", 
       RowBox[{"{", 
        RowBox[{"expr", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
            RowBox[{
             RowBox[{"t", "+", "1"}], ",", "i"}], "]"}], ",", 
           RowBox[{
            RowBox[{"eps", "[", "dd", "]"}], "[", 
            RowBox[{"t", ",", "i"}], "]"}]}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", "\t", "]"}]}], "\[IndentingNewLine]", "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.889965468632722*^9, 3.889965535681717*^9}, {
  3.889965687921562*^9, 3.889965748623394*^9}, {3.889965898517263*^9, 
  3.889965927180188*^9}, {3.8899670123313913`*^9, 3.889967110342752*^9}, {
  3.889967191054615*^9, 3.889967303783434*^9}, {3.8899676854688587`*^9, 
  3.88996768572717*^9}, {3.889967763265728*^9, 3.889967763628764*^9}, {
  3.889967883379265*^9, 3.889967894944208*^9}, {3.889968130363205*^9, 
  3.889968136461113*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"e65fd894-d9b6-444c-a52d-afb666f1e5bc"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20230610-EHYH2J\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20230610-EHYH2J"],
  Editable->False]], "Print",
 CellChangeTimes->{3.895362689720044*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"31e10b45-a896-47d6-a28b-d9d0d24a832f"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.8953626897256193`*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"28db4baa-ad71-4daf-9124-9902fe1453d2"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "{\n\t\tTable[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t + 1],\n\t\
\t\t\t\t{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTable[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[ToExpression @ \
Shocks`f][Shocks`t],\n\t\t\t\t\t{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \
\"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\
Table[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t + 1, Shocks`i], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`dd][Shocks`t, Shocks`i]}\n\
\t\t\t}\n\t\t]\n\t}", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = {{
   True, True, True, True, True, True, True, True}, {
   True, True, True, True, True, True, True, True}, {True, True}}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\t{\n\t\tTable[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t + 1],\n\t\
\t\t\t\t{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTable[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[ToExpression @ \
Shocks`f][Shocks`t],\n\t\t\t\t\t{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \
\"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\
Table[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t + 1, Shocks`i], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`dd][Shocks`t, Shocks`i]}\n\
\t\t\t}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{True, True, True, True, True, True, True, \
True},\n\t\t{True, True, True, True, True, True, True, True},\n\t\t{True, \
True}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-EHYH2J\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> {{True, True, True, True, True, True, True, True}, {
     True, True, True, True, True, True, True, True}, {True, True}}, 
   "Success" -> True, "FailureType" -> None, "OutputLog" -> {}, 
   "Messages" -> {}, "MessagesText" -> {}, "MessagesExpressions" -> {}, 
   "Timing" -> 0., "AbsoluteTiming" -> 0., "InputString" :> ToString[
     Unevaluated[{
       Table[ReplaceAll[Shocks`expr, 
          FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
        Shocks`expr, {Shocks`expr, 
         Table[
          FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][
          Shocks`t + 1], {
          Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
       Table[ReplaceAll[Shocks`expr, 
          FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
        Shocks`expr, {Shocks`expr, 
         Table[
          FernandoDuarte`LongRunRisk`Model`Shocks`eps[
           ToExpression[Shocks`f]][Shocks`t], {
          Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
       Table[ReplaceAll[Shocks`expr, 
          FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
        Shocks`expr, {Shocks`expr, {
          FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
          Shocks`t + 1, Shocks`i], 
          FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`dd][
          Shocks`t, Shocks`i]}}]}], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-7XMM72\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-PJZSVW\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20230610-R3SZX4\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`f, {\
\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\
\tTable[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\
\t{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, \
0, 0, 0, 0, 0},\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-LCIGAM\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 2) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{1, 1, 1, 1, 1, 1, 1, 1},\
\n\t\t{1, 1, 1}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-B7YF3O\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 3) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, 0, 0, 0, 0, 0},\
\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-5O0ERJ\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 4) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{3, 3, 3, 3, 3, 3, 3, 3},\
\n\t\t{3, 3, 3}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-6K6OZX\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\tTable[\n\t\t\tIf[SameQ[Shocks`f, Shocks`g],\
\n\t\t\t\t0,\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]\n\t\t\t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}},\n\t\t\t{Shocks`g, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`ii, {1, Shocks`i, Shocks`j}},\n\t\t\t{Shocks`f, {\"x\", \"pi\", \
\"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{\n\t\t\
\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, \
0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, \
0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t\
{0, 0, 0, 0, 0, 0, 0, 0}\n\t\t},\n\t\t{\n\t\t\t{0, 0, 0, 0, 0, 0, 0},\n\t\t\t\
{0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0}\n\t\t}\n\t}\n\t,\n\t{}\n\t\
,\n\tTestID->\"Shocks_20230610-8KJ8DP\"\n]\n\n\nVerificationTest[\n\tMap[\n\t\
\tFunction[\n\t\t\tStringDelete[#, StringExpression[\"FernandoDuarte\" | \
\"`\", __, \"`\"]]\n\t\t],\n\t\t\
Table[ToString[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]],\n\t\t\t\
{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t]\n\t,\n\t{\"taugd[1]\", \
\"taugd[i]\", \"taugd[j]\"}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-Z8UMT4\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 4) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{3, 3, 3, 3, 3, 3, 3, 3},\
\n\t\t{3, 3, 3}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-DQXRBH\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\tTable[\n\t\t\tIf[SameQ[Shocks`f, Shocks`g],\
\n\t\t\t\t0,\n\t\t\t\t\
((FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 2) * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]\n\t\t\t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}},\n\t\t\t{Shocks`g, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\t\
Table[((FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] ^ 2) * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}},\n\t\t\t{Shocks`f, {\"x\", \"pi\", \"pibar\", \
\"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{\n\t\t\t{0, 0, \
0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, \
0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\
\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, \
0, 0, 0, 0, 0}\n\t\t},\n\t\t{\n\t\t\t{0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, \
0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0}\n\t\t}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-S35S1M\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t + 1],\n\t\
\t\t\t\t{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTable[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[ToExpression @ \
Shocks`f][Shocks`t],\n\t\t\t\t\t{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \
\"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\
Table[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t + 1, Shocks`i], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`dd][Shocks`t, Shocks`i]}\n\
\t\t\t}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{True, True, True, True, True, True, True, \
True},\n\t\t{True, True, True, True, True, True, True, True},\n\t\t{True, \
True}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-EHYH2J\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.895362689738042*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"b00827df-d274-400b-a591-fb467b6cdc63"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"should", " ", "all", " ", "return", " ", "true"}], ",", " ", 
     RowBox[{
     "confirming", " ", "that", " ", "rulesE", " ", "returns", " ", "same", 
      " ", "expression", " ", "unevaluated"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"expr", "/.", 
          RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "expr"}], 
       "\[IndentingNewLine]", "\t\t", ",", 
       RowBox[{"{", 
        RowBox[{"expr", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"eps", "[", "f", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"f", ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
               "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
               "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], "]"}]}], 
        "}"}]}], "\[IndentingNewLine]", "\t", "]"}], "\[IndentingNewLine]", 
     "\t", ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "/.", 
          RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", 
        RowBox[{"eps", "[", "\"\<dd\>\"", "]"}]}], "\[IndentingNewLine]", 
       "\t\t", ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", "\t", "]"}]}], "\[IndentingNewLine]", "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.889965945368053*^9, 3.889965955550915*^9}, 
   3.889967308405003*^9, {3.889967351208173*^9, 3.889967389985118*^9}, {
   3.8899676882980556`*^9, 3.889967688505946*^9}, {3.889967766805999*^9, 
   3.889967767119522*^9}, {3.889967900939595*^9, 3.8899679066172323`*^9}, {
   3.8899681466423407`*^9, 3.889968150087781*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"f6a47068-4ccb-4fea-9136-2dc604d17939"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20230610-0H61YL\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20230610-0H61YL"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8953626898229094`*^9},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"fac209fe-c737-47e6-9374-b6ab804658c7"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.895362689828532*^9},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"50eeb44f-6e12-40b7-ab44-cfb085260ceb"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "{\n\t\tTable[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps @ Shocks`f,\n\t\t\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps @ \"dd\"],\n\t\t\t{Shocks`ii, {1, \
Shocks`i, Shocks`j}}\n\t\t]\n\t}", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = {{
   True, True, True, True, True, True, True, True}, {True, True, True}}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\t{\n\t\tTable[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps @ Shocks`f,\n\t\t\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps @ \"dd\"],\n\t\t\t{Shocks`ii, {1, \
Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{True, True, True, True, \
True, True, True, True},\n\t\t{True, True, True}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-0H61YL\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> {{True, True, True, True, True, True, True, True}, {
     True, True, True}}, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[{
       Table[ReplaceAll[Shocks`expr, 
          FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
        Shocks`expr, {Shocks`expr, 
         Table[
          FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f], {
          Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
       Table[ReplaceAll[
          FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"], 
          FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
        FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"], {
        Shocks`ii, {1, Shocks`i, Shocks`j}}]}], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-7XMM72\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-PJZSVW\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20230610-R3SZX4\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`f, {\
\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\
\tTable[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\
\t{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, \
0, 0, 0, 0, 0},\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-LCIGAM\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 2) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{1, 1, 1, 1, 1, 1, 1, 1},\
\n\t\t{1, 1, 1}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-B7YF3O\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 3) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, 0, 0, 0, 0, 0},\
\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-5O0ERJ\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 4) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{3, 3, 3, 3, 3, 3, 3, 3},\
\n\t\t{3, 3, 3}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-6K6OZX\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\tTable[\n\t\t\tIf[SameQ[Shocks`f, Shocks`g],\
\n\t\t\t\t0,\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]\n\t\t\t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}},\n\t\t\t{Shocks`g, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`ii, {1, Shocks`i, Shocks`j}},\n\t\t\t{Shocks`f, {\"x\", \"pi\", \
\"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{\n\t\t\
\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, \
0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, \
0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t\
{0, 0, 0, 0, 0, 0, 0, 0}\n\t\t},\n\t\t{\n\t\t\t{0, 0, 0, 0, 0, 0, 0},\n\t\t\t\
{0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0}\n\t\t}\n\t}\n\t,\n\t{}\n\t\
,\n\tTestID->\"Shocks_20230610-8KJ8DP\"\n]\n\n\nVerificationTest[\n\tMap[\n\t\
\tFunction[\n\t\t\tStringDelete[#, StringExpression[\"FernandoDuarte\" | \
\"`\", __, \"`\"]]\n\t\t],\n\t\t\
Table[ToString[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]],\n\t\t\t\
{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t]\n\t,\n\t{\"taugd[1]\", \
\"taugd[i]\", \"taugd[j]\"}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-Z8UMT4\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 4) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{3, 3, 3, 3, 3, 3, 3, 3},\
\n\t\t{3, 3, 3}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-DQXRBH\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\tTable[\n\t\t\tIf[SameQ[Shocks`f, Shocks`g],\
\n\t\t\t\t0,\n\t\t\t\t\
((FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 2) * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]\n\t\t\t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}},\n\t\t\t{Shocks`g, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\t\
Table[((FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] ^ 2) * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}},\n\t\t\t{Shocks`f, {\"x\", \"pi\", \"pibar\", \
\"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{\n\t\t\t{0, 0, \
0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, \
0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\
\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, \
0, 0, 0, 0, 0}\n\t\t},\n\t\t{\n\t\t\t{0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, \
0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0}\n\t\t}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-S35S1M\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t + 1],\n\t\
\t\t\t\t{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTable[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[ToExpression @ \
Shocks`f][Shocks`t],\n\t\t\t\t\t{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \
\"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\
Table[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t + 1, Shocks`i], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`dd][Shocks`t, Shocks`i]}\n\
\t\t\t}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{True, True, True, True, True, True, True, \
True},\n\t\t{True, True, True, True, True, True, True, True},\n\t\t{True, \
True}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-EHYH2J\"\n]\n\n\n\
VerificationTest[\n\t{\n\t\tTable[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps @ Shocks`f,\n\t\t\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps @ \"dd\"],\n\t\t\t{Shocks`ii, {1, \
Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{True, True, True, True, \
True, True, True, True},\n\t\t{True, True, True}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-0H61YL\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.895362689839881*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"3881fcfc-2d81-48b1-b3c4-4d55a35b00b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
   RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"should", " ", "all", " ", "return", " ", "true"}], ",", " ", 
      RowBox[{
      "confirming", " ", "that", " ", "rulesE", " ", "returns", " ", "same", 
       " ", "expression", " ", "unevaluated"}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"expr", "/.", 
           RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "expr"}], 
        "\[IndentingNewLine]", "\t\t", ",", 
        RowBox[{"{", 
         RowBox[{"expr", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"eps", "[", "f", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"f", ",", 
              RowBox[{"{", 
               RowBox[{
               "\"\<xx\>\"", ",", "\"\<adc\>\"", ",", "\"\<p\>\"", ",", 
                "\"\<rhobar\>\"", ",", "\"\<ssg\>\"", ",", "\"\<ssx\>\"", 
                ",", "\"\<sdc\>\"", ",", "\"\<spi\>\""}], "}"}]}], "}"}]}], 
           "]"}]}], "}"}]}], "\[IndentingNewLine]", "\t", "]"}], 
      "\[IndentingNewLine]", "\t", ",", "\[IndentingNewLine]", "\t", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"eps", "[", "\"\<ddd\>\"", "]"}], "/.", 
           RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", 
         RowBox[{"eps", "[", "\"\<ddd\>\"", "]"}]}], "\[IndentingNewLine]", 
        "\t\t", ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
       "\[IndentingNewLine]", "\t", "]"}]}], "\[IndentingNewLine]", "}"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.889966053895102*^9, 3.8899660943950768`*^9}, 
   3.88996731051445*^9, {3.889967405843053*^9, 3.88996742813382*^9}, {
   3.889967691817891*^9, 3.889967692066221*^9}, {3.88996776934571*^9, 
   3.889967769680554*^9}, {3.88996790988997*^9, 3.8899679148886423`*^9}, {
   3.8899681574763317`*^9, 3.889968162961051*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"914981bf-41ce-4fda-9d3a-e450b0107da7"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20230610-JVI7UX\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20230610-JVI7UX"],
  Editable->False]], "Print",
 CellChangeTimes->{3.895362689872216*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"d2461f1c-1bc9-4c05-95d0-4f7306dc8a48"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.895362689878511*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"df247cdc-d82e-4311-a89b-65af967b20e3"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "{\n\t\tTable[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps @ Shocks`f,\n\t\t\t\t\t{\n\t\
\t\t\t\t\tShocks`f,\n\t\t\t\t\t\t{\"xx\", \"adc\", \"p\", \"rhobar\", \
\"ssg\", \"ssx\", \"sdc\", \"spi\"}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\
\t\tTable[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"ddd\"] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps @ \"ddd\"],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = {{
   True, True, True, True, True, True, True, True}, {True, True, True}}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\t{\n\t\tTable[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps @ Shocks`f,\n\t\t\t\t\t{\n\t\
\t\t\t\t\tShocks`f,\n\t\t\t\t\t\t{\"xx\", \"adc\", \"p\", \"rhobar\", \
\"ssg\", \"ssx\", \"sdc\", \"spi\"}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\
\t\tTable[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"ddd\"] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps @ \"ddd\"],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{True, True, True, True, \
True, True, True, True},\n\t\t{True, True, True}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-JVI7UX\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> {{True, True, True, True, True, True, True, True}, {
     True, True, True}}, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[{
       Table[ReplaceAll[Shocks`expr, 
          FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
        Shocks`expr, {Shocks`expr, 
         Table[
          FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f], {
          Shocks`f, {
           "xx", "adc", "p", "rhobar", "ssg", "ssx", "sdc", "spi"}}]}], 
       Table[ReplaceAll[
          FernandoDuarte`LongRunRisk`Model`Shocks`eps["ddd"], 
          FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
        FernandoDuarte`LongRunRisk`Model`Shocks`eps["ddd"], {
        Shocks`ii, {1, Shocks`i, Shocks`j}}]}], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-7XMM72\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-PJZSVW\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20230610-R3SZX4\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`f, {\
\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\
\tTable[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\
\t{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, \
0, 0, 0, 0, 0},\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-LCIGAM\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 2) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{1, 1, 1, 1, 1, 1, 1, 1},\
\n\t\t{1, 1, 1}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-B7YF3O\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 3) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, 0, 0, 0, 0, 0},\
\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-5O0ERJ\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 4) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{3, 3, 3, 3, 3, 3, 3, 3},\
\n\t\t{3, 3, 3}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-6K6OZX\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\tTable[\n\t\t\tIf[SameQ[Shocks`f, Shocks`g],\
\n\t\t\t\t0,\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]\n\t\t\t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}},\n\t\t\t{Shocks`g, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`ii, {1, Shocks`i, Shocks`j}},\n\t\t\t{Shocks`f, {\"x\", \"pi\", \
\"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{\n\t\t\
\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, \
0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, \
0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t\
{0, 0, 0, 0, 0, 0, 0, 0}\n\t\t},\n\t\t{\n\t\t\t{0, 0, 0, 0, 0, 0, 0},\n\t\t\t\
{0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0}\n\t\t}\n\t}\n\t,\n\t{}\n\t\
,\n\tTestID->\"Shocks_20230610-8KJ8DP\"\n]\n\n\nVerificationTest[\n\tMap[\n\t\
\tFunction[\n\t\t\tStringDelete[#, StringExpression[\"FernandoDuarte\" | \
\"`\", __, \"`\"]]\n\t\t],\n\t\t\
Table[ToString[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]],\n\t\t\t\
{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t]\n\t,\n\t{\"taugd[1]\", \
\"taugd[i]\", \"taugd[j]\"}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-Z8UMT4\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 4) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{3, 3, 3, 3, 3, 3, 3, 3},\
\n\t\t{3, 3, 3}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-DQXRBH\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\tTable[\n\t\t\tIf[SameQ[Shocks`f, Shocks`g],\
\n\t\t\t\t0,\n\t\t\t\t\
((FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 2) * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]\n\t\t\t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}},\n\t\t\t{Shocks`g, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\t\
Table[((FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] ^ 2) * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}},\n\t\t\t{Shocks`f, {\"x\", \"pi\", \"pibar\", \
\"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{\n\t\t\t{0, 0, \
0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, \
0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\
\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, \
0, 0, 0, 0, 0}\n\t\t},\n\t\t{\n\t\t\t{0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, \
0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0}\n\t\t}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-S35S1M\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t + 1],\n\t\
\t\t\t\t{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTable[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[ToExpression @ \
Shocks`f][Shocks`t],\n\t\t\t\t\t{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \
\"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\
Table[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t + 1, Shocks`i], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`dd][Shocks`t, Shocks`i]}\n\
\t\t\t}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{True, True, True, True, True, True, True, \
True},\n\t\t{True, True, True, True, True, True, True, True},\n\t\t{True, \
True}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-EHYH2J\"\n]\n\n\n\
VerificationTest[\n\t{\n\t\tTable[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps @ Shocks`f,\n\t\t\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps @ \"dd\"],\n\t\t\t{Shocks`ii, {1, \
Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{True, True, True, True, \
True, True, True, True},\n\t\t{True, True, True}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-0H61YL\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps @ Shocks`f,\n\t\t\t\t\t{\n\t\
\t\t\t\t\tShocks`f,\n\t\t\t\t\t\t{\"xx\", \"adc\", \"p\", \"rhobar\", \
\"ssg\", \"ssx\", \"sdc\", \"spi\"}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\
\t\tTable[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"ddd\"] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps @ \"ddd\"],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{True, True, True, True, \
True, True, True, True},\n\t\t{True, True, True}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-JVI7UX\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.895362689892682*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"75807fac-bd10-4be2-8d0f-9360e85c0def"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
   RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"should", " ", "all", " ", "return", " ", "true"}], ",", " ", 
      RowBox[{
      "confirming", " ", "that", " ", "rulesE", " ", "returns", " ", "same", 
       " ", "expression", " ", "unevaluated"}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"expr", "/.", 
           RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "expr"}], 
        "\[IndentingNewLine]", "\t\t", ",", 
        RowBox[{"{", 
         RowBox[{"expr", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"eps", "[", "f", "]"}], "[", "tt", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"f", ",", 
              RowBox[{"{", 
               RowBox[{
               "\"\<xx\>\"", ",", "\"\<adc\>\"", ",", "\"\<p\>\"", ",", 
                "\"\<rhobar\>\"", ",", "\"\<ssg\>\"", ",", "\"\<ssx\>\"", 
                ",", "\"\<sdc\>\"", ",", "\"\<spi\>\""}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"tt", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"t", "+", "1"}], ",", 
                RowBox[{"t", "-", "1"}], ",", "s", ",", 
                RowBox[{"t", "+", "h"}]}], "}"}]}], "}"}]}], "]"}]}], "}"}]}],
        "\[IndentingNewLine]", "\t", "]"}], "\[IndentingNewLine]", "\t", ",", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"expr", "/.", 
           RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "expr"}], 
        "\[IndentingNewLine]", "\t\t", ",", 
        RowBox[{"{", 
         RowBox[{"expr", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
             RowBox[{"tt", ",", "ii"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"ii", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"tt", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"t", "+", "1"}], ",", 
                RowBox[{"t", "-", "1"}], ",", "s", ",", 
                RowBox[{"t", "+", "h"}]}], "}"}]}], "}"}]}], "]"}]}], "}"}]}],
        "\[IndentingNewLine]", "\t", "]"}]}], "\[IndentingNewLine]", "}"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.889965962245503*^9, 3.889966019800927*^9}, 
   3.889967313667658*^9, {3.889967436454067*^9, 3.889967519755422*^9}, {
   3.889967695147917*^9, 3.889967695356472*^9}, {3.889967773026466*^9, 
   3.8899677733587008`*^9}, {3.88996791844978*^9, 3.8899679231592207`*^9}, {
   3.8899681691524878`*^9, 3.889968173601953*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"06d2e2ec-ced8-46ed-a22e-1d614e760ba6"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20230610-QQ63CQ\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20230610-QQ63CQ"],
  Editable->False]], "Print",
 CellChangeTimes->{3.895362689938115*^9},
 CellLabel->
  "During evaluation of \
In[25]:=",ExpressionUUID->"8bdcc968-17cc-4a0c-b3a5-7b5d414bb145"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.895362689943841*^9},
 CellLabel->
  "During evaluation of \
In[25]:=",ExpressionUUID->"bf3dfee0-005d-470d-80fa-9a5fb4151531"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "{\n\t\tTable[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`tt],\n\t\t\
\t\t\t{\n\t\t\t\t\t\tShocks`f,\n\t\t\t\t\t\t{\"xx\", \"adc\", \"p\", \"rhobar\
\", \"ssg\", \"ssx\", \"sdc\", \"spi\"}\n\t\t\t\t\t},\n\t\t\t\t\t{Shocks`tt, \
{Shocks`t + 1, Shocks`t - 1, Shocks`s, Shocks`t + Shocks`h}}\n\t\t\t\t]\n\t\t\
\t}\n\t\t],\n\t\tTable[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`tt, \
Shocks`ii],\n\t\t\t\t\t{Shocks`ii, {1, Shocks`i, Shocks`j}},\n\t\t\t\t\t\
{Shocks`tt, {Shocks`t + 1, Shocks`t - 1, Shocks`s, Shocks`t + Shocks`h}}\n\t\t\
\t\t]\n\t\t\t}\n\t\t]\n\t}", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = {{
   True, True, True, True, True, True, True, True}, {True, True, True}}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\t{\n\t\tTable[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`tt],\n\t\t\
\t\t\t{\n\t\t\t\t\t\tShocks`f,\n\t\t\t\t\t\t{\"xx\", \"adc\", \"p\", \"rhobar\
\", \"ssg\", \"ssx\", \"sdc\", \"spi\"}\n\t\t\t\t\t},\n\t\t\t\t\t{Shocks`tt, \
{Shocks`t + 1, Shocks`t - 1, Shocks`s, Shocks`t + Shocks`h}}\n\t\t\t\t]\n\t\t\
\t}\n\t\t],\n\t\tTable[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`tt, \
Shocks`ii],\n\t\t\t\t\t{Shocks`ii, {1, Shocks`i, Shocks`j}},\n\t\t\t\t\t\
{Shocks`tt, {Shocks`t + 1, Shocks`t - 1, Shocks`s, Shocks`t + Shocks`h}}\n\t\t\
\t\t]\n\t\t\t}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{True, True, True, True, True, \
True, True, True},\n\t\t{True, True, True}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-QQ63CQ\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> {{True, True, True, True, True, True, True, True}, {
     True, True, True}}, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[{
       Table[ReplaceAll[Shocks`expr, 
          FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
        Shocks`expr, {Shocks`expr, 
         Table[
          FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`tt], {
          Shocks`f, {
           "xx", "adc", "p", "rhobar", "ssg", "ssx", "sdc", "spi"}}, {
          Shocks`tt, {
           Shocks`t + 1, Shocks`t - 1, Shocks`s, Shocks`t + Shocks`h}}]}], 
       Table[ReplaceAll[Shocks`expr, 
          FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
        Shocks`expr, {Shocks`expr, 
         Table[
          FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
          Shocks`tt, Shocks`ii], {Shocks`ii, {1, Shocks`i, Shocks`j}}, {
          Shocks`tt, {
           Shocks`t + 1, Shocks`t - 1, Shocks`s, Shocks`t + Shocks`h}}]}]}], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-7XMM72\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-PJZSVW\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20230610-R3SZX4\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`f, {\
\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\
\tTable[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\
\t{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, \
0, 0, 0, 0, 0},\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-LCIGAM\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 2) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{1, 1, 1, 1, 1, 1, 1, 1},\
\n\t\t{1, 1, 1}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-B7YF3O\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 3) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, 0, 0, 0, 0, 0},\
\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-5O0ERJ\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 4) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{3, 3, 3, 3, 3, 3, 3, 3},\
\n\t\t{3, 3, 3}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-6K6OZX\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\tTable[\n\t\t\tIf[SameQ[Shocks`f, Shocks`g],\
\n\t\t\t\t0,\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]\n\t\t\t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}},\n\t\t\t{Shocks`g, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`ii, {1, Shocks`i, Shocks`j}},\n\t\t\t{Shocks`f, {\"x\", \"pi\", \
\"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{\n\t\t\
\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, \
0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, \
0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t\
{0, 0, 0, 0, 0, 0, 0, 0}\n\t\t},\n\t\t{\n\t\t\t{0, 0, 0, 0, 0, 0, 0},\n\t\t\t\
{0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0}\n\t\t}\n\t}\n\t,\n\t{}\n\t\
,\n\tTestID->\"Shocks_20230610-8KJ8DP\"\n]\n\n\nVerificationTest[\n\tMap[\n\t\
\tFunction[\n\t\t\tStringDelete[#, StringExpression[\"FernandoDuarte\" | \
\"`\", __, \"`\"]]\n\t\t],\n\t\t\
Table[ToString[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]],\n\t\t\t\
{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t]\n\t,\n\t{\"taugd[1]\", \
\"taugd[i]\", \"taugd[j]\"}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-Z8UMT4\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 4) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{3, 3, 3, 3, 3, 3, 3, 3},\
\n\t\t{3, 3, 3}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-DQXRBH\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\tTable[\n\t\t\tIf[SameQ[Shocks`f, Shocks`g],\
\n\t\t\t\t0,\n\t\t\t\t\
((FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 2) * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]\n\t\t\t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}},\n\t\t\t{Shocks`g, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\t\
Table[((FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] ^ 2) * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}},\n\t\t\t{Shocks`f, {\"x\", \"pi\", \"pibar\", \
\"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{\n\t\t\t{0, 0, \
0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, \
0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\
\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, \
0, 0, 0, 0, 0}\n\t\t},\n\t\t{\n\t\t\t{0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, \
0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0}\n\t\t}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-S35S1M\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t + 1],\n\t\
\t\t\t\t{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTable[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[ToExpression @ \
Shocks`f][Shocks`t],\n\t\t\t\t\t{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \
\"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\
Table[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t + 1, Shocks`i], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`dd][Shocks`t, Shocks`i]}\n\
\t\t\t}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{True, True, True, True, True, True, True, \
True},\n\t\t{True, True, True, True, True, True, True, True},\n\t\t{True, \
True}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-EHYH2J\"\n]\n\n\n\
VerificationTest[\n\t{\n\t\tTable[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps @ Shocks`f,\n\t\t\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps @ \"dd\"],\n\t\t\t{Shocks`ii, {1, \
Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{True, True, True, True, \
True, True, True, True},\n\t\t{True, True, True}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-0H61YL\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps @ Shocks`f,\n\t\t\t\t\t{\n\t\
\t\t\t\t\tShocks`f,\n\t\t\t\t\t\t{\"xx\", \"adc\", \"p\", \"rhobar\", \
\"ssg\", \"ssx\", \"sdc\", \"spi\"}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\
\t\tTable[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"ddd\"] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps @ \"ddd\"],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{True, True, True, True, \
True, True, True, True},\n\t\t{True, True, True}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-JVI7UX\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`tt],\n\t\t\
\t\t\t{\n\t\t\t\t\t\tShocks`f,\n\t\t\t\t\t\t{\"xx\", \"adc\", \"p\", \"rhobar\
\", \"ssg\", \"ssx\", \"sdc\", \"spi\"}\n\t\t\t\t\t},\n\t\t\t\t\t{Shocks`tt, \
{Shocks`t + 1, Shocks`t - 1, Shocks`s, Shocks`t + Shocks`h}}\n\t\t\t\t]\n\t\t\
\t}\n\t\t],\n\t\tTable[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`tt, \
Shocks`ii],\n\t\t\t\t\t{Shocks`ii, {1, Shocks`i, Shocks`j}},\n\t\t\t\t\t\
{Shocks`tt, {Shocks`t + 1, Shocks`t - 1, Shocks`s, Shocks`t + Shocks`h}}\n\t\t\
\t\t]\n\t\t\t}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{True, True, True, True, True, \
True, True, True},\n\t\t{True, True, True}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-QQ63CQ\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.8953626899540567`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"5d7bff3a-b910-408f-934a-175bf5618fbd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"should", " ", "all", " ", "give", " ", "zero"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"NewContext`eps", "[", "f", "]"}], "[", "t", "]"}], "/.", 
        RowBox[{"rulesE", "[", "t", "]"}]}], "\[IndentingNewLine]", "\t\t", 
       ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
           "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
           "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", "\t", "]"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"NewContext`eps", "[", "\"\<dd\>\"", "]"}], "[", 
         RowBox[{"t", ",", "ii"}], "]"}], "/.", 
        RowBox[{"rulesE", "[", "t", "]"}]}], "\[IndentingNewLine]", "\t\t", 
       ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", "\t", "]"}]}], "\[IndentingNewLine]", "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.889965468632722*^9, 3.889965535681717*^9}, {
   3.889965687921562*^9, 3.889965719041513*^9}, {3.8899657564745703`*^9, 
   3.8899657868805656`*^9}, {3.889965818275572*^9, 3.88996587402346*^9}, {
   3.8899660417909737`*^9, 3.889966042024665*^9}, {3.889967536877624*^9, 
   3.88996754071059*^9}, {3.8899676626847277`*^9, 3.889967663326408*^9}, {
   3.889967743694665*^9, 3.889967744059184*^9}, {3.8899677859095707`*^9, 
   3.8899678081741953`*^9}, {3.8899679955631647`*^9, 3.889968003395926*^9}, {
   3.889969462764024*^9, 3.8899694656136417`*^9}, {3.889969517081333*^9, 
   3.8899695670076637`*^9}, {3.889970354531378*^9, 3.889970361426557*^9}, 
   3.889970446358612*^9, 3.889971586268968*^9, 3.8899720413397284`*^9, {
   3.892123492323592*^9, 3.8921234936326303`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"8441869b-d2b5-42f4-b9e2-b0fe622f4eae"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20230610-BFE4LW\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20230610-BFE4LW"],
  Editable->False]], "Print",
 CellChangeTimes->{3.895362689989093*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"1e1040ed-4564-4483-bf6f-7b514c2adcbc"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.895362689995213*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"f8df0b08-486c-45aa-9d6d-145d2184fa06"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "{\n\t\tTable[NewContext`eps[Shocks`f][Shocks`t] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`f, {\
\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\
\tTable[NewContext`eps[\"dd\"][Shocks`t, Shocks`ii] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = {{0, 0, 0, 
   0, 0, 0, 0, 0}, {0, 0, 0}}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\t{\n\t\tTable[NewContext`eps[Shocks`f][Shocks`t] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`f, {\
\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\
\tTable[NewContext`eps[\"dd\"][Shocks`t, Shocks`ii] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, 0, 0, 0, 0, 0},\
\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-BFE4LW\"\n]\
\n\n", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> {{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0}}, "Success" -> True, 
   "FailureType" -> None, "OutputLog" -> {}, "Messages" -> {}, 
   "MessagesText" -> {}, "MessagesExpressions" -> {}, "Timing" -> 0., 
   "AbsoluteTiming" -> 0., "InputString" :> ToString[
     Unevaluated[{
       Table[
        ReplaceAll[
         NewContext`eps[Shocks`f][Shocks`t], 
         FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
        Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
       Table[
        ReplaceAll[
         NewContext`eps["dd"][Shocks`t, Shocks`ii], 
         FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
        Shocks`ii, {1, Shocks`i, Shocks`j}}]}], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-7XMM72\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-PJZSVW\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20230610-R3SZX4\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`f, {\
\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\
\tTable[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\
\t{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, \
0, 0, 0, 0, 0},\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-LCIGAM\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 2) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{1, 1, 1, 1, 1, 1, 1, 1},\
\n\t\t{1, 1, 1}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-B7YF3O\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 3) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, 0, 0, 0, 0, 0},\
\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-5O0ERJ\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 4) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{3, 3, 3, 3, 3, 3, 3, 3},\
\n\t\t{3, 3, 3}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-6K6OZX\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\tTable[\n\t\t\tIf[SameQ[Shocks`f, Shocks`g],\
\n\t\t\t\t0,\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]\n\t\t\t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}},\n\t\t\t{Shocks`g, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`ii, {1, Shocks`i, Shocks`j}},\n\t\t\t{Shocks`f, {\"x\", \"pi\", \
\"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{\n\t\t\
\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, \
0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, \
0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t\
{0, 0, 0, 0, 0, 0, 0, 0}\n\t\t},\n\t\t{\n\t\t\t{0, 0, 0, 0, 0, 0, 0},\n\t\t\t\
{0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0}\n\t\t}\n\t}\n\t,\n\t{}\n\t\
,\n\tTestID->\"Shocks_20230610-8KJ8DP\"\n]\n\n\nVerificationTest[\n\tMap[\n\t\
\tFunction[\n\t\t\tStringDelete[#, StringExpression[\"FernandoDuarte\" | \
\"`\", __, \"`\"]]\n\t\t],\n\t\t\
Table[ToString[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]],\n\t\t\t\
{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t]\n\t,\n\t{\"taugd[1]\", \
\"taugd[i]\", \"taugd[j]\"}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-Z8UMT4\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 4) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{3, 3, 3, 3, 3, 3, 3, 3},\
\n\t\t{3, 3, 3}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-DQXRBH\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\tTable[\n\t\t\tIf[SameQ[Shocks`f, Shocks`g],\
\n\t\t\t\t0,\n\t\t\t\t\
((FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 2) * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]\n\t\t\t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}},\n\t\t\t{Shocks`g, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\t\
Table[((FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] ^ 2) * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}},\n\t\t\t{Shocks`f, {\"x\", \"pi\", \"pibar\", \
\"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{\n\t\t\t{0, 0, \
0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, \
0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\
\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, \
0, 0, 0, 0, 0}\n\t\t},\n\t\t{\n\t\t\t{0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, \
0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0}\n\t\t}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-S35S1M\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t + 1],\n\t\
\t\t\t\t{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTable[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[ToExpression @ \
Shocks`f][Shocks`t],\n\t\t\t\t\t{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \
\"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\
Table[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t + 1, Shocks`i], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`dd][Shocks`t, Shocks`i]}\n\
\t\t\t}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{True, True, True, True, True, True, True, \
True},\n\t\t{True, True, True, True, True, True, True, True},\n\t\t{True, \
True}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-EHYH2J\"\n]\n\n\n\
VerificationTest[\n\t{\n\t\tTable[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps @ Shocks`f,\n\t\t\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps @ \"dd\"],\n\t\t\t{Shocks`ii, {1, \
Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{True, True, True, True, \
True, True, True, True},\n\t\t{True, True, True}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-0H61YL\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps @ Shocks`f,\n\t\t\t\t\t{\n\t\
\t\t\t\t\tShocks`f,\n\t\t\t\t\t\t{\"xx\", \"adc\", \"p\", \"rhobar\", \
\"ssg\", \"ssx\", \"sdc\", \"spi\"}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\
\t\tTable[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"ddd\"] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps @ \"ddd\"],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{True, True, True, True, \
True, True, True, True},\n\t\t{True, True, True}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-JVI7UX\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`tt],\n\t\t\
\t\t\t{\n\t\t\t\t\t\tShocks`f,\n\t\t\t\t\t\t{\"xx\", \"adc\", \"p\", \"rhobar\
\", \"ssg\", \"ssx\", \"sdc\", \"spi\"}\n\t\t\t\t\t},\n\t\t\t\t\t{Shocks`tt, \
{Shocks`t + 1, Shocks`t - 1, Shocks`s, Shocks`t + Shocks`h}}\n\t\t\t\t]\n\t\t\
\t}\n\t\t],\n\t\tTable[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`tt, \
Shocks`ii],\n\t\t\t\t\t{Shocks`ii, {1, Shocks`i, Shocks`j}},\n\t\t\t\t\t\
{Shocks`tt, {Shocks`t + 1, Shocks`t - 1, Shocks`s, Shocks`t + Shocks`h}}\n\t\t\
\t\t]\n\t\t\t}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{True, True, True, True, True, \
True, True, True},\n\t\t{True, True, True}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-QQ63CQ\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[NewContext`eps[Shocks`f][Shocks`t] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`f, {\
\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\
\tTable[NewContext`eps[\"dd\"][Shocks`t, Shocks`ii] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, 0, 0, 0, 0, 0},\
\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-BFE4LW\"\n]\
\n\n\nEndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$\
]; Export[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.89536269001003*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"bc9cd24c-9f84-4f37-8fca-7dce27fa4b5c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"should", " ", "all", " ", "give", " ", "one"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps", "[", "f", 
           "]"}], "[", "t", "]"}], "^", "2"}], "/.", 
        RowBox[{"rulesE", "[", "t", "]"}]}], "\[IndentingNewLine]", "\t\t", 
       ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
           "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
           "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", "\t", "]"}], "\[IndentingNewLine]", "\t", ",", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps", "[", 
           "\"\<dd\>\"", "]"}], "[", 
          RowBox[{"t", ",", "ii"}], "]"}], "^", "2"}], "/.", 
        RowBox[{"rulesE", "[", "t", "]"}]}], "\[IndentingNewLine]", "\t\t", 
       ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", "\t", "]"}]}], "\[IndentingNewLine]", "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.889966121134981*^9, 3.889966129513671*^9}, {
  3.8899675430265427`*^9, 3.889967546703742*^9}, {3.889967666639736*^9, 
  3.8899676668939447`*^9}, {3.889967746374608*^9, 3.889967746668034*^9}, {
  3.88996781333914*^9, 3.8899678201195583`*^9}, {3.88996801609513*^9, 
  3.88996801967063*^9}, {3.892123507832917*^9, 3.892123514171039*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"687cf478-d5ea-420d-9b1b-a0c92484ec3a"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"Shocks_20230610-Q6UEUJ\"\>"}],
  SequenceForm["Adding test: ", "Shocks_20230610-Q6UEUJ"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8953626900508213`*^9},
 CellLabel->
  "During evaluation of \
In[27]:=",ExpressionUUID->"4788e7b2-4a08-490d-821b-01971f9bba4b"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>"], "Print",
 CellChangeTimes->{3.895362690056408*^9},
 CellLabel->
  "During evaluation of \
In[27]:=",ExpressionUUID->"5dcfbd9e-fa12-4bbe-a7c0-0ce29b1ae7f3"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "{\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps[Shocks`f]\
[Shocks`t] ^ 2) /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\
\t\t\t{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps[\"dd\"][Shocks`t, \
Shocks`ii] ^ 2) /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\
\t\t\t{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t}", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = {{1, 1, 1, 
   1, 1, 1, 1, 1}, {1, 1, 1}}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps[Shocks`f][Shocks`t]\
 ^ 2) /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps[\"dd\"][Shocks`t, \
Shocks`ii] ^ 2) /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\
\t\t\t{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{1, 1, \
1, 1, 1, 1, 1, 1},\n\t\t{1, 1, 1}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-Q6UEUJ\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> {{1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 1}}, "Success" -> True, 
   "FailureType" -> None, "OutputLog" -> {}, "Messages" -> {}, 
   "MessagesText" -> {}, "MessagesExpressions" -> {}, "Timing" -> 0.003, 
   "AbsoluteTiming" -> 0.003, "InputString" :> ToString[
     Unevaluated[{
       Table[
        ReplaceAll[
        FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps[Shocks`f][
          Shocks`t]^2, 
         FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
        Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
       Table[
        ReplaceAll[
        FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps["dd"][
          Shocks`t, Shocks`ii]^2, 
         FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
        Shocks`ii, {1, Shocks`i, Shocks`j}}]}], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"Shocks\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"\n\t,\n\tNull\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-7XMM72\"\n]\n\n\nVerificationTest[\n\t\
MemberQ[$ContextPath, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-PJZSVW\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*rulesE\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"Shocks_20230610-R3SZX4\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`f, {\
\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\
\tTable[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\
\t{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, \
0, 0, 0, 0, 0},\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-LCIGAM\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 2) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 2) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{1, 1, 1, 1, 1, 1, 1, 1},\
\n\t\t{1, 1, 1}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-B7YF3O\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 3) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 3) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, 0, 0, 0, 0, 0},\
\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-5O0ERJ\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 4) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{3, 3, 3, 3, 3, 3, 3, 3},\
\n\t\t{3, 3, 3}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-6K6OZX\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\tTable[\n\t\t\tIf[SameQ[Shocks`f, Shocks`g],\
\n\t\t\t\t0,\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]\n\t\t\t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}},\n\t\t\t{Shocks`g, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`ii, {1, Shocks`i, Shocks`j}},\n\t\t\t{Shocks`f, {\"x\", \"pi\", \
\"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{\n\t\t\
\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, \
0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, \
0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t\
{0, 0, 0, 0, 0, 0, 0, 0}\n\t\t},\n\t\t{\n\t\t\t{0, 0, 0, 0, 0, 0, 0},\n\t\t\t\
{0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0}\n\t\t}\n\t}\n\t,\n\t{}\n\t\
,\n\tTestID->\"Shocks_20230610-8KJ8DP\"\n]\n\n\nVerificationTest[\n\tMap[\n\t\
\tFunction[\n\t\t\tStringDelete[#, StringExpression[\"FernandoDuarte\" | \
\"`\", __, \"`\"]]\n\t\t],\n\t\t\
Table[ToString[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Shocks`t]) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]],\n\t\t\t\
{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t]\n\t,\n\t{\"taugd[1]\", \
\"taugd[i]\", \"taugd[j]\"}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-Z8UMT4\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 4) \
/. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\tTable[(FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\
\"][Shocks`t, Shocks`ii] ^ 4) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{3, 3, 3, 3, 3, 3, 3, 3},\
\n\t\t{3, 3, 3}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-DQXRBH\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\tTable[\n\t\t\tIf[SameQ[Shocks`f, Shocks`g],\
\n\t\t\t\t0,\n\t\t\t\t\
((FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] ^ 2) * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]\n\t\t\t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}},\n\t\t\t{Shocks`g, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \
\"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\t\
Table[((FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t, \
Shocks`ii] ^ 2) * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t]) /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}},\n\t\t\t{Shocks`f, {\"x\", \"pi\", \"pibar\", \
\"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{\n\t\t\t{0, 0, \
0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, \
0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\
\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, \
0, 0, 0, 0, 0}\n\t\t},\n\t\t{\n\t\t\t{0, 0, 0, 0, 0, 0, 0},\n\t\t\t{0, 0, 0, \
0, 0, 0, 0},\n\t\t\t{0, 0, 0, 0, 0, 0, 0}\n\t\t}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-S35S1M\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t + 1],\n\t\
\t\t\t\t{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTable[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[ToExpression @ \
Shocks`f][Shocks`t],\n\t\t\t\t\t{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \
\"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\
Table[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`t + 1, Shocks`i], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`dd][Shocks`t, Shocks`i]}\n\
\t\t\t}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{True, True, True, True, True, True, True, \
True},\n\t\t{True, True, True, True, True, True, True, True},\n\t\t{True, \
True}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-EHYH2J\"\n]\n\n\n\
VerificationTest[\n\t{\n\t\tTable[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps @ Shocks`f,\n\t\t\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\
Table[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps @ \"dd\"],\n\t\t\t{Shocks`ii, {1, \
Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{True, True, True, True, \
True, True, True, True},\n\t\t{True, True, True}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-0H61YL\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps @ Shocks`f,\n\t\t\t\t\t{\n\t\
\t\t\t\t\tShocks`f,\n\t\t\t\t\t\t{\"xx\", \"adc\", \"p\", \"rhobar\", \
\"ssg\", \"ssx\", \"sdc\", \"spi\"}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\
\t\tTable[SameQ[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"ddd\"] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], \
FernandoDuarte`LongRunRisk`Model`Shocks`eps @ \"ddd\"],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{True, True, True, True, \
True, True, True, True},\n\t\t{True, True, True}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-JVI7UX\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`tt],\n\t\t\
\t\t\t{\n\t\t\t\t\t\tShocks`f,\n\t\t\t\t\t\t{\"xx\", \"adc\", \"p\", \"rhobar\
\", \"ssg\", \"ssx\", \"sdc\", \"spi\"}\n\t\t\t\t\t},\n\t\t\t\t\t{Shocks`tt, \
{Shocks`t + 1, Shocks`t - 1, Shocks`s, Shocks`t + Shocks`h}}\n\t\t\t\t]\n\t\t\
\t}\n\t\t],\n\t\tTable[SameQ[Shocks`expr /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t], Shocks`expr],\n\t\t\
\t{\n\t\t\t\tShocks`expr,\n\t\t\t\t\
Table[FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dd\"][Shocks`tt, \
Shocks`ii],\n\t\t\t\t\t{Shocks`ii, {1, Shocks`i, Shocks`j}},\n\t\t\t\t\t\
{Shocks`tt, {Shocks`t + 1, Shocks`t - 1, Shocks`s, Shocks`t + Shocks`h}}\n\t\t\
\t\t]\n\t\t\t}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{True, True, True, True, True, \
True, True, True},\n\t\t{True, True, True}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-QQ63CQ\"\n]\n\n\nVerificationTest[\n\t{\n\t\t\
Table[NewContext`eps[Shocks`f][Shocks`t] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`f, {\
\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \"sp\"}}\n\t\t],\n\t\
\tTable[NewContext`eps[\"dd\"][Shocks`t, Shocks`ii] /. \
FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t{Shocks`ii, \
{1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{0, 0, 0, 0, 0, 0, 0, 0},\
\n\t\t{0, 0, 0}\n\t}\n\t,\n\t{}\n\t,\n\tTestID->\"Shocks_20230610-BFE4LW\"\n]\
\n\n\nVerificationTest[\n\t{\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps[Shocks`f][Shocks`t]\
 ^ 2) /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\t\t\t\
{Shocks`f, {\"x\", \"dc\", \"pi\", \"pibar\", \"sg\", \"sx\", \"sc\", \
\"sp\"}}\n\t\t],\n\t\t\
Table[(FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps[\"dd\"][Shocks`t, \
Shocks`ii] ^ 2) /. FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t],\n\
\t\t\t{Shocks`ii, {1, Shocks`i, Shocks`j}}\n\t\t]\n\t}\n\t,\n\t{\n\t\t{1, 1, \
1, 1, 1, 1, 1, 1},\n\t\t{1, 1, 1}\n\t}\n\t,\n\t{}\n\t,\n\t\
TestID->\"Shocks_20230610-Q6UEUJ\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.89536269006851*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"00da07fc-1387-43b9-93ab-2205837532ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"End", "[", "]"}]], "Input",
 CellChangeTimes->{{3.890680295645965*^9, 3.89068029650622*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"2f383e79-a813-4173-8302-13431f2ea3e7"],

Cell[BoxData["\<\"Shocks`\"\>"], "Output",
 CellChangeTimes->{3.89536269007509*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"5dd4b021-2348-4140-9b23-321faac0b2c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"add", " ", 
    RowBox[{"Begin", "[", "\"\<Context`\>\"", "]"}], " ", "and", " ", 
    RowBox[{"End", "[", "]"}], " ", "to", " ", "wlt", " ", "file"}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"helper", " ", "functions"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", "countLines", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"countLines", "[", "file_String", "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"readStream", "=", 
         RowBox[{"OpenRead", "[", "file", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"n", "=", "1"}], ",", "\[IndentingNewLine]", "temp"}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"While", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"temp", "=!=", "EndOfFile"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"temp", "=", 
           RowBox[{"ReadLine", "[", "readStream", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"n", "=", 
           RowBox[{"n", "+", "1"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Close", "/@", 
        RowBox[{"{", "readStream", "}"}]}], ";", "\[IndentingNewLine]", 
       "n"}]}], "\[IndentingNewLine]", "]"}]}], "\n", 
   RowBox[{"ClearAll", "[", "replaceNthRecord", "]"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"replaceNthRecord", "[", 
     RowBox[{"file_String", ",", "n_Integer", ",", "replaceWith_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"readStream", "=", 
         RowBox[{"OpenRead", "[", "file", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"writeStream", "=", 
         RowBox[{"OpenWrite", "[", 
          RowBox[{"file", "<>", "\"\<temp\>\""}], "]"}]}], ",", 
        "\[IndentingNewLine]", "temp"}], "\[IndentingNewLine]", "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"WriteLine", "[", 
          RowBox[{"writeStream", ",", 
           RowBox[{"ReadLine", "[", "readStream", "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"n", "-", "1"}], "}"}]}], "\[IndentingNewLine]", "]"}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"WriteLine", "[", 
        RowBox[{"writeStream", ",", 
         RowBox[{
          RowBox[{"ReadLine", "[", "readStream", "]"}], "<>", 
          "\"\< \\r\\n\>\"", "<>", "replaceWith"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"While", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"temp", "=!=", "EndOfFile"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"temp", "=", 
           RowBox[{"ReadLine", "[", "readStream", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"UnsameQ", "[", 
             RowBox[{"temp", ",", "EndOfFile"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"WriteLine", "[", 
             RowBox[{"writeStream", ",", "temp"}], "]"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", 
       RowBox[{"Close", "/@", 
        RowBox[{"{", 
         RowBox[{"readStream", ",", "writeStream"}], "}"}]}]}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"insert", " ", "into", " ", "wlt", " ", "file"}], "*)"}], "\n", 
   RowBox[{"replaceNthRecord", "[", 
    RowBox[{"testFileName", ",", "1", ",", "\"\<Begin[\\\"Shocks`\\\"]\>\""}],
     "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CopyFile", "[", 
     RowBox[{
      RowBox[{"testFileName", "<>", "\"\<temp\>\""}], ",", "testFileName", 
      ",", 
      RowBox[{"OverwriteTarget", "->", "True"}]}], "]"}], ";"}], "\n", 
   RowBox[{"DeleteFile", "[", 
    RowBox[{"testFileName", "<>", "\"\<temp\>\""}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"numLines", "=", 
    RowBox[{"countLines", "[", "testFileName", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"replaceNthRecord", "[", 
    RowBox[{"testFileName", ",", 
     RowBox[{"numLines", "-", "3"}], ",", " ", "\"\<End[]\>\""}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CopyFile", "[", 
     RowBox[{
      RowBox[{"testFileName", "<>", "\"\<temp\>\""}], ",", "testFileName", 
      ",", 
      RowBox[{"OverwriteTarget", "->", "True"}]}], "]"}], ";"}], "\n", 
   RowBox[{"DeleteFile", "[", 
    RowBox[{"testFileName", "<>", "\"\<temp\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.890686194230386*^9, 3.890686228283702*^9}, 
   3.8911593195689373`*^9, 3.89121593436329*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"8b99a72e-896a-4e7c-9c93-08ce6ec86323"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlttemp\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8953626901237698`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"782e0463-5940-4a5b-8501-576078b022a7"],

Cell[BoxData["378"], "Output",
 CellChangeTimes->{3.8953626901343937`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"18335e1f-644d-45fc-9495-0336d7a4060c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlttemp\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.895362690150937*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"f43338f1-87cf-47e8-b2c2-5798231834e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tr", "=", 
  RowBox[{"TestReport", "[", "testFileName", "]"}]}]], "Input",
 CellChangeTimes->{3.895362673691435*^9},
 CellLabel->"In[40]:=",ExpressionUUID->"be6ba0ec-dcd9-4861-85ab-395df1e6baec"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: Shocks.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["17", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: Shocks.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["17", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["17", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Failed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox[
                 "\"Failed with wrong results: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox[
                 "\"Failed with messages: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Failed with errors: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0.053903`", "\"s\"", "seconds", "\"Seconds\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}], 
               "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: Shocks.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     1117575516037880139 -> 
      TestResultObject[<|
        "TestKey" -> 1117575516037880139, "TestID" -> 
         "Shocks_20230610-7XMM72", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Needs["FernandoDuarte`LongRunRisk`Model`Shocks`"]], 
         "ExpectedOutput" -> HoldForm[Null], "ActualOutput" -> HoldForm[Null],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.895362690198422*^9, "AbsoluteTimeUsed" -> 
         0.00003`1.6276362525516566, "CPUTimeUsed" -> 
         0.000031000000000336314`, "MemoryUsed" -> 3048|>], 
      7142511087904230636 -> 
      TestResultObject[<|
        "TestKey" -> 7142511087904230636, "TestID" -> 
         "Shocks_20230610-PJZSVW", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           MemberQ[$ContextPath, "FernandoDuarte`LongRunRisk`Model`Shocks`"]],
          "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
         HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.89536269020005*^9, 
         "AbsoluteTimeUsed" -> 0.000023`1.512242833849585, "CPUTimeUsed" -> 
         0.00002300000000010627, "MemoryUsed" -> 3296|>], 7383301500638909536 -> 
      TestResultObject[<|
        "TestKey" -> 7383301500638909536, "TestID" -> 
         "Shocks_20230610-R3SZX4", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Not[Names["*rulesE"] === {}]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 3.89536269020023*^9, 
         "AbsoluteTimeUsed" -> 0.014615`4.315313817525447, "CPUTimeUsed" -> 
         0.014618999999999716`, "MemoryUsed" -> 2808|>], 4945542067436470642 -> 
      TestResultObject[<|
        "TestKey" -> 4945542067436470642, "TestID" -> 
         "Shocks_20230610-LCIGAM", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[
             ReplaceAll[
              FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t], 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
            Table[
             ReplaceAll[
              FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
              Shocks`t, Shocks`ii], 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}]}], "ExpectedOutput" -> 
         HoldForm[{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0}}], "ActualOutput" -> 
         HoldForm[{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0}}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8953626902151213`*^9, "AbsoluteTimeUsed" -> 
         0.000211`2.4747974531296846, "CPUTimeUsed" -> 
         0.00021099999999973917`, "MemoryUsed" -> 4160|>], 
      3370521580128454745 -> 
      TestResultObject[<|
        "TestKey" -> 3370521580128454745, "TestID" -> 
         "Shocks_20230610-B7YF3O", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][
               Shocks`t]^2, 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
               Shocks`t, Shocks`ii]^2, 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}]}], "ExpectedOutput" -> 
         HoldForm[{{1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 1}}], "ActualOutput" -> 
         HoldForm[{{1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 1}}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.895362690215519*^9, "AbsoluteTimeUsed" -> 
         0.002985`3.6254593332973797, "CPUTimeUsed" -> 0.00302200000000008, 
         "MemoryUsed" -> 3080|>], 7307967660015208692 -> 
      TestResultObject[<|
        "TestKey" -> 7307967660015208692, "TestID" -> 
         "Shocks_20230610-5O0ERJ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][
               Shocks`t]^3, 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
               Shocks`t, Shocks`ii]^3, 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}]}], "ExpectedOutput" -> 
         HoldForm[{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0}}], "ActualOutput" -> 
         HoldForm[{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0}}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.895362690218701*^9, "AbsoluteTimeUsed" -> 
         0.002782`3.5948721234880194, "CPUTimeUsed" -> 0.0028209999999999624`,
          "MemoryUsed" -> 7368|>], 1229715719149949621 -> 
      TestResultObject[<|
        "TestKey" -> 1229715719149949621, "TestID" -> 
         "Shocks_20230610-6K6OZX", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][
               Shocks`t]^4, 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
               Shocks`t, Shocks`ii]^4, 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}]}], "ExpectedOutput" -> 
         HoldForm[{{3, 3, 3, 3, 3, 3, 3, 3}, {3, 3, 3}}], "ActualOutput" -> 
         HoldForm[{{3, 3, 3, 3, 3, 3, 3, 3}, {3, 3, 3}}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.895362690221675*^9, "AbsoluteTimeUsed" -> 
         0.003315`3.6709985305727817, "CPUTimeUsed" -> 0.0034119999999999706`,
          "MemoryUsed" -> 3016|>], 2807446292148059755 -> 
      TestResultObject[<|
        "TestKey" -> 2807446292148059755, "TestID" -> 
         "Shocks_20230610-8KJ8DP", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[
             If[Shocks`f === Shocks`g, 0, 
              ReplaceAll[
              FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t] 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][
                Shocks`t], 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]]], {
             Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}, {
             Shocks`g, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
               Shocks`t, Shocks`ii] 
              FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t], 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}, {
             Shocks`f, {"x", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
         "ExpectedOutput" -> 
         HoldForm[{{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0,
             0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
            0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 
            0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
            0}, {0, 0, 0, 0, 0, 0, 0}}}], "ActualOutput" -> 
         HoldForm[{{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0,
             0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
            0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 
            0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
            0}, {0, 0, 0, 0, 0, 0, 0}}}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.895362690225376*^9, 
         "AbsoluteTimeUsed" -> 0.001611`3.357610538251208, "CPUTimeUsed" -> 
         0.0016120000000001689`, "MemoryUsed" -> 7408|>], 9069282205536493383 -> 
      TestResultObject[<|
        "TestKey" -> 9069282205536493383, "TestID" -> 
         "Shocks_20230610-Z8UMT4", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Map[StringDelete[#, 
             StringExpression[
              Alternatives["FernandoDuarte", "`"], 
              BlankSequence[], "`"]]& , 
            Table[
             ToString[
              ReplaceAll[
              FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                Shocks`t, Shocks`ii] 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][Shocks`t], 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]]], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}]]], "ExpectedOutput" -> 
         HoldForm[{"taugd[1]", "taugd[i]", "taugd[j]"}], "ActualOutput" -> 
         HoldForm[{"taugd[1]", "taugd[i]", "taugd[j]"}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8953626902271852`*^9, "AbsoluteTimeUsed" -> 
         0.000094`2.1236428514316885, "CPUTimeUsed" -> 0.00009499999999995623,
          "MemoryUsed" -> 3192|>], 4180649005950367286 -> 
      TestResultObject[<|
        "TestKey" -> 4180649005950367286, "TestID" -> 
         "Shocks_20230610-DQXRBH", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][
               Shocks`t]^4, 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
               Shocks`t, Shocks`ii]^4, 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}]}], "ExpectedOutput" -> 
         HoldForm[{{3, 3, 3, 3, 3, 3, 3, 3}, {3, 3, 3}}], "ActualOutput" -> 
         HoldForm[{{3, 3, 3, 3, 3, 3, 3, 3}, {3, 3, 3}}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.895362690227466*^9, "AbsoluteTimeUsed" -> 
         0.00301`3.629081493425837, "CPUTimeUsed" -> 0.00309500000000007, 
         "MemoryUsed" -> 3016|>], 6075916845532546290 -> 
      TestResultObject[<|
        "TestKey" -> 6075916845532546290, "TestID" -> 
         "Shocks_20230610-S35S1M", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[
             If[Shocks`f === Shocks`g, 0, 
              ReplaceAll[
              FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][
                 Shocks`t]^2 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`g][
                Shocks`t], 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]]], {
             Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}, {
             Shocks`g, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
                Shocks`t, Shocks`ii]^2 
              FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][Shocks`t], 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}, {
             Shocks`f, {"x", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
         "ExpectedOutput" -> 
         HoldForm[{{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0,
             0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
            0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 
            0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
            0}, {0, 0, 0, 0, 0, 0, 0}}}], "ActualOutput" -> 
         HoldForm[{{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0,
             0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
            0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 
            0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
            0}, {0, 0, 0, 0, 0, 0, 0}}}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.895362690230709*^9, 
         "AbsoluteTimeUsed" -> 0.020655`4.4655401971445965, "CPUTimeUsed" -> 
         0.021021999999999874`, "MemoryUsed" -> 6336|>], 6578707605555853752 -> 
      TestResultObject[<|
        "TestKey" -> 6578707605555853752, "TestID" -> 
         "Shocks_20230610-EHYH2J", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[ReplaceAll[Shocks`expr, 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
             Shocks`expr, {Shocks`expr, 
              Table[
               FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][
               Shocks`t + 1], {
               Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
            Table[ReplaceAll[Shocks`expr, 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
             Shocks`expr, {Shocks`expr, 
              Table[
               FernandoDuarte`LongRunRisk`Model`Shocks`eps[
                ToExpression[Shocks`f]][Shocks`t], {
               Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
            Table[ReplaceAll[Shocks`expr, 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
             Shocks`expr, {Shocks`expr, {
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
               Shocks`t + 1, Shocks`i], 
               FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`dd][
               Shocks`t, Shocks`i]}}]}], "ExpectedOutput" -> 
         HoldForm[{{True, True, True, True, True, True, True, True}, {
            True, True, True, True, True, True, True, True}, {True, True}}], 
         "ActualOutput" -> 
         HoldForm[{{True, True, True, True, True, True, True, True}, {
            True, True, True, True, True, True, True, True}, {True, True}}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8953626902517033`*^9, "AbsoluteTimeUsed" -> 
         0.000447`2.8008225209639286, "CPUTimeUsed" -> 
         0.00044800000000044804`, "MemoryUsed" -> 3360|>], 
      7415102857777714797 -> 
      TestResultObject[<|
        "TestKey" -> 7415102857777714797, "TestID" -> 
         "Shocks_20230610-0H61YL", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[ReplaceAll[Shocks`expr, 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
             Shocks`expr, {Shocks`expr, 
              Table[
               FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f], {
               Shocks`f, {
                "x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}]}], 
            Table[ReplaceAll[
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"], 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
             FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}]}], "ExpectedOutput" -> 
         HoldForm[{{True, True, True, True, True, True, True, True}, {
            True, True, True}}], "ActualOutput" -> 
         HoldForm[{{True, True, True, True, True, True, True, True}, {
            True, True, True}}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.895362690252363*^9, 
         "AbsoluteTimeUsed" -> 0.000221`2.494907271517105, "CPUTimeUsed" -> 
         0.00022199999999994446`, "MemoryUsed" -> 3168|>], 
      8194527595666154344 -> 
      TestResultObject[<|
        "TestKey" -> 8194527595666154344, "TestID" -> 
         "Shocks_20230610-JVI7UX", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[ReplaceAll[Shocks`expr, 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
             Shocks`expr, {Shocks`expr, 
              Table[
               FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f], {
               Shocks`f, {
                "xx", "adc", "p", "rhobar", "ssg", "ssx", "sdc", "spi"}}]}], 
            Table[ReplaceAll[
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["ddd"], 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
             FernandoDuarte`LongRunRisk`Model`Shocks`eps["ddd"], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}]}], "ExpectedOutput" -> 
         HoldForm[{{True, True, True, True, True, True, True, True}, {
            True, True, True}}], "ActualOutput" -> 
         HoldForm[{{True, True, True, True, True, True, True, True}, {
            True, True, True}}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.895362690252777*^9, 
         "AbsoluteTimeUsed" -> 0.000213`2.4788946012707296, "CPUTimeUsed" -> 
         0.0002140000000001585, "MemoryUsed" -> 3168|>], 4043981452834957763 -> 
      TestResultObject[<|
        "TestKey" -> 4043981452834957763, "TestID" -> 
         "Shocks_20230610-QQ63CQ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[ReplaceAll[Shocks`expr, 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
             Shocks`expr, {Shocks`expr, 
              Table[
               FernandoDuarte`LongRunRisk`Model`Shocks`eps[Shocks`f][
               Shocks`tt], {
               Shocks`f, {
                "xx", "adc", "p", "rhobar", "ssg", "ssx", "sdc", "spi"}}, {
               Shocks`tt, {
                Shocks`t + 1, Shocks`t - 1, Shocks`s, Shocks`t + 
                 Shocks`h}}]}], 
            Table[ReplaceAll[Shocks`expr, 
               FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]] === 
             Shocks`expr, {Shocks`expr, 
              Table[
               FernandoDuarte`LongRunRisk`Model`Shocks`eps["dd"][
               Shocks`tt, Shocks`ii], {Shocks`ii, {1, Shocks`i, Shocks`j}}, {
               Shocks`tt, {
                Shocks`t + 1, Shocks`t - 1, Shocks`s, Shocks`t + 
                 Shocks`h}}]}]}], "ExpectedOutput" -> 
         HoldForm[{{True, True, True, True, True, True, True, True}, {
            True, True, True}}], "ActualOutput" -> 
         HoldForm[{{True, True, True, True, True, True, True, True}, {
            True, True, True}}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 3.8953626902534523`*^9, 
         "AbsoluteTimeUsed" -> 0.000404`2.7568963629425944, "CPUTimeUsed" -> 
         0.00039499999999970115`, "MemoryUsed" -> 3200|>], 
      5943745761881470241 -> 
      TestResultObject[<|
        "TestKey" -> 5943745761881470241, "TestID" -> 
         "Shocks_20230610-BFE4LW", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[
             ReplaceAll[
              NewContext`eps[Shocks`f][Shocks`t], 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
            Table[
             ReplaceAll[
              NewContext`eps["dd"][Shocks`t, Shocks`ii], 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}]}], "ExpectedOutput" -> 
         HoldForm[{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0}}], "ActualOutput" -> 
         HoldForm[{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0}}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8953626902541013`*^9, "AbsoluteTimeUsed" -> 
         0.000193`2.436072306839763, "CPUTimeUsed" -> 0.0001929999999998877, 
         "MemoryUsed" -> 4160|>], 5633333231626080910 -> 
      TestResultObject[<|
        "TestKey" -> 5633333231626080910, "TestID" -> 
         "Shocks_20230610-Q6UEUJ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/Shocks.wlt", "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[{
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps[Shocks`f][
               Shocks`t]^2, 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`f, {"x", "dc", "pi", "pibar", "sg", "sx", "sc", "sp"}}], 
            Table[
             ReplaceAll[
             FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps["dd"][
               Shocks`t, Shocks`ii]^2, 
              FernandoDuarte`LongRunRisk`Model`Shocks`rulesE[Shocks`t]], {
             Shocks`ii, {1, Shocks`i, Shocks`j}}]}], "ExpectedOutput" -> 
         HoldForm[{{1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 1}}], "ActualOutput" -> 
         HoldForm[{{1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 1}}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.895362690254496*^9, "AbsoluteTimeUsed" -> 
         0.003094`3.6410353071953403, "CPUTimeUsed" -> 0.0031680000000005037`,
          "MemoryUsed" -> 3016|>]|>, 
    "TestsSucceededKeys" -> {1117575516037880139, 7142511087904230636, 
     7383301500638909536, 4945542067436470642, 3370521580128454745, 
     7307967660015208692, 1229715719149949621, 2807446292148059755, 
     9069282205536493383, 4180649005950367286, 6075916845532546290, 
     6578707605555853752, 7415102857777714797, 8194527595666154344, 
     4043981452834957763, 5943745761881470241, 5633333231626080910}, 
    "TestsFailedWrongResultsKeys" -> {}, "TestsFailedWithMessagesKeys" -> {}, 
    "TestsFailedWithErrorsKeys" -> {}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.895362690413659*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"7cc380a7-879c-4c0a-8be7-cbfb081bcdd3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interactive Tests", "Subsection",
 CellChangeTimes->{{3.889905622471089*^9, 3.889905629759961*^9}, {
  3.889972063478182*^9, 
  3.889972065236586*^9}},ExpressionUUID->"110fa690-a939-4013-acf2-\
a07d9942e533"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"packageFileName", "=", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DirectoryName", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "2"}], "]"}], ",", 
     "\"\<Kernel\>\"", ",", "\"\<Model\>\"", ",", 
     RowBox[{
      RowBox[{"FileBaseName", "[", 
       RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", "\"\<.wl\>\""}]}],
     "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", 
  RowBox[{
   RowBox[{"\"\<FernandoDuarte`LongRunRisk`Model`\>\"", "<>", 
    RowBox[{"FileBaseName", "[", 
     RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", "\"\<`\>\""}], ",", 
   "packageFileName"}], "]"}]}], "Input",
 CellChangeTimes->{{3.889968360919714*^9, 3.889968361169221*^9}, {
   3.889998753242611*^9, 3.8899987613556004`*^9}, 3.890825576987958*^9, {
   3.890987450098063*^9, 3.8909874502616673`*^9}, {3.8913139456297817`*^9, 
   3.891313945811431*^9}, {3.891313975885231*^9, 3.8913139761850777`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"77f983dd-5a7a-48fb-8b9e-40e0b6bd9c47"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Kernel/Model/Shocks.wl\"\>"], "Output",
 CellChangeTimes->{3.895362587873019*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"c6c06dbe-33ef-47de-8eca-15395884a21f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"should", " ", "all", " ", "give", " ", "zero"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"0", "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}], "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
          "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
          "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"0", "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
          RowBox[{"t", ",", "ii"}], "]"}], "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.889965468632722*^9, 3.889965535681717*^9}, {
  3.889965687921562*^9, 3.889965719041513*^9}, {3.8899657564745703`*^9, 
  3.8899657868805656`*^9}, {3.889965818275572*^9, 3.88996587402346*^9}, {
  3.8899660417909737`*^9, 3.889966042024665*^9}, {3.889967536877624*^9, 
  3.88996754071059*^9}, {3.8900165538878927`*^9, 3.89001658162351*^9}, {
  3.890016737000123*^9, 3.890016738407667*^9}, {3.890016800216386*^9, 
  3.890016807685783*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"2dfc73dc-9874-44f6-99c5-c5e524d0d887"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8953625879344263`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"af37e51d-0873-4645-90c3-1af5cbc1eb0c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8953625879353247`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"ba7eef25-52b1-4ffc-823c-9f7071d04fb6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"should", " ", "all", " ", "give", " ", "one"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"1", "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}], "^", "2"}], "/.", 
         
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
          "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
          "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"1", "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
           RowBox[{"t", ",", "ii"}], "]"}], "^", "2"}], "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.889966121134981*^9, 3.889966129513671*^9}, {
  3.8899675430265427`*^9, 3.889967546703742*^9}, {3.890016583815317*^9, 
  3.890016592774984*^9}, {3.890016733215493*^9, 3.890016734665518*^9}, {
  3.890016813177075*^9, 3.890016818682664*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"71c0d248-cf19-479f-94a0-7aad059cee6f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8953625879621696`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"4d38a2f5-d321-41d3-bb61-351ef32e538e"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.895362587963253*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"b498365b-1b88-496f-9d03-6bfdb67433e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"should", " ", "all", " ", "give", " ", "zero"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"0", "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}], "^", "3"}], "/.", 
         
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
          "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
          "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"0", "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
           RowBox[{"t", ",", "ii"}], "]"}], "^", "3"}], "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.889966137593294*^9, 3.889966157676291*^9}, {
  3.8899675483847713`*^9, 3.889967551583518*^9}, {3.890016598169224*^9, 
  3.890016599024119*^9}, {3.8900166398231497`*^9, 3.8900166447507772`*^9}, {
  3.890016728032583*^9, 3.8900167295430813`*^9}, {3.890016823054276*^9, 
  3.890016828517232*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"94047c1a-8725-44f4-ac9f-feb42bcb9445"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8953625879723263`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"96928531-8844-4b67-aabe-3bed7b70e677"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.895362587973282*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"e849f778-dcc7-4988-848d-4fd386b228af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"should", " ", "all", " ", "give", " ", "three"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"3", "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}], "^", "4"}], "/.", 
         
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
          "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
          "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"3", "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
           RowBox[{"t", ",", "ii"}], "]"}], "^", "4"}], "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8899661404752703`*^9, 3.889966162544742*^9}, {
  3.88996755330625*^9, 3.8899675539045153`*^9}, {3.890016601009963*^9, 
  3.890016602175623*^9}, {3.890016647031019*^9, 3.890016654765329*^9}, {
  3.890016724631262*^9, 3.890016725648046*^9}, {3.890016832581925*^9, 
  3.8900168622944813`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"d3d28ca6-8af9-4491-966a-9f486632a1b2"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.895362587978765*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"cefbaae3-b762-4200-92be-bcbc4a423240"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.895362587979752*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"24df2832-1a84-43b2-9d20-f6d9bc6e8ae9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"should", " ", "all", " ", "give", " ", "zero"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"0", "===", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"f", "===", "g"}], ",", "0", ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}], "*", 
             RowBox[{
              RowBox[{"eps", "[", "g", "]"}], "[", "t", "]"}]}], "/.", 
            RowBox[{"rulesE", "[", "t", "]"}]}]}], "]"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"f", ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
            "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
            "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"g", ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
            "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
            "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"0", "===", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
             RowBox[{"t", ",", "ii"}], "]"}], "*", 
            RowBox[{
             RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}]}], "/.", 
           RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"f", ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<x\>\"", ",", "\"\<pi\>\"", ",", "\"\<pibar\>\"", ",", 
            "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", "\"\<sc\>\"", ",", 
            "\"\<sp\>\""}], "}"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.889966171785048*^9, 3.889966259267709*^9}, {
   3.88996755849631*^9, 3.889967559615136*^9}, {3.890016604049556*^9, 
   3.890016605279772*^9}, {3.890016664063781*^9, 3.890016667093809*^9}, 
   3.890016719343944*^9, {3.89001688967313*^9, 3.890016972670947*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"a7d66a75-eb75-4db5-8559-b86f3e46ec2c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.895362587989831*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"d4038ea7-6426-47b2-a2a7-8f114a1161d0"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.895362587990815*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"aaf2ea04-783b-4386-9d18-9068522c4a56"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"should", " ", "all", " ", "give", " ", 
    RowBox[{"taugd", "[", "ii", "]"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<taugd[1]\>\"", ",", "\"\<taugd[i]\>\"", ",", "\"\<taugd[j]\>\""}], 
      "}"}], "===", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"StringDelete", "[", 
         RowBox[{"#", ",", 
          RowBox[{
           RowBox[{"\"\<FernandoDuarte\>\"", "|", "\"\<`\>\""}], "~~", "__", 
           "~~", "\"\<`\>\""}]}], "]"}], "&"}], "/@", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ToString", "@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
              RowBox[{"t", ",", "ii"}], "]"}], "*", 
             RowBox[{
              RowBox[{"eps", "[", "\"\<dc\>\"", "]"}], "[", "t", "]"}]}], "/.", 
            RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}]}], ")"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.889966276655841*^9, 3.889966329628468*^9}, 
   3.889966470569511*^9, {3.8899666206897087`*^9, 3.889966642167533*^9}, {
   3.8899666930281763`*^9, 3.889966714268526*^9}, {3.889966746437366*^9, 
   3.8899668192799807`*^9}, 3.889966968372637*^9, {3.890016685103952*^9, 
   3.890016706173997*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"77f48b1e-39a4-4398-8e14-b61e1b5bb4b2"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8953625879965773`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"f44bb9fd-5843-4b14-bb6b-42fced5bb71e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"should", " ", "all", " ", "give", " ", "three"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"3", "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}], "^", "4"}], "/.", 
         
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
          "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
          "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"3", "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
           RowBox[{"t", ",", "ii"}], "]"}], "^", "4"}], "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.889966177455817*^9, 3.889966177853951*^9}, {
  3.889966992360574*^9, 3.889966992849523*^9}, {3.8899675664876623`*^9, 
  3.889967570401917*^9}, {3.890016610865726*^9, 3.890016612256692*^9}, {
  3.890016748169524*^9, 3.890016753197629*^9}, {3.890016979912045*^9, 
  3.890016985910692*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"41addf54-ea48-4c50-bf60-96c814dcbe5e"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8953625880061626`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"bcf2bf0f-da16-4ebe-93f9-3612d73b6453"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8953625880071487`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"42e92361-6139-4b3d-855b-705e2c1c5829"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"should", " ", "all", " ", "give", " ", "zero"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"0", "===", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"f", "===", "g"}], ",", "0", ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}], "^", "2"}], 
             "*", 
             RowBox[{
              RowBox[{"eps", "[", "g", "]"}], "[", "t", "]"}]}], "/.", 
            RowBox[{"rulesE", "[", "t", "]"}]}]}], "]"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"f", ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
            "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
            "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"g", ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
            "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
            "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"0", "===", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
              RowBox[{"t", ",", "ii"}], "]"}], "^", "2"}], "*", 
            RowBox[{
             RowBox[{"eps", "[", "f", "]"}], "[", "t", "]"}]}], "/.", 
           RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"f", ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<x\>\"", ",", "\"\<pi\>\"", ",", "\"\<pibar\>\"", ",", 
            "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", "\"\<sc\>\"", ",", 
            "\"\<sp\>\""}], "}"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8899675877972183`*^9, 3.889967602226403*^9}, {
  3.8900166143143044`*^9, 3.890016615313992*^9}, {3.8900167583453693`*^9, 
  3.8900167602455273`*^9}, {3.89001699365699*^9, 3.890017007454585*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"26f91dcc-6134-4ff7-ad9c-74f7ed4468e0"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.895362588026815*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"fcf40548-2291-4fee-8917-cf9627a4c929"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8953625880363607`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"4197c1d3-8518-434d-a0ce-f757f5c44df1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"should", " ", "all", " ", "return", " ", "true"}], ",", " ", 
    RowBox[{
    "confirming", " ", "that", " ", "rulesE", " ", "returns", " ", "same", 
     " ", "expression", " ", "unevaluated"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"expr", "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "expr"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"expr", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", "f", "]"}], "[", 
           RowBox[{"t", "+", "1"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
              "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
              "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], "]"}]}], 
       "}"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"expr", "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "expr"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"expr", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", 
            RowBox[{"ToExpression", "@", "f"}], "]"}], "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
              "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
              "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], "]"}]}], 
       "}"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"expr", "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "expr"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"expr", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
           RowBox[{
            RowBox[{"t", "+", "1"}], ",", "i"}], "]"}], ",", 
          RowBox[{
           RowBox[{"eps", "[", "dd", "]"}], "[", 
           RowBox[{"t", ",", "i"}], "]"}]}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.889965468632722*^9, 3.889965535681717*^9}, {
   3.889965687921562*^9, 3.889965748623394*^9}, {3.889965898517263*^9, 
   3.889965927180188*^9}, {3.8899670123313913`*^9, 3.889967110342752*^9}, {
   3.889967191054615*^9, 3.889967303783434*^9}, {3.89001661779342*^9, 
   3.890016621056472*^9}, 3.8900167671909723`*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"9e829da2-205b-44fa-9e15-21f48d820e5f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.895362588039626*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"792ea0c6-e5f9-4588-8e9a-6add9f7d261c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8953625880407667`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"b5b36499-97b3-4fd2-a4a6-30238e3d341d"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.895362588041501*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"e03538fe-5c53-4049-b7bd-7cd2bd8cb06c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"should", " ", "all", " ", "return", " ", "true"}], ",", " ", 
    RowBox[{
    "confirming", " ", "that", " ", "rulesE", " ", "returns", " ", "same", 
     " ", "expression", " ", "unevaluated"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"expr", "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "expr"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"expr", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"eps", "[", "f", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
              "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
              "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], "]"}]}], 
       "}"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", 
       RowBox[{"eps", "[", "\"\<dd\>\"", "]"}]}], "\[IndentingNewLine]", ",", 
      
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.889965945368053*^9, 3.889965955550915*^9}, 
   3.889967308405003*^9, {3.889967351208173*^9, 3.889967389985118*^9}, 
   3.890016622216301*^9, {3.8900167738332148`*^9, 3.890016774829447*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"4c16b666-deb6-4987-8dcc-8aab6d8299ab"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.895362588050639*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"e8995311-6726-4236-a465-bc0d803c6e67"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.895362588051705*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"58797511-5d83-47c0-b2ec-c503fee92e3e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"should", " ", "all", " ", "return", " ", "true"}], ",", " ", 
    RowBox[{
    "confirming", " ", "that", " ", "rulesE", " ", "returns", " ", "same", 
     " ", "expression", " ", "unevaluated"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"expr", "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "expr"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"expr", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"eps", "[", "f", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<xx\>\"", ",", "\"\<adc\>\"", ",", "\"\<p\>\"", ",", 
              "\"\<rhobar\>\"", ",", "\"\<ssg\>\"", ",", "\"\<ssx\>\"", ",", 
              "\"\<sdc\>\"", ",", "\"\<spi\>\""}], "}"}]}], "}"}]}], "]"}]}], 
       "}"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"eps", "[", "\"\<ddd\>\"", "]"}], "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", 
       RowBox[{"eps", "[", "\"\<ddd\>\"", "]"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.889966053895102*^9, 3.8899660943950768`*^9}, 
   3.88996731051445*^9, {3.889967405843053*^9, 3.88996742813382*^9}, {
   3.8900166244167767`*^9, 3.890016625279937*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"02b5060b-5840-4cc6-a0d0-f444ab39ba3e"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.895362588055943*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"00a44649-4020-4030-afc3-46ef9220fa53"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.895362588056967*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"4cde7ea6-79a7-40f9-a547-441b310798f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"should", " ", "all", " ", "return", " ", "true"}], ",", " ", 
    RowBox[{
    "confirming", " ", "that", " ", "rulesE", " ", "returns", " ", "same", 
     " ", "expression", " ", "unevaluated"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"expr", "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "expr"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"expr", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", "f", "]"}], "[", "tt", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<xx\>\"", ",", "\"\<adc\>\"", ",", "\"\<p\>\"", ",", 
              "\"\<rhobar\>\"", ",", "\"\<ssg\>\"", ",", "\"\<ssx\>\"", ",", 
              "\"\<sdc\>\"", ",", "\"\<spi\>\""}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"tt", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"t", "+", "1"}], ",", 
              RowBox[{"t", "-", "1"}], ",", "s", ",", 
              RowBox[{"t", "+", "h"}]}], "}"}]}], "}"}]}], "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"expr", "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}], "===", "expr"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"expr", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", "\"\<dd\>\"", "]"}], "[", 
           RowBox[{"tt", ",", "ii"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"ii", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"tt", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"t", "+", "1"}], ",", 
              RowBox[{"t", "-", "1"}], ",", "s", ",", 
              RowBox[{"t", "+", "h"}]}], "}"}]}], "}"}]}], "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.889965962245503*^9, 3.889966019800927*^9}, 
   3.889967313667658*^9, {3.889967436454067*^9, 3.889967519755422*^9}, {
   3.890016627163189*^9, 3.890016628977816*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"fd59bfd6-0526-4d91-8edf-d3cef9d6ee95"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8953625880661716`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"2c7fb1a1-df56-46f6-a815-2c8907de8bd2"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.895362588067271*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"970c1e15-4614-4d59-b9e3-40efd284588a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"should", " ", "all", " ", "give", " ", "zero"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"0", "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"NewContext`eps", "[", "f", "]"}], "[", "t", "]"}], "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
          "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
          "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"0", "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"NewContext`eps", "[", "\"\<dd\>\"", "]"}], "[", 
          RowBox[{"t", ",", "ii"}], "]"}], "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.889965468632722*^9, 3.889965535681717*^9}, {
  3.889965687921562*^9, 3.889965719041513*^9}, {3.8899657564745703`*^9, 
  3.8899657868805656`*^9}, {3.889965818275572*^9, 3.88996587402346*^9}, {
  3.8899660417909737`*^9, 3.889966042024665*^9}, {3.889967536877624*^9, 
  3.88996754071059*^9}, {3.8900165538878927`*^9, 3.89001658162351*^9}, {
  3.890016737000123*^9, 3.890016738407667*^9}, {3.890016800216386*^9, 
  3.890016807685783*^9}, {3.8921231727183647`*^9, 3.8921231824244347`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"8db86947-a5d4-4fa2-9739-736685d119e7"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.895362588071179*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"2a127e80-89db-460e-8f3e-5d25693c2d49"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.89536258807215*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"c8af47ad-8ae6-4af8-be79-2c73ef923d74"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"should", " ", "all", " ", "give", " ", "one"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"1", "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps", "[", "f", 
            "]"}], "[", "t", "]"}], "^", "2"}], "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<x\>\"", ",", "\"\<dc\>\"", ",", "\"\<pi\>\"", ",", 
          "\"\<pibar\>\"", ",", "\"\<sg\>\"", ",", "\"\<sx\>\"", ",", 
          "\"\<sc\>\"", ",", "\"\<sp\>\""}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"1", "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`Shocks`Private`eps", "[", 
            "\"\<dd\>\"", "]"}], "[", 
           RowBox[{"t", ",", "ii"}], "]"}], "^", "2"}], "/.", 
         RowBox[{"rulesE", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "i", ",", "j"}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.889966121134981*^9, 3.889966129513671*^9}, {
  3.8899675430265427`*^9, 3.889967546703742*^9}, {3.890016583815317*^9, 
  3.890016592774984*^9}, {3.890016733215493*^9, 3.890016734665518*^9}, {
  3.890016813177075*^9, 3.890016818682664*^9}, {3.8921234241138163`*^9, 
  3.8921234389938107`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"3f54fbff-f324-4f3e-b3bc-0dea54295dde"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.895362588082768*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"b894ef26-e553-43c6-9759-24876e452b72"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8953625880838957`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"6af35651-b204-4773-8279-ec8307be5649"]
}, Open  ]]
}, Closed]]
},
WindowSize->{863, 801},
WindowMargins->{{Automatic, 237}, {Automatic, 3}},
WindowStatusArea->"",
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.25 Inherited,
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (January 30, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"8a2fa114-2632-48cd-95a6-be23d2dae59c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 215, 4, 37, "Input",ExpressionUUID->"4f3f1a60-cc68-4ae9-bddd-46c77aa4048b"],
Cell[776, 26, 2000, 42, 220, "Input",ExpressionUUID->"ab6d9e49-903f-4057-a633-2e798b92a515"],
Cell[CellGroupData[{
Cell[2801, 72, 255, 4, 67, "Subsection",ExpressionUUID->"5216b0c6-0b30-4607-beca-83054aa122f9"],
Cell[3059, 78, 385, 10, 37, "Input",ExpressionUUID->"7e75b048-8961-47de-91cb-6d1bd22efb8c"],
Cell[CellGroupData[{
Cell[3469, 92, 436, 9, 64, "Input",ExpressionUUID->"7c745d6c-f8d5-490b-9a4e-eab39840f4de"],
Cell[3908, 103, 195, 2, 42, "Output",ExpressionUUID->"ecabf5cd-d6ec-4b0c-b0b5-6f7fb2297b83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4140, 110, 193, 3, 37, "Input",ExpressionUUID->"9bbb6f3f-a98d-4f9c-ad17-544ce59b7b2a"],
Cell[4336, 115, 163, 2, 42, "Output",ExpressionUUID->"0f057ac0-a65d-43b4-a61a-81d1927476d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4536, 122, 1076, 17, 90, "Input",ExpressionUUID->"27b72c9c-3767-4dd9-883c-12b885785f0a"],
Cell[CellGroupData[{
Cell[5637, 143, 365, 9, 29, "Print",ExpressionUUID->"fd42c15a-8ebc-41ba-8af2-6263aacbd020"],
Cell[6005, 154, 263, 5, 29, "Print",ExpressionUUID->"c9d6505b-3d06-49bd-a433-733e675d1e32"]
}, Open  ]],
Cell[6283, 162, 4796, 87, 69, "Output",ExpressionUUID->"d0637161-1a84-4747-bbf9-3c20250dee38"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11116, 254, 959, 17, 90, "Input",ExpressionUUID->"565bb1f7-e9c6-4ed3-b28a-a5d567ae3826"],
Cell[CellGroupData[{
Cell[12100, 275, 365, 9, 29, "Print",ExpressionUUID->"e74a89d9-6c2e-4db6-a44b-0eb04962ea0a"],
Cell[12468, 286, 262, 5, 29, "Print",ExpressionUUID->"7203910a-b666-4456-8707-914b159d8966"]
}, Open  ]],
Cell[12745, 294, 5003, 91, 69, "Output",ExpressionUUID->"469c8097-8e3c-4be5-8d69-81526b2d6a18"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17785, 390, 741, 15, 116, "Input",ExpressionUUID->"3ca54cb5-c283-4f3b-8e12-834ba756dc26"],
Cell[CellGroupData[{
Cell[18551, 409, 365, 9, 29, "Print",ExpressionUUID->"65cb2ce0-64b3-44ea-9582-7677b280f00f"],
Cell[18919, 420, 262, 5, 29, "Print",ExpressionUUID->"059c31bb-727f-4830-b0df-d3e89060c542"]
}, Open  ]],
Cell[19196, 428, 5024, 91, 69, "Output",ExpressionUUID->"3bda0d18-9683-494b-a38e-ab3924345f82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24257, 524, 2451, 50, 402, "Input",ExpressionUUID->"59480a4b-bd79-4729-a954-787da9c6bd4a"],
Cell[CellGroupData[{
Cell[26733, 578, 365, 9, 29, "Print",ExpressionUUID->"60a9e712-af9f-4300-8be8-7a053063f003"],
Cell[27101, 589, 263, 5, 29, "Print",ExpressionUUID->"ab71d870-1d03-480e-a5e5-27c6aaa24022"]
}, Open  ]],
Cell[27379, 597, 7017, 123, 69, "Output",ExpressionUUID->"321916d4-c944-4a49-9a55-8d412ee4381d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34433, 725, 2073, 48, 376, "Input",ExpressionUUID->"47f4c0e3-a3cf-4b90-9890-6fdd8e20e5d0"],
Cell[CellGroupData[{
Cell[36531, 777, 367, 9, 29, "Print",ExpressionUUID->"43add517-0775-49fa-8076-3b50596b5db4"],
Cell[36901, 788, 263, 5, 29, "Print",ExpressionUUID->"81b70c89-0256-4e96-a780-5831e0c8d0a9"]
}, Open  ]],
Cell[37179, 796, 7690, 132, 69, "Output",ExpressionUUID->"5e44b615-7a56-4ede-a7be-751c6dac1885"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44906, 933, 2042, 47, 350, "Input",ExpressionUUID->"8f45a60c-12d1-47b3-95b3-29eeef517d37"],
Cell[CellGroupData[{
Cell[46973, 984, 365, 9, 29, "Print",ExpressionUUID->"dc1d4f46-188a-4478-8303-74268cc6639b"],
Cell[47341, 995, 265, 5, 29, "Print",ExpressionUUID->"55da281d-5d54-4939-9694-5b708cc0351d"]
}, Open  ]],
Cell[47621, 1003, 8261, 140, 69, "Output",ExpressionUUID->"34b9e1b9-d67c-4f34-9fdc-06bf6ca04b1a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55919, 1148, 2077, 48, 376, "Input",ExpressionUUID->"34c5906b-b701-4e99-ac6d-68e658cecc0f"],
Cell[CellGroupData[{
Cell[58021, 1200, 367, 9, 29, "Print",ExpressionUUID->"3755a6a6-3b0a-4aec-90b8-92c070e6c359"],
Cell[58391, 1211, 263, 5, 29, "Print",ExpressionUUID->"d6442270-8d8f-4a54-955e-53e243dd76ea"]
}, Open  ]],
Cell[58669, 1219, 8868, 149, 69, "Output",ExpressionUUID->"31d8af40-7aaa-430f-a508-732ae0b0e6e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67574, 1373, 2992, 70, 428, "Input",ExpressionUUID->"ac65904e-36a9-4c48-8329-9424b41234c5"],
Cell[CellGroupData[{
Cell[70591, 1447, 365, 9, 29, "Print",ExpressionUUID->"7636729e-2280-4cca-8e62-780f57bbf351"],
Cell[70959, 1458, 262, 5, 29, "Print",ExpressionUUID->"2baf7a58-8676-41d8-ad63-320cd1fe516a"]
}, Open  ]],
Cell[71236, 1466, 12115, 194, 69, "Output",ExpressionUUID->"e9b89878-ab66-4851-81b9-c97293111b27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83388, 1665, 1767, 40, 195, "Input",ExpressionUUID->"8425dca0-fd15-42a1-8e6b-e6fb544a45b1"],
Cell[CellGroupData[{
Cell[85180, 1709, 365, 9, 29, "Print",ExpressionUUID->"2979722d-86d3-45d8-9115-99d2c3f693ed"],
Cell[85548, 1720, 265, 5, 29, "Print",ExpressionUUID->"d10bfea9-2eee-4641-b340-7d288710d372"]
}, Open  ]],
Cell[85828, 1728, 10557, 175, 69, "Output",ExpressionUUID->"bd56cbda-8feb-45a3-a712-226ce3c6206b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96422, 1908, 2120, 48, 376, "Input",ExpressionUUID->"c7178cc4-faa6-4799-b297-497d10856f43"],
Cell[CellGroupData[{
Cell[98567, 1960, 365, 9, 29, "Print",ExpressionUUID->"e87e7613-3654-413b-9829-9b1a79912327"],
Cell[98935, 1971, 262, 5, 29, "Print",ExpressionUUID->"e9ecc716-0b84-415c-9d40-68ba1f716819"]
}, Open  ]],
Cell[99212, 1979, 11328, 184, 69, "Output",ExpressionUUID->"23810a74-65e9-40ad-af31-cb5dddbc3a1b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110577, 2168, 2978, 70, 402, "Input",ExpressionUUID->"6c9f977c-c7f8-4829-9121-f90a2c87c257"],
Cell[CellGroupData[{
Cell[113580, 2242, 367, 9, 29, "Print",ExpressionUUID->"70b78825-04cf-4f35-a65c-8f9f9fbb6516"],
Cell[113950, 2253, 263, 5, 29, "Print",ExpressionUUID->"fe2497e0-69c0-45c4-958c-1a7c407a1b69"]
}, Open  ]],
Cell[114228, 2261, 14632, 233, 69, "Output",ExpressionUUID->"8363fd9d-a4d6-46b0-984c-c17f0ece25e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128897, 2499, 3764, 89, 636, "Input",ExpressionUUID->"e65fd894-d9b6-444c-a52d-afb666f1e5bc"],
Cell[CellGroupData[{
Cell[132686, 2592, 365, 9, 29, "Print",ExpressionUUID->"31e10b45-a896-47d6-a28b-d9d0d24a832f"],
Cell[133054, 2603, 265, 5, 29, "Print",ExpressionUUID->"28db4baa-ad71-4daf-9124-9902fe1453d2"]
}, Open  ]],
Cell[133334, 2611, 15858, 255, 69, "Output",ExpressionUUID->"b00827df-d274-400b-a591-fb467b6cdc63"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149229, 2871, 2448, 56, 454, "Input",ExpressionUUID->"f6a47068-4ccb-4fea-9136-2dc604d17939"],
Cell[CellGroupData[{
Cell[151702, 2931, 367, 9, 29, "Print",ExpressionUUID->"fac209fe-c737-47e6-9374-b6ab804658c7"],
Cell[152072, 2942, 263, 5, 29, "Print",ExpressionUUID->"50eeb44f-6e12-40b7-ab44-cfb085260ceb"]
}, Open  ]],
Cell[152350, 2950, 15133, 242, 69, "Output",ExpressionUUID->"3881fcfc-2d81-48b1-b3c4-4d55a35b00b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167520, 3197, 2539, 57, 480, "Input",ExpressionUUID->"914981bf-41ce-4fda-9d3a-e450b0107da7"],
Cell[CellGroupData[{
Cell[170084, 3258, 365, 9, 29, "Print",ExpressionUUID->"d2461f1c-1bc9-4c05-95d0-4f7306dc8a48"],
Cell[170452, 3269, 263, 5, 29, "Print",ExpressionUUID->"df247cdc-d82e-4311-a89b-65af967b20e3"]
}, Open  ]],
Cell[170730, 3277, 16062, 255, 69, "Output",ExpressionUUID->"75807fac-bd10-4be2-8d0f-9360e85c0def"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186829, 3537, 3322, 77, 558, "Input",ExpressionUUID->"06d2e2ec-ced8-46ed-a22e-1d614e760ba6"],
Cell[CellGroupData[{
Cell[190176, 3618, 365, 9, 29, "Print",ExpressionUUID->"8bdcc968-17cc-4a0c-b3a5-7b5d414bb145"],
Cell[190544, 3629, 263, 5, 29, "Print",ExpressionUUID->"bf3dfee0-005d-470d-80fa-9a5fb4151531"]
}, Open  ]],
Cell[190822, 3637, 17869, 285, 69, "Output",ExpressionUUID->"5d7bff3a-b910-408f-934a-175bf5618fbd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208728, 3927, 2525, 51, 402, "Input",ExpressionUUID->"8441869b-d2b5-42f4-b9e2-b0fe622f4eae"],
Cell[CellGroupData[{
Cell[211278, 3982, 365, 9, 29, "Print",ExpressionUUID->"1e1040ed-4564-4483-bf6f-7b514c2adcbc"],
Cell[211646, 3993, 263, 5, 29, "Print",ExpressionUUID->"f8df0b08-486c-45aa-9d6d-145d2184fa06"]
}, Open  ]],
Cell[211924, 4001, 16902, 267, 69, "Output",ExpressionUUID->"bc9cd24c-9f84-4f37-8fca-7dce27fa4b5c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228863, 4273, 2261, 52, 454, "Input",ExpressionUUID->"687cf478-d5ea-420d-9b1b-a0c92484ec3a"],
Cell[CellGroupData[{
Cell[231149, 4329, 367, 9, 29, "Print",ExpressionUUID->"4788e7b2-4a08-490d-821b-01971f9bba4b"],
Cell[231519, 4340, 263, 5, 29, "Print",ExpressionUUID->"5dcfbd9e-fa12-4bbe-a7c0-0ce29b1ae7f3"]
}, Open  ]],
Cell[231797, 4348, 17799, 282, 69, "Output",ExpressionUUID->"00da07fc-1387-43b9-93ab-2205837532ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249633, 4635, 195, 3, 37, "Input",ExpressionUUID->"2f383e79-a813-4173-8302-13431f2ea3e7"],
Cell[249831, 4640, 162, 2, 42, "Output",ExpressionUUID->"5dd4b021-2348-4140-9b23-321faac0b2c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[250030, 4647, 5058, 117, 1208, "Input",ExpressionUUID->"8b99a72e-896a-4e7c-9c93-08ce6ec86323"],
Cell[255091, 4766, 385, 8, 121, "Output",ExpressionUUID->"782e0463-5940-4a5b-8501-576078b022a7"],
Cell[255479, 4776, 153, 2, 42, "Output",ExpressionUUID->"18335e1f-644d-45fc-9495-0336d7a4060c"],
Cell[255635, 4780, 383, 8, 121, "Output",ExpressionUUID->"f43338f1-87cf-47e8-b2c2-5798231834e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256055, 4793, 219, 4, 37, "Input",ExpressionUUID->"be6ba0ec-dcd9-4861-85ab-395df1e6baec"],
Cell[256277, 4799, 35162, 646, 96, "Output",ExpressionUUID->"7cc380a7-879c-4c0a-8be7-cbfb081bcdd3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[291488, 5451, 214, 4, 67, "Subsection",ExpressionUUID->"110fa690-a939-4013-acf2-a07d9942e533"],
Cell[CellGroupData[{
Cell[291727, 5459, 1082, 23, 142, "Input",ExpressionUUID->"77f983dd-5a7a-48fb-8b9e-40e0b6bd9c47"],
Cell[292812, 5484, 243, 3, 69, "Output",ExpressionUUID->"c6c06dbe-33ef-47de-8eca-15395884a21f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293092, 5492, 1912, 47, 246, "Input",ExpressionUUID->"2dfc73dc-9874-44f6-99c5-c5e524d0d887"],
Cell[295007, 5541, 153, 2, 42, "Output",ExpressionUUID->"af37e51d-0873-4645-90c3-1af5cbc1eb0c"],
Cell[295163, 5545, 153, 2, 42, "Output",ExpressionUUID->"ba7eef25-52b1-4ffc-823c-9f7071d04fb6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295353, 5552, 1791, 47, 246, "Input",ExpressionUUID->"71c0d248-cf19-479f-94a0-7aad059cee6f"],
Cell[297147, 5601, 154, 2, 42, "Output",ExpressionUUID->"4d38a2f5-d321-41d3-bb61-351ef32e538e"],
Cell[297304, 5605, 152, 2, 42, "Output",ExpressionUUID->"b498365b-1b88-496f-9d03-6bfdb67433e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297493, 5612, 1847, 48, 246, "Input",ExpressionUUID->"94047c1a-8725-44f4-ac9f-feb42bcb9445"],
Cell[299343, 5662, 154, 2, 42, "Output",ExpressionUUID->"96928531-8844-4b67-aabe-3bed7b70e677"],
Cell[299500, 5666, 152, 2, 42, "Output",ExpressionUUID->"e849f778-dcc7-4988-848d-4fd386b228af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299689, 5673, 1845, 48, 246, "Input",ExpressionUUID->"d3d28ca6-8af9-4491-966a-9f486632a1b2"],
Cell[301537, 5723, 152, 2, 42, "Output",ExpressionUUID->"cefbaae3-b762-4200-92be-bcbc4a423240"],
Cell[301692, 5727, 152, 2, 42, "Output",ExpressionUUID->"24df2832-1a84-43b2-9d20-f6d9bc6e8ae9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301881, 5734, 2882, 72, 298, "Input",ExpressionUUID->"a7d66a75-eb75-4db5-8559-b86f3e46ec2c"],
Cell[304766, 5808, 152, 2, 42, "Output",ExpressionUUID->"d4038ea7-6426-47b2-a2a7-8f114a1161d0"],
Cell[304921, 5812, 152, 2, 42, "Output",ExpressionUUID->"aaf2ea04-783b-4386-9d18-9068522c4a56"]
}, Open  ]],
Cell[CellGroupData[{
Cell[305110, 5819, 1736, 43, 195, "Input",ExpressionUUID->"77f48b1e-39a4-4398-8e14-b61e1b5bb4b2"],
Cell[306849, 5864, 154, 2, 42, "Output",ExpressionUUID->"f44bb9fd-5843-4b14-bb6b-42fced5bb71e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307040, 5871, 1842, 48, 246, "Input",ExpressionUUID->"41addf54-ea48-4c50-bf60-96c814dcbe5e"],
Cell[308885, 5921, 154, 2, 42, "Output",ExpressionUUID->"bcf2bf0f-da16-4ebe-93f9-3612d73b6453"],
Cell[309042, 5925, 154, 2, 42, "Output",ExpressionUUID->"42e92361-6139-4b3d-855b-705e2c1c5829"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309233, 5932, 2903, 74, 298, "Input",ExpressionUUID->"26f91dcc-6134-4ff7-ad9c-74f7ed4468e0"],
Cell[312139, 6008, 152, 2, 42, "Output",ExpressionUUID->"fcf40548-2291-4fee-8917-cf9627a4c929"],
Cell[312294, 6012, 154, 2, 42, "Output",ExpressionUUID->"4197c1d3-8518-434d-a0ce-f757f5c44df1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[312485, 6019, 3175, 80, 454, "Input",ExpressionUUID->"9e829da2-205b-44fa-9e15-21f48d820e5f"],
Cell[315663, 6101, 152, 2, 42, "Output",ExpressionUUID->"792ea0c6-e5f9-4588-8e9a-6add9f7d261c"],
Cell[315818, 6105, 154, 2, 42, "Output",ExpressionUUID->"b5b36499-97b3-4fd2-a4a6-30238e3d341d"],
Cell[315975, 6109, 152, 2, 42, "Output",ExpressionUUID->"e03538fe-5c53-4049-b7bd-7cd2bd8cb06c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[316164, 6116, 1931, 48, 324, "Input",ExpressionUUID->"4c16b666-deb6-4987-8dcc-8aab6d8299ab"],
Cell[318098, 6166, 152, 2, 42, "Output",ExpressionUUID->"e8995311-6726-4236-a465-bc0d803c6e67"],
Cell[318253, 6170, 152, 2, 42, "Output",ExpressionUUID->"58797511-5d83-47c0-b2ec-c503fee92e3e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318442, 6177, 1933, 47, 376, "Input",ExpressionUUID->"02b5060b-5840-4cc6-a0d0-f444ab39ba3e"],
Cell[320378, 6226, 152, 2, 42, "Output",ExpressionUUID->"00a44649-4020-4030-afc3-46ef9220fa53"],
Cell[320533, 6230, 152, 2, 42, "Output",ExpressionUUID->"4cde7ea6-79a7-40f9-a547-441b310798f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[320722, 6237, 2680, 68, 402, "Input",ExpressionUUID->"fd59bfd6-0526-4d91-8edf-d3cef9d6ee95"],
Cell[323405, 6307, 154, 2, 42, "Output",ExpressionUUID->"2c7fb1a1-df56-46f6-a815-2c8907de8bd2"],
Cell[323562, 6311, 152, 2, 42, "Output",ExpressionUUID->"970c1e15-4614-4d59-b9e3-40efd284588a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323751, 6318, 1985, 47, 246, "Input",ExpressionUUID->"8db86947-a5d4-4fa2-9739-736685d119e7"],
Cell[325739, 6367, 152, 2, 42, "Output",ExpressionUUID->"2a127e80-89db-460e-8f3e-5d25693c2d49"],
Cell[325894, 6371, 151, 2, 42, "Output",ExpressionUUID->"c8af47ad-8ae6-4af8-be79-2c73ef923d74"]
}, Open  ]],
Cell[CellGroupData[{
Cell[326082, 6378, 1980, 51, 324, "Input",ExpressionUUID->"3f54fbff-f324-4f3e-b3bc-0dea54295dde"],
Cell[328065, 6431, 152, 2, 42, "Output",ExpressionUUID->"b894ef26-e553-43c6-9759-24876e452b72"],
Cell[328220, 6435, 154, 2, 62, "Output",ExpressionUUID->"6af35651-b204-4773-8279-ec8307be5649"]
}, Open  ]]
}, Closed]]
}
]
*)

