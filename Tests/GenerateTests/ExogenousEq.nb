(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    226317,       4566]
NotebookOptionsPosition[    172851,       3591]
NotebookOutlinePosition[    219214,       4446]
CellTagsIndexPosition[    219171,       4443]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"Quit", "[", "]"}], ";"}]], "Input",
 CellLabel->"In[33]:=",ExpressionUUID->"8a4e8bf4-2087-4d52-acf6-fdfb8e9b2b73"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"testFileName", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DirectoryName", "[", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "1"}], "]"}], ",", 
      RowBox[{
       RowBox[{"FileBaseName", "[", 
        RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", 
       "\"\<.wlt\>\""}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pacletDir", "=", 
   RowBox[{"DirectoryName", "[", 
    RowBox[{"testFileName", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", "pacletDir", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testContextBase", "=", 
   RowBox[{"FileBaseName", "[", "testFileName", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$ContextPath", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"$ContextPath", ",", 
     RowBox[{"Except", "[", "\"\<PacletizedResourceFunctions`\>\"", "]"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8890661685133457`*^9, 3.889066220685074*^9}, {
   3.8890662555512333`*^9, 3.889066299901951*^9}, {3.889066581166473*^9, 
   3.8890665847967653`*^9}, {3.889066731765956*^9, 3.889066745674687*^9}, {
   3.889431410824514*^9, 3.88943144002302*^9}, 3.889502968269744*^9, {
   3.889998928469849*^9, 3.889998928670561*^9}, {3.890676553021196*^9, 
   3.890676564028514*^9}, 3.890676636594749*^9, {3.890679618620262*^9, 
   3.89067961902995*^9}, {3.8908254134370813`*^9, 3.890825413876319*^9}, {
   3.890825459205497*^9, 3.890825473041605*^9}, {3.890825503118348*^9, 
   3.8908255374530487`*^9}, {3.891021675325671*^9, 3.891021675545487*^9}, {
   3.8911588731924877`*^9, 3.891158877904397*^9}, {3.8911592499395514`*^9, 
   3.8911592502376633`*^9}, 3.891705186596882*^9, 3.901503325517468*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"84fc2a40-eb5d-491b-b37f-a5740e843968"],

Cell[CellGroupData[{

Cell["CI Tests", "Subsection",
 CellChangeTimes->{{3.8895791922306013`*^9, 3.889579196409403*^9}, {
  3.889905620469079*^9, 
  3.8899056207707977`*^9}},ExpressionUUID->"5216b0c6-0b30-4607-beca-\
83054aa122f9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FileNames", "[", "testFileName", "]"}], "===", 
     RowBox[{"{", "}"}]}], ",", "Nothing", ",", 
    RowBox[{"DeleteFile", "[", "testFileName", "]"}]}], "]"}], ";"}]], "Input",\

 CellLabel->"In[6]:=",ExpressionUUID->"e6735427-3487-4d80-a7a0-a170d3f1ed17"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"confirm", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"testContext", "=", 
  RowBox[{
  "\"\<FernandoDuarte`LongRunRisk`Model`\>\"", "<>", "testContextBase", "<>", 
   "\"\<`\>\""}]}]}], "Input",
 CellChangeTimes->{{3.8906795325443907`*^9, 3.8906795357982817`*^9}, 
   3.890679566064293*^9, {3.8906796081672497`*^9, 3.8906796258061447`*^9}, {
   3.890679757679096*^9, 3.890679766260743*^9}, 3.890679874010334*^9, {
   3.89115778716877*^9, 3.8911577875972347`*^9}, {3.891158046655726*^9, 
   3.8911580470847473`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"f27d60aa-814a-4945-813b-9477df02af2b"],

Cell[BoxData["\<\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`\"\>"], \
"Output",
 CellChangeTimes->{3.905698841498447*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"33271e7c-7ad3-4e5d-8416-b8f51469d1d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Begin", "[", "\"\<Model`ExogenousEq`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.890680288696157*^9, 3.8906802887021513`*^9}, 
   3.891157128406151*^9, 3.891215702607926*^9, 3.905698690398323*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"66b8ef49-f567-46e6-a1ff-1449d26ea1ec"],

Cell[BoxData["\<\"Model`ExogenousEq`\"\>"], "Output",
 CellChangeTimes->{3.905698841511919*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"f4162b6f-b3be-49d8-a276-5ffb0b4ac138"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Needs", "[", "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`\>\"", 
     "]"}], ";", "\[IndentingNewLine]", "True"}], "\[IndentingNewLine]", ",", 
   
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{
  3.889972291549716*^9, 3.889972376407036*^9, {3.905698799393443*^9, 
   3.905698811577319*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"6011cbec-7521-493c-b009-40fef28d9959"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ExogenousEq_20231007-NIGA55\"\>"}],
  SequenceForm["Adding test: ", "ExogenousEq_20231007-NIGA55"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905698841793836*^9},
 CellLabel->
  "During evaluation of \
In[10]:=",ExpressionUUID->"fba12758-7715-4ff8-b897-de8433c823dc"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt\"\>"], "Print",
 CellChangeTimes->{3.9056988418222113`*^9},
 CellLabel->
  "During evaluation of \
In[10]:=",ExpressionUUID->"4893fb2d-b74a-4d76-95eb-8ff6c7c66d4e"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Needs @ \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`\";\n\tTrue", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\
\t{}\n\t,\n\tTestID->\"ExogenousEq_20231007-NIGA55\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.017, "AbsoluteTiming" -> 0.017, 
   "InputString" :> ToString[
     Unevaluated[
     Needs["FernandoDuarte`LongRunRisk`Model`ExogenousEq`"]; True], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ExogenousEq\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\
\t{}\n\t,\n\tTestID->\"ExogenousEq_20231007-NIGA55\"\n]\n\n\nEndTestSection[]\
\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905698841826439*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"6967abd3-3ef7-4c22-becf-f519ff1aa1ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "should", " ", "be", " ", "true", " ", "if", " ", "xeq", " ", "can", " ", 
     "be", " ", "found"}], "*)"}], "\[IndentingNewLine]", "\t", 
   RowBox[{"Not", "[", 
    RowBox[{
     RowBox[{"Names", "[", "\"\<*xeq\>\"", "]"}], "===", 
     RowBox[{"{", "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{3.889972308684311*^9, 3.890119108672573*^9, 
  3.890603271134169*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"e2633f79-ec85-4da8-b3f8-1dfe9c81f85e"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ExogenousEq_20231007-E0I1JF\"\>"}],
  SequenceForm["Adding test: ", "ExogenousEq_20231007-E0I1JF"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905698841905836*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"e5863b5d-892c-4f03-b80c-4c02c47e5c9d"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt\"\>"], "Print",
 CellChangeTimes->{3.905698841907467*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"0c0dc3ac-f0f3-4d1d-81a3-c5cfbe7ecc52"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "!SameQ[Names @ \"*xeq\", {}]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\t!SameQ[Names @ \"*xeq\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"ExogenousEq_20231007-E0I1JF\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.021, "AbsoluteTiming" -> 0.021, 
   "InputString" :> ToString[
     Unevaluated[
      Not[Names["*xeq"] === {}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ExogenousEq\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\
\t{}\n\t,\n\tTestID->\"ExogenousEq_20231007-NIGA55\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*xeq\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ExogenousEq_20231007-E0I1JF\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905698841926222*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"7b83da2d-097d-44ce-b493-9f6b7d29ac05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "symbols", " ", "all", " ", "in", " ", "context", " ", 
     "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "all", " ", "exogenous", " ", "variables", " ", "are", " ", "in", " ", 
     "context", " ", 
     "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "@", 
         RowBox[{"(", 
          RowBox[{"Context", "/@", 
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{"xeq", "[", "t", "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"var_Symbol", "?", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"MatchQ", "[", 
                   RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", "\"\<x\>\""}],
                    "]"}], "&"}], ")"}]}], "[", "___", "]"}], ":>", "var"}], 
             ",", "Infinity"}], "]"}]}], ")"}]}], ",", 
        "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "@", 
         RowBox[{"(", 
          RowBox[{"Context", "/@", 
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{"pieq", "[", "t", "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"var_Symbol", "?", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"MatchQ", "[", 
                   RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<pi\>\""}], "]"}], "&"}], ")"}]}], "[", "___", "]"}], 
              ":>", "var"}], ",", "Infinity"}], "]"}]}], ")"}]}], ",", 
        "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "@", 
         RowBox[{"(", 
          RowBox[{"Context", "/@", 
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{"pibareq", "[", "t", "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"var_Symbol", "?", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"MatchQ", "[", 
                   RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<pibar\>\""}], "]"}], "&"}], ")"}]}], "[", "___", 
               "]"}], ":>", "var"}], ",", "Infinity"}], "]"}]}], ")"}]}], 
        ",", "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}]\
, "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "@", 
         RowBox[{"(", 
          RowBox[{"Context", "/@", 
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{"sgeq", "[", "t", "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"var_Symbol", "?", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"MatchQ", "[", 
                   RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<sg\>\""}], "]"}], "&"}], ")"}]}], "[", "___", "]"}], 
              ":>", "var"}], ",", "Infinity"}], "]"}]}], ")"}]}], ",", 
        "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "@", 
         RowBox[{"(", 
          RowBox[{"Context", "/@", 
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{"sxeq", "[", "t", "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"var_Symbol", "?", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"MatchQ", "[", 
                   RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<sx\>\""}], "]"}], "&"}], ")"}]}], "[", "___", "]"}], 
              ":>", "var"}], ",", "Infinity"}], "]"}]}], ")"}]}], ",", 
        "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "@", 
         RowBox[{"(", 
          RowBox[{"Context", "/@", 
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{"sceq", "[", "t", "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"var_Symbol", "?", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"MatchQ", "[", 
                   RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<sc\>\""}], "]"}], "&"}], ")"}]}], "[", "___", "]"}], 
              ":>", "var"}], ",", "Infinity"}], "]"}]}], ")"}]}], ",", 
        "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "@", 
         RowBox[{"(", 
          RowBox[{"Context", "/@", 
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{"speq", "[", "t", "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"var_Symbol", "?", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"MatchQ", "[", 
                   RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<sp\>\""}], "]"}], "&"}], ")"}]}], "[", "___", "]"}], 
              ":>", "var"}], ",", "Infinity"}], "]"}]}], ")"}]}], ",", 
        "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
       "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Not", "[", 
       RowBox[{
        RowBox[{"{", "}"}], "===", 
        RowBox[{"Cases", "[", 
         RowBox[{
          RowBox[{"Symbol", "/@", 
           RowBox[{
           "Names", "[", 
            "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\>\"", 
            "]"}]}], ",", 
          RowBox[{
           RowBox[{"var_Symbol", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MatchQ", "[", 
               RowBox[{
                RowBox[{"SymbolName", "[", "#", "]"}], ",", "\"\<dc\>\""}], 
               "]"}], "&"}], ")"}]}], ":>", "var"}], ",", "Infinity"}], 
         "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Not", "[", 
       RowBox[{
        RowBox[{"{", "}"}], "===", 
        RowBox[{"Cases", "[", 
         RowBox[{
          RowBox[{"Symbol", "/@", 
           RowBox[{
           "Names", "[", 
            "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\>\"", 
            "]"}]}], ",", 
          RowBox[{
           RowBox[{"var_Symbol", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MatchQ", "[", 
               RowBox[{
                RowBox[{"SymbolName", "[", "#", "]"}], ",", "\"\<dd\>\""}], 
               "]"}], "&"}], ")"}]}], ":>", "var"}], ",", "Infinity"}], 
         "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "@", 
         RowBox[{"(", 
          RowBox[{"Context", "/@", 
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{"Symbol", "/@", 
              RowBox[{
              "Names", "[", 
               "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\>\"\
", "]"}]}], ",", 
             RowBox[{
              RowBox[{"var_Symbol", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"MatchQ", "[", 
                  RowBox[{
                   RowBox[{"SymbolName", "[", "#", "]"}], ",", "\"\<dc\>\""}],
                   "]"}], "&"}], ")"}]}], ":>", "var"}], ",", "Infinity"}], 
            "]"}]}], ")"}]}], ",", 
        "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "@", 
         RowBox[{"(", 
          RowBox[{"Context", "/@", 
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{"Symbol", "/@", 
              RowBox[{
              "Names", "[", 
               "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\>\"\
", "]"}]}], ",", 
             RowBox[{
              RowBox[{"var_Symbol", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"MatchQ", "[", 
                  RowBox[{
                   RowBox[{"SymbolName", "[", "#", "]"}], ",", "\"\<dd\>\""}],
                   "]"}], "&"}], ")"}]}], ":>", "var"}], ",", "Infinity"}], 
            "]"}]}], ")"}]}], ",", 
        "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
       "]"}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.890119101180563*^9, 3.890119149584676*^9}, 
   3.890603272283004*^9, 3.8929940462721663`*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"6e1e508c-8f45-46ae-a7ed-d27ac704690b"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ExogenousEq_20231007-7R20E8\"\>"}],
  SequenceForm["Adding test: ", "ExogenousEq_20231007-7R20E8"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905698842007464*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"5d970312-c3b0-4748-b61b-8cd67ee88919"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt\"\>"], "Print",
 CellChangeTimes->{3.905698842009438*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"966faa9a-6614-4e61-b567-1a1318bf49ae"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\tMemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq @ Model`ExogenousEq`t,\
\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \
\"x\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\
\t\t\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`pieq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"pi\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`pibareq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \
\"pibar\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\
\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`sgeq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"sg\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`sxeq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"sx\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`sceq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"sc\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`speq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"sp\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
Not[\n\t\t\t\tSameQ[{},\n\t\t\t\t\tCases[Map[Symbol, Names @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\"],\n\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"dc\"]]],\n\t\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\n\t\t\t\t\t]\n\t\t\
\t\t]\n\t\t\t],\n\t\t\tNot[\n\t\t\t\tSameQ[{},\n\t\t\t\t\tCases[Map[Symbol, \
Names @ \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\"],\n\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"dd\"]]],\n\t\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\n\t\t\t\t\t]\n\t\t\
\t\t]\n\t\t\t],\n\t\t\tMemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\tCases[Map[Symbol, Names @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\"],\n\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"dc\"]]],\n\t\t\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\
]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[Map[Symbol, Names @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\"],\n\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"dd\"]]],\n\t\t\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\
]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t]\n\t\t}\n\t\
]", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tMemberQ[\n\t\t\t\t\
DeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq @ Model`ExogenousEq`t,\
\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \
\"x\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\
\t\t\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`pieq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"pi\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`pibareq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \
\"pibar\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\
\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`sgeq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"sg\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`sxeq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"sx\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`sceq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"sc\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`speq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"sp\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
Not[\n\t\t\t\tSameQ[{},\n\t\t\t\t\tCases[Map[Symbol, Names @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\"],\n\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"dc\"]]],\n\t\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\n\t\t\t\t\t]\n\t\t\
\t\t]\n\t\t\t],\n\t\t\tNot[\n\t\t\t\tSameQ[{},\n\t\t\t\t\tCases[Map[Symbol, \
Names @ \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\"],\n\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"dd\"]]],\n\t\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\n\t\t\t\t\t]\n\t\t\
\t\t]\n\t\t\t],\n\t\t\tMemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\tCases[Map[Symbol, Names @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\"],\n\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"dc\"]]],\n\t\t\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\
]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[Map[Symbol, Names @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\"],\n\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"dd\"]]],\n\t\t\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\
]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t]\n\t\t}\n\t\
]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ExogenousEq_20231007-7R20E8\"\n]\n\
\n", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.021, "AbsoluteTiming" -> 0.022, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        MemberQ[
         DeleteDuplicates[
          Map[Context, 
           Cases[
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[
            Model`ExogenousEq`t], PatternTest[
              Pattern[Model`ExogenousEq`var, 
               Blank[Symbol]], MatchQ[
               SymbolName[#], "x"]& ][
              BlankNullSequence[]] :> Model`ExogenousEq`var, Infinity]]], 
         "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
        MemberQ[
         DeleteDuplicates[
          Map[Context, 
           Cases[
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`pieq[
            Model`ExogenousEq`t], PatternTest[
              Pattern[Model`ExogenousEq`var, 
               Blank[Symbol]], MatchQ[
               SymbolName[#], "pi"]& ][
              BlankNullSequence[]] :> Model`ExogenousEq`var, Infinity]]], 
         "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
        MemberQ[
         DeleteDuplicates[
          Map[Context, 
           Cases[
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`pibareq[
            Model`ExogenousEq`t], PatternTest[
              Pattern[Model`ExogenousEq`var, 
               Blank[Symbol]], MatchQ[
               SymbolName[#], "pibar"]& ][
              BlankNullSequence[]] :> Model`ExogenousEq`var, Infinity]]], 
         "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
        MemberQ[
         DeleteDuplicates[
          Map[Context, 
           Cases[
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`sgeq[
            Model`ExogenousEq`t], PatternTest[
              Pattern[Model`ExogenousEq`var, 
               Blank[Symbol]], MatchQ[
               SymbolName[#], "sg"]& ][
              BlankNullSequence[]] :> Model`ExogenousEq`var, Infinity]]], 
         "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
        MemberQ[
         DeleteDuplicates[
          Map[Context, 
           Cases[
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`sxeq[
            Model`ExogenousEq`t], PatternTest[
              Pattern[Model`ExogenousEq`var, 
               Blank[Symbol]], MatchQ[
               SymbolName[#], "sx"]& ][
              BlankNullSequence[]] :> Model`ExogenousEq`var, Infinity]]], 
         "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
        MemberQ[
         DeleteDuplicates[
          Map[Context, 
           Cases[
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`sceq[
            Model`ExogenousEq`t], PatternTest[
              Pattern[Model`ExogenousEq`var, 
               Blank[Symbol]], MatchQ[
               SymbolName[#], "sc"]& ][
              BlankNullSequence[]] :> Model`ExogenousEq`var, Infinity]]], 
         "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
        MemberQ[
         DeleteDuplicates[
          Map[Context, 
           Cases[
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`speq[
            Model`ExogenousEq`t], PatternTest[
              Pattern[Model`ExogenousEq`var, 
               Blank[Symbol]], MatchQ[
               SymbolName[#], "sp"]& ][
              BlankNullSequence[]] :> Model`ExogenousEq`var, Infinity]]], 
         "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
        Not[{} === Cases[
           Map[Symbol, 
            Names["FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*"]], 
           PatternTest[
             Pattern[Model`ExogenousEq`var, 
              Blank[Symbol]], MatchQ[
              SymbolName[#], "dc"]& ] :> Model`ExogenousEq`var, Infinity]], 
        Not[{} === Cases[
           Map[Symbol, 
            Names["FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*"]], 
           PatternTest[
             Pattern[Model`ExogenousEq`var, 
              Blank[Symbol]], MatchQ[
              SymbolName[#], "dd"]& ] :> Model`ExogenousEq`var, Infinity]], 
        MemberQ[
         DeleteDuplicates[
          Map[Context, 
           Cases[
            Map[Symbol, 
             Names["FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*"]],
             PatternTest[
              Pattern[Model`ExogenousEq`var, 
               Blank[Symbol]], MatchQ[
               SymbolName[#], "dc"]& ] :> Model`ExogenousEq`var, Infinity]]], 
         "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
        MemberQ[
         DeleteDuplicates[
          Map[Context, 
           Cases[
            Map[Symbol, 
             Names["FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*"]],
             PatternTest[
              Pattern[Model`ExogenousEq`var, 
               Blank[Symbol]], MatchQ[
               SymbolName[#], "dd"]& ] :> Model`ExogenousEq`var, Infinity]]], 
         "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"]}]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ExogenousEq\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\
\t{}\n\t,\n\tTestID->\"ExogenousEq_20231007-NIGA55\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*xeq\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ExogenousEq_20231007-E0I1JF\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tMemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq @ Model`ExogenousEq`t,\
\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \
\"x\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\
\t\t\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`pieq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"pi\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`pibareq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \
\"pibar\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\
\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`sgeq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"sg\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`sxeq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"sx\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`sceq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"sc\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`speq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"sp\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
Not[\n\t\t\t\tSameQ[{},\n\t\t\t\t\tCases[Map[Symbol, Names @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\"],\n\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"dc\"]]],\n\t\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\n\t\t\t\t\t]\n\t\t\
\t\t]\n\t\t\t],\n\t\t\tNot[\n\t\t\t\tSameQ[{},\n\t\t\t\t\tCases[Map[Symbol, \
Names @ \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\"],\n\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"dd\"]]],\n\t\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\n\t\t\t\t\t]\n\t\t\
\t\t]\n\t\t\t],\n\t\t\tMemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\tCases[Map[Symbol, Names @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\"],\n\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"dc\"]]],\n\t\t\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\
]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[Map[Symbol, Names @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\"],\n\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"dd\"]]],\n\t\t\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\
]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t]\n\t\t}\n\t\
]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ExogenousEq_20231007-7R20E8\"\n]\n\
\n\nEndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.9056988420177383`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"5de05379-6936-493c-8804-31bca04629e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "all", " ", "exogenous", " ", "variables", " ", "are", " ", "in", " ", 
     "context", " ", 
     "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
        "#", "===", 
         "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
        ")"}], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{"Context", "/@", 
        RowBox[{"Cases", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "[", "t", "]"}], ")"}], "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{"Symbol", "/@", "$exogenousVars"}], ")"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"var_Symbol", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                  "$exogenousVars"}], ",", 
                 RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
              ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
         "]"}]}], ")"}]}], ")"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{
  3.8929940981311893`*^9, {3.892994198736478*^9, 3.89299420304391*^9}, 
   3.892994276159781*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"fd7fa869-0128-42bc-8639-2af2a7c4dfae"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ExogenousEq_20231007-NBIB7Y\"\>"}],
  SequenceForm["Adding test: ", "ExogenousEq_20231007-NBIB7Y"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905698842064563*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"2f112d98-e7f7-4edd-b00b-d1399d04ec94"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt\"\>"], "Print",
 CellChangeTimes->{3.905698842065921*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"100b1abd-6673-4e72-8e29-18167842b9f8"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
Map[Context,\n\t\t\t\tCases[Map[Slot[1][Model`ExogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
Model`ExogenousEq`var_Symbol,\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t][__],\n\t\
\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
Map[Context,\n\t\t\t\tCases[Map[Slot[1][Model`ExogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
Model`ExogenousEq`var_Symbol,\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t][__],\n\t\
\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ExogenousEq_20231007-NBIB7Y\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.001, "AbsoluteTiming" -> 0.001, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[# === "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
        Map[Context, 
         Cases[
          Map[#[Model`ExogenousEq`t]& , 
           Map[
           Symbol, FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars]], PatternTest[
            Pattern[Model`ExogenousEq`var, 
             Blank[Symbol]], MemberQ[
             Map[
             StringDrop[#, -2]& , 
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars], 
             SymbolName[#]]& ][
            BlankSequence[]] :> Model`ExogenousEq`var, Infinity]]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ExogenousEq\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\
\t{}\n\t,\n\tTestID->\"ExogenousEq_20231007-NIGA55\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*xeq\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ExogenousEq_20231007-E0I1JF\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tMemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq @ Model`ExogenousEq`t,\
\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \
\"x\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\
\t\t\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`pieq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"pi\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`pibareq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \
\"pibar\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\
\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`sgeq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"sg\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`sxeq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"sx\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`sceq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"sc\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`speq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"sp\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
Not[\n\t\t\t\tSameQ[{},\n\t\t\t\t\tCases[Map[Symbol, Names @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\"],\n\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"dc\"]]],\n\t\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\n\t\t\t\t\t]\n\t\t\
\t\t]\n\t\t\t],\n\t\t\tNot[\n\t\t\t\tSameQ[{},\n\t\t\t\t\tCases[Map[Symbol, \
Names @ \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\"],\n\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"dd\"]]],\n\t\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\n\t\t\t\t\t]\n\t\t\
\t\t]\n\t\t\t],\n\t\t\tMemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\tCases[Map[Symbol, Names @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\"],\n\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"dc\"]]],\n\t\t\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\
]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[Map[Symbol, Names @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\"],\n\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"dd\"]]],\n\t\t\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\
]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t]\n\t\t}\n\t\
]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ExogenousEq_20231007-7R20E8\"\n]\n\
\n\nVerificationTest[\n\tApply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
Map[Context,\n\t\t\t\tCases[Map[Slot[1][Model`ExogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
Model`ExogenousEq`var_Symbol,\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t][__],\n\t\
\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ExogenousEq_20231007-NBIB7Y\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905698842083747*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"d44ecde4-9d5c-46e6-a43e-307ff382f2ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "all", " ", "shocks", " ", "are", " ", "in", " ", "context", " ", 
     "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
        "#", "===", "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], 
        ")"}], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{"Context", "/@", 
        RowBox[{"Cases", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "[", "t", "]"}], ")"}], "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{"Symbol", "/@", "$exogenousVars"}], ")"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"var_Symbol", "?", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"MatchQ", "[", 
                 RowBox[{
                  RowBox[{"SymbolName", "[", "#", "]"}], ",", "\"\<eps\>\""}],
                  "]"}], "&"}], ")"}]}], "[", "__", "]"}], "[", "__", "]"}], ":>",
            "var"}], ",", "Infinity"}], "]"}]}], ")"}]}], ")"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{
  3.892994100367319*^9, {3.892994206839141*^9, 3.89299420809296*^9}, 
   3.892994270863389*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"be0a7c4a-2cd6-4e5b-a50b-43fac34edc53"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ExogenousEq_20231007-YFUEVW\"\>"}],
  SequenceForm["Adding test: ", "ExogenousEq_20231007-YFUEVW"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905698842128758*^9},
 CellLabel->
  "During evaluation of \
In[14]:=",ExpressionUUID->"25902c08-15b7-4096-aed5-239f260da4a8"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt\"\>"], "Print",
 CellChangeTimes->{3.905698842130241*^9},
 CellLabel->
  "During evaluation of \
In[14]:=",ExpressionUUID->"42efe169-2675-4804-aa9f-c41bc64949e5"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\tMap[Context,\n\t\t\t\t\
Cases[Map[Slot[1][Model`ExogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\t\t\t]\n\
\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\tMap[Context,\n\t\t\t\t\
Cases[Map[Slot[1][Model`ExogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\t\t\t]\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ExogenousEq_20231007-YFUEVW\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
        Map[Context, 
         Cases[
          Map[#[Model`ExogenousEq`t]& , 
           Map[
           Symbol, FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars]], PatternTest[
            Pattern[Model`ExogenousEq`var, 
             Blank[Symbol]], MatchQ[
             SymbolName[#], "eps"]& ][
            BlankSequence[]][
            BlankSequence[]] :> Model`ExogenousEq`var, Infinity]]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ExogenousEq\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\
\t{}\n\t,\n\tTestID->\"ExogenousEq_20231007-NIGA55\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*xeq\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ExogenousEq_20231007-E0I1JF\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tMemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq @ Model`ExogenousEq`t,\
\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \
\"x\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\
\t\t\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`pieq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"pi\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`pibareq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \
\"pibar\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\
\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`sgeq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"sg\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`sxeq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"sx\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`sceq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"sc\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`speq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"sp\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
Not[\n\t\t\t\tSameQ[{},\n\t\t\t\t\tCases[Map[Symbol, Names @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\"],\n\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"dc\"]]],\n\t\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\n\t\t\t\t\t]\n\t\t\
\t\t]\n\t\t\t],\n\t\t\tNot[\n\t\t\t\tSameQ[{},\n\t\t\t\t\tCases[Map[Symbol, \
Names @ \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\"],\n\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"dd\"]]],\n\t\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\n\t\t\t\t\t]\n\t\t\
\t\t]\n\t\t\t],\n\t\t\tMemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\tCases[Map[Symbol, Names @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\"],\n\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"dc\"]]],\n\t\t\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\
]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[Map[Symbol, Names @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\"],\n\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"dd\"]]],\n\t\t\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\
]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t]\n\t\t}\n\t\
]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ExogenousEq_20231007-7R20E8\"\n]\n\
\n\nVerificationTest[\n\tApply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
Map[Context,\n\t\t\t\tCases[Map[Slot[1][Model`ExogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
Model`ExogenousEq`var_Symbol,\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t][__],\n\t\
\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ExogenousEq_20231007-NBIB7Y\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\
\t\t\tMap[Context,\n\t\t\t\tCases[Map[Slot[1][Model`ExogenousEq`t]&, \
Map[Symbol, FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]],\n\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\t\t\t]\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ExogenousEq_20231007-YFUEVW\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905698842139032*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"29198c1a-e559-40a4-bc23-858a27aa302f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "all", " ", "parameters", " ", "are", " ", "in", " ", "context", " ", 
     "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
        "#", "===", "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
        ")"}], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{"Context", "/@", 
        RowBox[{"Cases", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "[", "t", "]"}], ")"}], "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{"Symbol", "/@", "$exogenousVars"}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"var_Symbol", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{
               "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters", ",", 
                RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
             ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], ")"}]}], 
     ")"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.891314488000304*^9, 3.891314607661008*^9}, 
   3.8929940825332403`*^9, 3.89299411513941*^9, {3.892994214512212*^9, 
   3.8929942148301773`*^9}, 3.892994263820116*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"201e9bc5-ec95-46b1-8d0a-353f625179fb"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ExogenousEq_20231007-TNAM0Y\"\>"}],
  SequenceForm["Adding test: ", "ExogenousEq_20231007-TNAM0Y"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905698842190325*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"e05ff6a6-f6fa-4cd3-9710-1fa9e32efa3e"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt\"\>"], "Print",
 CellChangeTimes->{3.905698842191991*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"c6085459-4d12-4312-b77b-58fe820e4f96"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\tMap[Context,\n\t\t\
\t\tCases[Map[Slot[1][Model`ExogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\t\
Infinity\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\tMap[Context,\n\t\t\
\t\tCases[Map[Slot[1][Model`ExogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\t\
Infinity\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ExogenousEq_20231007-TNAM0Y\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
        Map[Context, 
         Cases[
          Map[#[Model`ExogenousEq`t]& , 
           Map[
           Symbol, FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars]], PatternTest[
            Pattern[Model`ExogenousEq`var, 
             Blank[Symbol]], MemberQ[
            FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
             SymbolName[#]]& ] :> Model`ExogenousEq`var, Infinity]]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ExogenousEq\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\
\t{}\n\t,\n\tTestID->\"ExogenousEq_20231007-NIGA55\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*xeq\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ExogenousEq_20231007-E0I1JF\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tMemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq @ Model`ExogenousEq`t,\
\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \
\"x\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\
\t\t\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`pieq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"pi\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`pibareq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \
\"pibar\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\
\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`sgeq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"sg\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`sxeq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"sx\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`sceq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"sc\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`speq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"sp\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
Not[\n\t\t\t\tSameQ[{},\n\t\t\t\t\tCases[Map[Symbol, Names @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\"],\n\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"dc\"]]],\n\t\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\n\t\t\t\t\t]\n\t\t\
\t\t]\n\t\t\t],\n\t\t\tNot[\n\t\t\t\tSameQ[{},\n\t\t\t\t\tCases[Map[Symbol, \
Names @ \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\"],\n\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"dd\"]]],\n\t\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\n\t\t\t\t\t]\n\t\t\
\t\t]\n\t\t\t],\n\t\t\tMemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\tCases[Map[Symbol, Names @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\"],\n\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"dc\"]]],\n\t\t\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\
]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[Map[Symbol, Names @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\"],\n\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"dd\"]]],\n\t\t\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\
]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t]\n\t\t}\n\t\
]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ExogenousEq_20231007-7R20E8\"\n]\n\
\n\nVerificationTest[\n\tApply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
Map[Context,\n\t\t\t\tCases[Map[Slot[1][Model`ExogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
Model`ExogenousEq`var_Symbol,\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t][__],\n\t\
\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ExogenousEq_20231007-NBIB7Y\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\
\t\t\tMap[Context,\n\t\t\t\tCases[Map[Slot[1][Model`ExogenousEq`t]&, \
Map[Symbol, FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]],\n\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\t\t\t]\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ExogenousEq_20231007-YFUEVW\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\tMap[Context,\n\t\t\
\t\tCases[Map[Slot[1][Model`ExogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\t\
Infinity\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ExogenousEq_20231007-TNAM0Y\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.90569884221097*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"41aa8b69-53e2-4577-9485-ad47386c6d79"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "different", " ", "contexts", " ", "for", " ", "t", " ", "and", " ", "eq",
      " ", "vars"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"FreeQ", "[", 
       RowBox[{
        RowBox[{"xeq", "[", "t", "]"}], ",", "foo`t"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Not", "@", 
       RowBox[{"FreeQ", "[", 
        RowBox[{
         RowBox[{"xeq", "[", "t", "]"}], ",", "t"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"FreeQ", "[", 
       RowBox[{
        RowBox[{"xeq", "[", "foo`t", "]"}], ",", "t"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Not", "@", 
       RowBox[{"FreeQ", "[", 
        RowBox[{
         RowBox[{"xeq", "[", "foo`t", "]"}], ",", "foo`t"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Not", "@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"foo`xeq", "[", "t", "]"}], "===", 
         RowBox[{"xeq", "[", "t", "]"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Not", "@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xeq", "[", "t", "]"}], "===", 
         RowBox[{"xeq", "[", "foo`t", "]"}]}], ")"}]}]}], 
     "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.892994254365101*^9, 3.8929942556561117`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"29d7abeb-2bec-400d-9b00-a1037d3e0f15"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ExogenousEq_20231007-924CFO\"\>"}],
  SequenceForm["Adding test: ", "ExogenousEq_20231007-924CFO"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9056988422617073`*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"1300e825-d590-4558-b261-81e90852bb78"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt\"\>"], "Print",
 CellChangeTimes->{3.90569884226309*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"98bee810-35ce-48ab-a3a1-18fb832b7aca"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\t\
FreeQ[FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq @ Model`ExogenousEq`t, \
foo`t],\n\t\t\t!FreeQ[FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq @ \
Model`ExogenousEq`t, Model`ExogenousEq`t],\n\t\t\t\
FreeQ[FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq @ foo`t, \
Model`ExogenousEq`t],\n\t\t\t\
!FreeQ[FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq @ foo`t, foo`t],\n\t\t\
\t!SameQ[foo`xeq @ Model`ExogenousEq`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq @ Model`ExogenousEq`t],\n\t\t\
\t!SameQ[FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq @ \
Model`ExogenousEq`t, FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq @ \
foo`t]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t\
FreeQ[FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq @ Model`ExogenousEq`t, \
foo`t],\n\t\t\t!FreeQ[FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq @ \
Model`ExogenousEq`t, Model`ExogenousEq`t],\n\t\t\t\
FreeQ[FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq @ foo`t, \
Model`ExogenousEq`t],\n\t\t\t\
!FreeQ[FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq @ foo`t, foo`t],\n\t\t\
\t!SameQ[foo`xeq @ Model`ExogenousEq`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq @ Model`ExogenousEq`t],\n\t\t\
\t!SameQ[FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq @ \
Model`ExogenousEq`t, FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq @ \
foo`t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ExogenousEq_20231007-924CFO\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        FreeQ[
         FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[
         Model`ExogenousEq`t], foo`t], 
        Not[
         FreeQ[
          FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[
          Model`ExogenousEq`t], Model`ExogenousEq`t]], 
        FreeQ[
         FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[foo`t], 
         Model`ExogenousEq`t], 
        Not[
         FreeQ[
          FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[foo`t], foo`t]], 
        Not[
        foo`xeq[Model`ExogenousEq`t] === 
         FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[
          Model`ExogenousEq`t]], 
        Not[
        FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[Model`ExogenousEq`t] === 
         FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[foo`t]]}]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ExogenousEq\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`\";\n\tTrue\n\t,\n\tTrue\n\t,\n\
\t{}\n\t,\n\tTestID->\"ExogenousEq_20231007-NIGA55\"\n]\n\n\n\
VerificationTest[\n\t!SameQ[Names @ \"*xeq\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ExogenousEq_20231007-E0I1JF\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tMemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq @ Model`ExogenousEq`t,\
\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \
\"x\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\
\t\t\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`pieq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"pi\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`pibareq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \
\"pibar\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\
\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`sgeq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"sg\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`sxeq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"sx\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`sceq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"sc\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[FernandoDuarte`LongRunRisk`Model`ExogenousEq`speq @ \
Model`ExogenousEq`t,\n\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\
PatternTest[Model`ExogenousEq`var_Symbol, Function[MatchQ[SymbolName[#], \"sp\
\"]]][___],\n\t\t\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\
\t\t\tInfinity\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
Not[\n\t\t\t\tSameQ[{},\n\t\t\t\t\tCases[Map[Symbol, Names @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\"],\n\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"dc\"]]],\n\t\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\n\t\t\t\t\t]\n\t\t\
\t\t]\n\t\t\t],\n\t\t\tNot[\n\t\t\t\tSameQ[{},\n\t\t\t\t\tCases[Map[Symbol, \
Names @ \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\"],\n\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"dd\"]]],\n\t\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t\t],\n\t\t\t\t\t\tInfinity\n\t\t\t\t\t]\n\t\t\
\t\t]\n\t\t\t],\n\t\t\tMemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\t\
Map[Context,\n\t\t\t\t\t\tCases[Map[Symbol, Names @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\"],\n\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"dc\"]]],\n\t\t\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\
]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t],\n\t\t\t\
MemberQ[\n\t\t\t\tDeleteDuplicates[\n\t\t\t\t\tMap[Context,\n\t\t\t\t\t\t\
Cases[Map[Symbol, Names @ \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\"],\n\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"dd\"]]],\n\t\t\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\
]\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"\n\t\t\t]\n\t\t}\n\t\
]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ExogenousEq_20231007-7R20E8\"\n]\n\
\n\nVerificationTest[\n\tApply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
Map[Context,\n\t\t\t\tCases[Map[Slot[1][Model`ExogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
Model`ExogenousEq`var_Symbol,\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\t\
MemberQ[\n\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t][__],\n\t\
\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ExogenousEq_20231007-NBIB7Y\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\
\t\t\tMap[Context,\n\t\t\t\tCases[Map[Slot[1][Model`ExogenousEq`t]&, \
Map[Symbol, FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]],\n\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\
Model`ExogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\t\t\t]\n\
\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ExogenousEq_20231007-YFUEVW\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\tMap[Context,\n\t\t\
\t\tCases[Map[Slot[1][Model`ExogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[Model`ExogenousEq`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\tModel`ExogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\t\
Infinity\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ExogenousEq_20231007-TNAM0Y\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
FreeQ[FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq @ Model`ExogenousEq`t, \
foo`t],\n\t\t\t!FreeQ[FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq @ \
Model`ExogenousEq`t, Model`ExogenousEq`t],\n\t\t\t\
FreeQ[FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq @ foo`t, \
Model`ExogenousEq`t],\n\t\t\t\
!FreeQ[FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq @ foo`t, foo`t],\n\t\t\
\t!SameQ[foo`xeq @ Model`ExogenousEq`t, \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq @ Model`ExogenousEq`t],\n\t\t\
\t!SameQ[FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq @ \
Model`ExogenousEq`t, FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq @ \
foo`t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ExogenousEq_20231007-924CFO\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905698842271434*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"7f7aac77-dea2-455d-8c15-4d9d9742278c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"End", "[", "]"}]], "Input",
 CellChangeTimes->{{3.890680295645965*^9, 3.89068029650622*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"59dc68c9-68d3-49dc-81f4-c4b087d6db3d"],

Cell[BoxData["\<\"Model`ExogenousEq`\"\>"], "Output",
 CellChangeTimes->{3.905698842290071*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"f52ce614-401f-4751-aaaf-5c8f35031600"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"add", " ", 
   RowBox[{"Begin", "[", "\"\<Context`\>\"", "]"}], " ", "and", " ", 
   RowBox[{"End", "[", "]"}], " ", "to", " ", "wlt", " ", "file"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.890686194230386*^9, 3.890686228283702*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"969ec6fa-cb99-4746-881c-3e21d6b31f3a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"helper", " ", "functions"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"countLines", "[", "file_String", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"readStream", "=", 
        RowBox[{"OpenRead", "[", "file", "]"}]}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"n", "=", "1"}], ",", "\[IndentingNewLine]", "temp"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"While", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"temp", "=!=", "EndOfFile"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"temp", "=", 
          RowBox[{"ReadLine", "[", "readStream", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"n", "=", 
          RowBox[{"n", "+", "1"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Close", "/@", 
       RowBox[{"{", "readStream", "}"}]}], ";", "\[IndentingNewLine]", 
      "n"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.890681841946844*^9, 3.890681899849094*^9}, {
  3.890682055663522*^9, 3.890682084827585*^9}, {3.890683635625399*^9, 
  3.890683720295089*^9}, {3.890685425949465*^9, 3.890685434516119*^9}, {
  3.890686231117095*^9, 3.890686238212121*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"8a7cc326-6e9d-4751-b5e9-d7698dffe90f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"replaceNthRecord", "[", 
   RowBox[{"file_String", ",", "n_Integer", ",", "replaceWith_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"readStream", "=", 
       RowBox[{"OpenRead", "[", "file", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"writeStream", "=", 
       RowBox[{"OpenWrite", "[", 
        RowBox[{"file", "<>", "\"\<temp\>\""}], "]"}]}], ",", 
      "\[IndentingNewLine]", "temp"}], "\[IndentingNewLine]", "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"WriteLine", "[", 
        RowBox[{"writeStream", ",", 
         RowBox[{"ReadLine", "[", "readStream", "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"n", "-", "1"}], "}"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"WriteLine", "[", 
      RowBox[{"writeStream", ",", 
       RowBox[{
        RowBox[{"ReadLine", "[", "readStream", "]"}], "<>", "\"\< \\r\\n\>\"",
         "<>", "replaceWith"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"temp", "=!=", "EndOfFile"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"temp", "=", 
         RowBox[{"ReadLine", "[", "readStream", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"UnsameQ", "[", 
           RowBox[{"temp", ",", "EndOfFile"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"WriteLine", "[", 
           RowBox[{"writeStream", ",", "temp"}], "]"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", 
     RowBox[{"Close", "/@", 
      RowBox[{"{", 
       RowBox[{"readStream", ",", "writeStream"}], "}"}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8906824011137114`*^9, 3.890682405708049*^9}, {
   3.890683066049664*^9, 3.8906830825042677`*^9}, {3.89068319056032*^9, 
   3.890683191547068*^9}, {3.89068338518532*^9, 3.890683430044886*^9}, {
   3.890683477495555*^9, 3.89068350860789*^9}, {3.890683563263863*^9, 
   3.890683572999384*^9}, {3.8906837588959513`*^9, 3.890683769652152*^9}, 
   3.890683975431652*^9, 3.890684184728485*^9, {3.890684538464937*^9, 
   3.890684546403357*^9}, 3.8906847013731937`*^9, 3.890684736359234*^9, {
   3.890684917937912*^9, 3.890684918964259*^9}, {3.890685003978653*^9, 
   3.8906850058353167`*^9}, {3.890685081266893*^9, 3.890685086440845*^9}, {
   3.890685162742771*^9, 3.890685164959052*^9}, {3.890685207547077*^9, 
   3.890685210133041*^9}, {3.890685379823967*^9, 3.890685396833392*^9}, {
   3.89068547363831*^9, 3.890685483195992*^9}, {3.8906856724322433`*^9, 
   3.890685672699678*^9}, {3.890685793209527*^9, 3.890685826416944*^9}, 
   3.8906858923977957`*^9, {3.890685924003189*^9, 3.890685959055036*^9}, {
   3.890686016304421*^9, 3.890686073140353*^9}, {3.890686249638393*^9, 
   3.8906862512145*^9}, {3.905698717773871*^9, 3.90569871802812*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"2ae9012a-6954-4f80-96fd-925a1a48fa4c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"insert", " ", "into", " ", "wlt", " ", "file"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"replaceNthRecord", "[", 
    RowBox[{
    "testFileName", ",", "1", ",", 
     "\"\<Begin[\\\"Model`ExogenousEq`\\\"]\>\""}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CopyFile", "[", 
     RowBox[{
      RowBox[{"testFileName", "<>", "\"\<temp\>\""}], ",", "testFileName", 
      ",", 
      RowBox[{"OverwriteTarget", "->", "True"}]}], "]"}], ";"}], "\n", 
   RowBox[{"DeleteFile", "[", 
    RowBox[{"testFileName", "<>", "\"\<temp\>\""}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"numLines", "=", 
    RowBox[{"countLines", "[", "testFileName", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"replaceNthRecord", "[", 
    RowBox[{"testFileName", ",", 
     RowBox[{"numLines", "-", "3"}], ",", " ", "\"\<End[]\>\""}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CopyFile", "[", 
     RowBox[{
      RowBox[{"testFileName", "<>", "\"\<temp\>\""}], ",", "testFileName", 
      ",", 
      RowBox[{"OverwriteTarget", "->", "True"}]}], "]"}], ";"}], "\n", 
   RowBox[{"DeleteFile", "[", 
    RowBox[{"testFileName", "<>", "\"\<temp\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.890684439578331*^9, {3.8906861781312037`*^9, 3.890686181646003*^9}, {
   3.890686261099564*^9, 3.8906862940387907`*^9}, 3.891156970368805*^9, 
   3.891216542664113*^9, 3.905695879756626*^9, 3.905698783560256*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"456d5a5a-46b8-4d5d-ac61-66ed417f16b7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlttemp\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.90569884234024*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"97c8ba80-6b96-481e-b86e-99152d3b42dd"],

Cell[BoxData["273"], "Output",
 CellChangeTimes->{3.9056988423512297`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"3c8e69fd-ab57-4de1-aa16-4b06e98d6d9c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlttemp\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9056988423623047`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"a1a8235c-a5d8-466b-91d6-c052758f4321"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "should", " ", "see", " ", "a", " ", "green", " ", "check", " ", "mark", 
    " ", "if", " ", "all", " ", "tests", " ", "pass"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"tr", "=", 
   RowBox[{"TestReport", "[", "testFileName", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.905698643389641*^9, 3.905698643744013*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"94636ec9-b23a-41a9-bc40-604c8145ebb1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: ExogenousEq.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["7", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: ExogenousEq.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["7", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["7", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0.0356879999999999999`3.857939168051295", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                   "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: ExogenousEq.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     7668962938800673071 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905698842421156*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "070f67f6-1378-4191-994e-41bfd36910df", "TestID" -> 
         "ExogenousEq_20231007-NIGA55", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "EvaluationID" -> 
         "37e1dfe1-a5fc-47a7-8732-3a7279fcc821", "Input" -> 
         HoldForm[
          Needs["FernandoDuarte`LongRunRisk`Model`ExogenousEq`"]; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000031`1.6418766916662622, "CPUTimeUsed" -> 
         0.000031999999999587914`, "MemoryUsed" -> 2760, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 7115806765750113173 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905698842421473*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "7ad1c222-66c7-4a2a-a7c1-4c13008021bb", "TestID" -> 
         "ExogenousEq_20231007-E0I1JF", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "EvaluationID" -> 
         "ca5e1c9d-7822-421d-8a92-980d7f09cd99", "Input" -> HoldForm[
           Not[Names["*xeq"] === {}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[True], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.018616`4.420401368110667, "CPUTimeUsed" -> 
         0.018612000000000517`, "MemoryUsed" -> 2896, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 5413617019274943394 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905698842440624*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "19bfc0dd-8b28-41a8-89b1-bccb977d54f5", "TestID" -> 
         "ExogenousEq_20231007-7R20E8", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "EvaluationID" -> 
         "d2e95a51-1c5a-4335-a0fe-bce70b41b3ea", "Input" -> HoldForm[
           Apply[And, {
             MemberQ[
              DeleteDuplicates[
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[
                 Model`ExogenousEq`t], PatternTest[
                   Pattern[Model`ExogenousEq`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "x"]& ][
                   BlankNullSequence[]] :> Model`ExogenousEq`var, Infinity]]],
               "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
             MemberQ[
              DeleteDuplicates[
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`pieq[
                 Model`ExogenousEq`t], PatternTest[
                   Pattern[Model`ExogenousEq`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "pi"]& ][
                   BlankNullSequence[]] :> Model`ExogenousEq`var, Infinity]]],
               "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
             MemberQ[
              DeleteDuplicates[
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`pibareq[
                 Model`ExogenousEq`t], PatternTest[
                   Pattern[Model`ExogenousEq`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "pibar"]& ][
                   BlankNullSequence[]] :> Model`ExogenousEq`var, Infinity]]],
               "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
             MemberQ[
              DeleteDuplicates[
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`sgeq[
                 Model`ExogenousEq`t], PatternTest[
                   Pattern[Model`ExogenousEq`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "sg"]& ][
                   BlankNullSequence[]] :> Model`ExogenousEq`var, Infinity]]],
               "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
             MemberQ[
              DeleteDuplicates[
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`sxeq[
                 Model`ExogenousEq`t], PatternTest[
                   Pattern[Model`ExogenousEq`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "sx"]& ][
                   BlankNullSequence[]] :> Model`ExogenousEq`var, Infinity]]],
               "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
             MemberQ[
              DeleteDuplicates[
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`sceq[
                 Model`ExogenousEq`t], PatternTest[
                   Pattern[Model`ExogenousEq`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "sc"]& ][
                   BlankNullSequence[]] :> Model`ExogenousEq`var, Infinity]]],
               "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
             MemberQ[
              DeleteDuplicates[
               Map[Context, 
                Cases[
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`speq[
                 Model`ExogenousEq`t], PatternTest[
                   Pattern[Model`ExogenousEq`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "sp"]& ][
                   BlankNullSequence[]] :> Model`ExogenousEq`var, Infinity]]],
               "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
             Not[{} === Cases[
                Map[Symbol, 
                 Names[
                 "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*"]], 
                PatternTest[
                  Pattern[Model`ExogenousEq`var, 
                   Blank[Symbol]], MatchQ[
                   SymbolName[#], "dc"]& ] :> Model`ExogenousEq`var, 
                Infinity]], 
             Not[{} === Cases[
                Map[Symbol, 
                 Names[
                 "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*"]], 
                PatternTest[
                  Pattern[Model`ExogenousEq`var, 
                   Blank[Symbol]], MatchQ[
                   SymbolName[#], "dd"]& ] :> Model`ExogenousEq`var, 
                Infinity]], 
             MemberQ[
              DeleteDuplicates[
               Map[Context, 
                Cases[
                 Map[Symbol, 
                  Names[
                  "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*"]], 
                 PatternTest[
                   Pattern[Model`ExogenousEq`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "dc"]& ] :> Model`ExogenousEq`var, 
                 Infinity]]], 
              "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"], 
             MemberQ[
              DeleteDuplicates[
               Map[Context, 
                Cases[
                 Map[Symbol, 
                  Names[
                  "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*"]], 
                 PatternTest[
                   Pattern[Model`ExogenousEq`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "dd"]& ] :> Model`ExogenousEq`var, 
                 Infinity]]], 
              "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.015633`4.344557325718415, "CPUTimeUsed" -> 0.01563800000000004, 
         "MemoryUsed" -> 5248, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7661713037125043187 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90569884245663*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "4af28819-1d7f-42b1-b4f6-89cabf6ac4eb", "TestID" -> 
         "ExogenousEq_20231007-NBIB7Y", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "EvaluationID" -> 
         "c04bc0f8-90ca-478a-ba5b-8dbc91744aee", "Input" -> HoldForm[
           Apply[And, 
            
            Map[# === 
             "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
             Map[Context, 
              Cases[
               Map[#[Model`ExogenousEq`t]& , 
                Map[
                Symbol, 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]]\
, PatternTest[
                 Pattern[Model`ExogenousEq`var, 
                  Blank[Symbol]], MemberQ[
                  Map[
                  StringDrop[#, -2]& , 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                  SymbolName[#]]& ][
                 BlankSequence[]] :> Model`ExogenousEq`var, Infinity]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0008229999999999999`3.065914833044262, "CPUTimeUsed" -> 
         0.0008230000000004623, "MemoryUsed" -> 2592, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 6172419013818606792 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905698842457708*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "48d317ac-7e00-4eb5-b2ec-bc794df156b1", "TestID" -> 
         "ExogenousEq_20231007-YFUEVW", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "EvaluationID" -> 
         "5d9e2845-0142-40c2-a951-9c84ec0144dc", "Input" -> HoldForm[
           Apply[And, 
            Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
             Map[Context, 
              Cases[
               Map[#[Model`ExogenousEq`t]& , 
                Map[
                Symbol, 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]]\
, PatternTest[
                 Pattern[Model`ExogenousEq`var, 
                  Blank[Symbol]], MatchQ[
                  SymbolName[#], "eps"]& ][
                 BlankSequence[]][
                 BlankSequence[]] :> Model`ExogenousEq`var, Infinity]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000165`2.3679989420458982, "CPUTimeUsed" -> 
         0.00016499999999997073`, "MemoryUsed" -> 2664, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 8498655862836182002 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905698842458107*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "60ba6da7-0f4a-48f1-8d8e-d490ad2219c8", "TestID" -> 
         "ExogenousEq_20231007-TNAM0Y", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "EvaluationID" -> 
         "85af8891-217b-418a-912f-4e0d66771d26", "Input" -> HoldForm[
           Apply[And, 
            Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
             Map[Context, 
              Cases[
               Map[#[Model`ExogenousEq`t]& , 
                Map[
                Symbol, 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]]\
, PatternTest[
                 Pattern[Model`ExogenousEq`var, 
                  Blank[Symbol]], MemberQ[
                 FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                  SymbolName[#]]& ] :> Model`ExogenousEq`var, Infinity]]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00034`2.6819939148742464, "CPUTimeUsed" -> 0.00034099999999970265`,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4339155222646933710 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90569884245867*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "0e427ce9-5134-4db9-ac37-94b5691ad34b", "TestID" -> 
         "ExogenousEq_20231007-924CFO", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ExogenousEq.wlt", "EvaluationID" -> 
         "27d039f1-a038-4ed3-9f75-b8e6dba5f43c", "Input" -> HoldForm[
           Apply[And, {
             FreeQ[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[
              Model`ExogenousEq`t], foo`t], 
             Not[
              FreeQ[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[
               Model`ExogenousEq`t], Model`ExogenousEq`t]], 
             FreeQ[
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[foo`t], 
              Model`ExogenousEq`t], 
             Not[
              FreeQ[
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[foo`t], 
               foo`t]], 
             Not[
             foo`xeq[Model`ExogenousEq`t] === 
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[
               Model`ExogenousEq`t]], 
             Not[
             FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[
               Model`ExogenousEq`t] === 
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`xeq[foo`t]]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00008`2.0536049848239353, "CPUTimeUsed" -> 0.00008100000000021979, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>]|>, "FailureResults" -> <||>, 
    "TestsNotEvaluatedKeys" -> {}, "TestsFailedWrongResultsKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {7668962938800673071, 7115806765750113173, 
     5413617019274943394, 7661713037125043187, 6172419013818606792, 
     8498655862836182002, 4339155222646933710}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.905698842636271*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"9cb509dd-0b62-49c7-8cc3-eb02ddc59e52"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"expected", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Flatten", "@", 
       RowBox[{"{", 
        RowBox[{"(", 
         RowBox[{"ReleaseHold", "@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
            RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
         ")"}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"jj", ",", "1", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "value", " ", "of", " ", "next", " ", "two", " ", "lines", " ", "should", 
    " ", "be", " ", "true"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"numEntries", "=", 
     RowBox[{
      RowBox[{"Dimensions", "[", "actual", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"numCol", "=", "5"}], ";", "\[IndentingNewLine]", 
    RowBox[{"numRows", "=", 
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{"numEntries", "/", "numCol"}], "]"}], "+", "1"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"TableForm", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ArrayReshape", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"TableForm", "[", 
              RowBox[{"{", 
               RowBox[{"#1", ",", "#2"}], "}"}], "]"}], "&"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"actual", ",", "\[IndentingNewLine]", "expected"}], 
             "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}], 
          "\[IndentingNewLine]", "}"}], "\[Transpose]"}], ",", 
        RowBox[{"{", 
         RowBox[{"numRows", ",", "numCol"}], "}"}], ",", "\"\<--\>\""}], 
       "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{"TableDepth", "\[Rule]", "1"}]}], " ", "]"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.905694462163437*^9, 3.905694478942039*^9}, {
  3.905697309999281*^9, 3.905697352099519*^9}, {3.905698637086853*^9, 
  3.905698637247707*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"97b498c5-0bce-4ae6-9cf7-7998115b20a4"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905698842856395*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"32845c5d-01d2-4a4b-9ac1-37d89d4527bd"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905698842857748*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"ee8df991-8781-4986-b948-49eb860ab279"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Interactive Tests", "Subsection",
 CellChangeTimes->{{3.889905622471089*^9, 
  3.889905629759961*^9}},ExpressionUUID->"110fa690-a939-4013-acf2-\
a07d9942e533"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"packageFileName", "=", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DirectoryName", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "2"}], "]"}], ",", 
     "\"\<Kernel\>\"", ",", "\"\<Model\>\"", ",", 
     RowBox[{
      RowBox[{"FileBaseName", "[", 
       RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", "\"\<.wl\>\""}]}],
     "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", 
  RowBox[{
   RowBox[{"\"\<FernandoDuarte`LongRunRisk`Model`\>\"", "<>", 
    RowBox[{"FileBaseName", "[", 
     RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", "\"\<`\>\""}], ",", 
   "packageFileName"}], "]"}]}], "Input",
 CellChangeTimes->{{3.889968360919714*^9, 3.889968361169221*^9}, {
   3.889998753242611*^9, 3.8899987613556004`*^9}, 3.890825576987958*^9, {
   3.890987450098063*^9, 3.8909874502616673`*^9}, {3.891159388110983*^9, 
   3.891159388420541*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"513b8a79-3a1e-48f6-acce-3c3c4f23a5ff"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Kernel/Model/ExogenousEq.wl\"\>"], "Output",\

 CellChangeTimes->{3.905698864296925*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"3b4dcdcf-8fe2-4d98-b284-1b36b7d83b1d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"allShocks", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ResourceFunction", "[", "\"\<SetSymbolsContext\>\"", "]"}], 
      "[", 
      RowBox[{"ToExpression", "/@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "<>", "\"\<[t]\>\""}], ")"}], "&"}], "/@", 
         "$exogenousVars"}], ")"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"eps", "[", "var_", "]"}], "[", "t_", "]"}], ":>", 
      RowBox[{
       RowBox[{"ToString", "[", "var", "]"}], "<>", "\"\<eq\>\""}]}], ",", 
     "Infinity"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SubsetQ", "[", 
  RowBox[{"$exogenousVars", ",", 
   RowBox[{"DeleteDuplicates", "@", "allShocks"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8913142070537786`*^9, 3.891314434192008*^9}, {
  3.891314466313642*^9, 3.891314472490741*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"a0007a04-6d3f-492b-a035-ffb8afbd0d59"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905698867142022*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"408434dc-1f30-42a1-9b65-029ae0d07c7e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "exogenous", " ", "variables", " ", "are", " ", "in", " ", 
    "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "@", 
        RowBox[{"(", 
         RowBox[{"Context", "/@", 
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{"xeq", "[", "t", "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"var_Symbol", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"MatchQ", "[", 
                  RowBox[{
                   RowBox[{"SymbolName", "[", "#", "]"}], ",", "\"\<x\>\""}], 
                  "]"}], "&"}], ")"}]}], "[", "___", "]"}], ":>", "var"}], 
            ",", "Infinity"}], "]"}]}], ")"}]}], ",", 
       "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "@", 
        RowBox[{"(", 
         RowBox[{"Context", "/@", 
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{"pieq", "[", "t", "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"var_Symbol", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"MatchQ", "[", 
                  RowBox[{
                   RowBox[{"SymbolName", "[", "#", "]"}], ",", "\"\<pi\>\""}],
                   "]"}], "&"}], ")"}]}], "[", "___", "]"}], ":>", "var"}], 
            ",", "Infinity"}], "]"}]}], ")"}]}], ",", 
       "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "@", 
        RowBox[{"(", 
         RowBox[{"Context", "/@", 
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{"pibareq", "[", "t", "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"var_Symbol", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"MatchQ", "[", 
                  RowBox[{
                   RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                   "\"\<pibar\>\""}], "]"}], "&"}], ")"}]}], "[", "___", 
              "]"}], ":>", "var"}], ",", "Infinity"}], "]"}]}], ")"}]}], ",", 
       "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "@", 
        RowBox[{"(", 
         RowBox[{"Context", "/@", 
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{"sgeq", "[", "t", "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"var_Symbol", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"MatchQ", "[", 
                  RowBox[{
                   RowBox[{"SymbolName", "[", "#", "]"}], ",", "\"\<sg\>\""}],
                   "]"}], "&"}], ")"}]}], "[", "___", "]"}], ":>", "var"}], 
            ",", "Infinity"}], "]"}]}], ")"}]}], ",", 
       "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "@", 
        RowBox[{"(", 
         RowBox[{"Context", "/@", 
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{"sxeq", "[", "t", "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"var_Symbol", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"MatchQ", "[", 
                  RowBox[{
                   RowBox[{"SymbolName", "[", "#", "]"}], ",", "\"\<sx\>\""}],
                   "]"}], "&"}], ")"}]}], "[", "___", "]"}], ":>", "var"}], 
            ",", "Infinity"}], "]"}]}], ")"}]}], ",", 
       "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "@", 
        RowBox[{"(", 
         RowBox[{"Context", "/@", 
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{"sceq", "[", "t", "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"var_Symbol", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"MatchQ", "[", 
                  RowBox[{
                   RowBox[{"SymbolName", "[", "#", "]"}], ",", "\"\<sc\>\""}],
                   "]"}], "&"}], ")"}]}], "[", "___", "]"}], ":>", "var"}], 
            ",", "Infinity"}], "]"}]}], ")"}]}], ",", 
       "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "@", 
        RowBox[{"(", 
         RowBox[{"Context", "/@", 
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{"speq", "[", "t", "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"var_Symbol", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"MatchQ", "[", 
                  RowBox[{
                   RowBox[{"SymbolName", "[", "#", "]"}], ",", "\"\<sp\>\""}],
                   "]"}], "&"}], ")"}]}], "[", "___", "]"}], ":>", "var"}], 
            ",", "Infinity"}], "]"}]}], ")"}]}], ",", 
       "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
      "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Not", "[", 
      RowBox[{
       RowBox[{"{", "}"}], "===", 
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{"Symbol", "/@", 
          RowBox[{
          "Names", "[", 
           "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\>\"", 
           "]"}]}], ",", 
         RowBox[{
          RowBox[{"var_Symbol", "?", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"MatchQ", "[", 
              RowBox[{
               RowBox[{"SymbolName", "[", "#", "]"}], ",", "\"\<dc\>\""}], 
              "]"}], "&"}], ")"}]}], ":>", "var"}], ",", "Infinity"}], 
        "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Not", "[", 
      RowBox[{
       RowBox[{"{", "}"}], "===", 
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{"Symbol", "/@", 
          RowBox[{
          "Names", "[", 
           "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\>\"", 
           "]"}]}], ",", 
         RowBox[{
          RowBox[{"var_Symbol", "?", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"MatchQ", "[", 
              RowBox[{
               RowBox[{"SymbolName", "[", "#", "]"}], ",", "\"\<dd\>\""}], 
              "]"}], "&"}], ")"}]}], ":>", "var"}], ",", "Infinity"}], 
        "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "@", 
        RowBox[{"(", 
         RowBox[{"Context", "/@", 
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{"Symbol", "/@", 
             RowBox[{
             "Names", "[", 
              "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\>\"\
", "]"}]}], ",", 
            RowBox[{
             RowBox[{"var_Symbol", "?", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"MatchQ", "[", 
                 RowBox[{
                  RowBox[{"SymbolName", "[", "#", "]"}], ",", "\"\<dc\>\""}], 
                 "]"}], "&"}], ")"}]}], ":>", "var"}], ",", "Infinity"}], 
           "]"}]}], ")"}]}], ",", 
       "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "@", 
        RowBox[{"(", 
         RowBox[{"Context", "/@", 
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{"Symbol", "/@", 
             RowBox[{
             "Names", "[", 
              "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`*\>\"\
", "]"}]}], ",", 
            RowBox[{
             RowBox[{"var_Symbol", "?", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"MatchQ", "[", 
                 RowBox[{
                  RowBox[{"SymbolName", "[", "#", "]"}], ",", "\"\<dd\>\""}], 
                 "]"}], "&"}], ")"}]}], ":>", "var"}], ",", "Infinity"}], 
           "]"}]}], ")"}]}], ",", 
       "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
      "]"}]}], "\[IndentingNewLine]", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.892991381424305*^9, 3.8929916518802958`*^9}, {
  3.8929916861199837`*^9, 3.892991779484473*^9}, {3.892992066667197*^9, 
  3.892992102299266*^9}, {3.892992774657414*^9, 3.892992841499052*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"0383a0fb-27ae-4412-a3cf-b2cc6cd91322"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905698867371632*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"f605bc35-dc32-4f56-9d89-c659a7fe3233"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "exogenous", " ", "variables", " ", "are", " ", "in", " ", 
    "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "#", "===", 
        "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
       ")"}], "&"}], "/@", 
     RowBox[{"(", 
      RowBox[{"Context", "/@", 
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "[", "t", "]"}], ")"}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"Symbol", "/@", "$exogenousVars"}], ")"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"var_Symbol", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"StringDrop", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                 "$exogenousVars"}], ",", 
                RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
             ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
        "]"}]}], ")"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.892993737772028*^9, 3.892993762389083*^9}, 
   3.892993820231213*^9, {3.892993909876807*^9, 3.892993921321001*^9}, {
   3.892993957942197*^9, 3.892993975404036*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"3393b5bc-c8b5-4710-8c3f-db19168bfa47"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9056988673779488`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"e8129a03-e619-48ab-bfc9-ffbc96902fcb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "shocks", " ", "are", " ", "in", " ", "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
        "#", "===", "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], 
        ")"}], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{"Context", "/@", 
        RowBox[{"Cases", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "[", "t", "]"}], ")"}], "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{"Symbol", "/@", "$exogenousVars"}], ")"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"var_Symbol", "?", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"MatchQ", "[", 
                 RowBox[{
                  RowBox[{"SymbolName", "[", "#", "]"}], ",", "\"\<eps\>\""}],
                  "]"}], "&"}], ")"}]}], "[", "__", "]"}], "[", "__", "]"}], ":>",
            "var"}], ",", "Infinity"}], "]"}]}], ")"}]}], ")"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.89299304534096*^9, 3.892993331708364*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"1580b28e-03bd-4899-86a8-ed8b7c407bce"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905698867382741*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"814fbe2a-ee44-49d7-ac58-08dcd2690808"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "parameters", " ", "are", " ", "in", " ", "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "#", "===", "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
       ")"}], "&"}], "/@", 
     RowBox[{"(", 
      RowBox[{"Context", "/@", 
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "[", "t", "]"}], ")"}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"Symbol", "/@", "$exogenousVars"}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"var_Symbol", "?", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{
              "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters", ",", 
               
               RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], ")"}]}],
           ":>", "var"}], ",", "Infinity"}], "]"}]}], ")"}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.8929930628202457`*^9, 3.892993074086934*^9}, {
  3.8929933403959827`*^9, 3.892993340674637*^9}, {3.892993382056836*^9, 
  3.892993388417315*^9}, {3.892993430422512*^9, 3.8929934561734447`*^9}, {
  3.8929936732366657`*^9, 3.8929936803494873`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"69d54a51-7303-419f-8f52-382c28dd177e"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905698867410782*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"54d2bd79-56e2-4bee-9adb-8ff5428bd2fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "different", " ", "contexts", " ", "for", " ", "t", " ", "and", " ", "eq", 
    " ", "vars"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FreeQ", "[", 
      RowBox[{
       RowBox[{"xeq", "[", "t", "]"}], ",", "foo`t"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Not", "@", 
      RowBox[{"FreeQ", "[", 
       RowBox[{
        RowBox[{"xeq", "[", "t", "]"}], ",", "t"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"FreeQ", "[", 
      RowBox[{
       RowBox[{"xeq", "[", "foo`t", "]"}], ",", "t"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Not", "@", 
      RowBox[{"FreeQ", "[", 
       RowBox[{
        RowBox[{"xeq", "[", "foo`t", "]"}], ",", "foo`t"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Not", "@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"foo`xeq", "[", "t", "]"}], "===", 
        RowBox[{"xeq", "[", "t", "]"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Not", "@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"xeq", "[", "t", "]"}], "===", 
        RowBox[{"xeq", "[", "foo`t", "]"}]}], ")"}]}]}], 
    "\[IndentingNewLine]", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.8899726167879753`*^9, 3.8899726421861687`*^9}, 
   3.889973060122468*^9, {3.890118946451016*^9, 3.890118971417235*^9}, {
   3.890119016281435*^9, 3.89011902196559*^9}, {3.892992860119802*^9, 
   3.892993001999461*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"6319490e-81e1-4afe-918f-752922bd248a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9056988674158363`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"3a46d18e-c03a-44fb-a327-7583d508ebb4"]
}, Open  ]]
}, Closed]]
},
WindowSize->{1413, 821},
WindowMargins->{{Automatic, -1647}, {36, Automatic}},
WindowStatusArea->"",
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.25 Inherited,
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"93f9d7d3-cf0b-4b4b-a685-d081c83a537a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 149, 3, 37, "Input",ExpressionUUID->"8a4e8bf4-2087-4d52-acf6-fdfb8e9b2b73"],
Cell[710, 25, 1922, 41, 142, "Input",ExpressionUUID->"84fc2a40-eb5d-491b-b37f-a5740e843968"],
Cell[CellGroupData[{
Cell[2657, 70, 209, 4, 67, "Subsection",ExpressionUUID->"5216b0c6-0b30-4607-beca-83054aa122f9"],
Cell[2869, 76, 341, 9, 37, "Input",ExpressionUUID->"e6735427-3487-4d80-a7a0-a170d3f1ed17"],
Cell[CellGroupData[{
Cell[3235, 89, 642, 12, 64, "Input",ExpressionUUID->"f27d60aa-814a-4945-813b-9477df02af2b"],
Cell[3880, 103, 202, 3, 42, "Output",ExpressionUUID->"33271e7c-7ad3-4e5d-8416-b8f51469d1d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4119, 111, 299, 4, 37, "Input",ExpressionUUID->"66b8ef49-f567-46e6-a1ff-1449d26ea1ec"],
Cell[4421, 117, 173, 2, 42, "Output",ExpressionUUID->"f4162b6f-b3be-49d8-a276-5ffb0b4ac138"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4631, 124, 613, 14, 116, "Input",ExpressionUUID->"6011cbec-7521-493c-b009-40fef28d9959"],
Cell[CellGroupData[{
Cell[5269, 142, 375, 9, 29, "Print",ExpressionUUID->"fba12758-7715-4ff8-b897-de8433c823dc"],
Cell[5647, 153, 270, 5, 29, "Print",ExpressionUUID->"4893fb2d-b74a-4d76-95eb-8ff6c7c66d4e"]
}, Open  ]],
Cell[5932, 161, 4916, 90, 42, "Output",ExpressionUUID->"6967abd3-3ef7-4c22-becf-f519ff1aa1ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10885, 256, 734, 16, 116, "Input",ExpressionUUID->"e2633f79-ec85-4da8-b3f8-1dfe9c81f85e"],
Cell[CellGroupData[{
Cell[11644, 276, 375, 9, 29, "Print",ExpressionUUID->"e5863b5d-892c-4f03-b80c-4c02c47e5c9d"],
Cell[12022, 287, 268, 5, 29, "Print",ExpressionUUID->"0c0dc3ac-f0f3-4d1d-81a3-c5cfbe7ecc52"]
}, Open  ]],
Cell[12305, 295, 4925, 90, 42, "Output",ExpressionUUID->"7b83da2d-097d-44ce-b493-9f6b7d29ac05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17267, 390, 9769, 246, 870, "Input",ExpressionUUID->"6e1e508c-8f45-46ae-a7ed-d27ac704690b"],
Cell[CellGroupData[{
Cell[27061, 640, 375, 9, 29, "Print",ExpressionUUID->"5d970312-c3b0-4748-b61b-8cd67ee88919"],
Cell[27439, 651, 268, 5, 29, "Print",ExpressionUUID->"966faa9a-6614-4e61-b567-1a1318bf49ae"]
}, Open  ]],
Cell[27722, 659, 25741, 431, 42, "Output",ExpressionUUID->"5de05379-6936-493c-8804-31bca04629e9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53500, 1095, 1913, 51, 194, "Input",ExpressionUUID->"fd7fa869-0128-42bc-8639-2af2a7c4dfae"],
Cell[CellGroupData[{
Cell[55438, 1150, 375, 9, 29, "Print",ExpressionUUID->"2f112d98-e7f7-4edd-b00b-d1399d04ec94"],
Cell[55816, 1161, 268, 5, 29, "Print",ExpressionUUID->"100b1abd-6673-4e72-8e29-18167842b9f8"]
}, Open  ]],
Cell[56099, 1169, 13099, 214, 42, "Output",ExpressionUUID->"d44ecde4-9d5c-46e6-a43e-307ff382f2ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69235, 1388, 1670, 44, 194, "Input",ExpressionUUID->"be0a7c4a-2cd6-4e5b-a50b-43fac34edc53"],
Cell[CellGroupData[{
Cell[70930, 1436, 375, 9, 29, "Print",ExpressionUUID->"25902c08-15b7-4096-aed5-239f260da4a8"],
Cell[71308, 1447, 268, 5, 29, "Print",ExpressionUUID->"42efe169-2675-4804-aa9f-c41bc64949e5"]
}, Open  ]],
Cell[71591, 1455, 13080, 214, 42, "Output",ExpressionUUID->"29198c1a-e559-40a4-bc23-858a27aa302f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84708, 1674, 1713, 42, 220, "Input",ExpressionUUID->"201e9bc5-ec95-46b1-8d0a-353f625179fb"],
Cell[CellGroupData[{
Cell[86446, 1720, 375, 9, 29, "Print",ExpressionUUID->"e05ff6a6-f6fa-4cd3-9710-1fa9e32efa3e"],
Cell[86824, 1731, 268, 5, 29, "Print",ExpressionUUID->"c6085459-4d12-4312-b77b-58fe820e4f96"]
}, Open  ]],
Cell[87107, 1739, 13794, 222, 42, "Output",ExpressionUUID->"41aa8b69-53e2-4577-9485-ad47386c6d79"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100938, 1966, 1708, 44, 298, "Input",ExpressionUUID->"29d7abeb-2bec-400d-9b00-a1037d3e0f15"],
Cell[CellGroupData[{
Cell[102671, 2014, 377, 9, 29, "Print",ExpressionUUID->"1300e825-d590-4558-b261-81e90852bb78"],
Cell[103051, 2025, 267, 5, 29, "Print",ExpressionUUID->"98bee810-35ce-48ab-a3a1-18fb832b7aca"]
}, Open  ]],
Cell[103333, 2033, 15250, 252, 42, "Output",ExpressionUUID->"7f7aac77-dea2-455d-8c15-4d9d9742278c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118620, 2290, 195, 3, 37, "Input",ExpressionUUID->"59dc68c9-68d3-49dc-81f4-c4b087d6db3d"],
Cell[118818, 2295, 174, 2, 42, "Output",ExpressionUUID->"f52ce614-401f-4751-aaaf-5c8f35031600"]
}, Open  ]],
Cell[119007, 2300, 356, 7, 37, "Input",ExpressionUUID->"969ec6fa-cb99-4746-881c-3e21d6b31f3a"],
Cell[119366, 2309, 1502, 33, 402, "Input",ExpressionUUID->"8a7cc326-6e9d-4751-b5e9-d7698dffe90f"],
Cell[120871, 2344, 3254, 66, 532, "Input",ExpressionUUID->"2ae9012a-6954-4f80-96fd-925a1a48fa4c"],
Cell[CellGroupData[{
Cell[124150, 2414, 1594, 38, 246, "Input",ExpressionUUID->"456d5a5a-46b8-4d5d-ac61-66ed417f16b7"],
Cell[125747, 2454, 392, 8, 69, "Output",ExpressionUUID->"97c8ba80-6b96-481e-b86e-99152d3b42dd"],
Cell[126142, 2464, 153, 2, 42, "Output",ExpressionUUID->"3c8e69fd-ab57-4de1-aa16-4b06e98d6d9c"],
Cell[126298, 2468, 395, 8, 69, "Output",ExpressionUUID->"a1a8235c-a5d8-466b-91d6-c052758f4321"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126730, 2481, 454, 10, 64, "Input",ExpressionUUID->"94636ec9-b23a-41a9-bc40-604c8145ebb1"],
Cell[127187, 2493, 22771, 464, 76, "Output",ExpressionUUID->"9cb509dd-0b62-49c7-8cc3-eb02ddc59e52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149995, 2962, 3401, 90, 480, "Input",ExpressionUUID->"97b498c5-0bce-4ae6-9cf7-7998115b20a4"],
Cell[153399, 3054, 152, 2, 42, "Output",ExpressionUUID->"32845c5d-01d2-4a4b-9ac1-37d89d4527bd"],
Cell[153554, 3058, 152, 2, 62, "Output",ExpressionUUID->"ee8df991-8781-4986-b948-49eb860ab279"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[153755, 3066, 165, 3, 46, "Subsection",ExpressionUUID->"110fa690-a939-4013-acf2-a07d9942e533"],
Cell[CellGroupData[{
Cell[153945, 3073, 1032, 23, 90, "Input",ExpressionUUID->"513b8a79-3a1e-48f6-acce-3c3c4f23a5ff"],
Cell[154980, 3098, 250, 4, 42, "Output",ExpressionUUID->"3b4dcdcf-8fe2-4d98-b284-1b36b7d83b1d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155267, 3107, 1002, 26, 90, "Input",ExpressionUUID->"a0007a04-6d3f-492b-a035-ffb8afbd0d59"],
Cell[156272, 3135, 151, 2, 42, "Output",ExpressionUUID->"408434dc-1f30-42a1-9b65-029ae0d07c7e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156460, 3142, 9213, 238, 792, "Input",ExpressionUUID->"0383a0fb-27ae-4412-a3cf-b2cc6cd91322"],
Cell[165676, 3382, 152, 2, 42, "Output",ExpressionUUID->"f605bc35-dc32-4f56-9d89-c659a7fe3233"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165865, 3389, 1688, 46, 142, "Input",ExpressionUUID->"3393b5bc-c8b5-4710-8c3f-db19168bfa47"],
Cell[167556, 3437, 154, 2, 42, "Output",ExpressionUUID->"e8129a03-e619-48ab-bfc9-ffbc96902fcb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167747, 3444, 1400, 39, 142, "Input",ExpressionUUID->"1580b28e-03bd-4899-86a8-ed8b7c407bce"],
Cell[169150, 3485, 152, 2, 42, "Output",ExpressionUUID->"814fbe2a-ee44-49d7-ac58-08dcd2690808"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169339, 3492, 1524, 40, 142, "Input",ExpressionUUID->"69d54a51-7303-419f-8f52-382c28dd177e"],
Cell[170866, 3534, 152, 2, 42, "Output",ExpressionUUID->"54d2bd79-56e2-4bee-9adb-8ff5428bd2fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171055, 3541, 1611, 42, 246, "Input",ExpressionUUID->"6319490e-81e1-4afe-918f-752922bd248a"],
Cell[172669, 3585, 154, 2, 42, "Output",ExpressionUUID->"3a46d18e-c03a-44fb-a327-7583d508ebb4"]
}, Open  ]]
}, Closed]]
}
]
*)

