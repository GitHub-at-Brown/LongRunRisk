(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    199225,       4070]
NotebookOptionsPosition[    146112,       3105]
NotebookOutlinePosition[    192475,       3960]
CellTagsIndexPosition[    192432,       3957]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"Quit", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.889964198656839*^9, 3.889964203363894*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"ecc6d428-0f07-4dc4-b145-1fdd39576e75"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"testFileName", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DirectoryName", "[", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "1"}], "]"}], ",", 
      RowBox[{
       RowBox[{"FileBaseName", "[", 
        RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", 
       "\"\<.wlt\>\""}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pacletDir", "=", 
   RowBox[{"DirectoryName", "[", 
    RowBox[{"testFileName", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", "pacletDir", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testContextBase", "=", 
   RowBox[{"FileBaseName", "[", "testFileName", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$ContextPath", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"$ContextPath", ",", 
     RowBox[{"Except", "[", "\"\<PacletizedResourceFunctions`\>\"", "]"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8890661685133457`*^9, 3.889066220685074*^9}, {
   3.8890662555512333`*^9, 3.889066299901951*^9}, {3.889066581166473*^9, 
   3.8890665847967653`*^9}, {3.889066731765956*^9, 3.889066745674687*^9}, {
   3.889431410824514*^9, 3.88943144002302*^9}, 3.889502968269744*^9, {
   3.889998928469849*^9, 3.889998928670561*^9}, {3.890676553021196*^9, 
   3.890676564028514*^9}, 3.890676636594749*^9, {3.890679618620262*^9, 
   3.89067961902995*^9}, {3.8908254134370813`*^9, 3.890825413876319*^9}, {
   3.890825459205497*^9, 3.890825473041605*^9}, {3.890825503118348*^9, 
   3.8908255374530487`*^9}, {3.891021675325671*^9, 3.891021675545487*^9}, {
   3.8911588731924877`*^9, 3.891158877904397*^9}, {3.8911592499395514`*^9, 
   3.8911592502376633`*^9}, {3.891258400453268*^9, 3.891258400821343*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"5d72f59a-42b2-44f6-9a1f-377a5ef018c1"],

Cell[CellGroupData[{

Cell["CI Tests", "Subsection",
 CellChangeTimes->{{3.8895791922306013`*^9, 3.889579196409403*^9}, {
  3.889905620469079*^9, 
  3.8899056207707977`*^9}},ExpressionUUID->"5216b0c6-0b30-4607-beca-\
83054aa122f9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FileNames", "[", "testFileName", "]"}], "===", 
     RowBox[{"{", "}"}]}], ",", "Nothing", ",", 
    RowBox[{"DeleteFile", "[", "testFileName", "]"}]}], "]"}], ";"}]], "Input",\

 CellLabel->"In[6]:=",ExpressionUUID->"de12a740-d7f8-44f2-9d77-de8939589dcd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"confirm", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"testContext", "=", 
  RowBox[{
  "\"\<FernandoDuarte`LongRunRisk`Model`\>\"", "<>", "testContextBase", "<>", 
   "\"\<`\>\""}]}]}], "Input",
 CellChangeTimes->{{3.8905953733279247`*^9, 3.890595373918909*^9}, 
   3.891215638297742*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"478c2735-a41a-4934-8062-93434d83aff8"],

Cell[BoxData["\<\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`\"\>"], \
"Output",
 CellChangeTimes->{3.8953628939225597`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"ad77484b-2b53-4769-b11a-784fd32a3392"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
   RowBox[{"testFileName", ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"Needs", "[", "\"\<FernandoDuarte`LongRunRisk`\>\"", "]"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "False"}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{3.889901579125684*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"3940f713-c887-49c0-8088-70b0b47a4c35"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
   RowBox[{"testFileName", ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"MemberQ", "[", 
     RowBox[{"$ContextPath", ",", "\"\<FernandoDuarte`LongRunRisk`\>\""}], 
     "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "False"}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{
  3.889497154816502*^9, 3.889901537022943*^9, {3.8899015735347013`*^9, 
   3.889901576062604*^9}, 3.889972368985745*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"b7d248a9-fa9b-47dd-9dfc-efe31b2c0ada"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Begin", "[", "\"\<EndogenousEq`\>\"", "]"}]], "Input",
 CellChangeTimes->{3.89068115064122*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"83a2cde8-33d4-441a-9a57-a82ece671585"],

Cell[BoxData["\<\"EndogenousEq`\"\>"], "Output",
 CellChangeTimes->{3.8953628939486933`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"93eb3e18-c3fc-4f5a-89f0-820e08522221"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", "\t", 
   RowBox[{
   "Needs", "[", "\"\<FernandoDuarte`LongRunRisk`Model`EndogenousEq`\>\"", 
    "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{3.889972291549716*^9, 3.889972376407036*^9, 
  3.889975842059237*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"6011cbec-7521-493c-b009-40fef28d9959"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"EndogenousEq_20230610-0G7T30\"\>"}],
  SequenceForm["Adding test: ", "EndogenousEq_20230610-0G7T30"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8953628943269567`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"3e9890a6-bfe0-4cd2-bb19-a0d70e7bceff"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt\"\>"], "Print",
 CellChangeTimes->{3.8953628943436413`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"3a386f78-8895-403a-ac50-577c37f6d933"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Needs @ \"FernandoDuarte`LongRunRisk`Model`EndogenousEq`\"", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = Null, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`\"\n\t,\n\tNull\n\t,\n\t{}\n\t\
,\n\tTestID->\"EndogenousEq_20230610-0G7T30\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> Null, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.039, "AbsoluteTiming" -> 0.039, 
   "InputString" :> ToString[
     Unevaluated[
      Needs["FernandoDuarte`LongRunRisk`Model`EndogenousEq`"]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"EndogenousEq\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`\"\n\t,\n\tNull\n\t,\n\t{}\n\t\
,\n\tTestID->\"EndogenousEq_20230610-0G7T30\"\n]\n\n\nEndTestSection[]\n"}, "\
\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.895362894356042*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"0aefbac8-0a1d-4ddb-9f57-422bf7e27bf6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "should", " ", "be", " ", "true", " ", "if", " ", "pdeq", " ", "can", " ",
      "be", " ", "found"}], "*)"}], "\[IndentingNewLine]", "\t", 
   RowBox[{"Not", "[", 
    RowBox[{
     RowBox[{"Names", "[", "\"\<*pdeq\>\"", "]"}], "===", 
     RowBox[{"{", "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.889972308684311*^9, {3.889975855483828*^9, 3.8899758555832644`*^9}, 
   3.890060745384507*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"e2633f79-ec85-4da8-b3f8-1dfe9c81f85e"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"EndogenousEq_20230610-DIWSB8\"\>"}],
  SequenceForm["Adding test: ", "EndogenousEq_20230610-DIWSB8"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8953628944178257`*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"7bf8d1b6-b992-45f9-b99b-0d9299ce7a3c"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt\"\>"], "Print",
 CellChangeTimes->{3.895362894419712*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"5b641ff2-eb35-47ea-9480-c8718e65d390"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "!SameQ[Names @ \"*pdeq\", {}]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\t!SameQ[Names @ \"*pdeq\", {}]\n\t,\n\tTrue\n\t,\n\t{}\
\n\t,\n\tTestID->\"EndogenousEq_20230610-DIWSB8\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.021, "AbsoluteTiming" -> 0.022, 
   "InputString" :> ToString[
     Unevaluated[
      Not[Names["*pdeq"] === {}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"EndogenousEq\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`\"\n\t,\n\tNull\n\t,\n\t{}\n\t\
,\n\tTestID->\"EndogenousEq_20230610-0G7T30\"\n]\n\n\nVerificationTest[\n\t\
!SameQ[Names @ \"*pdeq\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-DIWSB8\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.895362894425651*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"a2ff15ca-3f74-41d2-8feb-a11345905591"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "all", " ", "exogenous", " ", "variables", " ", "are", " ", "in", " ", 
     "context", " ", 
     "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
        "#", "===", 
         "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
        ")"}], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{"Context", "/@", 
        RowBox[{"Cases", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#", "[", "t", "]"}], ")"}], "&"}], "/@", 
            RowBox[{"(", 
             RowBox[{"Symbol", "/@", "$endogenousVars"}], ")"}]}], ")"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"var_Symbol", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                  "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                 RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
              ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
         "]"}]}], ")"}]}], ")"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.893001201934902*^9, 3.893001214021667*^9}, {
  3.893001245798745*^9, 3.8930012743606873`*^9}, {3.893001352341578*^9, 
  3.893001386197197*^9}, {3.893001448430169*^9, 3.893001448726687*^9}, {
  3.893001865653899*^9, 3.893001891777165*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"4c83d4e9-dd51-4118-b273-f9754fdb598c"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"EndogenousEq_20230610-OV08TN\"\>"}],
  SequenceForm["Adding test: ", "EndogenousEq_20230610-OV08TN"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8953628944690943`*^9},
 CellLabel->
  "During evaluation of \
In[14]:=",ExpressionUUID->"72e76535-0a9b-477c-b0cd-ff288453745f"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt\"\>"], "Print",
 CellChangeTimes->{3.89536289447106*^9},
 CellLabel->
  "During evaluation of \
In[14]:=",ExpressionUUID->"96e14b56-5a73-4c1e-b821-6a03044a0f44"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
Map[Context,\n\t\t\t\tCases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
EndogenousEq`var_Symbol,\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tMemberQ[\n\
\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t][__],\n\t\
\t\t\t\t\tEndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\t\t\
\t]\n\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
Map[Context,\n\t\t\t\tCases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
EndogenousEq`var_Symbol,\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tMemberQ[\n\
\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t][__],\n\t\
\t\t\t\t\tEndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\t\t\
\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-OV08TN\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.001, "AbsoluteTiming" -> 0.001, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[# === "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
        Map[Context, 
         Cases[
          Map[#[EndogenousEq`t]& , 
           Map[
           Symbol, FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars]], PatternTest[
            Pattern[EndogenousEq`var, 
             Blank[Symbol]], MemberQ[
             Map[
             StringDrop[#, -2]& , 
              FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars], 
             SymbolName[#]]& ][
            BlankSequence[]] :> EndogenousEq`var, Infinity]]]]], InputForm]|>,
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"EndogenousEq\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`\"\n\t,\n\tNull\n\t,\n\t{}\n\t\
,\n\tTestID->\"EndogenousEq_20230610-0G7T30\"\n]\n\n\nVerificationTest[\n\t\
!SameQ[Names @ \"*pdeq\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-DIWSB8\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
Map[Context,\n\t\t\t\tCases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
EndogenousEq`var_Symbol,\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tMemberQ[\n\
\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t][__],\n\t\
\t\t\t\t\tEndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\t\t\
\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-OV08TN\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.895362894489443*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"f9d621ea-c7ff-4766-96f3-e278f0a48b78"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "all", " ", "shocks", " ", "are", " ", "in", " ", "context", " ", 
     "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
        "#", "===", "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], 
        ")"}], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{"Context", "/@", 
        RowBox[{"Cases", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#", "[", "t", "]"}], ")"}], "&"}], "/@", 
            RowBox[{"(", 
             RowBox[{"Symbol", "/@", "$endogenousVars"}], ")"}]}], ")"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"var_Symbol", "?", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"MatchQ", "[", 
                 RowBox[{
                  RowBox[{"SymbolName", "[", "#", "]"}], ",", "\"\<eps\>\""}],
                  "]"}], "&"}], ")"}]}], "[", "__", "]"}], "[", "__", "]"}], ":>",
            "var"}], ",", "Infinity"}], "]"}]}], ")"}]}], ")"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.893001499960679*^9, {3.893001868407555*^9, 3.893001895430537*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"bd50b66f-1a8f-4c7a-a4e2-192cc425c462"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"EndogenousEq_20230610-I0J24M\"\>"}],
  SequenceForm["Adding test: ", "EndogenousEq_20230610-I0J24M"],
  Editable->False]], "Print",
 CellChangeTimes->{3.895362894530851*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"2a3127d8-6db9-4559-a98a-eb8d4adbc1f6"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt\"\>"], "Print",
 CellChangeTimes->{3.8953628945327044`*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"d0f4f20d-3e42-4a30-aa4d-0358ea2d52c2"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\tMap[Context,\n\t\t\t\t\
Cases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[EndogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\
EndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\t\t\t]\n\t\t]\
\n\t]", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\tMap[Context,\n\t\t\t\t\
Cases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[EndogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\
EndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\t\t\t]\n\t\t]\
\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-I0J24M\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
        Map[Context, 
         Cases[
          Map[#[EndogenousEq`t]& , 
           Map[
           Symbol, FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars]], PatternTest[
            Pattern[EndogenousEq`var, 
             Blank[Symbol]], MatchQ[
             SymbolName[#], "eps"]& ][
            BlankSequence[]][
            BlankSequence[]] :> EndogenousEq`var, Infinity]]]]], InputForm]|>,
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"EndogenousEq\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`\"\n\t,\n\tNull\n\t,\n\t{}\n\t\
,\n\tTestID->\"EndogenousEq_20230610-0G7T30\"\n]\n\n\nVerificationTest[\n\t\
!SameQ[Names @ \"*pdeq\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-DIWSB8\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
Map[Context,\n\t\t\t\tCases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
EndogenousEq`var_Symbol,\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tMemberQ[\n\
\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t][__],\n\t\
\t\t\t\t\tEndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\t\t\
\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-OV08TN\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\
\t\t\tMap[Context,\n\t\t\t\tCases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[EndogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\
EndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\t\t\t]\n\t\t]\
\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-I0J24M\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.8953628945384912`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"7a9de8fe-b0eb-4fa4-b435-361dc635ee37"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "all", " ", "parameters", " ", "are", " ", "in", " ", "context", " ", 
     "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
        "#", "===", "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
        ")"}], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{"Context", "/@", 
        RowBox[{"Cases", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#", "[", "t", "]"}], ")"}], "&"}], "/@", 
            RowBox[{"(", 
             RowBox[{"Symbol", "/@", "$endogenousVars"}], ")"}]}], ")"}], ",", 
          RowBox[{
           RowBox[{"var_Symbol", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{
               "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters", ",", 
                RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
             ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], ")"}]}], 
     ")"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.893001501399847*^9, {3.893001870406839*^9, 3.8930018985751953`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"5178a463-7413-4f48-b3eb-a5e6bdf2b8a5"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"EndogenousEq_20230610-12MROW\"\>"}],
  SequenceForm["Adding test: ", "EndogenousEq_20230610-12MROW"],
  Editable->False]], "Print",
 CellChangeTimes->{3.895362894579082*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"5cb79ed0-c525-4761-a539-5ad32ca8cafb"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt\"\>"], "Print",
 CellChangeTimes->{3.895362894580925*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"1a089435-e030-47f5-8f05-4c956d877214"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\tMap[Context,\n\t\t\
\t\tCases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[EndogenousEq`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\tEndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\t\
Infinity\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\tMap[Context,\n\t\t\
\t\tCases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[EndogenousEq`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\tEndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\t\
Infinity\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-12MROW\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
        Map[Context, 
         Cases[
          Map[#[EndogenousEq`t]& , 
           Map[
           Symbol, FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars]], PatternTest[
            Pattern[EndogenousEq`var, 
             Blank[Symbol]], MemberQ[
            FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
             SymbolName[#]]& ] :> EndogenousEq`var, Infinity]]]]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"EndogenousEq\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`\"\n\t,\n\tNull\n\t,\n\t{}\n\t\
,\n\tTestID->\"EndogenousEq_20230610-0G7T30\"\n]\n\n\nVerificationTest[\n\t\
!SameQ[Names @ \"*pdeq\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-DIWSB8\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
Map[Context,\n\t\t\t\tCases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
EndogenousEq`var_Symbol,\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tMemberQ[\n\
\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t][__],\n\t\
\t\t\t\t\tEndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\t\t\
\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-OV08TN\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\
\t\t\tMap[Context,\n\t\t\t\tCases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[EndogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\
EndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\t\t\t]\n\t\t]\
\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-I0J24M\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\tMap[Context,\n\t\t\
\t\tCases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[EndogenousEq`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\tEndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\t\
Infinity\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-12MROW\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.895362894604018*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"8cf8fa8c-0a13-40b0-9a05-f4c4e8c212bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "endogenous", " ", "variables", " ", "are", " ", "in", " ", 
    "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\>\""}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
   RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
         "#", "===", 
          "\"\<FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\>\""}], 
         ")"}], "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{"Context", "/@", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"#", "[", "t", "]"}], ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Symbol", "/@", "$endogenousVars"}], ")"}]}], ")"}], 
           ",", 
           RowBox[{
            RowBox[{
             RowBox[{"var_Symbol", "?", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                   "$endogenousVars"}], ",", 
                  RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
               ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
          "]"}]}], ")"}]}], ")"}]}], "\[IndentingNewLine]", ",", 
    RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "False"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.89300111387222*^9, 3.8930011727459707`*^9}, {
  3.893001247830225*^9, 3.893001299678648*^9}, {3.893001353751255*^9, 
  3.8930015072417727`*^9}, {3.893001873303112*^9, 3.89300190082272*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"7f4f591d-7e46-4d39-a083-282c80799487"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"EndogenousEq_20230610-1W6A38\"\>"}],
  SequenceForm["Adding test: ", "EndogenousEq_20230610-1W6A38"],
  Editable->False]], "Print",
 CellChangeTimes->{3.895362894652367*^9},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"548cf899-dae9-440e-8320-852d89e203f5"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt\"\>"], "Print",
 CellChangeTimes->{3.895362894654148*^9},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"bd7992f8-4a05-4df2-bbdd-664e4bce2e60"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\
Map[Context,\n\t\t\t\tCases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
EndogenousEq`var_Symbol,\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tMemberQ[\n\
\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t][__],\n\
\t\t\t\t\t\tEndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\t\
\t\t]\n\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\
Map[Context,\n\t\t\t\tCases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
EndogenousEq`var_Symbol,\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tMemberQ[\n\
\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t][__],\n\
\t\t\t\t\t\tEndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\t\
\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-1W6A38\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.001, "AbsoluteTiming" -> 0.001, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[# === "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"& , 
        Map[Context, 
         Cases[
          Map[#[EndogenousEq`t]& , 
           Map[
           Symbol, FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars]], PatternTest[
            Pattern[EndogenousEq`var, 
             Blank[Symbol]], MemberQ[
             Map[
             StringDrop[#, -2]& , 
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars], 
             
             SymbolName[#]]& ][
            BlankSequence[]] :> EndogenousEq`var, Infinity]]]]], InputForm]|>,
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"EndogenousEq\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`\"\n\t,\n\tNull\n\t,\n\t{}\n\t\
,\n\tTestID->\"EndogenousEq_20230610-0G7T30\"\n]\n\n\nVerificationTest[\n\t\
!SameQ[Names @ \"*pdeq\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-DIWSB8\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
Map[Context,\n\t\t\t\tCases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
EndogenousEq`var_Symbol,\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tMemberQ[\n\
\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t][__],\n\t\
\t\t\t\t\tEndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\t\t\
\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-OV08TN\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\
\t\t\tMap[Context,\n\t\t\t\tCases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[EndogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\
EndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\t\t\t]\n\t\t]\
\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-I0J24M\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\tMap[Context,\n\t\t\
\t\tCases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[EndogenousEq`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\tEndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\t\
Infinity\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-12MROW\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\
Map[Context,\n\t\t\t\tCases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
EndogenousEq`var_Symbol,\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tMemberQ[\n\
\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t][__],\n\
\t\t\t\t\t\tEndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\t\
\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-1W6A38\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.895362894674479*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"ef4c8ef8-2ea7-4437-acbd-1a6454e23d9a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "different", " ", "contexts", " ", "for", " ", "t", " ", "and", " ", "eq", 
    " ", "vars"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
   RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FreeQ", "[", 
        RowBox[{
         RowBox[{"bondyieldeq", "[", 
          RowBox[{"t", ",", "m"}], "]"}], ",", "foo`t"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Not", "@", 
        RowBox[{"FreeQ", "[", 
         RowBox[{
          RowBox[{"bondyieldeq", "[", 
           RowBox[{"t", ",", "m"}], "]"}], ",", "t"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FreeQ", "[", 
        RowBox[{
         RowBox[{"bondyieldeq", "[", 
          RowBox[{"foo`t", ",", "m"}], "]"}], ",", "t"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Not", "@", 
        RowBox[{"FreeQ", "[", 
         RowBox[{
          RowBox[{"bondyieldeq", "[", 
           RowBox[{"foo`t", ",", "m"}], "]"}], ",", "foo`t"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Not", "@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"foo`bondyieldeq", "[", 
           RowBox[{"t", ",", "m"}], "]"}], "===", 
          RowBox[{"bondyieldeq", "[", 
           RowBox[{"t", ",", "m"}], "]"}]}], ")"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Not", "@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"bondyieldeq", "[", 
           RowBox[{"t", ",", "m"}], "]"}], "===", 
          RowBox[{"bondyieldeq", "[", 
           RowBox[{"foo`t", ",", "m"}], "]"}]}], ")"}]}]}], 
      "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
    RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "False"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.891249141704917*^9, 3.89124916402168*^9}, {
  3.891249445870871*^9, 3.8912494720282707`*^9}, {3.891250866902298*^9, 
  3.891250867076214*^9}, {3.8930015258912563`*^9, 3.8930016288464193`*^9}, {
  3.8930018752223997`*^9, 3.893001920158505*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"d11ae37b-6b96-438d-bf01-44fcd5230180"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"EndogenousEq_20230610-SZNWBO\"\>"}],
  SequenceForm["Adding test: ", "EndogenousEq_20230610-SZNWBO"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8953628947149763`*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"55e9fc54-a178-445b-8a7f-168affde1767"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt\"\>"], "Print",
 CellChangeTimes->{3.895362894716707*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"0ffac905-e21e-476f-9d26-38bca9675acf"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\t\
FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, EndogenousEq`m], foo`t],\n\t\t\t\
!FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, EndogenousEq`m], EndogenousEq`t],\n\t\t\t\
FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[foo`t, \
EndogenousEq`m], EndogenousEq`t],\n\t\t\t\
!FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[foo`t, \
EndogenousEq`m], foo`t],\n\t\t\t!SameQ[foo`bondyieldeq[EndogenousEq`t, \
EndogenousEq`m], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`t, \
EndogenousEq`m]],\n\t\t\t\
!SameQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, EndogenousEq`m], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[foo`t, \
EndogenousEq`m]]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t\
FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, EndogenousEq`m], foo`t],\n\t\t\t\
!FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, EndogenousEq`m], EndogenousEq`t],\n\t\t\t\
FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[foo`t, \
EndogenousEq`m], EndogenousEq`t],\n\t\t\t\
!FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[foo`t, \
EndogenousEq`m], foo`t],\n\t\t\t!SameQ[foo`bondyieldeq[EndogenousEq`t, \
EndogenousEq`m], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`t, \
EndogenousEq`m]],\n\t\t\t\
!SameQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, EndogenousEq`m], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[foo`t, \
EndogenousEq`m]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-SZNWBO\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        FreeQ[
         FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
         EndogenousEq`t, EndogenousEq`m], foo`t], 
        Not[
         FreeQ[
          FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
          EndogenousEq`t, EndogenousEq`m], EndogenousEq`t]], 
        FreeQ[
         FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
         foo`t, EndogenousEq`m], EndogenousEq`t], 
        Not[
         FreeQ[
          FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
          foo`t, EndogenousEq`m], foo`t]], 
        Not[
        foo`bondyieldeq[EndogenousEq`t, EndogenousEq`m] === 
         FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
          EndogenousEq`t, EndogenousEq`m]], 
        Not[
        FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
          EndogenousEq`t, EndogenousEq`m] === 
         FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
          foo`t, EndogenousEq`m]]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"EndogenousEq\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`\"\n\t,\n\tNull\n\t,\n\t{}\n\t\
,\n\tTestID->\"EndogenousEq_20230610-0G7T30\"\n]\n\n\nVerificationTest[\n\t\
!SameQ[Names @ \"*pdeq\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-DIWSB8\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
Map[Context,\n\t\t\t\tCases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
EndogenousEq`var_Symbol,\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tMemberQ[\n\
\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t][__],\n\t\
\t\t\t\t\tEndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\t\t\
\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-OV08TN\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\
\t\t\tMap[Context,\n\t\t\t\tCases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[EndogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\
EndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\t\t\t]\n\t\t]\
\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-I0J24M\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\tMap[Context,\n\t\t\
\t\tCases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[EndogenousEq`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\tEndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\t\
Infinity\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-12MROW\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\
Map[Context,\n\t\t\t\tCases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
EndogenousEq`var_Symbol,\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tMemberQ[\n\
\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t][__],\n\
\t\t\t\t\t\tEndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\t\
\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-1W6A38\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, EndogenousEq`m], foo`t],\n\t\t\t\
!FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, EndogenousEq`m], EndogenousEq`t],\n\t\t\t\
FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[foo`t, \
EndogenousEq`m], EndogenousEq`t],\n\t\t\t\
!FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[foo`t, \
EndogenousEq`m], foo`t],\n\t\t\t!SameQ[foo`bondyieldeq[EndogenousEq`t, \
EndogenousEq`m], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`t, \
EndogenousEq`m]],\n\t\t\t\
!SameQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, EndogenousEq`m], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[foo`t, \
EndogenousEq`m]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-SZNWBO\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.895362894734928*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"caf67745-a3b5-4c87-abef-a6c3bbb255aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "different", " ", "contexts", " ", "for", " ", "m", " ", "and", " ", "eq", 
    " ", "vars"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
   RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FreeQ", "[", 
        RowBox[{
         RowBox[{"bondyieldeq", "[", 
          RowBox[{"t", ",", "m"}], "]"}], ",", "foo`m"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Not", "@", 
        RowBox[{"FreeQ", "[", 
         RowBox[{
          RowBox[{"bondyieldeq", "[", 
           RowBox[{"t", ",", "m"}], "]"}], ",", "m"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FreeQ", "[", 
        RowBox[{
         RowBox[{"bondyieldeq", "[", 
          RowBox[{"t", ",", "foo`m"}], "]"}], ",", "m"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Not", "@", 
        RowBox[{"FreeQ", "[", 
         RowBox[{
          RowBox[{"bondyieldeq", "[", 
           RowBox[{"t", ",", "foo`m"}], "]"}], ",", "foo`m"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Not", "@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"bondyieldeq", "[", 
           RowBox[{"t", ",", "m"}], "]"}], "===", 
          RowBox[{"bondyieldeq", "[", 
           RowBox[{"t", ",", "foo`m"}], "]"}]}], ")"}]}]}], 
      "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
    RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "False"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.891249141704917*^9, 3.89124916402168*^9}, {
  3.891249445870871*^9, 3.8912494720282707`*^9}, {3.891250866902298*^9, 
  3.891250867076214*^9}, {3.8930015258912563`*^9, 3.8930016288464193`*^9}, {
  3.8930018752223997`*^9, 3.893001920158505*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"6708c186-9a69-4536-af69-fcc1b2ce3305"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"EndogenousEq_20230610-5I43IK\"\>"}],
  SequenceForm["Adding test: ", "EndogenousEq_20230610-5I43IK"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8953628947751703`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"3a2b3769-7bee-4cd2-845e-3e0bbb8e86e1"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt\"\>"], "Print",
 CellChangeTimes->{3.8953628947768707`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"dfce1d7b-602a-40d2-bc11-04b4842b3520"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\t\
FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, EndogenousEq`m], foo`m],\n\t\t\t\
!FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, EndogenousEq`m], EndogenousEq`m],\n\t\t\t\
FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, foo`m], EndogenousEq`m],\n\t\t\t\
!FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, foo`m], foo`m],\n\t\t\t\
!SameQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, EndogenousEq`m], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`t, \
foo`m]]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t\
FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, EndogenousEq`m], foo`m],\n\t\t\t\
!FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, EndogenousEq`m], EndogenousEq`m],\n\t\t\t\
FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, foo`m], EndogenousEq`m],\n\t\t\t\
!FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, foo`m], foo`m],\n\t\t\t\
!SameQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, EndogenousEq`m], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`t, \
foo`m]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-5I43IK\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        FreeQ[
         FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
         EndogenousEq`t, EndogenousEq`m], foo`m], 
        Not[
         FreeQ[
          FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
          EndogenousEq`t, EndogenousEq`m], EndogenousEq`m]], 
        FreeQ[
         FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
         EndogenousEq`t, foo`m], EndogenousEq`m], 
        Not[
         FreeQ[
          FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
          EndogenousEq`t, foo`m], foo`m]], 
        Not[
        FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
          EndogenousEq`t, EndogenousEq`m] === 
         FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
          EndogenousEq`t, foo`m]]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"EndogenousEq\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`\"\n\t,\n\tNull\n\t,\n\t{}\n\t\
,\n\tTestID->\"EndogenousEq_20230610-0G7T30\"\n]\n\n\nVerificationTest[\n\t\
!SameQ[Names @ \"*pdeq\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-DIWSB8\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
Map[Context,\n\t\t\t\tCases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
EndogenousEq`var_Symbol,\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tMemberQ[\n\
\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t][__],\n\t\
\t\t\t\t\tEndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\t\t\
\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-OV08TN\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\
\t\t\tMap[Context,\n\t\t\t\tCases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[EndogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\
EndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\t\t\t]\n\t\t]\
\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-I0J24M\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\tMap[Context,\n\t\t\
\t\tCases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[EndogenousEq`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\tEndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\t\
Infinity\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-12MROW\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\
Map[Context,\n\t\t\t\tCases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
EndogenousEq`var_Symbol,\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tMemberQ[\n\
\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t][__],\n\
\t\t\t\t\t\tEndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\t\
\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-1W6A38\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, EndogenousEq`m], foo`t],\n\t\t\t\
!FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, EndogenousEq`m], EndogenousEq`t],\n\t\t\t\
FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[foo`t, \
EndogenousEq`m], EndogenousEq`t],\n\t\t\t\
!FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[foo`t, \
EndogenousEq`m], foo`t],\n\t\t\t!SameQ[foo`bondyieldeq[EndogenousEq`t, \
EndogenousEq`m], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`t, \
EndogenousEq`m]],\n\t\t\t\
!SameQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, EndogenousEq`m], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[foo`t, \
EndogenousEq`m]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-SZNWBO\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, EndogenousEq`m], foo`m],\n\t\t\t\
!FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, EndogenousEq`m], EndogenousEq`m],\n\t\t\t\
FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, foo`m], EndogenousEq`m],\n\t\t\t\
!FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, foo`m], foo`m],\n\t\t\t\
!SameQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, EndogenousEq`m], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`t, \
foo`m]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-5I43IK\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.89536289478333*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"549f1986-a2f9-46cc-850b-e6a9fa8bc775"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"default", " ", "values", " ", "for", " ", "arguments"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
   RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
    RowBox[{"And", "@@", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"bondfweq", "[", 
         RowBox[{"t", ",", "m"}], "]"}], "===", 
        RowBox[{"bondfweq", "[", 
         RowBox[{"t", ",", "m", ",", "1"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"bondreteq", "[", 
         RowBox[{"t", ",", "m"}], "]"}], "===", 
        RowBox[{"bondreteq", "[", 
         RowBox[{"t", ",", "m", ",", "1"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"bondfwspreadeq", "[", 
         RowBox[{"t", ",", "m"}], "]"}], "===", 
        RowBox[{"bondfwspreadeq", "[", 
         RowBox[{"t", ",", "m", ",", "1"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"bondexcreteq", "[", 
         RowBox[{"t", ",", "m"}], "]"}], "===", 
        RowBox[{"bondexcreteq", "[", 
         RowBox[{"t", ",", "m", ",", "1"}], "]"}]}]}], "\[IndentingNewLine]", 
      "}"}]}], "\[IndentingNewLine]", ",", 
    RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "False"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.889976523114066*^9, 3.889976540444695*^9}, {
  3.893001639326522*^9, 3.893001727628183*^9}, {3.893001881254777*^9, 
  3.893001881570809*^9}, {3.893001912234313*^9, 3.893001913708782*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"b7a62ecb-32a1-45aa-8527-9ed71591fde8"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"EndogenousEq_20230610-X1EP37\"\>"}],
  SequenceForm["Adding test: ", "EndogenousEq_20230610-X1EP37"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8953628948201103`*^9},
 CellLabel->
  "During evaluation of \
In[20]:=",ExpressionUUID->"105d124b-6a4d-4257-bc87-a96fbbfba114"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt\"\>"], "Print",
 CellChangeTimes->{3.895362894821859*^9},
 CellLabel->
  "During evaluation of \
In[20]:=",ExpressionUUID->"5294798b-e961-4e89-b209-e8fca0c7c091"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\t\
SameQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondfweq[EndogenousEq`t, \
EndogenousEq`m], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondfweq[EndogenousEq`t, \
EndogenousEq`m, 1]],\n\t\t\t\
SameQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondreteq[EndogenousEq`t, \
EndogenousEq`m], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondreteq[EndogenousEq`t, \
EndogenousEq`m, 1]],\n\t\t\t\
SameQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondfwspreadeq[\
EndogenousEq`t, EndogenousEq`m], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondfwspreadeq[EndogenousEq`t, \
EndogenousEq`m, 1]],\n\t\t\t\
SameQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondexcreteq[EndogenousEq`\
t, EndogenousEq`m], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondexcreteq[EndogenousEq`t, \
EndogenousEq`m, 1]]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t\
SameQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondfweq[EndogenousEq`t, \
EndogenousEq`m], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondfweq[EndogenousEq`t, \
EndogenousEq`m, 1]],\n\t\t\t\
SameQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondreteq[EndogenousEq`t, \
EndogenousEq`m], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondreteq[EndogenousEq`t, \
EndogenousEq`m, 1]],\n\t\t\t\
SameQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondfwspreadeq[\
EndogenousEq`t, EndogenousEq`m], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondfwspreadeq[EndogenousEq`t, \
EndogenousEq`m, 1]],\n\t\t\t\
SameQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondexcreteq[EndogenousEq`\
t, EndogenousEq`m], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondexcreteq[EndogenousEq`t, \
EndogenousEq`m, 1]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-X1EP37\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[
      And, {FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondfweq[
         EndogenousEq`t, EndogenousEq`m] === 
        FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondfweq[
         EndogenousEq`t, EndogenousEq`m, 1], 
        FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondreteq[
         EndogenousEq`t, EndogenousEq`m] === 
        FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondreteq[
         EndogenousEq`t, EndogenousEq`m, 1], 
        FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondfwspreadeq[
         EndogenousEq`t, EndogenousEq`m] === 
        FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondfwspreadeq[
         EndogenousEq`t, EndogenousEq`m, 1], 
        FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondexcreteq[
         EndogenousEq`t, EndogenousEq`m] === 
        FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondexcreteq[
         EndogenousEq`t, EndogenousEq`m, 1]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"EndogenousEq\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`\"\n\t,\n\tNull\n\t,\n\t{}\n\t\
,\n\tTestID->\"EndogenousEq_20230610-0G7T30\"\n]\n\n\nVerificationTest[\n\t\
!SameQ[Names @ \"*pdeq\", {}]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-DIWSB8\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
Map[Context,\n\t\t\t\tCases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
EndogenousEq`var_Symbol,\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tMemberQ[\n\
\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t][__],\n\t\
\t\t\t\t\tEndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\t\t\
\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-OV08TN\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\
\t\t\tMap[Context,\n\t\t\t\tCases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[EndogenousEq`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\
EndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\t\t\t]\n\t\t]\
\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-I0J24M\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\tMap[Context,\n\t\t\
\t\tCases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[EndogenousEq`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\tEndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\t\
Infinity\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-12MROW\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\
Map[Context,\n\t\t\t\tCases[Map[Slot[1][EndogenousEq`t]&, Map[Symbol, \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]],\n\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
EndogenousEq`var_Symbol,\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tMemberQ[\n\
\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t][__],\n\
\t\t\t\t\t\tEndogenousEq`var\n\t\t\t\t\t],\n\t\t\t\t\tInfinity\n\t\t\t\t]\n\t\
\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-1W6A38\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, EndogenousEq`m], foo`t],\n\t\t\t\
!FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, EndogenousEq`m], EndogenousEq`t],\n\t\t\t\
FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[foo`t, \
EndogenousEq`m], EndogenousEq`t],\n\t\t\t\
!FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[foo`t, \
EndogenousEq`m], foo`t],\n\t\t\t!SameQ[foo`bondyieldeq[EndogenousEq`t, \
EndogenousEq`m], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`t, \
EndogenousEq`m]],\n\t\t\t\
!SameQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, EndogenousEq`m], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[foo`t, \
EndogenousEq`m]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-SZNWBO\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, EndogenousEq`m], foo`m],\n\t\t\t\
!FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, EndogenousEq`m], EndogenousEq`m],\n\t\t\t\
FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, foo`m], EndogenousEq`m],\n\t\t\t\
!FreeQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, foo`m], foo`m],\n\t\t\t\
!SameQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`\
t, EndogenousEq`m], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[EndogenousEq`t, \
foo`m]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-5I43IK\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
SameQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondfweq[EndogenousEq`t, \
EndogenousEq`m], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondfweq[EndogenousEq`t, \
EndogenousEq`m, 1]],\n\t\t\t\
SameQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondreteq[EndogenousEq`t, \
EndogenousEq`m], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondreteq[EndogenousEq`t, \
EndogenousEq`m, 1]],\n\t\t\t\
SameQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondfwspreadeq[\
EndogenousEq`t, EndogenousEq`m], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondfwspreadeq[EndogenousEq`t, \
EndogenousEq`m, 1]],\n\t\t\t\
SameQ[FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondexcreteq[EndogenousEq`\
t, EndogenousEq`m], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondexcreteq[EndogenousEq`t, \
EndogenousEq`m, 1]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"EndogenousEq_20230610-X1EP37\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.8953628948526087`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"336489b1-2ab9-45ea-b131-9321d612f91f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"End", "[", "]"}]], "Input",
 CellLabel->"In[21]:=",ExpressionUUID->"3eb99ea3-bc8c-4524-b27c-2528a0af68a2"],

Cell[BoxData["\<\"EndogenousEq`\"\>"], "Output",
 CellChangeTimes->{3.89536289492448*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"dbdb7e18-6223-483d-bbec-72abb3badde3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"add", " ", 
    RowBox[{"Begin", "[", "\"\<Context`\>\"", "]"}], " ", "and", " ", 
    RowBox[{"End", "[", "]"}], " ", "to", " ", "wlt", " ", "file"}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"helper", " ", "functions"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", "countLines", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"countLines", "[", "file_String", "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"readStream", "=", 
         RowBox[{"OpenRead", "[", "file", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"n", "=", "1"}], ",", "\[IndentingNewLine]", "temp"}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"While", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"temp", "=!=", "EndOfFile"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"temp", "=", 
           RowBox[{"ReadLine", "[", "readStream", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"n", "=", 
           RowBox[{"n", "+", "1"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Close", "/@", 
        RowBox[{"{", "readStream", "}"}]}], ";", "\[IndentingNewLine]", 
       "n"}]}], "\[IndentingNewLine]", "]"}]}], "\n", 
   RowBox[{"ClearAll", "[", "replaceNthRecord", "]"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"replaceNthRecord", "[", 
     RowBox[{"file_String", ",", "n_Integer", ",", "replaceWith_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"readStream", "=", 
         RowBox[{"OpenRead", "[", "file", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"writeStream", "=", 
         RowBox[{"OpenWrite", "[", 
          RowBox[{"file", "<>", "\"\<temp\>\""}], "]"}]}], ",", 
        "\[IndentingNewLine]", "temp"}], "\[IndentingNewLine]", "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"WriteLine", "[", 
          RowBox[{"writeStream", ",", 
           RowBox[{"ReadLine", "[", "readStream", "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"n", "-", "1"}], "}"}]}], "\[IndentingNewLine]", "]"}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"WriteLine", "[", 
        RowBox[{"writeStream", ",", 
         RowBox[{
          RowBox[{"ReadLine", "[", "readStream", "]"}], "<>", 
          "\"\< \\r\\n\>\"", "<>", "replaceWith"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"While", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"temp", "=!=", "EndOfFile"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"temp", "=", 
           RowBox[{"ReadLine", "[", "readStream", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"UnsameQ", "[", 
             RowBox[{"temp", ",", "EndOfFile"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"WriteLine", "[", 
             RowBox[{"writeStream", ",", "temp"}], "]"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", 
       RowBox[{"Close", "/@", 
        RowBox[{"{", 
         RowBox[{"readStream", ",", "writeStream"}], "}"}]}]}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"insert", " ", "into", " ", "wlt", " ", "file"}], "*)"}], "\n", 
   RowBox[{"replaceNthRecord", "[", 
    RowBox[{
    "testFileName", ",", "1", ",", "\"\<Begin[\\\"EndogenousEq`\\\"]\>\""}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CopyFile", "[", 
     RowBox[{
      RowBox[{"testFileName", "<>", "\"\<temp\>\""}], ",", "testFileName", 
      ",", 
      RowBox[{"OverwriteTarget", "->", "True"}]}], "]"}], ";"}], "\n", 
   RowBox[{"DeleteFile", "[", 
    RowBox[{"testFileName", "<>", "\"\<temp\>\""}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"numLines", "=", 
    RowBox[{"countLines", "[", "testFileName", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"replaceNthRecord", "[", 
    RowBox[{"testFileName", ",", 
     RowBox[{"numLines", "-", "3"}], ",", " ", "\"\<End[]\>\""}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CopyFile", "[", 
     RowBox[{
      RowBox[{"testFileName", "<>", "\"\<temp\>\""}], ",", "testFileName", 
      ",", 
      RowBox[{"OverwriteTarget", "->", "True"}]}], "]"}], ";"}], "\n", 
   RowBox[{"DeleteFile", "[", 
    RowBox[{"testFileName", "<>", "\"\<temp\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.890686194230386*^9, 3.890686228283702*^9}, 
   3.8911593195689373`*^9, 3.891215663824191*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"a987c799-a69e-45bc-a9f6-b0b6f0e903c9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlttemp\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8953628949661837`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"460e61f2-f606-4bd8-917a-5844cb3c6161"],

Cell[BoxData["174"], "Output",
 CellChangeTimes->{3.8953628949744463`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"528309df-b5aa-42a0-8cd6-516999ff2c5b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlttemp\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8953628949796658`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"63b9db32-ac30-4023-bcd5-f379c0e6d46b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tr", "=", 
  RowBox[{"TestReport", "[", "testFileName", "]"}]}]], "Input",
 CellLabel->"In[33]:=",ExpressionUUID->"c23f102e-032c-466b-baef-594a42a2c443"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: EndogenousEq.wlt\"", "SummaryItem"]}],
                "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["9", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: EndogenousEq.wlt\"", "SummaryItem"]}],
                "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["9", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["9", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Failed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox[
                 "\"Failed with wrong results: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox[
                 "\"Failed with messages: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Failed with errors: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0.017734`", "\"s\"", "seconds", "\"Seconds\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}], 
               "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: EndogenousEq.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     5525804390918074521 -> 
      TestResultObject[<|
        "TestKey" -> 5525804390918074521, "TestID" -> 
         "EndogenousEq_20230610-0G7T30", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Needs["FernandoDuarte`LongRunRisk`Model`EndogenousEq`"]], 
         "ExpectedOutput" -> HoldForm[Null], "ActualOutput" -> HoldForm[Null],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.895362895025969*^9, "AbsoluteTimeUsed" -> 
         0.000032`1.6556649761518998, "CPUTimeUsed" -> 0.00003300000000017178,
          "MemoryUsed" -> 3048|>], 7337864540533437790 -> 
      TestResultObject[<|
        "TestKey" -> 7337864540533437790, "TestID" -> 
         "EndogenousEq_20230610-DIWSB8", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Not[Names["*pdeq"] === {}]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 3.89536289502771*^9, 
         "AbsoluteTimeUsed" -> 0.015677`4.345777956174054, "CPUTimeUsed" -> 
         0.015698999999999685`, "MemoryUsed" -> 3176|>], 2749804378547808574 -> 
      TestResultObject[<|
        "TestKey" -> 2749804378547808574, "TestID" -> 
         "EndogenousEq_20230610-OV08TN", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, 
            
            Map[# === 
             "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
             Map[Context, 
              Cases[
               Map[#[EndogenousEq`t]& , 
                Map[
                Symbol, 
                 FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars]], PatternTest[
                 Pattern[EndogenousEq`var, 
                  Blank[Symbol]], MemberQ[
                  Map[
                  StringDrop[#, -2]& , 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                  SymbolName[#]]& ][
                 BlankSequence[]] :> EndogenousEq`var, Infinity]]]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.895362895043692*^9, "AbsoluteTimeUsed" -> 
         0.000563`2.90102339268334, "CPUTimeUsed" -> 0.0005610000000002557, 
         "MemoryUsed" -> 2952|>], 3969601895569927099 -> 
      TestResultObject[<|
        "TestKey" -> 3969601895569927099, "TestID" -> 
         "EndogenousEq_20230610-I0J24M", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, 
            Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
             Map[Context, 
              Cases[
               Map[#[EndogenousEq`t]& , 
                Map[
                Symbol, 
                 FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars]], PatternTest[
                 Pattern[EndogenousEq`var, 
                  Blank[Symbol]], MatchQ[
                  SymbolName[#], "eps"]& ][
                 BlankSequence[]][
                 BlankSequence[]] :> EndogenousEq`var, Infinity]]]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.895362895044436*^9, "AbsoluteTimeUsed" -> 
         0.000141`2.2997341104873716, "CPUTimeUsed" -> 
         0.00014200000000030855`, "MemoryUsed" -> 3072|>], 
      3169116347706549548 -> 
      TestResultObject[<|
        "TestKey" -> 3169116347706549548, "TestID" -> 
         "EndogenousEq_20230610-12MROW", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, 
            Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
             Map[Context, 
              Cases[
               Map[#[EndogenousEq`t]& , 
                Map[
                Symbol, 
                 FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars]], PatternTest[
                 Pattern[EndogenousEq`var, 
                  Blank[Symbol]], MemberQ[
                 FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                  SymbolName[#]]& ] :> EndogenousEq`var, Infinity]]]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8953628950447507`*^9, "AbsoluteTimeUsed" -> 
         0.000262`2.568816289151737, "CPUTimeUsed" -> 0.0002629999999999022, 
         "MemoryUsed" -> 2936|>], 7797652481439182622 -> 
      TestResultObject[<|
        "TestKey" -> 7797652481439182622, "TestID" -> 
         "EndogenousEq_20230610-1W6A38", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, 
            
            Map[# === 
             "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"& , 
             Map[Context, 
              Cases[
               Map[#[EndogenousEq`t]& , 
                Map[
                Symbol, 
                 FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars]], PatternTest[
                 Pattern[EndogenousEq`var, 
                  Blank[Symbol]], MemberQ[
                  Map[
                  StringDrop[#, -2]& , 
                   FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                  SymbolName[#]]& ][
                 BlankSequence[]] :> EndogenousEq`var, Infinity]]]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8953628950451827`*^9, "AbsoluteTimeUsed" -> 
         0.000956`3.1309728901080938, "CPUTimeUsed" -> 0.0009589999999999321, 
         "MemoryUsed" -> 2944|>], 1938121943548207788 -> 
      TestResultObject[<|
        "TestKey" -> 1938121943548207788, "TestID" -> 
         "EndogenousEq_20230610-SZNWBO", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, {
             FreeQ[
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
              EndogenousEq`t, EndogenousEq`m], foo`t], 
             Not[
              FreeQ[
               FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
               EndogenousEq`t, EndogenousEq`m], EndogenousEq`t]], 
             FreeQ[
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
              foo`t, EndogenousEq`m], EndogenousEq`t], 
             Not[
              FreeQ[
               FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
               foo`t, EndogenousEq`m], foo`t]], 
             Not[
             foo`bondyieldeq[EndogenousEq`t, EndogenousEq`m] === 
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
               EndogenousEq`t, EndogenousEq`m]], 
             Not[
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
               EndogenousEq`t, EndogenousEq`m] === 
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
               foo`t, EndogenousEq`m]]}]], "ExpectedOutput" -> HoldForm[True],
          "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8953628950463257`*^9, "AbsoluteTimeUsed" -> 
         0.000035`1.6945830421822676, "CPUTimeUsed" -> 
         0.000035999999999702936`, "MemoryUsed" -> 2864|>], 
      403559067223699727 -> 
      TestResultObject[<|
        "TestKey" -> 403559067223699727, "TestID" -> 
         "EndogenousEq_20230610-5I43IK", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[And, {
             FreeQ[
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
              EndogenousEq`t, EndogenousEq`m], foo`m], 
             Not[
              FreeQ[
               FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
               EndogenousEq`t, EndogenousEq`m], EndogenousEq`m]], 
             FreeQ[
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
              EndogenousEq`t, foo`m], EndogenousEq`m], 
             Not[
              FreeQ[
               FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
               EndogenousEq`t, foo`m], foo`m]], 
             Not[
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
               EndogenousEq`t, EndogenousEq`m] === 
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondyieldeq[
               EndogenousEq`t, foo`m]]}]], "ExpectedOutput" -> HoldForm[True],
          "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.895362895046534*^9, "AbsoluteTimeUsed" -> 
         0.00003`1.6276362525516561, "CPUTimeUsed" -> 
         0.000031000000000336314`, "MemoryUsed" -> 2856|>], 
      5254775196504701272 -> 
      TestResultObject[<|
        "TestKey" -> 5254775196504701272, "TestID" -> 
         "EndogenousEq_20230610-X1EP37", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/EndogenousEq.wlt", "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "Outcome" -> "Success", "Input" -> HoldForm[
           Apply[
           And, {FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondfweq[
              EndogenousEq`t, EndogenousEq`m] === 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondfweq[
              EndogenousEq`t, EndogenousEq`m, 1], 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondreteq[
              EndogenousEq`t, EndogenousEq`m] === 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondreteq[
              EndogenousEq`t, EndogenousEq`m, 1], 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondfwspreadeq[
              EndogenousEq`t, EndogenousEq`m] === 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondfwspreadeq[
              EndogenousEq`t, EndogenousEq`m, 1], 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondexcreteq[
              EndogenousEq`t, EndogenousEq`m] === 
             FernandoDuarte`LongRunRisk`Model`EndogenousEq`bondexcreteq[
              EndogenousEq`t, EndogenousEq`m, 1]}]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.895362895046743*^9, "AbsoluteTimeUsed" -> 
         0.000038`1.7302985944487996, "CPUTimeUsed" -> 0.00003899999999967818,
          "MemoryUsed" -> 2856|>]|>, 
    "TestsSucceededKeys" -> {5525804390918074521, 7337864540533437790, 
     2749804378547808574, 3969601895569927099, 3169116347706549548, 
     7797652481439182622, 1938121943548207788, 403559067223699727, 
     5254775196504701272}, "TestsFailedWrongResultsKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, "TestsFailedWithErrorsKeys" -> {}|>],
  
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.895362895229072*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"e9a8ffe7-acd9-47ac-ab6b-d28f8ddcb837"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interactive Tests", "Subsection",
 CellChangeTimes->{{3.889905622471089*^9, 
  3.889905629759961*^9}},ExpressionUUID->"110fa690-a939-4013-acf2-\
a07d9942e533"],

Cell[BoxData[{
 RowBox[{"packageFileName", "=", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DirectoryName", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "2"}], "]"}], ",", 
     "\"\<Kernel\>\"", ",", "\"\<Model\>\"", ",", 
     RowBox[{
      RowBox[{"FileBaseName", "[", 
       RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", "\"\<.wl\>\""}]}],
     "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", 
  RowBox[{
   RowBox[{"\"\<FernandoDuarte`LongRunRisk`Model`\>\"", "<>", 
    RowBox[{"FileBaseName", "[", 
     RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", "\"\<`\>\""}], ",", 
   "packageFileName"}], "]"}]}], "Input",
 CellChangeTimes->{{3.889968360919714*^9, 3.889968361169221*^9}, {
   3.889998753242611*^9, 3.8899987613556004`*^9}, 3.890825576987958*^9, {
   3.890987450098063*^9, 3.8909874502616673`*^9}, {3.891249043174148*^9, 
   3.891249043429118*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"c6962841-0262-40ae-930b-03c2d84ad007"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "exogenous", " ", "variables", " ", "are", " ", "in", " ", 
    "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "#", "===", 
        "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
       ")"}], "&"}], "/@", 
     RowBox[{"(", 
      RowBox[{"Context", "/@", 
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "[", "t", "]"}], ")"}], "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{"Symbol", "/@", "$endogenousVars"}], ")"}]}], ")"}], ",", 
         
         RowBox[{
          RowBox[{
           RowBox[{"var_Symbol", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"StringDrop", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                 "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
             ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
        "]"}]}], ")"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.893001201934902*^9, 3.893001214021667*^9}, {
  3.893001245798745*^9, 3.8930012743606873`*^9}, {3.893001352341578*^9, 
  3.893001386197197*^9}, {3.893001448430169*^9, 3.893001448726687*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"5539aadf-c938-4d1c-8d1c-b42171733c46"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "shocks", " ", "are", " ", "in", " ", "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "#", "===", "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], 
       ")"}], "&"}], "/@", 
     RowBox[{"(", 
      RowBox[{"Context", "/@", 
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "[", "t", "]"}], ")"}], "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{"Symbol", "/@", "$endogenousVars"}], ")"}]}], ")"}], ",", 
         
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"var_Symbol", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"MatchQ", "[", 
                RowBox[{
                 RowBox[{"SymbolName", "[", "#", "]"}], ",", "\"\<eps\>\""}], 
                "]"}], "&"}], ")"}]}], "[", "__", "]"}], "[", "__", "]"}], ":>",
           "var"}], ",", "Infinity"}], "]"}]}], ")"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{3.893001499960679*^9},
 CellLabel->"In[36]:=",ExpressionUUID->"1d9fb645-56a4-4839-914f-c3371c7acad4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "parameters", " ", "are", " ", "in", " ", "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "#", "===", "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
       ")"}], "&"}], "/@", 
     RowBox[{"(", 
      RowBox[{"Context", "/@", 
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "[", "t", "]"}], ")"}], "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{"Symbol", "/@", "$endogenousVars"}], ")"}]}], ")"}], ",", 
         
         RowBox[{
          RowBox[{"var_Symbol", "?", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{
              "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters", ",", 
               
               RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], ")"}]}],
           ":>", "var"}], ",", "Infinity"}], "]"}]}], ")"}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{3.893001501399847*^9},
 CellLabel->"In[37]:=",ExpressionUUID->"71d99c6c-939f-469f-9c44-33510ae053ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "endogenous", " ", "variables", " ", "are", " ", "in", " ", 
    "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\>\""}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "#", "===", 
        "\"\<FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\>\""}], 
       ")"}], "&"}], "/@", 
     RowBox[{"(", 
      RowBox[{"Context", "/@", 
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "[", "t", "]"}], ")"}], "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{"Symbol", "/@", "$endogenousVars"}], ")"}]}], ")"}], ",", 
         
         RowBox[{
          RowBox[{
           RowBox[{"var_Symbol", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"StringDrop", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                 "$endogenousVars"}], ",", 
                RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
             ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
        "]"}]}], ")"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.89300111387222*^9, 3.8930011727459707`*^9}, {
  3.893001247830225*^9, 3.893001299678648*^9}, {3.893001353751255*^9, 
  3.8930015072417727`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"83910cd7-b1dd-4239-adc5-d7db927ecbbb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "different", " ", "contexts", " ", "for", " ", "t", " ", "and", " ", "eq", 
    " ", "vars"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FreeQ", "[", 
      RowBox[{
       RowBox[{"bondyieldeq", "[", 
        RowBox[{"t", ",", "m"}], "]"}], ",", "foo`t"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Not", "@", 
      RowBox[{"FreeQ", "[", 
       RowBox[{
        RowBox[{"bondyieldeq", "[", 
         RowBox[{"t", ",", "m"}], "]"}], ",", "t"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"FreeQ", "[", 
      RowBox[{
       RowBox[{"bondyieldeq", "[", 
        RowBox[{"foo`t", ",", "m"}], "]"}], ",", "t"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Not", "@", 
      RowBox[{"FreeQ", "[", 
       RowBox[{
        RowBox[{"bondyieldeq", "[", 
         RowBox[{"foo`t", ",", "m"}], "]"}], ",", "foo`t"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Not", "@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"foo`bondyieldeq", "[", 
         RowBox[{"t", ",", "m"}], "]"}], "===", 
        RowBox[{"bondyieldeq", "[", 
         RowBox[{"t", ",", "m"}], "]"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Not", "@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"bondyieldeq", "[", 
         RowBox[{"t", ",", "m"}], "]"}], "===", 
        RowBox[{"bondyieldeq", "[", 
         RowBox[{"foo`t", ",", "m"}], "]"}]}], ")"}]}]}], 
    "\[IndentingNewLine]", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.891249141704917*^9, 3.89124916402168*^9}, {
   3.891249445870871*^9, 3.8912494720282707`*^9}, {3.891250866902298*^9, 
   3.891250867076214*^9}, {3.8930015258912563`*^9, 3.8930016288464193`*^9}, 
   3.893001996652837*^9},ExpressionUUID->"d3873290-92c0-4c12-b128-\
d49f172b57f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "different", " ", "contexts", " ", "for", " ", "m", " ", "and", " ", "eq", 
    " ", "vars"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FreeQ", "[", 
      RowBox[{
       RowBox[{"bondyieldeq", "[", 
        RowBox[{"t", ",", "m"}], "]"}], ",", "foo`m"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Not", "@", 
      RowBox[{"FreeQ", "[", 
       RowBox[{
        RowBox[{"bondyieldeq", "[", 
         RowBox[{"t", ",", "m"}], "]"}], ",", "m"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"FreeQ", "[", 
      RowBox[{
       RowBox[{"bondyieldeq", "[", 
        RowBox[{"t", ",", "foo`m"}], "]"}], ",", "m"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Not", "@", 
      RowBox[{"FreeQ", "[", 
       RowBox[{
        RowBox[{"bondyieldeq", "[", 
         RowBox[{"t", ",", "foo`m"}], "]"}], ",", "foo`m"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Not", "@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"bondyieldeq", "[", 
         RowBox[{"t", ",", "m"}], "]"}], "===", 
        RowBox[{"bondyieldeq", "[", 
         RowBox[{"t", ",", "foo`m"}], "]"}]}], ")"}]}]}], 
    "\[IndentingNewLine]", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.891249141704917*^9, 3.89124916402168*^9}, {
   3.891249445870871*^9, 3.8912494720282707`*^9}, {3.891250866902298*^9, 
   3.891250867076214*^9}, {3.8930015258912563`*^9, 3.8930016288464193`*^9}, 
   3.893001996652837*^9},ExpressionUUID->"facd0866-8192-407c-8843-\
14fd02288176"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"default", " ", "values", " ", "for", " ", "arguments"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"bondfweq", "[", 
        RowBox[{"t", ",", "m"}], "]"}], "===", 
       RowBox[{"bondfweq", "[", 
        RowBox[{"t", ",", "m", ",", "1"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"bondreteq", "[", 
        RowBox[{"t", ",", "m"}], "]"}], "===", 
       RowBox[{"bondreteq", "[", 
        RowBox[{"t", ",", "m", ",", "1"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"bondfwspreadeq", "[", 
        RowBox[{"t", ",", "m"}], "]"}], "===", 
       RowBox[{"bondfwspreadeq", "[", 
        RowBox[{"t", ",", "m", ",", "1"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"bondexcreteq", "[", 
        RowBox[{"t", ",", "m"}], "]"}], "===", 
       RowBox[{"bondexcreteq", "[", 
        RowBox[{"t", ",", "m", ",", "1"}], "]"}]}]}], "\[IndentingNewLine]", 
     "}"}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.889976523114066*^9, 3.889976540444695*^9}, {
  3.893001639326522*^9, 3.893001727628183*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"3389fbf0-1cb9-4756-9b1e-85278e1c9290"]
}, Open  ]]
},
WindowSize->{1252, 927},
WindowMargins->{{276, Automatic}, {Automatic, 0}},
WindowStatusArea->"",
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.25 Inherited,
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (January 30, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"66994810-29cf-44d1-973e-80e9f6a0fee7"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 215, 4, 37, "Input",ExpressionUUID->"ecc6d428-0f07-4dc4-b145-1fdd39576e75"],
Cell[776, 26, 1924, 41, 142, "Input",ExpressionUUID->"5d72f59a-42b2-44f6-9a1f-377a5ef018c1"],
Cell[CellGroupData[{
Cell[2725, 71, 209, 4, 67, "Subsection",ExpressionUUID->"5216b0c6-0b30-4607-beca-83054aa122f9"],
Cell[2937, 77, 341, 9, 37, "Input",ExpressionUUID->"de12a740-d7f8-44f2-9d77-de8939589dcd"],
Cell[CellGroupData[{
Cell[3303, 90, 415, 9, 64, "Input",ExpressionUUID->"478c2735-a41a-4934-8062-93434d83aff8"],
Cell[3721, 101, 205, 3, 42, "Output",ExpressionUUID->"ad77484b-2b53-4769-b11a-784fd32a3392"]
}, Open  ]],
Cell[3941, 107, 492, 10, 90, "Input",ExpressionUUID->"3940f713-c887-49c0-8088-70b0b47a4c35"],
Cell[4436, 119, 632, 13, 96, "Input",ExpressionUUID->"b7d248a9-fa9b-47dd-9dfc-efe31b2c0ada"],
Cell[CellGroupData[{
Cell[5093, 136, 198, 3, 37, "Input",ExpressionUUID->"83a2cde8-33d4-441a-9a57-a82ece671585"],
Cell[5294, 141, 171, 2, 42, "Output",ExpressionUUID->"93eb3e18-c3fc-4f5a-89f0-820e08522221"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5502, 148, 531, 10, 90, "Input",ExpressionUUID->"6011cbec-7521-493c-b009-40fef28d9959"],
Cell[CellGroupData[{
Cell[6058, 162, 379, 9, 29, "Print",ExpressionUUID->"3e9890a6-bfe0-4cd2-bb19-a0d70e7bceff"],
Cell[6440, 173, 271, 5, 29, "Print",ExpressionUUID->"3a386f78-8895-403a-ac50-577c37f6d933"]
}, Open  ]],
Cell[6726, 181, 4892, 89, 42, "Output",ExpressionUUID->"0aefbac8-0a1d-4ddb-9f57-422bf7e27bf6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11655, 275, 762, 16, 116, "Input",ExpressionUUID->"e2633f79-ec85-4da8-b3f8-1dfe9c81f85e"],
Cell[CellGroupData[{
Cell[12442, 295, 379, 9, 29, "Print",ExpressionUUID->"7bf8d1b6-b992-45f9-b99b-0d9299ce7a3c"],
Cell[12824, 306, 269, 5, 29, "Print",ExpressionUUID->"5b641ff2-eb35-47ea-9480-c8718e65d390"]
}, Open  ]],
Cell[13108, 314, 4932, 90, 42, "Output",ExpressionUUID->"a2ff15ca-3f74-41d2-8feb-a11345905591"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18077, 409, 2110, 52, 194, "Input",ExpressionUUID->"4c83d4e9-dd51-4118-b273-f9754fdb598c"],
Cell[CellGroupData[{
Cell[20212, 465, 379, 9, 29, "Print",ExpressionUUID->"72e76535-0a9b-477c-b0cd-ff288453745f"],
Cell[20594, 476, 268, 5, 29, "Print",ExpressionUUID->"96e14b56-5a73-4c1e-b821-6a03044a0f44"]
}, Open  ]],
Cell[20877, 484, 7607, 136, 42, "Output",ExpressionUUID->"f9d621ea-c7ff-4766-96f3-e278f0a48b78"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28521, 625, 1656, 43, 168, "Input",ExpressionUUID->"bd50b66f-1a8f-4c7a-a4e2-192cc425c462"],
Cell[CellGroupData[{
Cell[30202, 672, 377, 9, 29, "Print",ExpressionUUID->"2a3127d8-6db9-4559-a98a-eb8d4adbc1f6"],
Cell[30582, 683, 271, 5, 29, "Print",ExpressionUUID->"d0f4f20d-3e42-4a30-aa4d-0358ea2d52c2"]
}, Open  ]],
Cell[30868, 691, 7575, 135, 42, "Output",ExpressionUUID->"7a9de8fe-b0eb-4fa4-b435-361dc635ee37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38480, 831, 1628, 41, 194, "Input",ExpressionUUID->"5178a463-7413-4f48-b3eb-a5e6bdf2b8a5"],
Cell[CellGroupData[{
Cell[40133, 876, 377, 9, 29, "Print",ExpressionUUID->"5cb79ed0-c525-4761-a539-5ad32ca8cafb"],
Cell[40513, 887, 269, 5, 29, "Print",ExpressionUUID->"1a089435-e030-47f5-8f05-4c956d877214"]
}, Open  ]],
Cell[40797, 895, 8285, 145, 42, "Output",ExpressionUUID->"8cf8fa8c-0a13-40b0-9a05-f4c4e8c212bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49119, 1045, 2078, 53, 168, "Input",ExpressionUUID->"7f4f591d-7e46-4d39-a083-282c80799487"],
Cell[CellGroupData[{
Cell[51222, 1102, 377, 9, 29, "Print",ExpressionUUID->"548cf899-dae9-440e-8320-852d89e203f5"],
Cell[51602, 1113, 269, 5, 29, "Print",ExpressionUUID->"bd7992f8-4a05-4df2-bbdd-664e4bce2e60"]
}, Open  ]],
Cell[51886, 1121, 9605, 167, 42, "Output",ExpressionUUID->"ef4c8ef8-2ea7-4437-acbd-1a6454e23d9a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61528, 1293, 2269, 56, 298, "Input",ExpressionUUID->"d11ae37b-6b96-438d-bf01-44fcd5230180"],
Cell[CellGroupData[{
Cell[63822, 1353, 379, 9, 29, "Print",ExpressionUUID->"55e9fc54-a178-445b-8a7f-168affde1767"],
Cell[64204, 1364, 269, 5, 29, "Print",ExpressionUUID->"0ffac905-e21e-476f-9d26-38bca9675acf"]
}, Open  ]],
Cell[64488, 1372, 11264, 201, 42, "Output",ExpressionUUID->"caf67745-a3b5-4c87-abef-a6c3bbb255aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75789, 1578, 1977, 48, 272, "Input",ExpressionUUID->"6708c186-9a69-4536-af69-fcc1b2ce3305"],
Cell[CellGroupData[{
Cell[77791, 1630, 379, 9, 29, "Print",ExpressionUUID->"3a2b3769-7bee-4cd2-845e-3e0bbb8e86e1"],
Cell[78173, 1641, 271, 5, 29, "Print",ExpressionUUID->"dfce1d7b-602a-40d2-bc11-04b4842b3520"]
}, Open  ]],
Cell[78459, 1649, 11551, 205, 42, "Output",ExpressionUUID->"549f1986-a2f9-46cc-850b-e6a9fa8bc775"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90047, 1859, 1712, 40, 272, "Input",ExpressionUUID->"b7a62ecb-32a1-45aa-8527-9ed71591fde8"],
Cell[CellGroupData[{
Cell[91784, 1903, 379, 9, 29, "Print",ExpressionUUID->"105d124b-6a4d-4257-bc87-a96fbbfba114"],
Cell[92166, 1914, 269, 5, 29, "Print",ExpressionUUID->"5294798b-e961-4e89-b209-e8fca0c7c091"]
}, Open  ]],
Cell[92450, 1922, 12942, 228, 42, "Output",ExpressionUUID->"336489b1-2ab9-45ea-b131-9321d612f91f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105429, 2155, 130, 2, 37, "Input",ExpressionUUID->"3eb99ea3-bc8c-4524-b27c-2528a0af68a2"],
Cell[105562, 2159, 168, 2, 42, "Output",ExpressionUUID->"dbdb7e18-6223-483d-bbec-72abb3badde3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105767, 2166, 5070, 118, 1208, "Input",ExpressionUUID->"a987c799-a69e-45bc-a9f6-b0b6f0e903c9"],
Cell[110840, 2286, 397, 8, 69, "Output",ExpressionUUID->"460e61f2-f606-4bd8-917a-5844cb3c6161"],
Cell[111240, 2296, 153, 2, 42, "Output",ExpressionUUID->"528309df-b5aa-42a0-8cd6-516999ff2c5b"],
Cell[111396, 2300, 397, 8, 69, "Output",ExpressionUUID->"63b9db32-ac30-4023-bcd5-f379c0e6d46b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111830, 2313, 177, 3, 37, "Input",ExpressionUUID->"c23f102e-032c-466b-baef-594a42a2c443"],
Cell[112010, 2318, 21686, 432, 96, "Output",ExpressionUUID->"e9a8ffe7-acd9-47ac-ab6b-d28f8ddcb837"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[133745, 2756, 165, 3, 67, "Subsection",ExpressionUUID->"110fa690-a939-4013-acf2-a07d9942e533"],
Cell[133913, 2761, 1033, 23, 90, "Input",ExpressionUUID->"c6962841-0262-40ae-930b-03c2d84ad007"],
Cell[134949, 2786, 1806, 49, 142, "Input",ExpressionUUID->"5539aadf-c938-4d1c-8d1c-b42171733c46"],
Cell[136758, 2837, 1355, 39, 142, "Input",ExpressionUUID->"1d9fb645-56a4-4839-914f-c3371c7acad4"],
Cell[138116, 2878, 1344, 39, 168, "Input",ExpressionUUID->"71d99c6c-939f-469f-9c44-33510ae053ee"],
Cell[139463, 2919, 1719, 48, 116, "Input",ExpressionUUID->"83910cd7-b1dd-4239-adc5-d7db927ecbbb"],
Cell[141185, 2969, 1899, 51, 246, "Input",ExpressionUUID->"d3873290-92c0-4c12-b128-d49f172b57f5"],
Cell[143087, 3022, 1623, 43, 220, "Input",ExpressionUUID->"facd0866-8192-407c-8843-14fd02288176"],
Cell[144713, 3067, 1383, 35, 246, "Input",ExpressionUUID->"3389fbf0-1cb9-4756-9b1e-85278e1c9290"]
}, Open  ]]
}
]
*)

