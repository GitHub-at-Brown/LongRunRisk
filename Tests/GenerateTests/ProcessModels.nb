(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1024360,      18581]
NotebookOptionsPosition[    958681,      17438]
NotebookOutlinePosition[   1005064,      18294]
CellTagsIndexPosition[   1005021,      18291]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"Quit", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.889964198656839*^9, 3.889964203363894*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"2d530782-807c-4677-ac15-0a1524d3eb66"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"testFileName", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DirectoryName", "[", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "1"}], "]"}], ",", 
      RowBox[{
       RowBox[{"FileBaseName", "[", 
        RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", 
       "\"\<.wlt\>\""}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pacletDir", "=", 
   RowBox[{"DirectoryName", "[", 
    RowBox[{"testFileName", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", "pacletDir", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testContextBase", "=", 
   RowBox[{"FileBaseName", "[", "testFileName", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$ContextPath", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"$ContextPath", ",", 
     RowBox[{"Except", "[", "\"\<PacletizedResourceFunctions`\>\"", "]"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8890661685133457`*^9, 3.889066220685074*^9}, {
   3.8890662555512333`*^9, 3.889066299901951*^9}, {3.889066581166473*^9, 
   3.8890665847967653`*^9}, {3.889066731765956*^9, 3.889066745674687*^9}, {
   3.889431410824514*^9, 3.88943144002302*^9}, 3.889502968269744*^9, {
   3.889998928469849*^9, 3.889998928670561*^9}, {3.890676553021196*^9, 
   3.890676564028514*^9}, 3.890676636594749*^9, {3.890679618620262*^9, 
   3.89067961902995*^9}, {3.8908254134370813`*^9, 3.890825413876319*^9}, {
   3.890825459205497*^9, 3.890825473041605*^9}, {3.890825503118348*^9, 
   3.8908255374530487`*^9}, {3.891021675325671*^9, 3.891021675545487*^9}, {
   3.8911588731924877`*^9, 3.891158877904397*^9}, {3.8911592499395514`*^9, 
   3.8911592502376633`*^9}, {3.891250905264741*^9, 3.891250915510642*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"0360f784-d335-43f3-8e4d-2bba830763e2"],

Cell[CellGroupData[{

Cell["CI Tests", "Subsection",
 CellChangeTimes->{{3.8895791922306013`*^9, 3.889579196409403*^9}, {
  3.889905620469079*^9, 3.8899056207707977`*^9}, {3.889967624152501*^9, 
  3.889967626012704*^9}},ExpressionUUID->"31e1b2df-6c38-4738-ae7d-\
157759dc5a90"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FileNames", "[", "testFileName", "]"}], "===", 
     RowBox[{"{", "}"}]}], ",", "Nothing", ",", 
    RowBox[{"DeleteFile", "[", "testFileName", "]"}]}], "]"}], ";"}]], "Input",\

 CellLabel->"In[6]:=",ExpressionUUID->"464119fe-5b46-4abb-930f-1de6d0c0c7ec"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"confirm", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"testContext", "=", 
  RowBox[{
  "\"\<FernandoDuarte`LongRunRisk`Model`\>\"", "<>", "testContextBase", "<>", 
   "\"\<`\>\""}]}]}], "Input",
 CellChangeTimes->{{3.8906795325443907`*^9, 3.8906795357982817`*^9}, 
   3.890679566064293*^9, {3.8906796081672497`*^9, 3.8906796258061447`*^9}, {
   3.890679757679096*^9, 3.890679766260743*^9}, 3.890679874010334*^9, {
   3.89115778716877*^9, 3.8911577875972347`*^9}, {3.891158046655726*^9, 
   3.8911580470847473`*^9}, {3.8912509099668617`*^9, 
   3.8912509132288647`*^9}, {3.89164129470868*^9, 3.891641295139255*^9}, {
   3.8917057583850603`*^9, 3.891705758834621*^9}, {3.8917059158307037`*^9, 
   3.891705917269414*^9}, {3.8917066708409977`*^9, 3.8917066712983313`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"c66ba99e-d8d1-4f03-a4ff-e02a4a612fbe"],

Cell[BoxData["\<\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"\>"], \
"Output",
 CellChangeTimes->{3.905826518185441*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"8b2e0bd1-2fd9-42fb-a1b8-82ca0d640ebf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Begin", "[", "\"\<Model`ProcessModels`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.890680288696157*^9, 3.8906802887021513`*^9}, 
   3.891157128406151*^9, 3.90582639035145*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"e0c56802-23a4-4683-930d-2f72f95927a4"],

Cell[BoxData["\<\"Model`ProcessModels`\"\>"], "Output",
 CellChangeTimes->{3.9058265181926517`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"55d5e0ad-17f0-411b-be01-2d72d918083e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Needs", "[", "\"\<FernandoDuarte`LongRunRisk`Model`Catalog`\>\"", "]"}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{
    "Needs", "[", "\"\<FernandoDuarte`LongRunRisk`Model`ProcessModels`\>\"", 
     "]"}], ";", "\[IndentingNewLine]", "True"}], "\[IndentingNewLine]", ",", 
   
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.8899652151465197`*^9, 3.889965235350771*^9}, 
   3.8899652808817787`*^9, {3.889967731242805*^9, 3.8899677356636972`*^9}, {
   3.889967971867523*^9, 3.889967975146998*^9}, {3.889968339451161*^9, 
   3.88996834001075*^9}, 3.889968619774049*^9, {3.8899688826075077`*^9, 
   3.88996888992594*^9}, {3.88996899475625*^9, 3.8899690018858624`*^9}, {
   3.8899691256166267`*^9, 3.8899691257757883`*^9}, {3.889969207667478*^9, 
   3.8899692141700287`*^9}, {3.8899692798779783`*^9, 3.889969288274632*^9}, 
   3.889969387087708*^9, 3.889969585993528*^9, {3.8899702972149563`*^9, 
   3.889970314454108*^9}, {3.890603045806611*^9, 3.890603046578224*^9}, 
   3.890603139674321*^9, {3.890676572733183*^9, 3.890676585108572*^9}, {
   3.890679071059198*^9, 3.890679121055434*^9}, {3.89067917308251*^9, 
   3.890679177122958*^9}, 3.890679328121275*^9, {3.8906795122187853`*^9, 
   3.890679514391316*^9}, {3.890679606901452*^9, 3.8906796293121653`*^9}, {
   3.890679668768669*^9, 3.890679669902752*^9}, {3.8906797200186*^9, 
   3.890679786626452*^9}, {3.890679828108779*^9, 3.890679882954316*^9}, {
   3.8911571592686443`*^9, 3.8911571682982073`*^9}, 3.891157792145975*^9, {
   3.891173222845828*^9, 3.8911732231089373`*^9}, {3.891173275033695*^9, 
   3.891173275304864*^9}, {3.891316564754774*^9, 3.8913166100337257`*^9}, {
   3.891852279447442*^9, 3.891852279736619*^9}, {3.893027061900147*^9, 
   3.89302706219648*^9}, 3.905825701340439*^9, {3.90582623727353*^9, 
   3.905826238087222*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"df3441c2-82a3-4dc6-ae55-72fe028a7826"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231009-RWZJ5E\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231009-RWZJ5E"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905826518538865*^9},
 CellLabel->
  "During evaluation of \
In[10]:=",ExpressionUUID->"aed113ea-327c-4995-b4b3-5ba6a52ee5a0"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826518554579*^9},
 CellLabel->
  "During evaluation of \
In[10]:=",ExpressionUUID->"1970ad57-0c56-4ea6-9096-c87c2752cb36"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Needs @ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-RWZJ5E\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.07100000000000001, 
   "AbsoluteTiming" -> 0.07100000000000001, "InputString" :> ToString[
     Unevaluated[
     Needs["FernandoDuarte`LongRunRisk`Model`Catalog`"]; 
      Needs["FernandoDuarte`LongRunRisk`Model`ProcessModels`"]; True], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-RWZJ5E\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826518559183*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"c44a67df-aa7d-4551-8930-e7cb3e94f8de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", "\t", 
   RowBox[{"And", "@@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{
       "$ContextPath", ",", 
        "\"\<FernandoDuarte`LongRunRisk`Model`Catalog`\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
       "$ContextPath", ",", 
        "\"\<FernandoDuarte`LongRunRisk`Model`ProcessModels`\>\""}], "]"}]}], 
     "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{
  3.889901579125684*^9, {3.889965035911569*^9, 3.889965039550325*^9}, {
   3.889965296152458*^9, 3.889965305191854*^9}, 3.8899653858152437`*^9, 
   3.889967740469187*^9, {3.889968345370779*^9, 3.889968347169169*^9}, {
   3.889968526692542*^9, 3.8899685355316963`*^9}, {3.889968649261517*^9, 
   3.889968660343141*^9}, 3.889969395693264*^9, {3.88996958684683*^9, 
   3.8899695947482367`*^9}, {3.889970300225127*^9, 3.889970329366473*^9}, {
   3.890603050754869*^9, 3.8906030512673264`*^9}, 3.890603142316881*^9, 
   3.89067659639168*^9, {3.890679255090239*^9, 3.890679318737549*^9}, 
   3.890679634337233*^9, 3.890679895680545*^9, {3.891157174045011*^9, 
   3.891157185913196*^9}, 3.8911577932659283`*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"37a69960-4a4b-47f2-bed8-e68905e00bd9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231009-8R5BB3\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231009-8R5BB3"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905826518592025*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"000360cf-1f1d-49d3-b993-5949e477146e"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.9058265185925922`*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"40e2812e-81dc-46ab-a3ca-101dcc645527"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-8R5BB3\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        MemberQ[$ContextPath, "FernandoDuarte`LongRunRisk`Model`Catalog`"], 
        MemberQ[$ContextPath, 
         "FernandoDuarte`LongRunRisk`Model`ProcessModels`"]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-RWZJ5E\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-8R5BB3\"\n]\n\n\nEndTestSection[]\
\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826518608933*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"4b72e7cf-56d9-451c-a389-86958ab329df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "should", " ", "be", " ", "True", " ", "if", " ", "processModels"}], ",",
      " ", 
     RowBox[{"models", " ", "can", " ", "be", " ", "found"}]}], "*)"}], 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"And", "@@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Not", "[", 
       RowBox[{
        RowBox[{"Names", "[", "\"\<*processModels\>\"", "]"}], "===", 
        RowBox[{"{", "}"}]}], "]"}], ",", 
      RowBox[{"Not", "[", 
       RowBox[{
        RowBox[{"Names", "[", "\"\<*models\>\"", "]"}], "===", 
        RowBox[{"{", "}"}]}], "]"}]}], "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.8899706175264597`*^9, 3.889970628972746*^9}, 
   3.889972029349813*^9, {3.890016004516365*^9, 3.890016008058874*^9}, {
   3.890679266281045*^9, 3.8906792665642843`*^9}, {3.89067933542416*^9, 
   3.890679337313949*^9}, {3.8911571916035423`*^9, 3.891157220658489*^9}, {
   3.891157734825952*^9, 3.891157748683607*^9}, 3.891157795291888*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"78efcfa0-e9fa-47a2-9b51-782cbea2e41b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231009-PYXU62\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231009-PYXU62"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9058265186760397`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"9eedf987-c27a-4917-bf59-8171d2aa6876"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.9058265186891117`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"9eeb1611-6603-410c-9a1c-5bf34578746c"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\", {}],\n\t\t\t\
!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \
\"*processModels\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\
\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-PYXU62\"\n]\n\
\n", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.043000000000000003`, 
   "AbsoluteTiming" -> 0.043000000000000003`, "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        Not[Names["*processModels"] === {}], 
        Not[Names["*models"] === {}]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-RWZJ5E\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-8R5BB3\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-PYXU62\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826518698269*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"e5992041-d0ac-4a28-9daa-141954ca9383"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"models", "=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"$ContextPath", " ", "=", " ", 
        RowBox[{"{", "}"}]}], "}"}], ",", " ", 
      RowBox[{"SetSymbolsContext", "[", "models", "]"}]}], "]"}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{3.8913169005664043`*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"cb607e00-5967-477a-8aac-14f80aff48c4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Get", "@", 
     RowBox[{"Get", "[", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
        "\"\<FernandoDuarte/LongRunRisk\>\"", ",", "\"\<Models.wl\>\""}], 
        "}"}], "]"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
    RowBox[{
    "models", "=", "FernandoDuarte`LongRunRisk`Model`Catalog`models"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"modelsP", "=", "FernandoDuarte`LongRunRisk`Models"}], ";", 
    "\[IndentingNewLine]", "True"}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.893003987314953*^9, 3.893004026425699*^9}, {
   3.8930271154371367`*^9, 3.893027117019199*^9}, {3.893027228841988*^9, 
   3.893027229065291*^9}, {3.8931053429292316`*^9, 3.893105351371242*^9}, {
   3.8931452041797323`*^9, 3.8931452049130917`*^9}, {3.905825751340439*^9, 
   3.905825834883211*^9}, 3.9058262489345703`*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"0c1d9ae2-0329-4b69-96aa-5f6aff9fa9f6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231009-9QO166\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231009-9QO166"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905826519007328*^9},
 CellLabel->
  "During evaluation of \
In[14]:=",ExpressionUUID->"642fea89-e028-4706-9c31-adaef1c1f331"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826519020935*^9},
 CellLabel->
  "During evaluation of \
In[14]:=",ExpressionUUID->"960b8acd-42a5-4b3a-9f02-27ef9de90c3c"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Get @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\", \
\"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
FernandoDuarte`LongRunRisk`Model`Catalog`models;\n\t\
Model`ProcessModels`modelsP = FernandoDuarte`LongRunRisk`Models;\n\tTrue", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tGet @ Get @ FileNameJoin @ \
{\"FernandoDuarte/LongRunRisk\", \"Models.wl\"};\n\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models = \
FernandoDuarte`LongRunRisk`Model`Catalog`models;\n\t\
Model`ProcessModels`modelsP = FernandoDuarte`LongRunRisk`Models;\n\tTrue\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-9QO166\"\n]\n\n",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.267, "AbsoluteTiming" -> 0.27, 
   "InputString" :> ToString[
     Unevaluated[Get[
        Get[
         FileNameJoin[{"FernandoDuarte/LongRunRisk", "Models.wl"}]]]; 
      FernandoDuarte`LongRunRisk`Model`Catalog`models = 
       FernandoDuarte`LongRunRisk`Model`Catalog`models; 
      Model`ProcessModels`modelsP = FernandoDuarte`LongRunRisk`Models; True], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-RWZJ5E\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-8R5BB3\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-PYXU62\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
FernandoDuarte`LongRunRisk`Model`Catalog`models;\n\t\
Model`ProcessModels`modelsP = FernandoDuarte`LongRunRisk`Models;\n\tTrue\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-9QO166\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826519025723*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"f83135bd-1c40-4e6d-89cc-9b838f527166"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Keys", " ", "are", " ", "strings"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"StringQ", "/@", 
      RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{
  3.89000889839254*^9, {3.890016339728188*^9, 3.890016342139681*^9}, 
   3.891251908164126*^9, {3.8930041333335657`*^9, 3.8930041384325933`*^9}, {
   3.893027123262117*^9, 3.893027123521834*^9}, {3.8930272322165318`*^9, 
   3.8930272325266247`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"d64570f0-6c89-4079-b190-d3b7918e15ff"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231009-XWY8XC\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231009-XWY8XC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.90582651905933*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"e5c7d91d-465e-40cd-8261-6275c7c72d9a"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.9058265190599527`*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"97ed2347-a8c9-4245-a6a4-24c7a89949f9"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And, Map[StringQ, Keys @ Model`ProcessModels`modelsP]]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-XWY8XC\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[StringQ, 
        Keys[Model`ProcessModels`modelsP]]]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-RWZJ5E\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-8R5BB3\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-PYXU62\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
FernandoDuarte`LongRunRisk`Model`Catalog`models;\n\t\
Model`ProcessModels`modelsP = FernandoDuarte`LongRunRisk`Models;\n\tTrue\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-9QO166\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-XWY8XC\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826519074936*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"2a937403-f01a-4403-befd-481ba96edfee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"string", " ", "fields"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"StringQ", "/@", 
      RowBox[{"Flatten", "@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<name\>\"", "]"}], 
            ",", 
            RowBox[{
             RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<shortname\>\"", 
             "]"}], ",", 
            RowBox[{
             RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<bibRef\>\"", "]"}],
             ",", 
            RowBox[{
             RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<desc\>\"", "]"}], 
            ",", 
            RowBox[{
             RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<exogenousVars\>\"",
              "]"}], ",", 
            RowBox[{
             RowBox[{"modelsP", "[", "#", "]"}], "[", 
             "\"\<endogenousVars\>\"", "]"}]}], "}"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}], ")"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.890008770382118*^9, 3.890008858894733*^9}, {
   3.890016345133547*^9, 3.8900163569166937`*^9}, {3.891251925999875*^9, 
   3.891251929267716*^9}, {3.89300415697269*^9, 3.893004157463492*^9}, {
   3.8930148354335337`*^9, 3.893014849329674*^9}, {3.893027125239276*^9, 
   3.893027125482437*^9}, 3.893027240252756*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"2c5d8084-fdbc-4107-ac9f-d8d95c9c2236"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231009-34IF7D\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231009-34IF7D"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905826519115556*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"a03e2cd8-62b6-4238-b104-9912a2c28f0c"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826519116193*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"38d4f70b-e20f-4fa9-a4bd-e1eaba0306de"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction @ {\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-34IF7D\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[StringQ, 
        Flatten[
         Map[{
           Model`ProcessModels`modelsP[#]["name"], 
           Model`ProcessModels`modelsP[#]["shortname"], 
           Model`ProcessModels`modelsP[#]["bibRef"], 
           Model`ProcessModels`modelsP[#]["desc"], 
           Model`ProcessModels`modelsP[#]["exogenousVars"], 
           Model`ProcessModels`modelsP[#]["endogenousVars"]}& , 
          Keys[Model`ProcessModels`modelsP]]]]]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-RWZJ5E\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-8R5BB3\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-PYXU62\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
FernandoDuarte`LongRunRisk`Model`Catalog`models;\n\t\
Model`ProcessModels`modelsP = FernandoDuarte`LongRunRisk`Models;\n\tTrue\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-9QO166\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-XWY8XC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-34IF7D\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.9058265191222754`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"857ec122-31b2-4e98-8909-70a030898b7d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"parameters", " ", "evaluate", " ", "to", " ", "numbers"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{"NumberQ", "/@", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Values", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Association", "@", 
                RowBox[{
                 RowBox[{"models", "[", "#", "]"}], "[", "\"\<parameters\>\"",
                  "]"}]}], "//.", 
               RowBox[{
                RowBox[{"models", "[", "#", "]"}], "[", "\"\<parameters\>\"", 
                "]"}]}], "//", "N"}], "]"}], "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{"Keys", "@", "models"}], ")"}]}], "]"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{"NumberQ", "/@", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Values", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Association", "@", 
                RowBox[{
                 RowBox[{"modelsP", "[", "#", "]"}], "[", 
                 "\"\<parameters\>\"", "]"}]}], "//.", 
               RowBox[{
                RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<parameters\>\"",
                 "]"}]}], "//", "N"}], "]"}], "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{"Keys", "@", "modelsP"}], ")"}]}], "]"}]}], ")"}]}]}], 
     "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.890008965671461*^9, 3.8900089726778793`*^9}, {
   3.8900090147612762`*^9, 3.890009193827691*^9}, 3.8900101461421833`*^9, 
   3.890015540563738*^9, {3.8900156352184877`*^9, 3.89001567714233*^9}, 
   3.8912519303524723`*^9, {3.891640840825358*^9, 3.8916408678776903`*^9}, {
   3.89164090174683*^9, 3.8916409201814632`*^9}, 3.892974136542371*^9, {
   3.89300417575723*^9, 3.893004176318849*^9}, {3.8930271288709583`*^9, 
   3.893027132853774*^9}, {3.893027244975909*^9, 3.8930272548041477`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"ce8ab224-5505-4d6e-9748-27f603f00530"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231009-SMYVH5\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231009-SMYVH5"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905826519170005*^9},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"b7f458df-54d5-4979-9157-8cb3d444ebc2"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.9058265191755733`*^9},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"33d3c42a-1622-4b6c-83d6-1520749e41fe"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-SMYVH5\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.006, "AbsoluteTiming" -> 0.006, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        Apply[And, 
         Map[NumberQ, 
          Flatten[
           Map[Values[
             N[
              ReplaceRepeated[<|
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                "parameters"]|>, 
               FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
               "parameters"]]]]& , 
            Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]], 
        Apply[And, 
         Map[NumberQ, 
          Flatten[
           Map[Values[
             N[
              ReplaceRepeated[<|
                Model`ProcessModels`modelsP[#]["parameters"]|>, 
               Model`ProcessModels`modelsP[#]["parameters"]]]]& , 
            Keys[Model`ProcessModels`modelsP]]]]]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-RWZJ5E\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-8R5BB3\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-PYXU62\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
FernandoDuarte`LongRunRisk`Model`Catalog`models;\n\t\
Model`ProcessModels`modelsP = FernandoDuarte`LongRunRisk`Models;\n\tTrue\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-9QO166\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-XWY8XC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-34IF7D\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-SMYVH5\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826519184909*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"123f558f-96ab-4283-b61e-32204602d38c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"can", " ", "find", " ", "some", " ", "models"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"Keys", "[", "models", "]"}], ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"{", 
          RowBox[{"\"\<BY\>\"", ",", "\"\<BKY\>\""}], "}"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"Keys", "[", "modelsP", "]"}], ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"Keys", "@", "modelsP"}], ")"}]}], ")"}]}]}], 
     "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.8900087062162313`*^9, 3.890008740193614*^9}, {
   3.89001637048425*^9, 3.890016372993977*^9}, 3.8912519320207787`*^9, {
   3.891640927230764*^9, 3.891640929613118*^9}, 3.892974170435498*^9, {
   3.893004184988491*^9, 3.8930041852126703`*^9}, 3.8930271448468523`*^9, {
   3.893027262255954*^9, 3.893027282450307*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"2b15a034-f304-4f7e-9d25-63e3f1ab5487"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231009-C9IRRD\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231009-C9IRRD"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9058265192860107`*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"5ea611a5-ad6a-448b-b1d2-190f5f64ba4b"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826519298011*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"d86e5bd1-d715-4877-b252-fae5652ddf26"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-C9IRRD\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        Apply[And, 
         Map[MemberQ[
           Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]& , {
          "BY", "BKY"}]], 
        Apply[And, 
         Map[MemberQ[
           Keys[Model`ProcessModels`modelsP], #]& , 
          Keys[Model`ProcessModels`modelsP]]]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-RWZJ5E\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-8R5BB3\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-PYXU62\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
FernandoDuarte`LongRunRisk`Model`Catalog`models;\n\t\
Model`ProcessModels`modelsP = FernandoDuarte`LongRunRisk`Models;\n\tTrue\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-9QO166\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-XWY8XC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-34IF7D\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-SMYVH5\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-C9IRRD\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; 
        Print["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.90582651930926*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"0ccc8cb6-b3ee-49dd-9d16-21c19438e908"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"models", ",", " ", 
       RowBox[{"modelsP", " ", "are", " ", "associations"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"AllTrue", "[", 
       RowBox[{"models", ",", "AssociationQ"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AllTrue", "[", 
       RowBox[{"modelsP", ",", "AssociationQ"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"each", " ", "model", " ", "inside", " ", "models"}], ",", 
        " ", 
        RowBox[{
        "modelsP", " ", "are", " ", "themselves", " ", "an", " ", 
         "association"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"AllTrue", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"models", "[", "#", "]"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "models", "]"}]}], ",", "AssociationQ"}], "]"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"AllTrue", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"modelsP", "[", "#", "]"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "modelsP", "]"}]}], ",", "AssociationQ"}], 
       "]"}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.8900086430073547`*^9, 3.890008684982678*^9}, {
   3.890010177349143*^9, 3.890010179091837*^9}, {3.8900163791247263`*^9, 
   3.890016449580503*^9}, {3.891251933188879*^9, 3.891251935189865*^9}, {
   3.891640937075639*^9, 3.891640945348556*^9}, {3.893004194158003*^9, 
   3.893004229582778*^9}, 3.89302714797476*^9, {3.893027270984724*^9, 
   3.893027285376198*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"19926fe5-c4d1-4650-9995-919a3c44044f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231009-Y06BJ2\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231009-Y06BJ2"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905826519342128*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"d1467099-741e-4af0-933c-48a81a68216e"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826519347867*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"e8dd6dab-c761-4687-bed1-623acf582ec2"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-Y06BJ2\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        AllTrue[
        FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ], 
        AllTrue[Model`ProcessModels`modelsP, AssociationQ], 
        AllTrue[
         Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]& , 
          Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]], 
         AssociationQ], 
        AllTrue[
         Map[Model`ProcessModels`modelsP[#]& , 
          Keys[Model`ProcessModels`modelsP]], AssociationQ]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-RWZJ5E\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-8R5BB3\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-PYXU62\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
FernandoDuarte`LongRunRisk`Model`Catalog`models;\n\t\
Model`ProcessModels`modelsP = FernandoDuarte`LongRunRisk`Models;\n\tTrue\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-9QO166\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-XWY8XC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-34IF7D\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-SMYVH5\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-C9IRRD\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-Y06BJ2\"\n]\n\n\nEndTestSection[]\
\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826519358027*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"06296a1f-5736-48dd-af60-4274cf261d6a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "all", " ", "exogenous", " ", "variables", " ", "are", " ", "in", " ", 
     "context", " ", 
     "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"And", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                "#", "===", 
                 "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\
\""}], ")"}], "&"}], "/@", 
              RowBox[{"(", 
               RowBox[{"Context", "/@", 
                RowBox[{"Cases", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"modelsP", "[", "#", "]"}], "[", 
                   "\"\<stateVars\>\"", "]"}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", 
                  "Infinity"}], "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", "\"\<modelAssumptions\>\"", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"And", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                "#", "===", 
                 "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\
\""}], ")"}], "&"}], "/@", 
              RowBox[{"(", 
               RowBox[{"Context", "/@", 
                RowBox[{"Cases", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"modelsP", "[", "#", "]"}], "[", 
                   "\"\<modelAssumptions\>\"", "]"}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", 
                  "Infinity"}], "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", "\"\<exogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"And", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                "#", "===", 
                 "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\
\""}], ")"}], "&"}], "/@", 
              RowBox[{"(", 
               RowBox[{"Context", "/@", 
                RowBox[{"Cases", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"modelsP", "[", "#", "]"}], "[", 
                   "\"\<exogenousEq\>\"", "]"}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", 
                  "Infinity"}], "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", "\"\<endogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"And", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                "#", "===", 
                 "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\
\""}], ")"}], "&"}], "/@", 
              RowBox[{"(", 
               RowBox[{"Context", "/@", 
                RowBox[{"Cases", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"modelsP", "[", "#", "]"}], "[", 
                   "\"\<endogenousEq\>\"", "]"}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", 
                  "Infinity"}], "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}], 
     "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.893001201934902*^9, 3.893001214021667*^9}, {
   3.893001245798745*^9, 3.8930012743606873`*^9}, {3.893001352341578*^9, 
   3.893001386197197*^9}, {3.893001448430169*^9, 3.893001448726687*^9}, 
   3.8930026482885447`*^9, {3.8930042711283293`*^9, 3.8930042721384*^9}, {
   3.89301215129099*^9, 3.893012163688088*^9}, {3.893014370482971*^9, 
   3.893014438233089*^9}, {3.893014486322825*^9, 3.893014499135116*^9}, {
   3.893014551885273*^9, 3.893014565016636*^9}, 3.893016122561097*^9, 
   3.893027149143408*^9, {3.893027292962989*^9, 3.893027295449093*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"1e140797-a692-49c2-9b2b-5f4c15874357"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231009-LS54ZU\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231009-LS54ZU"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9058265194019337`*^9},
 CellLabel->
  "During evaluation of \
In[20]:=",ExpressionUUID->"9c46f9cc-6f96-42a2-bf63-bf1345e2e1f4"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826519416148*^9},
 CellLabel->
  "During evaluation of \
In[20]:=",ExpressionUUID->"89a80b05-9f0e-4c8a-badf-f63f9b2043db"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\
\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$,
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\
\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\
\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\
\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\
\t\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-LS54ZU\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.009000000000000001, 
   "AbsoluteTiming" -> 0.009000000000000001, "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        Apply[And, 
         Map[Apply[And, 
           
           Map[# === 
            "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
            Map[Context, 
             Cases[
              Model`ProcessModels`modelsP[#]["stateVars"], PatternTest[
                Pattern[Model`ProcessModels`var, 
                 Blank[Symbol]], MemberQ[
                 Map[
                 StringDrop[#, -2]& , 
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]\
, 
                 SymbolName[#]]& ][
                BlankSequence[]] :> Model`ProcessModels`var, Infinity]]]]& , 
          Keys[Model`ProcessModels`modelsP]]], 
        Apply[And, 
         Map[Apply[And, 
           
           Map[# === 
            "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
            Map[Context, 
             Cases[
              Model`ProcessModels`modelsP[#]["modelAssumptions"], 
              PatternTest[
                Pattern[Model`ProcessModels`var, 
                 Blank[Symbol]], MemberQ[
                 Map[
                 StringDrop[#, -2]& , 
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]\
, 
                 SymbolName[#]]& ][
                BlankSequence[]] :> Model`ProcessModels`var, Infinity]]]]& , 
          Keys[Model`ProcessModels`modelsP]]], 
        Apply[And, 
         Map[Apply[And, 
           
           Map[# === 
            "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
            Map[Context, 
             Cases[
              Model`ProcessModels`modelsP[#]["exogenousEq"], PatternTest[
                Pattern[Model`ProcessModels`var, 
                 Blank[Symbol]], MemberQ[
                 Map[
                 StringDrop[#, -2]& , 
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]\
, 
                 SymbolName[#]]& ][
                BlankSequence[]] :> Model`ProcessModels`var, Infinity]]]]& , 
          Keys[Model`ProcessModels`modelsP]]], 
        Apply[And, 
         Map[Apply[And, 
           
           Map[# === 
            "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
            Map[Context, 
             Cases[
              Model`ProcessModels`modelsP[#]["endogenousEq"], PatternTest[
                Pattern[Model`ProcessModels`var, 
                 Blank[Symbol]], MemberQ[
                 Map[
                 StringDrop[#, -2]& , 
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars]\
, 
                 SymbolName[#]]& ][
                BlankSequence[]] :> Model`ProcessModels`var, Infinity]]]]& , 
          Keys[Model`ProcessModels`modelsP]]]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-RWZJ5E\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-8R5BB3\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-PYXU62\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
FernandoDuarte`LongRunRisk`Model`Catalog`models;\n\t\
Model`ProcessModels`modelsP = FernandoDuarte`LongRunRisk`Models;\n\tTrue\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-9QO166\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-XWY8XC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-34IF7D\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-SMYVH5\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-C9IRRD\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-Y06BJ2\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-LS54ZU\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826519420985*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"a9c5f618-e920-4d52-8166-103e7c531bc1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "all", " ", "shocks", " ", "are", " ", "in", " ", "context", " ", 
     "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"And", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                "#", "===", 
                 "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], ")"}], 
               "&"}], "/@", 
              RowBox[{"(", 
               RowBox[{"Context", "/@", 
                RowBox[{"Cases", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"modelsP", "[", "#", "]"}], "[", 
                   "\"\<stateVars\>\"", "]"}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                    "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
                 "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", "\"\<modelAssumptions\>\"", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"And", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                "#", "===", 
                 "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], ")"}], 
               "&"}], "/@", 
              RowBox[{"(", 
               RowBox[{"Context", "/@", 
                RowBox[{"Cases", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"modelsP", "[", "#", "]"}], "[", 
                   "\"\<modelAssumptions\>\"", "]"}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                    "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
                 "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", "\"\<exogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"And", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                "#", "===", 
                 "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], ")"}], 
               "&"}], "/@", 
              RowBox[{"(", 
               RowBox[{"Context", "/@", 
                RowBox[{"Cases", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"modelsP", "[", "#", "]"}], "[", 
                   "\"\<exogenousEq\>\"", "]"}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                    "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
                 "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", "\"\<endogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"And", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                "#", "===", 
                 "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], ")"}], 
               "&"}], "/@", 
              RowBox[{"(", 
               RowBox[{"Context", "/@", 
                RowBox[{"Cases", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"modelsP", "[", "#", "]"}], "[", 
                   "\"\<endogenousEq\>\"", "]"}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                    "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
                 "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}], 
     "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{
  3.893001499960679*^9, {3.893002667440094*^9, 3.89300269939427*^9}, {
   3.893003083367228*^9, 3.893003083692607*^9}, {3.8930042730060863`*^9, 
   3.893004273989354*^9}, {3.893012064247108*^9, 3.8930120867411222`*^9}, {
   3.893014419748905*^9, 3.893014445806767*^9}, {3.893014573318915*^9, 
   3.893014592005512*^9}, 3.893027154979233*^9, 3.893027301110894*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"87988790-43a9-4e61-8178-c645affb741e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231009-X0148M\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231009-X0148M"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9058265194591427`*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"03b76fc4-9e7d-4e51-bfe5-411eee57fac7"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826519472404*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"acb10969-99e8-478d-9f2a-72bbaf65543d"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\
\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\
\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\
\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-X0148M\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        Apply[And, 
         Map[Apply[And, 
           Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
            Map[Context, 
             Cases[
              Model`ProcessModels`modelsP[#]["stateVars"], PatternTest[
                Pattern[Model`ProcessModels`var, 
                 Blank[Symbol]], MatchQ[
                 SymbolName[#], "eps"]& ][
                BlankSequence[]][
                BlankSequence[]] :> Model`ProcessModels`var, Infinity]]]]& , 
          Keys[Model`ProcessModels`modelsP]]], 
        Apply[And, 
         Map[Apply[And, 
           Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
            Map[Context, 
             Cases[
              Model`ProcessModels`modelsP[#]["modelAssumptions"], 
              PatternTest[
                Pattern[Model`ProcessModels`var, 
                 Blank[Symbol]], MatchQ[
                 SymbolName[#], "eps"]& ][
                BlankSequence[]][
                BlankSequence[]] :> Model`ProcessModels`var, Infinity]]]]& , 
          Keys[Model`ProcessModels`modelsP]]], 
        Apply[And, 
         Map[Apply[And, 
           Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
            Map[Context, 
             Cases[
              Model`ProcessModels`modelsP[#]["exogenousEq"], PatternTest[
                Pattern[Model`ProcessModels`var, 
                 Blank[Symbol]], MatchQ[
                 SymbolName[#], "eps"]& ][
                BlankSequence[]][
                BlankSequence[]] :> Model`ProcessModels`var, Infinity]]]]& , 
          Keys[Model`ProcessModels`modelsP]]], 
        Apply[And, 
         Map[Apply[And, 
           Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
            Map[Context, 
             Cases[
              Model`ProcessModels`modelsP[#]["endogenousEq"], PatternTest[
                Pattern[Model`ProcessModels`var, 
                 Blank[Symbol]], MatchQ[
                 SymbolName[#], "eps"]& ][
                BlankSequence[]][
                BlankSequence[]] :> Model`ProcessModels`var, Infinity]]]]& , 
          Keys[Model`ProcessModels`modelsP]]]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-RWZJ5E\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-8R5BB3\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-PYXU62\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
FernandoDuarte`LongRunRisk`Model`Catalog`models;\n\t\
Model`ProcessModels`modelsP = FernandoDuarte`LongRunRisk`Models;\n\tTrue\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-9QO166\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-XWY8XC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-34IF7D\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-SMYVH5\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-C9IRRD\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-Y06BJ2\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-LS54ZU\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\
\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-X0148M\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826519478595*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"5fe1ff1d-acd2-402e-ae53-90d64e2d4efe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "all", " ", "parameters", " ", "are", " ", "in", " ", "context", " ", 
     "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<parameters\>\"", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"And", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                "#", "===", 
                 "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
                ")"}], "&"}], "/@", 
              RowBox[{"(", 
               RowBox[{"Context", "/@", 
                RowBox[{"Cases", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"modelsP", "[", "#", "]"}], "[", 
                   "\"\<parameters\>\"", "]"}], ",", 
                  RowBox[{
                   RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
               ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"And", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                "#", "===", 
                 "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
                ")"}], "&"}], "/@", 
              RowBox[{"(", 
               RowBox[{"Context", "/@", 
                RowBox[{"Cases", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"modelsP", "[", "#", "]"}], "[", 
                   "\"\<stateVars\>\"", "]"}], ",", 
                  RowBox[{
                   RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
               ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", "\"\<modelAssumptions\>\"", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"And", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                "#", "===", 
                 "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
                ")"}], "&"}], "/@", 
              RowBox[{"(", 
               RowBox[{"Context", "/@", 
                RowBox[{"Cases", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"modelsP", "[", "#", "]"}], "[", 
                   "\"\<modelAssumptions\>\"", "]"}], ",", 
                  RowBox[{
                   RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
               ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", "\"\<exogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"And", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                "#", "===", 
                 "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
                ")"}], "&"}], "/@", 
              RowBox[{"(", 
               RowBox[{"Context", "/@", 
                RowBox[{"Cases", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"modelsP", "[", "#", "]"}], "[", 
                   "\"\<exogenousEq\>\"", "]"}], ",", 
                  RowBox[{
                   RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
               ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", "\"\<endogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"And", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                "#", "===", 
                 "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
                ")"}], "&"}], "/@", 
              RowBox[{"(", 
               RowBox[{"Context", "/@", 
                RowBox[{"Cases", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"modelsP", "[", "#", "]"}], "[", 
                   "\"\<endogenousEq\>\"", "]"}], ",", 
                  RowBox[{
                   RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
               ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}], 
     "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{
  3.893001501399847*^9, {3.893002703969759*^9, 3.893002740019191*^9}, {
   3.893003056880762*^9, 3.893003109272599*^9}, {3.893003787588058*^9, 
   3.893003788104986*^9}, {3.893004274886281*^9, 3.893004277331174*^9}, {
   3.893012058196281*^9, 3.893012058639546*^9}, {3.8930144234979*^9, 
   3.8930144532880163`*^9}, {3.8930146005691023`*^9, 3.893014621517111*^9}, 
   3.893016128067835*^9, 3.893027157544302*^9, 3.893027305757145*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"5ba1a080-37af-4559-8675-5356610aa871"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231009-F0AJCH\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231009-F0AJCH"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905826519532745*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"76f1c50f-fdbd-44e7-8ebf-91805f45de25"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.9058265195385733`*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"024848b7-0021-4490-aacc-1f8280d55a58"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\
\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\tMap[\n\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\
\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\
\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-F0AJCH\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.003, "AbsoluteTiming" -> 0.003, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        Apply[And, 
         Map[Apply[And, 
           Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
            Map[Context, 
             Cases[
              Model`ProcessModels`modelsP[#]["parameters"], PatternTest[
                Pattern[Model`ProcessModels`var, 
                 Blank[Symbol]], MemberQ[
                FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                 SymbolName[#]]& ] :> Model`ProcessModels`var, Infinity]]]]& , 
          Keys[Model`ProcessModels`modelsP]]], 
        Apply[And, 
         Map[Apply[And, 
           Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
            Map[Context, 
             Cases[
              Model`ProcessModels`modelsP[#]["stateVars"], PatternTest[
                Pattern[Model`ProcessModels`var, 
                 Blank[Symbol]], MemberQ[
                FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                 SymbolName[#]]& ] :> Model`ProcessModels`var, Infinity]]]]& , 
          Keys[Model`ProcessModels`modelsP]]], 
        Apply[And, 
         Map[Apply[And, 
           Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
            Map[Context, 
             Cases[
              Model`ProcessModels`modelsP[#]["modelAssumptions"], 
              PatternTest[
                Pattern[Model`ProcessModels`var, 
                 Blank[Symbol]], MemberQ[
                FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                 SymbolName[#]]& ] :> Model`ProcessModels`var, Infinity]]]]& , 
          Keys[Model`ProcessModels`modelsP]]], 
        Apply[And, 
         Map[Apply[And, 
           Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
            Map[Context, 
             Cases[
              Model`ProcessModels`modelsP[#]["exogenousEq"], PatternTest[
                Pattern[Model`ProcessModels`var, 
                 Blank[Symbol]], MemberQ[
                FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                 SymbolName[#]]& ] :> Model`ProcessModels`var, Infinity]]]]& , 
          Keys[Model`ProcessModels`modelsP]]], 
        Apply[And, 
         Map[Apply[And, 
           Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
            Map[Context, 
             Cases[
              Model`ProcessModels`modelsP[#]["endogenousEq"], PatternTest[
                Pattern[Model`ProcessModels`var, 
                 Blank[Symbol]], MemberQ[
                FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                 SymbolName[#]]& ] :> Model`ProcessModels`var, Infinity]]]]& , 
          Keys[Model`ProcessModels`modelsP]]]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-RWZJ5E\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-8R5BB3\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-PYXU62\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
FernandoDuarte`LongRunRisk`Model`Catalog`models;\n\t\
Model`ProcessModels`modelsP = FernandoDuarte`LongRunRisk`Models;\n\tTrue\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-9QO166\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-XWY8XC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-34IF7D\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-SMYVH5\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-C9IRRD\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-Y06BJ2\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-LS54ZU\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\
\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-X0148M\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-F0AJCH\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826519547595*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"479476ba-f05b-4fd1-82c7-417ac17d75fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "all", " ", "endogenous", " ", "variables", " ", "are", " ", "in", " ", 
     "context", " ", 
     "\"\<FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\>\""}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\"\<modelAssumptions\>\"", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"And", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                "#", "===", 
                 "\"\<FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\>\
\""}], ")"}], "&"}], "/@", 
              RowBox[{"(", 
               RowBox[{"Context", "/@", 
                RowBox[{"Cases", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"modelsP", "[", "#", "]"}], "[", 
                   "\"\<modelAssumptions\>\"", "]"}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", 
                  "Infinity"}], "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", "\"\<endogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"And", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                "#", "===", 
                 "\"\<FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\>\
\""}], ")"}], "&"}], "/@", 
              RowBox[{"(", 
               RowBox[{"Context", "/@", 
                RowBox[{"Cases", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"modelsP", "[", "#", "]"}], "[", 
                   "\"\<endogenousEq\>\"", "]"}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", 
                  "Infinity"}], "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}], 
     "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.8930122537493258`*^9, 3.893012300221422*^9}, {
   3.893014429011052*^9, 3.893014460982974*^9}, {3.893014634019079*^9, 
   3.893014636342099*^9}, {3.893014692448086*^9, 3.89301469383664*^9}, {
   3.893014770636636*^9, 3.893014779588964*^9}, 3.893027162806097*^9, 
   3.8930273091238203`*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"ef80abef-2c56-4f05-b149-7ef948f31da2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231009-UXOKX8\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231009-UXOKX8"],
  Editable->False]], "Print",
 CellChangeTimes->{3.90582651958855*^9},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"c00f5f5b-3264-4201-aa32-fc334f9e41d7"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826519600532*^9},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"fd973319-5e4d-401d-b686-ae561e1410c9"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\
\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$,
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\
\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\
\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\
\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\
\t\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\
\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-UXOKX8\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.015, "AbsoluteTiming" -> 0.015, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        Apply[And, 
         Map[Apply[And, 
           
           Map[# === 
            "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"& , 
            Map[Context, 
             Cases[
              Model`ProcessModels`modelsP[#]["modelAssumptions"], 
              PatternTest[
                Pattern[Model`ProcessModels`var, 
                 Blank[Symbol]], MemberQ[
                 Map[
                 StringDrop[#, -2]& , 
                  FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                 SymbolName[#]]& ][
                BlankSequence[]] :> Model`ProcessModels`var, Infinity]]]]& , 
          Keys[Model`ProcessModels`modelsP]]], 
        Apply[And, 
         Map[Apply[And, 
           
           Map[# === 
            "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"& , 
            Map[Context, 
             Cases[
              Model`ProcessModels`modelsP[#]["endogenousEq"], PatternTest[
                Pattern[Model`ProcessModels`var, 
                 Blank[Symbol]], MemberQ[
                 Map[
                 StringDrop[#, -2]& , 
                  FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                 SymbolName[#]]& ][
                BlankSequence[]] :> Model`ProcessModels`var, Infinity]]]]& , 
          Keys[Model`ProcessModels`modelsP]]]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-RWZJ5E\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-8R5BB3\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-PYXU62\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
FernandoDuarte`LongRunRisk`Model`Catalog`models;\n\t\
Model`ProcessModels`modelsP = FernandoDuarte`LongRunRisk`Models;\n\tTrue\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-9QO166\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-XWY8XC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-34IF7D\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-SMYVH5\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-C9IRRD\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-Y06BJ2\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-LS54ZU\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\
\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-X0148M\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-F0AJCH\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-UXOKX8\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.9058265196053257`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"906b153e-4d73-45e6-a48d-72328c71baf6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"all", " ", "coefficients", " ", "of", " ", "wc"}], ",", " ", 
     "pd", ",", " ", 
     RowBox[{
     "bond", " ", "ratios", " ", "are", " ", "in", " ", "context", " ", 
      "\"\<FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\>\""}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"coefs", "=", 
     RowBox[{"Alternatives", "@@", 
      RowBox[{"SymbolName", "/@", 
       RowBox[{"{", 
        RowBox[{
        "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc", ",", 
         RowBox[{
         "Head", "@", 
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd"}], 
         ",", 
         RowBox[{
         "Head", "@", 
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb"}], 
         ",", 
         RowBox[{
         "Head", "@", 
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb"}]}], 
        "}"}]}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
         "#", "===", 
          "\"\<FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\>\""}], 
         ")"}], "&"}], "/@", 
       RowBox[{"Flatten", "@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"modelsP", "[", "#", "]"}], "[", 
              "\"\<modelAssumptions\>\"", "]"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"var_Symbol", "?", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", "coefs"}], 
                    "]"}], "&"}], ")"}]}], "|", 
                RowBox[{
                 RowBox[{"var_Symbol", "?", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", "coefs"}], 
                    "]"}], "&"}], ")"}]}], "[", "__", "]"}]}], ")"}], ":>", 
              RowBox[{"Context", "[", "var", "]"}]}], ",", "Infinity"}], 
            "]"}], "&"}], "/@", 
          RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}], ")"}]}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.893012389695546*^9, 3.893012429793953*^9}, {
   3.893012999712995*^9, 3.893013013257292*^9}, 3.893027168767529*^9, 
   3.89302731516646*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"81f0314f-983a-4f35-94ac-9304a10f36a3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231009-51KD31\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231009-51KD31"],
  Editable->False]], "Print",
 CellChangeTimes->{3.90582651963768*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"49d7aa23-fdc9-4b1b-88ef-85f9391c1da5"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826519649145*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"3cd26077-d26c-472a-82ca-af585aea75df"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Model`ProcessModels`coefs = Apply[Alternatives,\n\t\tMap[SymbolName,\n\t\t\
\t{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t]\n\t];\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\tFlatten[\
\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
Cases[Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tContext \
@ Model`ProcessModels`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tInfinity\n\t\t\t\t\
\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tModel`ProcessModels`coefs = Apply[Alternatives,\n\t\t\
Map[SymbolName,\n\t\t\t\
{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t]\n\t];\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\tFlatten[\
\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
Cases[Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tContext \
@ Model`ProcessModels`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tInfinity\n\t\t\t\t\
\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-51KD31\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[Model`ProcessModels`coefs = Apply[Alternatives, 
         Map[
         SymbolName, {
          FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, 
           Head[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd], 
           Head[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb], 
           
           Head[
           FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb]}]]; 
      Apply[And, 
        Map[# === "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"& , 
         
         Flatten[
          Map[Cases[
            Model`ProcessModels`modelsP[#]["modelAssumptions"], Alternatives[
              PatternTest[
               Pattern[Model`ProcessModels`var, 
                Blank[Symbol]], MatchQ[
                SymbolName[#], Model`ProcessModels`coefs]& ], 
              PatternTest[
               Pattern[Model`ProcessModels`var, 
                Blank[Symbol]], MatchQ[
                SymbolName[#], Model`ProcessModels`coefs]& ][
               BlankSequence[]]] :> Context[Model`ProcessModels`var], 
            Infinity]& , 
           Keys[Model`ProcessModels`modelsP]]]]]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-RWZJ5E\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-8R5BB3\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-PYXU62\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
FernandoDuarte`LongRunRisk`Model`Catalog`models;\n\t\
Model`ProcessModels`modelsP = FernandoDuarte`LongRunRisk`Models;\n\tTrue\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-9QO166\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-XWY8XC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-34IF7D\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-SMYVH5\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-C9IRRD\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-Y06BJ2\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-LS54ZU\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\
\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-X0148M\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-F0AJCH\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-UXOKX8\"\n]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`coefs = Apply[Alternatives,\n\t\tMap[SymbolName,\n\t\t\t\
{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t]\n\t];\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\tFlatten[\
\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
Cases[Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tContext \
@ Model`ProcessModels`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tInfinity\n\t\t\t\t\
\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-51KD31\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826519652289*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"27781c5c-646a-4313-a9f3-57193ffd9035"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "should", " ", "not", " ", "have", " ", "any", " ", "endogenous", " ", 
     "variables"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{
            RowBox[{"{", "}"}], ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
               "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"var_Symbol", "?", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                  ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}],
              "]"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", "\"\<exogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{
            RowBox[{"{", "}"}], ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<exogenousEq\>\"",
                "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"var_Symbol", "?", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                  ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}],
              "]"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}]}], 
     "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.89300111387222*^9, 3.8930011727459707`*^9}, {
   3.893001247830225*^9, 3.893001299678648*^9}, {3.893001353751255*^9, 
   3.8930015072417727`*^9}, {3.893002707727394*^9, 3.893002708411419*^9}, {
   3.893002748062245*^9, 3.893002826831513*^9}, 3.89300297523416*^9, {
   3.893003086535989*^9, 3.893003086763905*^9}, {3.8930042788551702`*^9, 
   3.893004279626916*^9}, {3.8930147061742983`*^9, 3.8930147624521227`*^9}, 
   3.893027171825409*^9, 3.893027320855521*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"725929c0-e672-42a1-adf0-1f1427f6f63b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231009-X4714J\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231009-X4714J"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905826519698761*^9},
 CellLabel->
  "During evaluation of \
In[25]:=",ExpressionUUID->"f73621c6-912c-41d3-b2de-4460bf3500a1"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826519699428*^9},
 CellLabel->
  "During evaluation of \
In[25]:=",ExpressionUUID->"64345723-eb6d-497f-b8cf-44fadbb9b35d"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\
\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\tRuleDelayed[\n\
\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t\
}\n\t]", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Cases[\n\t\t\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t\
}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-X4714J\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.004, "AbsoluteTiming" -> 0.004, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        Apply[And, 
         Map[MatchQ[{}, #]& , 
          Map[Cases[
            Model`ProcessModels`modelsP[#]["stateVars"], PatternTest[
              Pattern[Model`ProcessModels`var, 
               Blank[Symbol]], MemberQ[
               Map[
               StringDrop[#, -2]& , 
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]\
, 
               SymbolName[#]]& ][
              BlankSequence[]] :> Model`ProcessModels`var, Infinity]& , 
           Keys[Model`ProcessModels`modelsP]]]], 
        Apply[And, 
         Map[MatchQ[{}, #]& , 
          Map[Cases[
            Model`ProcessModels`modelsP[#]["exogenousEq"], PatternTest[
              Pattern[Model`ProcessModels`var, 
               Blank[Symbol]], MemberQ[
               Map[
               StringDrop[#, -2]& , 
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]\
, 
               SymbolName[#]]& ][
              BlankSequence[]] :> Model`ProcessModels`var, Infinity]& , 
           Keys[Model`ProcessModels`modelsP]]]]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-RWZJ5E\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-8R5BB3\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-PYXU62\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
FernandoDuarte`LongRunRisk`Model`Catalog`models;\n\t\
Model`ProcessModels`modelsP = FernandoDuarte`LongRunRisk`Models;\n\tTrue\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-9QO166\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-XWY8XC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-34IF7D\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-SMYVH5\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-C9IRRD\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-Y06BJ2\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-LS54ZU\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\
\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-X0148M\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-F0AJCH\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-UXOKX8\"\n]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`coefs = Apply[Alternatives,\n\t\tMap[SymbolName,\n\t\t\t\
{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t]\n\t];\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\tFlatten[\
\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
Cases[Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tContext \
@ Model`ProcessModels`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tInfinity\n\t\t\t\t\
\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-51KD31\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\tRuleDelayed[\n\
\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t\
}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-X4714J\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826519705927*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"c8e3836b-5387-46af-84f3-6a970b387d39"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "keys", " ", "and", " ", "shortname", " ", "are", " ", "preserved"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SubsetQ", "[", 
       RowBox[{
        RowBox[{"Keys", "[", "models", "]"}], ",", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"SubsetQ", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"models", "[", "#", "]"}], "[", "\"\<shortname\>\"", "]"}],
           "&"}], "/@", 
         RowBox[{"Keys", "[", "models", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<shortname\>\"", 
           "]"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "modelsP", "]"}]}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.89301161589116*^9, 3.893011697195755*^9}, 
   3.8930271750973*^9, 3.893027322877461*^9, 3.893144799365404*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"a20999be-298b-4767-9b2b-66ebc0f4bed8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231009-7HDX12\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231009-7HDX12"],
  Editable->False]], "Print",
 CellChangeTimes->{3.90582651974461*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"174696bd-2a91-4166-999b-4f392c4b1343"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826519757283*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"e9776310-a4a9-4063-9e4e-8bff996dd8d3"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\tSubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\
SubsetQ[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"]&\
, Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models],\n\t\t\t\t\
Map[Model`ProcessModels`modelsP[#][\"shortname\"]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tSubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\
SubsetQ[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"]&\
, Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models],\n\t\t\t\t\
Map[Model`ProcessModels`modelsP[#][\"shortname\"]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ProcessModels_20231009-7HDX12\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        SubsetQ[
         Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], 
         Keys[Model`ProcessModels`modelsP]], 
        SubsetQ[
         Map[
         FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["shortname"]& , 
          Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]], 
         Map[Model`ProcessModels`modelsP[#]["shortname"]& , 
          Keys[Model`ProcessModels`modelsP]]]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-RWZJ5E\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-8R5BB3\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-PYXU62\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
FernandoDuarte`LongRunRisk`Model`Catalog`models;\n\t\
Model`ProcessModels`modelsP = FernandoDuarte`LongRunRisk`Models;\n\tTrue\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-9QO166\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-XWY8XC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-34IF7D\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-SMYVH5\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-C9IRRD\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-Y06BJ2\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-LS54ZU\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\
\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-X0148M\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-F0AJCH\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-UXOKX8\"\n]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`coefs = Apply[Alternatives,\n\t\tMap[SymbolName,\n\t\t\t\
{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t]\n\t];\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\tFlatten[\
\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
Cases[Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tContext \
@ Model`ProcessModels`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tInfinity\n\t\t\t\t\
\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-51KD31\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\tRuleDelayed[\n\
\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t\
}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-X4714J\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tSubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\
SubsetQ[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"]&\
, Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models],\n\t\t\t\t\
Map[Model`ProcessModels`modelsP[#][\"shortname\"]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ProcessModels_20231009-7HDX12\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826519764894*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"913ec4eb-87fd-4edd-b8f0-effde768281c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "stateVars", " ", "are", " ", "functions", " ", "of", " ", "one", " ", 
     "variable", " ", 
     RowBox[{"(", "time", ")"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{"Function", ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"Head", "/@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
                "]"}], ")"}], "&"}], "/@", 
             RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
        ")"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{"List", ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"Head", "/@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<stateVars\>\"",
                  "]"}], "[", "t", "]"}], ")"}], "&"}], "/@", 
             RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
        ")"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{"1", ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"Length", "/@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<stateVars\>\"",
                  "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ")"}], "&"}], "/@", 
             RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
        ")"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{"\"\<t\>\"", ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"SymbolName", "@@", 
              RowBox[{
               RowBox[{
                RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
                "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "evaluating", " ", "the", " ", "function", " ", "at", " ", 
        "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t", " ", 
        "gives", " ", "the", " ", "same", " ", "as", " ", "\"\<stateVars\>\"",
         " ", "in", " ", "models"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
             "]"}], "[", 
            "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t", "]"}], 
           ")"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}], "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"models", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
            "]"}], ")"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}], 
     "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.893011149678734*^9, 3.893011151120873*^9}, {
   3.893011197672791*^9, 3.893011393092401*^9}, {3.8930114244175577`*^9, 
   3.893011594633165*^9}, {3.893011701053651*^9, 3.89301170872368*^9}, {
   3.8930117913212442`*^9, 3.893011831744893*^9}, 3.893013045538563*^9, 
   3.893027177302371*^9, 3.89302732535247*^9, 3.893144899211803*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"a3f64af9-a0ab-44c4-b3b2-109b0dd55536"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231009-OMD0EK\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231009-OMD0EK"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905826519802617*^9},
 CellLabel->
  "During evaluation of \
In[27]:=",ExpressionUUID->"482a5ab9-7d3b-4b5c-abec-05d38d7fa557"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826519810581*^9},
 CellLabel->
  "During evaluation of \
In[27]:=",ExpressionUUID->"8c001598-3881-4094-82a8-d0900331c2de"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[Function, #]&,\n\t\
\t\t\t\tMap[Head, Map[Model`ProcessModels`modelsP[#][\"stateVars\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[List, #]&,\n\t\t\t\t\tMap[Head, \
Map[Model`ProcessModels`modelsP[#][\"stateVars\"][Model`ProcessModels`t]&, \
Keys @ Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\
\t\t\t\tMap[MatchQ[1, #]&,\n\t\t\t\t\tMap[Length,\n\t\t\t\t\t\t\
Map[Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[MatchQ[\"t\", #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[Apply[SymbolName, \
Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]]],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Map[Model`ProcessModels`modelsP[#][\"stateVars\"][FernandoDuarte`\
LongRunRisk`Model`ExogenousEq`Private`t]&, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\t\
Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"]&, Keys \
@ Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[Function, #]&,\n\t\t\t\t\tMap[Head, \
Map[Model`ProcessModels`modelsP[#][\"stateVars\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[List, #]&,\n\t\t\t\t\tMap[Head, \
Map[Model`ProcessModels`modelsP[#][\"stateVars\"][Model`ProcessModels`t]&, \
Keys @ Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\
\t\t\t\tMap[MatchQ[1, #]&,\n\t\t\t\t\tMap[Length,\n\t\t\t\t\t\t\
Map[Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[MatchQ[\"t\", #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[Apply[SymbolName, \
Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]]],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Map[Model`ProcessModels`modelsP[#][\"stateVars\"][FernandoDuarte`\
LongRunRisk`Model`ExogenousEq`Private`t]&, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\t\
Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"]&, Keys \
@ Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"ProcessModels_20231009-OMD0EK\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        Apply[And, 
         Map[MatchQ[Function, #]& , 
          Map[Head, 
           Map[Model`ProcessModels`modelsP[#]["stateVars"]& , 
            Keys[Model`ProcessModels`modelsP]]]]], 
        Apply[And, 
         Map[MatchQ[List, #]& , 
          Map[Head, 
           Map[
           Model`ProcessModels`modelsP[#]["stateVars"][
            Model`ProcessModels`t]& , 
            Keys[Model`ProcessModels`modelsP]]]]], 
        Apply[And, 
         Map[MatchQ[1, #]& , 
          Map[Length, 
           Map[Part[
             Model`ProcessModels`modelsP[#]["stateVars"], 1]& , 
            Keys[Model`ProcessModels`modelsP]]]]], 
        Apply[And, 
         Map[MatchQ["t", #]& , 
          Map[Apply[SymbolName, 
            Part[
             Model`ProcessModels`modelsP[#]["stateVars"], 1]]& , 
           Keys[Model`ProcessModels`modelsP]]]], 
        Map[Model`ProcessModels`modelsP[#]["stateVars"][
          FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]& , 
          Keys[Model`ProcessModels`modelsP]] === 
        Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["stateVars"]& , 
          Keys[Model`ProcessModels`modelsP]]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-RWZJ5E\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-8R5BB3\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-PYXU62\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
FernandoDuarte`LongRunRisk`Model`Catalog`models;\n\t\
Model`ProcessModels`modelsP = FernandoDuarte`LongRunRisk`Models;\n\tTrue\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-9QO166\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-XWY8XC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-34IF7D\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-SMYVH5\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-C9IRRD\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-Y06BJ2\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-LS54ZU\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\
\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-X0148M\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-F0AJCH\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-UXOKX8\"\n]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`coefs = Apply[Alternatives,\n\t\tMap[SymbolName,\n\t\t\t\
{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t]\n\t];\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\tFlatten[\
\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
Cases[Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tContext \
@ Model`ProcessModels`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tInfinity\n\t\t\t\t\
\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-51KD31\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\tRuleDelayed[\n\
\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t\
}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-X4714J\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tSubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\
SubsetQ[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"]&\
, Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models],\n\t\t\t\t\
Map[Model`ProcessModels`modelsP[#][\"shortname\"]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ProcessModels_20231009-7HDX12\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[Function, #]&,\n\t\t\t\
\t\tMap[Head, Map[Model`ProcessModels`modelsP[#][\"stateVars\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[List, #]&,\n\t\t\t\t\tMap[Head, \
Map[Model`ProcessModels`modelsP[#][\"stateVars\"][Model`ProcessModels`t]&, \
Keys @ Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\
\t\t\t\tMap[MatchQ[1, #]&,\n\t\t\t\t\tMap[Length,\n\t\t\t\t\t\t\
Map[Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[MatchQ[\"t\", #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[Apply[SymbolName, \
Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]]],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Map[Model`ProcessModels`modelsP[#][\"stateVars\"][FernandoDuarte`\
LongRunRisk`Model`ExogenousEq`Private`t]&, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\t\
Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"]&, Keys \
@ Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"ProcessModels_20231009-OMD0EK\"\n]\n\n\nEndTestSection[]\n\
"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826519823678*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"08adc008-f7df-4e63-8da6-f277f1879d6d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"numStocks", " ", "is", " ", "a", " ", "number"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"NumberQ", "/@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<numStocks\>\"", "]"}],
          "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"Keys", "@", "modelsP"}], ")"}]}], ")"}]}], ")"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.893011853833601*^9, 3.893011940133402*^9}, 
   3.893027178823254*^9, 3.893027328757538*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"d936375e-497e-40de-957c-ccbe13fec420"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231009-K9FT9W\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231009-K9FT9W"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9058265198599243`*^9},
 CellLabel->
  "During evaluation of \
In[28]:=",ExpressionUUID->"3fcbb08d-e597-45e7-ad5a-44d8f06fab8d"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.90582651986059*^9},
 CellLabel->
  "During evaluation of \
In[28]:=",ExpressionUUID->"e77d204b-0411-4b1f-9df8-3f6be33f1149"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[NumberQ, \
Map[Model`ProcessModels`modelsP[#][\"numStocks\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[NumberQ, \
Map[Model`ProcessModels`modelsP[#][\"numStocks\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-K9FT9W\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[NumberQ, 
        Map[Model`ProcessModels`modelsP[#]["numStocks"]& , 
         Keys[Model`ProcessModels`modelsP]]]]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-RWZJ5E\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-8R5BB3\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-PYXU62\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
FernandoDuarte`LongRunRisk`Model`Catalog`models;\n\t\
Model`ProcessModels`modelsP = FernandoDuarte`LongRunRisk`Models;\n\tTrue\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-9QO166\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-XWY8XC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-34IF7D\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-SMYVH5\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-C9IRRD\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-Y06BJ2\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-LS54ZU\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\
\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-X0148M\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-F0AJCH\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-UXOKX8\"\n]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`coefs = Apply[Alternatives,\n\t\tMap[SymbolName,\n\t\t\t\
{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t]\n\t];\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\tFlatten[\
\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
Cases[Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tContext \
@ Model`ProcessModels`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tInfinity\n\t\t\t\t\
\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-51KD31\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\tRuleDelayed[\n\
\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t\
}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-X4714J\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tSubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\
SubsetQ[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"]&\
, Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models],\n\t\t\t\t\
Map[Model`ProcessModels`modelsP[#][\"shortname\"]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ProcessModels_20231009-7HDX12\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[Function, #]&,\n\t\t\t\
\t\tMap[Head, Map[Model`ProcessModels`modelsP[#][\"stateVars\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[List, #]&,\n\t\t\t\t\tMap[Head, \
Map[Model`ProcessModels`modelsP[#][\"stateVars\"][Model`ProcessModels`t]&, \
Keys @ Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\
\t\t\t\tMap[MatchQ[1, #]&,\n\t\t\t\t\tMap[Length,\n\t\t\t\t\t\t\
Map[Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[MatchQ[\"t\", #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[Apply[SymbolName, \
Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]]],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Map[Model`ProcessModels`modelsP[#][\"stateVars\"][FernandoDuarte`\
LongRunRisk`Model`ExogenousEq`Private`t]&, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\t\
Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"]&, Keys \
@ Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"ProcessModels_20231009-OMD0EK\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[NumberQ, \
Map[Model`ProcessModels`modelsP[#][\"numStocks\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-K9FT9W\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826519873651*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"5d911b83-a78e-4a54-896c-f7fe1d0a6cb8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"compare", " ", "to", " ", "some", " ", "hand"}], "-", 
     RowBox[{
     "written", " ", "expressions", " ", "known", " ", "to", " ", "be", " ", 
      "correct"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"model", "=", 
     RowBox[{"modelsP", "[", "\"\<NRC\>\"", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"pi", "[", "myContext`t", "]"}], "/.", 
          RowBox[{"Normal", "@", 
           RowBox[{"model", "[", "\"\<exogenousEq\>\"", "]"}]}]}], ")"}], "===", 
        RowBox[{"(", 
         RowBox[{"FernandoDuarte`LongRunRisk`Model`Parameters`mup", "+", 
          RowBox[{"FernandoDuarte`LongRunRisk`Model`Parameters`rhop", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "FernandoDuarte`LongRunRisk`Model`Parameters`mup"}],
              "+", 
             RowBox[{
             "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi", "[", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "myContext`t"}], "]"}]}], ")"}]}], 
          "+", 
          RowBox[{"FernandoDuarte`LongRunRisk`Model`Parameters`xip", " ", 
           RowBox[{
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<pi\>\"", 
             "]"}], "[", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "myContext`t"}], "]"}]}], "+", 
          RowBox[{"FernandoDuarte`LongRunRisk`Model`Parameters`phip", " ", 
           RowBox[{
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<pi\>\"", 
             "]"}], "[", "myContext`t", "]"}]}]}], ")"}]}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", "\"\<dc\>\"", "]"}], "[", "t", "]"}], "/.", 
          RowBox[{"model", "[", "\"\<exogenousEq\>\"", "]"}]}], ")"}], "===", 
        
        RowBox[{
         RowBox[{"eps", "[", "\"\<dc\>\"", "]"}], "[", "t", "]"}]}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"dd", "[", 
           RowBox[{"t", ",", "i"}], "]"}], "/.", 
          RowBox[{"Normal", "@", 
           RowBox[{"model", "[", "\"\<exogenousEq\>\"", "]"}]}]}], ")"}], "===", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`Parameters`mud", "[", "i", "]"}], 
          "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "FernandoDuarte`LongRunRisk`Model`Parameters`mup"}],
              "+", 
             RowBox[{
             "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi", "[", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "t"}], "]"}]}], ")"}], " ", 
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`Parameters`rhodp", "[", "i", 
            "]"}]}], "+", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`Parameters`phidc", "[", "i", 
            "]"}], " ", 
           RowBox[{
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<dc\>\"", 
             "]"}], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg", "[", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "t"}], "]"}], " ", 
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`Parameters`xid", "[", "i", "]"}],
            " ", 
           RowBox[{
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<pi\>\"", 
             "]"}], "[", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "t"}], "]"}]}]}], ")"}]}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"wc", "[", "t", "]"}], "/.", 
          RowBox[{"Normal", "@", 
           RowBox[{"model", "[", "\"\<endogenousEq\>\"", "]"}]}]}], ")"}], "===", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A", "[", "0",
            "]"}], "+", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A", "[", 
            "1", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "FernandoDuarte`LongRunRisk`Model`Parameters`mup"}],
              "+", 
             RowBox[{
             "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi", "[", 
              "t", "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A", "[", 
            "4", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "FernandoDuarte`LongRunRisk`Model`Parameters`Esg"}],
              "+", 
             RowBox[{
             "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg", "[", 
              "t", "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A", "[", 
            "5", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              
              SuperscriptBox[
               "FernandoDuarte`LongRunRisk`Model`Parameters`Esg", "2"]}], "-", 
             FractionBox[
              
              SuperscriptBox[
               "FernandoDuarte`LongRunRisk`Model`Parameters`phig", "2"], 
              RowBox[{"1", "-", 
               
               SuperscriptBox[
                "FernandoDuarte`LongRunRisk`Model`Parameters`rhog", "2"]}]], 
             "+", 
             SuperscriptBox[
              RowBox[{
              "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg", "[", 
               "t", "]"}], "2"]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A", "[", 
            "3", "]"}], " ", 
           RowBox[{
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<pi\>\"", 
             "]"}], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A", "[", 
            "2", "]"}], " ", 
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg", "[", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "t"}], "]"}], " ", 
           RowBox[{
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<pi\>\"", 
             "]"}], "[", "t", "]"}]}]}], ")"}]}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"pd", "[", 
           RowBox[{"t", ",", "i"}], "]"}], "/.", 
          RowBox[{"Normal", "@", 
           RowBox[{"model", "[", "\"\<endogenousEq\>\"", "]"}]}]}], ")"}], "===", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B", "[", 
            "i", "]"}], "[", "0", "]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "FernandoDuarte`LongRunRisk`Model`Parameters`mup"}],
              "+", 
             RowBox[{
             "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi", "[", 
              "t", "]"}]}], ")"}], " ", 
           RowBox[{
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B", "[", 
             "i", "]"}], "[", "1", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "FernandoDuarte`LongRunRisk`Model`Parameters`Esg"}],
              "+", 
             RowBox[{
             "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg", "[", 
              "t", "]"}]}], ")"}], " ", 
           RowBox[{
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B", "[", 
             "i", "]"}], "[", "4", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox[
               "FernandoDuarte`LongRunRisk`Model`Parameters`Esg", "2"]}], "-", 
             FractionBox[
              
              SuperscriptBox[
               "FernandoDuarte`LongRunRisk`Model`Parameters`phig", "2"], 
              RowBox[{"1", "-", 
               
               SuperscriptBox[
                "FernandoDuarte`LongRunRisk`Model`Parameters`rhog", "2"]}]], 
             "+", 
             SuperscriptBox[
              RowBox[{
              "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg", "[", 
               "t", "]"}], "2"]}], ")"}], " ", 
           RowBox[{
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B", "[", 
             "i", "]"}], "[", "5", "]"}]}], "+", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg", "[", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "t"}], "]"}], " ", 
           RowBox[{
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B", "[", 
             "i", "]"}], "[", "2", "]"}], " ", 
           RowBox[{
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<pi\>\"", 
             "]"}], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B", "[", 
             "i", "]"}], "[", "3", "]"}], " ", 
           RowBox[{
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<pi\>\"", 
             "]"}], "[", "t", "]"}]}]}], ")"}]}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"bondexcret", "[", 
           RowBox[{"t", ",", "i"}], "]"}], "/.", 
          RowBox[{"Normal", "@", 
           RowBox[{"model", "[", "\"\<endogenousEq\>\"", "]"}]}]}], ")"}], "===", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondret", 
           "[", 
           RowBox[{"t", ",", "i", ",", "1"}], "]"}], "-", 
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondyield", 
           "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "+", "t"}], ",", "1"}], "]"}]}], ")"}]}], 
       ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"bondexcret", "[", 
            RowBox[{"t", ",", "i"}], "]"}], "/.", 
           RowBox[{"Normal", "@", 
            RowBox[{"model", "[", "\"\<endogenousEq\>\"", "]"}]}]}], "/.", 
          RowBox[{"Normal", "@", 
           RowBox[{"model", "[", "\"\<endogenousEq\>\"", "]"}]}]}], ")"}], "===", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "+", "t"}], ",", "1"}], "]"}], "-", 
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "+", "t"}], ",", "i"}], "]"}], "+", 
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond", "[", 
           RowBox[{"t", ",", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "i"}]}], "]"}]}], ")"}]}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}]}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.893013112707829*^9, 3.8930131579451036`*^9}, {
   3.89301319949829*^9, 3.8930132312916937`*^9}, {3.893014937931109*^9, 
   3.893015014205209*^9}, {3.8930150778885803`*^9, 3.893015081667938*^9}, 
   3.8930161054031553`*^9, 3.893016326710898*^9, {3.893016391754463*^9, 
   3.893016409333332*^9}, 3.893027182376034*^9, 3.893027336541357*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"140d7fd9-ef09-440e-be4b-3d323ff6adc5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231009-8N9NBK\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231009-8N9NBK"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905826519956622*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"8058fa3f-df34-423b-922c-4ae4116a2402"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826519967579*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"eaab4dbd-0cba-4d88-83ea-4a3674f763fe"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Model`ProcessModels`model = Model`ProcessModels`modelsP @ \"NRC\";\n\t\
Apply[And,\n\t\t{\n\t\t\tSameQ[Model`ProcessModels`pi[myContext`t] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mup,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`rhop * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[myContext`t - 1] - \
FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Parameters`xip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t - 1]) + \
FernandoDuarte`LongRunRisk`Model`Parameters`phip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t]\n\t\t\t\t\t]\
\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t] /. \
Model`ProcessModels`model[\"exogenousEq\"], \
Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t]],\n\t\t\t\
SameQ[Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mud @ Model`ProcessModels`i,\
\n\t\t\t\t\tPlus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[\
Model`ProcessModels`t - 1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) \
* FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[Model`ProcessModels`i],\n\
\t\t\t\t\t\t(FernandoDuarte`LongRunRisk`Model`Parameters`phidc[Model`\
ProcessModels`i] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 2] * FernandoDuarte`LongRunRisk`Model`Parameters`xid[Model`ProcessModels`i] \
* FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t - \
1]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`wc[Model`ProcessModels`t] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 0,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[1] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[4] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg),\n\t\t\t\t\t\t\tPlus[\n\
\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 5,\n\t\t\t\t\t\t\t\t\
\tSubtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[3] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[2] * \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 1] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`\
ProcessModels`t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tSameQ[Model`ProcessModels`pd[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][0],\n\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[1],\n\t\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[4],\n\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
Subtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][5]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\
\t\tFernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t - 1] * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[2] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t],\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[3] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\
\n\t\t\t],\n\t\t\tSameQ[Model`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondret[Model`\
ProcessModels`t, Model`ProcessModels`i, 1] - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondyield[Model`\
ProcessModels`t - 1, 1]\n\t\t\t],\n\t\t\tSameQ[\n\t\t\t\t\
(Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
/. Normal[Model`ProcessModels`model[\"endogenousEq\"]]) /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, 1] + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t, Model`ProcessModels`i - 1]) - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, Model`ProcessModels`i]\n\t\t\t]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tModel`ProcessModels`model = \
Model`ProcessModels`modelsP @ \"NRC\";\n\tApply[And,\n\t\t{\n\t\t\t\
SameQ[Model`ProcessModels`pi[myContext`t] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mup,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`rhop * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[myContext`t - 1] - \
FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Parameters`xip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t - 1]) + \
FernandoDuarte`LongRunRisk`Model`Parameters`phip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t]\n\t\t\t\t\t]\
\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t] /. \
Model`ProcessModels`model[\"exogenousEq\"], \
Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t]],\n\t\t\t\
SameQ[Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mud @ Model`ProcessModels`i,\
\n\t\t\t\t\tPlus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[\
Model`ProcessModels`t - 1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) \
* FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[Model`ProcessModels`i],\n\
\t\t\t\t\t\t(FernandoDuarte`LongRunRisk`Model`Parameters`phidc[Model`\
ProcessModels`i] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 2] * FernandoDuarte`LongRunRisk`Model`Parameters`xid[Model`ProcessModels`i] \
* FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t - \
1]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`wc[Model`ProcessModels`t] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 0,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[1] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[4] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg),\n\t\t\t\t\t\t\tPlus[\n\
\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 5,\n\t\t\t\t\t\t\t\t\
\tSubtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[3] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[2] * \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 1] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`\
ProcessModels`t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tSameQ[Model`ProcessModels`pd[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][0],\n\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[1],\n\t\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[4],\n\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
Subtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][5]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\
\t\tFernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t - 1] * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[2] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t],\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[3] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\
\n\t\t\t],\n\t\t\tSameQ[Model`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondret[Model`\
ProcessModels`t, Model`ProcessModels`i, 1] - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondyield[Model`\
ProcessModels`t - 1, 1]\n\t\t\t],\n\t\t\tSameQ[\n\t\t\t\t\
(Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
/. Normal[Model`ProcessModels`model[\"endogenousEq\"]]) /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, 1] + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t, Model`ProcessModels`i - 1]) - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, Model`ProcessModels`i]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\
\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-8N9NBK\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
     Model`ProcessModels`model = Model`ProcessModels`modelsP["NRC"]; 
      Apply[And, {ReplaceAll[
           Model`ProcessModels`pi[myContext`t], 
           Normal[
            Model`ProcessModels`model["exogenousEq"]]] === 
         FernandoDuarte`LongRunRisk`Model`Parameters`mup + 
          FernandoDuarte`LongRunRisk`Model`Parameters`rhop (-
             FernandoDuarte`LongRunRisk`Model`Parameters`mup + 
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[-1 + 
              myContext`t]) + 
          FernandoDuarte`LongRunRisk`Model`Parameters`xip 
           FernandoDuarte`LongRunRisk`Model`Shocks`eps[
            "pi"][-1 + myContext`t] + 
          FernandoDuarte`LongRunRisk`Model`Parameters`phip 
           FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][myContext`t], 
         ReplaceAll[
           Model`ProcessModels`eps["dc"][Model`ProcessModels`t], 
           Model`ProcessModels`model["exogenousEq"]] === 
         Model`ProcessModels`eps["dc"][Model`ProcessModels`t], ReplaceAll[
           Model`ProcessModels`dd[
           Model`ProcessModels`t, Model`ProcessModels`i], 
           Normal[
            Model`ProcessModels`model["exogenousEq"]]] === 
         FernandoDuarte`LongRunRisk`Model`Parameters`mud[
           Model`ProcessModels`i] + (-
             FernandoDuarte`LongRunRisk`Model`Parameters`mup + 
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[-1 + 
              Model`ProcessModels`t]) 
           FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[
            Model`ProcessModels`i] + 
          FernandoDuarte`LongRunRisk`Model`Parameters`phidc[
            Model`ProcessModels`i] 
           FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
            Model`ProcessModels`t] + 
          FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[-2 + 
             Model`ProcessModels`t] 
           FernandoDuarte`LongRunRisk`Model`Parameters`xid[
            Model`ProcessModels`i] 
           FernandoDuarte`LongRunRisk`Model`Shocks`eps[
            "pi"][-1 + Model`ProcessModels`t], ReplaceAll[
           Model`ProcessModels`wc[Model`ProcessModels`t], 
           Normal[
            Model`ProcessModels`model["endogenousEq"]]] === 
         FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[0] + 
          FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[
            1] (-FernandoDuarte`LongRunRisk`Model`Parameters`mup + 
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
             Model`ProcessModels`t]) + 
          FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[
            4] (-FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
             Model`ProcessModels`t]) + 
          FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[
            5] (-FernandoDuarte`LongRunRisk`Model`Parameters`Esg^2 - 
            FernandoDuarte`LongRunRisk`Model`Parameters`phig^2/(1 - 
            FernandoDuarte`LongRunRisk`Model`Parameters`rhog^2) + 
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
              Model`ProcessModels`t]^2) + 
          FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[3] 
           FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
            Model`ProcessModels`t] + 
          FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[2] 
           FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[-1 + 
             Model`ProcessModels`t] 
           FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
            Model`ProcessModels`t], ReplaceAll[
           Model`ProcessModels`pd[
           Model`ProcessModels`t, Model`ProcessModels`i], 
           Normal[
            Model`ProcessModels`model["endogenousEq"]]] === 
         FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
           Model`ProcessModels`i][
           0] + (-FernandoDuarte`LongRunRisk`Model`Parameters`mup + 
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
             Model`ProcessModels`t]) 
           FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
            Model`ProcessModels`i][
            1] + (-FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
             Model`ProcessModels`t]) 
           FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
            Model`ProcessModels`i][
            4] + (-FernandoDuarte`LongRunRisk`Model`Parameters`Esg^2 - 
            FernandoDuarte`LongRunRisk`Model`Parameters`phig^2/(1 - 
            FernandoDuarte`LongRunRisk`Model`Parameters`rhog^2) + 
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
              Model`ProcessModels`t]^2) 
           FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
            Model`ProcessModels`i][5] + 
          FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[-1 + 
             Model`ProcessModels`t] 
           FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
            Model`ProcessModels`i][2] 
           FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
            Model`ProcessModels`t] + 
          FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
            Model`ProcessModels`i][3] 
           FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
            Model`ProcessModels`t], ReplaceAll[
           Model`ProcessModels`bondexcret[
           Model`ProcessModels`t, Model`ProcessModels`i], 
           Normal[
            Model`ProcessModels`model["endogenousEq"]]] === 
         FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondret[
           Model`ProcessModels`t, Model`ProcessModels`i, 1] - 
          FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondyield[-1 + 
           Model`ProcessModels`t, 1], ReplaceAll[
           ReplaceAll[
            Model`ProcessModels`bondexcret[
            Model`ProcessModels`t, Model`ProcessModels`i], 
            Normal[
             Model`ProcessModels`model["endogenousEq"]]], 
           Normal[
            Model`ProcessModels`model["endogenousEq"]]] === 
         FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[-1 + 
            Model`ProcessModels`t, 1] - 
          FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[-1 + 
           Model`ProcessModels`t, Model`ProcessModels`i] + 
          FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[
           Model`ProcessModels`t, -1 + Model`ProcessModels`i]}]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-RWZJ5E\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-8R5BB3\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-PYXU62\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
FernandoDuarte`LongRunRisk`Model`Catalog`models;\n\t\
Model`ProcessModels`modelsP = FernandoDuarte`LongRunRisk`Models;\n\tTrue\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-9QO166\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-XWY8XC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-34IF7D\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-SMYVH5\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-C9IRRD\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-Y06BJ2\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-LS54ZU\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\
\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-X0148M\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-F0AJCH\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-UXOKX8\"\n]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`coefs = Apply[Alternatives,\n\t\tMap[SymbolName,\n\t\t\t\
{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t]\n\t];\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\tFlatten[\
\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
Cases[Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tContext \
@ Model`ProcessModels`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tInfinity\n\t\t\t\t\
\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-51KD31\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\tRuleDelayed[\n\
\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t\
}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-X4714J\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tSubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\
SubsetQ[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"]&\
, Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models],\n\t\t\t\t\
Map[Model`ProcessModels`modelsP[#][\"shortname\"]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ProcessModels_20231009-7HDX12\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[Function, #]&,\n\t\t\t\
\t\tMap[Head, Map[Model`ProcessModels`modelsP[#][\"stateVars\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[List, #]&,\n\t\t\t\t\tMap[Head, \
Map[Model`ProcessModels`modelsP[#][\"stateVars\"][Model`ProcessModels`t]&, \
Keys @ Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\
\t\t\t\tMap[MatchQ[1, #]&,\n\t\t\t\t\tMap[Length,\n\t\t\t\t\t\t\
Map[Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[MatchQ[\"t\", #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[Apply[SymbolName, \
Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]]],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Map[Model`ProcessModels`modelsP[#][\"stateVars\"][FernandoDuarte`\
LongRunRisk`Model`ExogenousEq`Private`t]&, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\t\
Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"]&, Keys \
@ Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"ProcessModels_20231009-OMD0EK\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[NumberQ, \
Map[Model`ProcessModels`modelsP[#][\"numStocks\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-K9FT9W\"\n]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`model = Model`ProcessModels`modelsP @ \"NRC\";\n\t\
Apply[And,\n\t\t{\n\t\t\tSameQ[Model`ProcessModels`pi[myContext`t] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mup,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`rhop * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[myContext`t - 1] - \
FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Parameters`xip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t - 1]) + \
FernandoDuarte`LongRunRisk`Model`Parameters`phip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t]\n\t\t\t\t\t]\
\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t] /. \
Model`ProcessModels`model[\"exogenousEq\"], \
Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t]],\n\t\t\t\
SameQ[Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mud @ Model`ProcessModels`i,\
\n\t\t\t\t\tPlus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[\
Model`ProcessModels`t - 1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) \
* FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[Model`ProcessModels`i],\n\
\t\t\t\t\t\t(FernandoDuarte`LongRunRisk`Model`Parameters`phidc[Model`\
ProcessModels`i] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 2] * FernandoDuarte`LongRunRisk`Model`Parameters`xid[Model`ProcessModels`i] \
* FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t - \
1]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`wc[Model`ProcessModels`t] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 0,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[1] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[4] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg),\n\t\t\t\t\t\t\tPlus[\n\
\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 5,\n\t\t\t\t\t\t\t\t\
\tSubtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[3] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[2] * \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 1] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`\
ProcessModels`t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tSameQ[Model`ProcessModels`pd[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][0],\n\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[1],\n\t\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[4],\n\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
Subtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][5]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\
\t\tFernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t - 1] * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[2] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t],\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[3] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\
\n\t\t\t],\n\t\t\tSameQ[Model`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondret[Model`\
ProcessModels`t, Model`ProcessModels`i, 1] - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondyield[Model`\
ProcessModels`t - 1, 1]\n\t\t\t],\n\t\t\tSameQ[\n\t\t\t\t\
(Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
/. Normal[Model`ProcessModels`model[\"endogenousEq\"]]) /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, 1] + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t, Model`ProcessModels`i - 1]) - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, Model`ProcessModels`i]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\
\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-8N9NBK\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.90582651997182*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"86c830ec-a380-4d46-bf28-620d3446cbb1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
     "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "no", " ", 
     "endogenous", " ", "variables"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"And", "@@", 
       RowBox[{"(", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{
            RowBox[{"{", "}"}], ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"wc", "[", "t", "]"}], "//.", 
               RowBox[{"Normal", "@", 
                RowBox[{
                 RowBox[{"modelsP", "[", "#", "]"}], "[", 
                 "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"var_Symbol", "?", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                  ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}],
              "]"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], 
        "\[IndentingNewLine]", ")"}]}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
        "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "exogenous", 
        " ", "variables", " ", "that", " ", "are", " ", "all", " ", "in", " ",
         "context", " ", 
        "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{
           "#", ",", 
            "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}],
            "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"Flatten", "@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cases", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"wc", "[", "t", "]"}], "//.", 
                 RowBox[{"Normal", "@", 
                  RowBox[{
                   RowBox[{"modelsP", "[", "#", "]"}], "[", 
                   "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"var_Symbol", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", 
                 RowBox[{"Context", "@", "var"}]}], ",", "Infinity"}], "]"}], 
              "&"}], "/@", 
             RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
        ")"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
        "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "parameters", 
        " ", "that", " ", "are", " ", "all", " ", "in", " ", "context", " ", 
        "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{
           "#", ",", "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}],
            "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"Flatten", "@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cases", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"wc", "[", "t", "]"}], "//.", 
                 RowBox[{"Normal", "@", 
                  RowBox[{
                   RowBox[{"modelsP", "[", "#", "]"}], "[", 
                   "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
                RowBox[{
                 RowBox[{"var_Symbol", "?", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                   ")"}]}], ":>", 
                 RowBox[{"Context", "@", "var"}]}], ",", "Infinity"}], "]"}], 
              "&"}], "/@", 
             RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
        ")"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
        "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "shocks", " ", 
        "that", " ", "are", " ", "all", " ", "in", " ", "context", " ", 
        "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{
           "#", ",", "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], 
           "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"Flatten", "@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cases", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"wc", "[", "t", "]"}], "//.", 
                 RowBox[{"Normal", "@", 
                  RowBox[{
                   RowBox[{"modelsP", "[", "#", "]"}], "[", 
                   "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                  "[", "__", "]"}], ":>", 
                 RowBox[{"Context", "@", "var"}]}], ",", "Infinity"}], "]"}], 
              "&"}], "/@", 
             RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
        ")"}]}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.893013644050221*^9, 3.8930136594716587`*^9}, {
   3.893013788159135*^9, 3.8930139106431017`*^9}, {3.89301401209753*^9, 
   3.893014103933299*^9}, {3.893014148442313*^9, 3.8930142719501123`*^9}, 
   3.893027186585471*^9, 3.893027342828599*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"48b7a866-608c-4752-acf2-21754b711ce9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231009-AYAKZE\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231009-AYAKZE"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905826520020553*^9},
 CellLabel->
  "During evaluation of \
In[30]:=",ExpressionUUID->"d5e2463d-6a53-4a23-8d3b-d26b16048636"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826520027645*^9},
 CellLabel->
  "During evaluation of \
In[30]:=",ExpressionUUID->"7b9047d2-f586-42b4-b355-0312a1dea3ed"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\
\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\
\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Cases[\n\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\
\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-AYAKZE\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.009000000000000001, 
   "AbsoluteTiming" -> 0.009000000000000001, "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        Apply[And, 
         Map[MatchQ[{}, #]& , 
          Map[Cases[
            ReplaceRepeated[
             Model`ProcessModels`wc[Model`ProcessModels`t], 
             Normal[
              Model`ProcessModels`modelsP[#]["endogenousEq"]]], PatternTest[
              Pattern[Model`ProcessModels`var, 
               Blank[Symbol]], MemberQ[
               Map[
               StringDrop[#, -2]& , 
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]\
, 
               SymbolName[#]]& ][
              BlankSequence[]] :> Model`ProcessModels`var, Infinity]& , 
           Keys[Model`ProcessModels`modelsP]]]], 
        Apply[And, 
         Map[
         MatchQ[#, "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"]& , 
          Flatten[
           Map[Cases[
             ReplaceRepeated[
              Model`ProcessModels`wc[Model`ProcessModels`t], 
              Normal[
               Model`ProcessModels`modelsP[#]["endogenousEq"]]], PatternTest[
               Pattern[Model`ProcessModels`var, 
                Blank[Symbol]], MemberQ[
                Map[
                StringDrop[#, -2]& , 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars], 
                SymbolName[#]]& ][
               BlankSequence[]] :> Context[Model`ProcessModels`var], 
             Infinity]& , 
            Keys[Model`ProcessModels`modelsP]]]]], 
        Apply[And, 
         Map[MatchQ[#, "FernandoDuarte`LongRunRisk`Model`Parameters`"]& , 
          Flatten[
           Map[Cases[
             ReplaceRepeated[
              Model`ProcessModels`wc[Model`ProcessModels`t], 
              Normal[
               Model`ProcessModels`modelsP[#]["endogenousEq"]]], PatternTest[
               Pattern[Model`ProcessModels`var, 
                Blank[Symbol]], MemberQ[
               FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                SymbolName[#]]& ] :> Context[Model`ProcessModels`var], 
             Infinity]& , 
            Keys[Model`ProcessModels`modelsP]]]]], 
        Apply[And, 
         Map[MatchQ[#, "FernandoDuarte`LongRunRisk`Model`Shocks`"]& , 
          Flatten[
           Map[Cases[
             ReplaceRepeated[
              Model`ProcessModels`wc[Model`ProcessModels`t], 
              Normal[
               Model`ProcessModels`modelsP[#]["endogenousEq"]]], PatternTest[
               Pattern[Model`ProcessModels`var, 
                Blank[Symbol]], MatchQ[
                SymbolName[#], "eps"]& ][
               BlankSequence[]][
               BlankSequence[]] :> Context[Model`ProcessModels`var], 
             Infinity]& , 
            Keys[Model`ProcessModels`modelsP]]]]]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-RWZJ5E\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-8R5BB3\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-PYXU62\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
FernandoDuarte`LongRunRisk`Model`Catalog`models;\n\t\
Model`ProcessModels`modelsP = FernandoDuarte`LongRunRisk`Models;\n\tTrue\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-9QO166\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-XWY8XC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-34IF7D\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-SMYVH5\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-C9IRRD\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-Y06BJ2\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-LS54ZU\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\
\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-X0148M\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-F0AJCH\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-UXOKX8\"\n]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`coefs = Apply[Alternatives,\n\t\tMap[SymbolName,\n\t\t\t\
{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t]\n\t];\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\tFlatten[\
\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
Cases[Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tContext \
@ Model`ProcessModels`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tInfinity\n\t\t\t\t\
\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-51KD31\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\tRuleDelayed[\n\
\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t\
}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-X4714J\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tSubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\
SubsetQ[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"]&\
, Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models],\n\t\t\t\t\
Map[Model`ProcessModels`modelsP[#][\"shortname\"]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ProcessModels_20231009-7HDX12\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[Function, #]&,\n\t\t\t\
\t\tMap[Head, Map[Model`ProcessModels`modelsP[#][\"stateVars\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[List, #]&,\n\t\t\t\t\tMap[Head, \
Map[Model`ProcessModels`modelsP[#][\"stateVars\"][Model`ProcessModels`t]&, \
Keys @ Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\
\t\t\t\tMap[MatchQ[1, #]&,\n\t\t\t\t\tMap[Length,\n\t\t\t\t\t\t\
Map[Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[MatchQ[\"t\", #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[Apply[SymbolName, \
Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]]],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Map[Model`ProcessModels`modelsP[#][\"stateVars\"][FernandoDuarte`\
LongRunRisk`Model`ExogenousEq`Private`t]&, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\t\
Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"]&, Keys \
@ Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"ProcessModels_20231009-OMD0EK\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[NumberQ, \
Map[Model`ProcessModels`modelsP[#][\"numStocks\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-K9FT9W\"\n]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`model = Model`ProcessModels`modelsP @ \"NRC\";\n\t\
Apply[And,\n\t\t{\n\t\t\tSameQ[Model`ProcessModels`pi[myContext`t] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mup,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`rhop * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[myContext`t - 1] - \
FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Parameters`xip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t - 1]) + \
FernandoDuarte`LongRunRisk`Model`Parameters`phip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t]\n\t\t\t\t\t]\
\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t] /. \
Model`ProcessModels`model[\"exogenousEq\"], \
Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t]],\n\t\t\t\
SameQ[Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mud @ Model`ProcessModels`i,\
\n\t\t\t\t\tPlus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[\
Model`ProcessModels`t - 1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) \
* FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[Model`ProcessModels`i],\n\
\t\t\t\t\t\t(FernandoDuarte`LongRunRisk`Model`Parameters`phidc[Model`\
ProcessModels`i] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 2] * FernandoDuarte`LongRunRisk`Model`Parameters`xid[Model`ProcessModels`i] \
* FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t - \
1]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`wc[Model`ProcessModels`t] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 0,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[1] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[4] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg),\n\t\t\t\t\t\t\tPlus[\n\
\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 5,\n\t\t\t\t\t\t\t\t\
\tSubtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[3] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[2] * \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 1] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`\
ProcessModels`t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tSameQ[Model`ProcessModels`pd[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][0],\n\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[1],\n\t\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[4],\n\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
Subtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][5]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\
\t\tFernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t - 1] * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[2] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t],\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[3] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\
\n\t\t\t],\n\t\t\tSameQ[Model`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondret[Model`\
ProcessModels`t, Model`ProcessModels`i, 1] - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondyield[Model`\
ProcessModels`t - 1, 1]\n\t\t\t],\n\t\t\tSameQ[\n\t\t\t\t\
(Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
/. Normal[Model`ProcessModels`model[\"endogenousEq\"]]) /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, 1] + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t, Model`ProcessModels`i - 1]) - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, Model`ProcessModels`i]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\
\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-8N9NBK\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Cases[\n\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\
\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-AYAKZE\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826520038151*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"7494aecf-8b0c-4bb9-a890-03139f422197"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
     "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "no", " ", 
     "endogenous", " ", "variables"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"And", "@@", 
       RowBox[{"(", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{
            RowBox[{"{", "}"}], ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"bondexcret", "[", 
                RowBox[{"t", ",", "i"}], "]"}], "//.", 
               RowBox[{"Normal", "@", 
                RowBox[{
                 RowBox[{"modelsP", "[", "#", "]"}], "[", 
                 "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"var_Symbol", "?", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                  ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}],
              "]"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], 
        "\[IndentingNewLine]", ")"}]}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
        "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "exogenous", 
        " ", "variables", " ", "that", " ", "are", " ", "all", " ", "in", " ",
         "context", " ", 
        "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{
           "#", ",", 
            "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}],
            "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"Flatten", "@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cases", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"bondexcret", "[", 
                  RowBox[{"t", ",", "i"}], "]"}], "//.", 
                 RowBox[{"Normal", "@", 
                  RowBox[{
                   RowBox[{"modelsP", "[", "#", "]"}], "[", 
                   "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"var_Symbol", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", 
                 RowBox[{"Context", "@", "var"}]}], ",", "Infinity"}], "]"}], 
              "&"}], "/@", 
             RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
        ")"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
        "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "parameters", 
        " ", "that", " ", "are", " ", "all", " ", "in", " ", "context", " ", 
        "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{
           "#", ",", "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}],
            "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"Flatten", "@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cases", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"bondexcret", "[", 
                  RowBox[{"t", ",", "i"}], "]"}], "//.", 
                 RowBox[{"Normal", "@", 
                  RowBox[{
                   RowBox[{"modelsP", "[", "#", "]"}], "[", 
                   "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
                RowBox[{
                 RowBox[{"var_Symbol", "?", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                   ")"}]}], ":>", 
                 RowBox[{"Context", "@", "var"}]}], ",", "Infinity"}], "]"}], 
              "&"}], "/@", 
             RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
        ")"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
        "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "shocks", " ", 
        "that", " ", "are", " ", "all", " ", "in", " ", "context", " ", 
        "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{
           "#", ",", "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], 
           "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"Flatten", "@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cases", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"bondexcret", "[", 
                  RowBox[{"t", ",", "i"}], "]"}], "//.", 
                 RowBox[{"Normal", "@", 
                  RowBox[{
                   RowBox[{"modelsP", "[", "#", "]"}], "[", 
                   "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                  "[", "__", "]"}], ":>", 
                 RowBox[{"Context", "@", "var"}]}], ",", "Infinity"}], "]"}], 
              "&"}], "/@", 
             RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
        ")"}]}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.893013644050221*^9, 3.8930136594716587`*^9}, {
   3.893013788159135*^9, 3.8930139106431017`*^9}, {3.89301401209753*^9, 
   3.893014103933299*^9}, {3.893014148442313*^9, 3.893014235255294*^9}, 
   3.893027190207966*^9, 3.8930273500561934`*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"3974f54a-f4f6-42cb-a52a-c3f69fc48e4c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231009-USIQ90\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231009-USIQ90"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9058265201070337`*^9},
 CellLabel->
  "During evaluation of \
In[31]:=",ExpressionUUID->"32f37906-0a79-4c91-87d2-d865bfee0302"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826520120625*^9},
 CellLabel->
  "During evaluation of \
In[31]:=",ExpressionUUID->"25edf3bb-dd78-4409-81c9-1cdd5bcad3b7"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\
\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
//. Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
//. Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\
\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\
\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\
\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Cases[\n\t\t\t\t\t\t\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
//. Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\
\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\
\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\
\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-USIQ90\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.032, "AbsoluteTiming" -> 0.032, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        Apply[And, 
         Map[MatchQ[{}, #]& , 
          Map[Cases[
            ReplaceRepeated[
             Model`ProcessModels`bondexcret[
             Model`ProcessModels`t, Model`ProcessModels`i], 
             Normal[
              Model`ProcessModels`modelsP[#]["endogenousEq"]]], PatternTest[
              Pattern[Model`ProcessModels`var, 
               Blank[Symbol]], MemberQ[
               Map[
               StringDrop[#, -2]& , 
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]\
, 
               SymbolName[#]]& ][
              BlankSequence[]] :> Model`ProcessModels`var, Infinity]& , 
           Keys[Model`ProcessModels`modelsP]]]], 
        Apply[And, 
         Map[
         MatchQ[#, "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"]& , 
          Flatten[
           Map[Cases[
             ReplaceRepeated[
              Model`ProcessModels`bondexcret[
              Model`ProcessModels`t, Model`ProcessModels`i], 
              Normal[
               Model`ProcessModels`modelsP[#]["endogenousEq"]]], PatternTest[
               Pattern[Model`ProcessModels`var, 
                Blank[Symbol]], MemberQ[
                Map[
                StringDrop[#, -2]& , 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars], 
                SymbolName[#]]& ][
               BlankSequence[]] :> Context[Model`ProcessModels`var], 
             Infinity]& , 
            Keys[Model`ProcessModels`modelsP]]]]], 
        Apply[And, 
         Map[MatchQ[#, "FernandoDuarte`LongRunRisk`Model`Parameters`"]& , 
          Flatten[
           Map[Cases[
             ReplaceRepeated[
              Model`ProcessModels`bondexcret[
              Model`ProcessModels`t, Model`ProcessModels`i], 
              Normal[
               Model`ProcessModels`modelsP[#]["endogenousEq"]]], PatternTest[
               Pattern[Model`ProcessModels`var, 
                Blank[Symbol]], MemberQ[
               FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                SymbolName[#]]& ] :> Context[Model`ProcessModels`var], 
             Infinity]& , 
            Keys[Model`ProcessModels`modelsP]]]]], 
        Apply[And, 
         Map[MatchQ[#, "FernandoDuarte`LongRunRisk`Model`Shocks`"]& , 
          Flatten[
           Map[Cases[
             ReplaceRepeated[
              Model`ProcessModels`bondexcret[
              Model`ProcessModels`t, Model`ProcessModels`i], 
              Normal[
               Model`ProcessModels`modelsP[#]["endogenousEq"]]], PatternTest[
               Pattern[Model`ProcessModels`var, 
                Blank[Symbol]], MatchQ[
                SymbolName[#], "eps"]& ][
               BlankSequence[]][
               BlankSequence[]] :> Context[Model`ProcessModels`var], 
             Infinity]& , 
            Keys[Model`ProcessModels`modelsP]]]]]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-RWZJ5E\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-8R5BB3\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-PYXU62\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
FernandoDuarte`LongRunRisk`Model`Catalog`models;\n\t\
Model`ProcessModels`modelsP = FernandoDuarte`LongRunRisk`Models;\n\tTrue\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-9QO166\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-XWY8XC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-34IF7D\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-SMYVH5\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-C9IRRD\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-Y06BJ2\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-LS54ZU\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\
\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-X0148M\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-F0AJCH\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-UXOKX8\"\n]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`coefs = Apply[Alternatives,\n\t\tMap[SymbolName,\n\t\t\t\
{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t]\n\t];\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\tFlatten[\
\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
Cases[Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tContext \
@ Model`ProcessModels`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tInfinity\n\t\t\t\t\
\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-51KD31\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\tRuleDelayed[\n\
\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t\
}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-X4714J\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tSubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\
SubsetQ[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"]&\
, Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models],\n\t\t\t\t\
Map[Model`ProcessModels`modelsP[#][\"shortname\"]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ProcessModels_20231009-7HDX12\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[Function, #]&,\n\t\t\t\
\t\tMap[Head, Map[Model`ProcessModels`modelsP[#][\"stateVars\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[List, #]&,\n\t\t\t\t\tMap[Head, \
Map[Model`ProcessModels`modelsP[#][\"stateVars\"][Model`ProcessModels`t]&, \
Keys @ Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\
\t\t\t\tMap[MatchQ[1, #]&,\n\t\t\t\t\tMap[Length,\n\t\t\t\t\t\t\
Map[Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[MatchQ[\"t\", #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[Apply[SymbolName, \
Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]]],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Map[Model`ProcessModels`modelsP[#][\"stateVars\"][FernandoDuarte`\
LongRunRisk`Model`ExogenousEq`Private`t]&, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\t\
Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"]&, Keys \
@ Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"ProcessModels_20231009-OMD0EK\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[NumberQ, \
Map[Model`ProcessModels`modelsP[#][\"numStocks\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-K9FT9W\"\n]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`model = Model`ProcessModels`modelsP @ \"NRC\";\n\t\
Apply[And,\n\t\t{\n\t\t\tSameQ[Model`ProcessModels`pi[myContext`t] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mup,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`rhop * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[myContext`t - 1] - \
FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Parameters`xip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t - 1]) + \
FernandoDuarte`LongRunRisk`Model`Parameters`phip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t]\n\t\t\t\t\t]\
\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t] /. \
Model`ProcessModels`model[\"exogenousEq\"], \
Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t]],\n\t\t\t\
SameQ[Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mud @ Model`ProcessModels`i,\
\n\t\t\t\t\tPlus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[\
Model`ProcessModels`t - 1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) \
* FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[Model`ProcessModels`i],\n\
\t\t\t\t\t\t(FernandoDuarte`LongRunRisk`Model`Parameters`phidc[Model`\
ProcessModels`i] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 2] * FernandoDuarte`LongRunRisk`Model`Parameters`xid[Model`ProcessModels`i] \
* FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t - \
1]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`wc[Model`ProcessModels`t] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 0,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[1] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[4] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg),\n\t\t\t\t\t\t\tPlus[\n\
\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 5,\n\t\t\t\t\t\t\t\t\
\tSubtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[3] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[2] * \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 1] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`\
ProcessModels`t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tSameQ[Model`ProcessModels`pd[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][0],\n\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[1],\n\t\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[4],\n\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
Subtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][5]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\
\t\tFernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t - 1] * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[2] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t],\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[3] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\
\n\t\t\t],\n\t\t\tSameQ[Model`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondret[Model`\
ProcessModels`t, Model`ProcessModels`i, 1] - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondyield[Model`\
ProcessModels`t - 1, 1]\n\t\t\t],\n\t\t\tSameQ[\n\t\t\t\t\
(Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
/. Normal[Model`ProcessModels`model[\"endogenousEq\"]]) /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, 1] + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t, Model`ProcessModels`i - 1]) - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, Model`ProcessModels`i]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\
\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-8N9NBK\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Cases[\n\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\
\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-AYAKZE\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
//. Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
//. Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\
\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\
\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\
\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-USIQ90\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.90582652012554*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"6b9c427c-28c4-4825-aed0-3d05237dedf5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
   RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AllTrue", "[", 
        RowBox[{
         RowBox[{"Head", "/@", 
          RowBox[{"(", 
           RowBox[{"Keys", "@", 
            RowBox[{
             RowBox[{"modelsP", "[", "\"\<BKY\>\"", "]"}], "[", 
             "\"\<exogenousEq\>\"", "]"}]}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{"#", ",", "PatternTest"}], "]"}], "&"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"AllTrue", "[", 
        RowBox[{
         RowBox[{"Head", "/@", 
          RowBox[{"(", 
           RowBox[{"Keys", "@", 
            RowBox[{
             RowBox[{"modelsP", "[", "\"\<BKY\>\"", "]"}], "[", 
             "\"\<endogenousEq\>\"", "]"}]}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{"#", ",", "PatternTest"}], "]"}], "&"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
    RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.891157496969887*^9, 3.891157544107942*^9}, {
   3.8929829100824947`*^9, 3.89298291390197*^9}, {3.892982949507678*^9, 
   3.8929829531624527`*^9}, {3.893016267044709*^9, 3.8930162995723467`*^9}, {
   3.893027194352297*^9, 3.893027208252322*^9}, 3.8930273522329617`*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"41b1f503-97ce-4425-bb64-d6b2f0385419"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231009-01ILTG\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231009-01ILTG"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9058265201653748`*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"ecd4a083-d461-49ac-904b-7bf312409138"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826520177443*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"fbe844d4-2324-4e4d-bad5-3eb6c42bdeeb"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\tAllTrue[Map[Head, Keys @ \
Model`ProcessModels`modelsP[\"BKY\"][\"exogenousEq\"]],\n\t\t\t\tMatchQ[#, \
PatternTest]&\n\t\t\t],\n\t\t\tAllTrue[Map[Head, Keys @ \
Model`ProcessModels`modelsP[\"BKY\"][\"endogenousEq\"]],\n\t\t\t\tMatchQ[#, \
PatternTest]&\n\t\t\t]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tAllTrue[Map[Head, Keys @ \
Model`ProcessModels`modelsP[\"BKY\"][\"exogenousEq\"]],\n\t\t\t\tMatchQ[#, \
PatternTest]&\n\t\t\t],\n\t\t\tAllTrue[Map[Head, Keys @ \
Model`ProcessModels`modelsP[\"BKY\"][\"endogenousEq\"]],\n\t\t\t\tMatchQ[#, \
PatternTest]&\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-01ILTG\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        AllTrue[
         Map[Head, 
          Keys[
           Model`ProcessModels`modelsP["BKY"]["exogenousEq"]]], 
         MatchQ[#, PatternTest]& ], 
        AllTrue[
         Map[Head, 
          Keys[
           Model`ProcessModels`modelsP["BKY"]["endogenousEq"]]], 
         MatchQ[#, PatternTest]& ]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-RWZJ5E\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-8R5BB3\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-PYXU62\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
FernandoDuarte`LongRunRisk`Model`Catalog`models;\n\t\
Model`ProcessModels`modelsP = FernandoDuarte`LongRunRisk`Models;\n\tTrue\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-9QO166\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-XWY8XC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-34IF7D\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-SMYVH5\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-C9IRRD\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-Y06BJ2\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-LS54ZU\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\
\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-X0148M\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-F0AJCH\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-UXOKX8\"\n]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`coefs = Apply[Alternatives,\n\t\tMap[SymbolName,\n\t\t\t\
{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t]\n\t];\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\tFlatten[\
\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
Cases[Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tContext \
@ Model`ProcessModels`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tInfinity\n\t\t\t\t\
\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-51KD31\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\tRuleDelayed[\n\
\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t\
}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-X4714J\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tSubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\
SubsetQ[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"]&\
, Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models],\n\t\t\t\t\
Map[Model`ProcessModels`modelsP[#][\"shortname\"]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ProcessModels_20231009-7HDX12\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[Function, #]&,\n\t\t\t\
\t\tMap[Head, Map[Model`ProcessModels`modelsP[#][\"stateVars\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[List, #]&,\n\t\t\t\t\tMap[Head, \
Map[Model`ProcessModels`modelsP[#][\"stateVars\"][Model`ProcessModels`t]&, \
Keys @ Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\
\t\t\t\tMap[MatchQ[1, #]&,\n\t\t\t\t\tMap[Length,\n\t\t\t\t\t\t\
Map[Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[MatchQ[\"t\", #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[Apply[SymbolName, \
Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]]],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Map[Model`ProcessModels`modelsP[#][\"stateVars\"][FernandoDuarte`\
LongRunRisk`Model`ExogenousEq`Private`t]&, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\t\
Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"]&, Keys \
@ Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"ProcessModels_20231009-OMD0EK\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[NumberQ, \
Map[Model`ProcessModels`modelsP[#][\"numStocks\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-K9FT9W\"\n]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`model = Model`ProcessModels`modelsP @ \"NRC\";\n\t\
Apply[And,\n\t\t{\n\t\t\tSameQ[Model`ProcessModels`pi[myContext`t] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mup,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`rhop * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[myContext`t - 1] - \
FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Parameters`xip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t - 1]) + \
FernandoDuarte`LongRunRisk`Model`Parameters`phip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t]\n\t\t\t\t\t]\
\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t] /. \
Model`ProcessModels`model[\"exogenousEq\"], \
Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t]],\n\t\t\t\
SameQ[Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mud @ Model`ProcessModels`i,\
\n\t\t\t\t\tPlus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[\
Model`ProcessModels`t - 1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) \
* FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[Model`ProcessModels`i],\n\
\t\t\t\t\t\t(FernandoDuarte`LongRunRisk`Model`Parameters`phidc[Model`\
ProcessModels`i] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 2] * FernandoDuarte`LongRunRisk`Model`Parameters`xid[Model`ProcessModels`i] \
* FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t - \
1]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`wc[Model`ProcessModels`t] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 0,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[1] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[4] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg),\n\t\t\t\t\t\t\tPlus[\n\
\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 5,\n\t\t\t\t\t\t\t\t\
\tSubtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[3] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[2] * \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 1] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`\
ProcessModels`t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tSameQ[Model`ProcessModels`pd[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][0],\n\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[1],\n\t\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[4],\n\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
Subtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][5]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\
\t\tFernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t - 1] * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[2] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t],\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[3] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\
\n\t\t\t],\n\t\t\tSameQ[Model`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondret[Model`\
ProcessModels`t, Model`ProcessModels`i, 1] - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondyield[Model`\
ProcessModels`t - 1, 1]\n\t\t\t],\n\t\t\tSameQ[\n\t\t\t\t\
(Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
/. Normal[Model`ProcessModels`model[\"endogenousEq\"]]) /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, 1] + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t, Model`ProcessModels`i - 1]) - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, Model`ProcessModels`i]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\
\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-8N9NBK\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Cases[\n\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\
\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-AYAKZE\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
//. Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
//. Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\
\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\
\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\
\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-USIQ90\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tAllTrue[Map[Head, Keys @ \
Model`ProcessModels`modelsP[\"BKY\"][\"exogenousEq\"]],\n\t\t\t\tMatchQ[#, \
PatternTest]&\n\t\t\t],\n\t\t\tAllTrue[Map[Head, Keys @ \
Model`ProcessModels`modelsP[\"BKY\"][\"endogenousEq\"]],\n\t\t\t\tMatchQ[#, \
PatternTest]&\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-01ILTG\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826520182096*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"b5b3e7e4-46d8-4236-9e5a-de7d71753886"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "exogenousEq", " ", "and", " ", "endogenousEq", " ", "evaluate", " ", 
     "expressions", " ", "that", " ", "are", " ", "exogenous", " ", "or", " ",
      "endogenous", " ", "variables"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{"Not", "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Head", "[", 
               RowBox[{"dc", "[", "t", "]"}], "]"}], "===", 
              RowBox[{"Head", "[", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"dc", "[", "t", "]"}], "/.", 
                 RowBox[{"Normal", "[", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<exogenousEq\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<endogenousEq\>\"", "]"}]}], "]"}], "]"}]}], ")"}], 
               "]"}]}], ")"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{"Not", "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Head", "[", 
               RowBox[{"dd", "[", 
                RowBox[{"t", ",", "i"}], "]"}], "]"}], "===", 
              RowBox[{"Head", "[", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"dd", "[", 
                  RowBox[{"t", ",", "i"}], "]"}], "/.", 
                 RowBox[{"Normal", "[", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<exogenousEq\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<endogenousEq\>\"", "]"}]}], "]"}], "]"}]}], ")"}], 
               "]"}]}], ")"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{"Not", "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Head", "[", 
               RowBox[{"wc", "[", "t", "]"}], "]"}], "===", 
              RowBox[{"Head", "[", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"wc", "[", "t", "]"}], "/.", 
                 RowBox[{"Normal", "[", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<exogenousEq\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<endogenousEq\>\"", "]"}]}], "]"}], "]"}]}], ")"}], 
               "]"}]}], ")"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{"Not", "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Head", "[", 
               RowBox[{"sdf", "[", "t", "]"}], "]"}], "===", 
              RowBox[{"Head", "[", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"sdf", "[", "t", "]"}], "/.", 
                 RowBox[{"Normal", "[", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<exogenousEq\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<endogenousEq\>\"", "]"}]}], "]"}], "]"}]}], ")"}], 
               "]"}]}], ")"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{"Not", "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Head", "[", 
               RowBox[{"bondyield", "[", "t", "]"}], "]"}], "===", 
              RowBox[{"Head", "[", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"bondyield", "[", "t", "]"}], "/.", 
                 RowBox[{"Normal", "[", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<exogenousEq\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<endogenousEq\>\"", "]"}]}], "]"}], "]"}]}], ")"}], 
               "]"}]}], ")"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}]}], 
     "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.89301559217407*^9, 3.893015822830755*^9}, {
   3.89301600860408*^9, 3.893016031968368*^9}, 3.893016149396062*^9, 
   3.89302721181734*^9, 3.893027356773507*^9, {3.893144986859014*^9, 
   3.8931449876901093`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"30c4d933-59ab-4c6f-ac91-fbe51a928bb5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231009-WT9V0J\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231009-WT9V0J"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905826520226046*^9},
 CellLabel->
  "During evaluation of \
In[33]:=",ExpressionUUID->"cbc6b7a1-fd31-42cf-afa3-49407697ce89"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.9058265202324753`*^9},
 CellLabel->
  "During evaluation of \
In[33]:=",ExpressionUUID->"a13efab8-1faa-4548-bc4a-f4fb346b1db9"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\
\t\t\t\tFunction[\n\t\t\t\t\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ \
Model`ProcessModels`dc @ Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\
\t\t\t\t\t\tReplaceAll[\n\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`dc @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\t\t\tNormal @ \
Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ \
Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i],\n\t\t\t\
\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i],\n\t\t\t\
\t\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`wc @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`wc @ Model`ProcessModels`t,\n\t\t\t\t\
\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`sdf @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`sdf @ Model`ProcessModels`t,\n\t\t\t\t\
\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`bondyield @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`bondyield @ Model`ProcessModels`t,\n\t\
\t\t\t\t\t\t\t\t\tNormal @ \
Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[Not,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tSameQ[\n\t\t\t\t\t\t\t\
\tHead @ Model`ProcessModels`dc @ Model`ProcessModels`t,\n\t\t\t\t\t\t\t\t\
Head[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`dc @ Model`ProcessModels`t,\n\t\t\t\t\t\t\t\t\t\tNormal @ \
Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ \
Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i],\n\t\t\t\
\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i],\n\t\t\t\
\t\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`wc @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`wc @ Model`ProcessModels`t,\n\t\t\t\t\
\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`sdf @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`sdf @ Model`ProcessModels`t,\n\t\t\t\t\
\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`bondyield @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`bondyield @ Model`ProcessModels`t,\n\t\
\t\t\t\t\t\t\t\t\tNormal @ \
Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-WT9V0J\"\n]\n\n",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.002, "AbsoluteTiming" -> 0.002, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        Apply[And, 
         Map[Not, 
          Map[Head[
             Model`ProcessModels`dc[Model`ProcessModels`t]] === Head[
             ReplaceAll[
              Model`ProcessModels`dc[Model`ProcessModels`t], 
              Normal[
               Join[
                Model`ProcessModels`modelsP[#]["exogenousEq"], 
                Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
           Keys[Model`ProcessModels`modelsP]]]], 
        Apply[And, 
         Map[Not, 
          Map[Head[
             Model`ProcessModels`dd[
             Model`ProcessModels`t, Model`ProcessModels`i]] === Head[
             ReplaceAll[
              Model`ProcessModels`dd[
              Model`ProcessModels`t, Model`ProcessModels`i], 
              Normal[
               Join[
                Model`ProcessModels`modelsP[#]["exogenousEq"], 
                Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
           Keys[Model`ProcessModels`modelsP]]]], 
        Apply[And, 
         Map[Not, 
          Map[Head[
             Model`ProcessModels`wc[Model`ProcessModels`t]] === Head[
             ReplaceAll[
              Model`ProcessModels`wc[Model`ProcessModels`t], 
              Normal[
               Join[
                Model`ProcessModels`modelsP[#]["exogenousEq"], 
                Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
           Keys[Model`ProcessModels`modelsP]]]], 
        Apply[And, 
         Map[Not, 
          Map[Head[
             Model`ProcessModels`sdf[Model`ProcessModels`t]] === Head[
             ReplaceAll[
              Model`ProcessModels`sdf[Model`ProcessModels`t], 
              Normal[
               Join[
                Model`ProcessModels`modelsP[#]["exogenousEq"], 
                Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
           Keys[Model`ProcessModels`modelsP]]]], 
        Apply[And, 
         Map[Not, 
          Map[Head[
             Model`ProcessModels`bondyield[Model`ProcessModels`t]] === Head[
             ReplaceAll[
              Model`ProcessModels`bondyield[Model`ProcessModels`t], 
              Normal[
               Join[
                Model`ProcessModels`modelsP[#]["exogenousEq"], 
                Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
           Keys[Model`ProcessModels`modelsP]]]]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-RWZJ5E\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-8R5BB3\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-PYXU62\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
FernandoDuarte`LongRunRisk`Model`Catalog`models;\n\t\
Model`ProcessModels`modelsP = FernandoDuarte`LongRunRisk`Models;\n\tTrue\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-9QO166\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-XWY8XC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-34IF7D\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-SMYVH5\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-C9IRRD\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-Y06BJ2\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-LS54ZU\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\
\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-X0148M\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-F0AJCH\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-UXOKX8\"\n]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`coefs = Apply[Alternatives,\n\t\tMap[SymbolName,\n\t\t\t\
{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t]\n\t];\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\tFlatten[\
\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
Cases[Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tContext \
@ Model`ProcessModels`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tInfinity\n\t\t\t\t\
\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-51KD31\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\tRuleDelayed[\n\
\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t\
}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-X4714J\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tSubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\
SubsetQ[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"]&\
, Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models],\n\t\t\t\t\
Map[Model`ProcessModels`modelsP[#][\"shortname\"]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ProcessModels_20231009-7HDX12\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[Function, #]&,\n\t\t\t\
\t\tMap[Head, Map[Model`ProcessModels`modelsP[#][\"stateVars\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[List, #]&,\n\t\t\t\t\tMap[Head, \
Map[Model`ProcessModels`modelsP[#][\"stateVars\"][Model`ProcessModels`t]&, \
Keys @ Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\
\t\t\t\tMap[MatchQ[1, #]&,\n\t\t\t\t\tMap[Length,\n\t\t\t\t\t\t\
Map[Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[MatchQ[\"t\", #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[Apply[SymbolName, \
Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]]],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Map[Model`ProcessModels`modelsP[#][\"stateVars\"][FernandoDuarte`\
LongRunRisk`Model`ExogenousEq`Private`t]&, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\t\
Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"]&, Keys \
@ Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"ProcessModels_20231009-OMD0EK\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[NumberQ, \
Map[Model`ProcessModels`modelsP[#][\"numStocks\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-K9FT9W\"\n]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`model = Model`ProcessModels`modelsP @ \"NRC\";\n\t\
Apply[And,\n\t\t{\n\t\t\tSameQ[Model`ProcessModels`pi[myContext`t] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mup,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`rhop * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[myContext`t - 1] - \
FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Parameters`xip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t - 1]) + \
FernandoDuarte`LongRunRisk`Model`Parameters`phip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t]\n\t\t\t\t\t]\
\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t] /. \
Model`ProcessModels`model[\"exogenousEq\"], \
Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t]],\n\t\t\t\
SameQ[Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mud @ Model`ProcessModels`i,\
\n\t\t\t\t\tPlus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[\
Model`ProcessModels`t - 1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) \
* FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[Model`ProcessModels`i],\n\
\t\t\t\t\t\t(FernandoDuarte`LongRunRisk`Model`Parameters`phidc[Model`\
ProcessModels`i] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 2] * FernandoDuarte`LongRunRisk`Model`Parameters`xid[Model`ProcessModels`i] \
* FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t - \
1]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`wc[Model`ProcessModels`t] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 0,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[1] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[4] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg),\n\t\t\t\t\t\t\tPlus[\n\
\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 5,\n\t\t\t\t\t\t\t\t\
\tSubtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[3] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[2] * \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 1] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`\
ProcessModels`t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tSameQ[Model`ProcessModels`pd[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][0],\n\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[1],\n\t\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[4],\n\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
Subtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][5]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\
\t\tFernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t - 1] * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[2] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t],\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[3] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\
\n\t\t\t],\n\t\t\tSameQ[Model`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondret[Model`\
ProcessModels`t, Model`ProcessModels`i, 1] - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondyield[Model`\
ProcessModels`t - 1, 1]\n\t\t\t],\n\t\t\tSameQ[\n\t\t\t\t\
(Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
/. Normal[Model`ProcessModels`model[\"endogenousEq\"]]) /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, 1] + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t, Model`ProcessModels`i - 1]) - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, Model`ProcessModels`i]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\
\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-8N9NBK\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Cases[\n\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\
\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-AYAKZE\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
//. Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
//. Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\
\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\
\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\
\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-USIQ90\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tAllTrue[Map[Head, Keys @ \
Model`ProcessModels`modelsP[\"BKY\"][\"exogenousEq\"]],\n\t\t\t\tMatchQ[#, \
PatternTest]&\n\t\t\t],\n\t\t\tAllTrue[Map[Head, Keys @ \
Model`ProcessModels`modelsP[\"BKY\"][\"endogenousEq\"]],\n\t\t\t\tMatchQ[#, \
PatternTest]&\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-01ILTG\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\
\t\t\tFunction[\n\t\t\t\t\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ \
Model`ProcessModels`dc @ Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\
\t\t\t\t\t\tReplaceAll[\n\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`dc @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\t\t\tNormal @ \
Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ \
Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i],\n\t\t\t\
\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i],\n\t\t\t\
\t\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`wc @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`wc @ Model`ProcessModels`t,\n\t\t\t\t\
\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`sdf @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`sdf @ Model`ProcessModels`t,\n\t\t\t\t\
\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`bondyield @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`bondyield @ Model`ProcessModels`t,\n\t\
\t\t\t\t\t\t\t\t\tNormal @ \
Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-WT9V0J\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.9058265202452717`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"628f8c9e-5698-4875-bba7-c9ba816acc5d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "exogenousEq", " ", "and", " ", "endogenousEq", " ", "do", " ", "not", 
     " ", "evaluate", " ", "expressions", " ", "that", " ", "are", " ", 
     "neither", " ", "exogenous", " ", "nor", " ", "endogenous", " ", 
     "variables"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Head", "[", 
            RowBox[{"notVar", "[", "t", "]"}], "]"}], "===", 
           RowBox[{"Head", "[", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"notVar", "[", "t", "]"}], "/.", 
              RowBox[{"Normal", "[", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<exogenousEq\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<endogenousEq\>\"", "]"}]}], "]"}], "]"}]}], ")"}], 
            "]"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], 
     "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.893015849081943*^9, 3.8930158504172277`*^9}, 
   3.893016091706109*^9, 3.893027215640544*^9, 3.893027359790337*^9},
 CellLabel->"In[34]:=",ExpressionUUID->"5c1e30d2-8195-4e5b-9a64-378acb156acd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231009-CET43T\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231009-CET43T"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905826520302061*^9},
 CellLabel->
  "During evaluation of \
In[34]:=",ExpressionUUID->"9fb2f89f-a578-47ad-8d26-b6551d6804df"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826520314562*^9},
 CellLabel->
  "During evaluation of \
In[34]:=",ExpressionUUID->"931495f3-e6e3-4233-807c-bb6134c96637"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\
\t\t\t\t\tSameQ[Head @ Model`ProcessModels`notVar @ Model`ProcessModels`t,\n\t\
\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\tReplaceAll[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`notVar @ Model`ProcessModels`t,\n\t\t\t\t\t\t\t\t\tNormal \
@ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\
\t\t\t\tFunction[\n\t\t\t\t\t\tSameQ[Head @ Model`ProcessModels`notVar @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\tReplaceAll[\n\t\t\
\t\t\t\t\t\t\tModel`ProcessModels`notVar @ Model`ProcessModels`t,\n\t\t\t\t\t\
\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-CET43T\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        Apply[And, 
         Map[Head[
            Model`ProcessModels`notVar[Model`ProcessModels`t]] === Head[
            ReplaceAll[
             Model`ProcessModels`notVar[Model`ProcessModels`t], 
             Normal[
              Join[
               Model`ProcessModels`modelsP[#]["exogenousEq"], 
               Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
          Keys[Model`ProcessModels`modelsP]]]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-RWZJ5E\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-8R5BB3\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-PYXU62\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
FernandoDuarte`LongRunRisk`Model`Catalog`models;\n\t\
Model`ProcessModels`modelsP = FernandoDuarte`LongRunRisk`Models;\n\tTrue\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-9QO166\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-XWY8XC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-34IF7D\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-SMYVH5\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-C9IRRD\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-Y06BJ2\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-LS54ZU\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\
\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-X0148M\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-F0AJCH\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-UXOKX8\"\n]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`coefs = Apply[Alternatives,\n\t\tMap[SymbolName,\n\t\t\t\
{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t]\n\t];\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\tFlatten[\
\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
Cases[Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tContext \
@ Model`ProcessModels`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tInfinity\n\t\t\t\t\
\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-51KD31\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\tRuleDelayed[\n\
\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t\
}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-X4714J\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tSubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\
SubsetQ[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"]&\
, Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models],\n\t\t\t\t\
Map[Model`ProcessModels`modelsP[#][\"shortname\"]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ProcessModels_20231009-7HDX12\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[Function, #]&,\n\t\t\t\
\t\tMap[Head, Map[Model`ProcessModels`modelsP[#][\"stateVars\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[List, #]&,\n\t\t\t\t\tMap[Head, \
Map[Model`ProcessModels`modelsP[#][\"stateVars\"][Model`ProcessModels`t]&, \
Keys @ Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\
\t\t\t\tMap[MatchQ[1, #]&,\n\t\t\t\t\tMap[Length,\n\t\t\t\t\t\t\
Map[Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[MatchQ[\"t\", #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[Apply[SymbolName, \
Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]]],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Map[Model`ProcessModels`modelsP[#][\"stateVars\"][FernandoDuarte`\
LongRunRisk`Model`ExogenousEq`Private`t]&, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\t\
Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"]&, Keys \
@ Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"ProcessModels_20231009-OMD0EK\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[NumberQ, \
Map[Model`ProcessModels`modelsP[#][\"numStocks\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-K9FT9W\"\n]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`model = Model`ProcessModels`modelsP @ \"NRC\";\n\t\
Apply[And,\n\t\t{\n\t\t\tSameQ[Model`ProcessModels`pi[myContext`t] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mup,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`rhop * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[myContext`t - 1] - \
FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Parameters`xip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t - 1]) + \
FernandoDuarte`LongRunRisk`Model`Parameters`phip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t]\n\t\t\t\t\t]\
\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t] /. \
Model`ProcessModels`model[\"exogenousEq\"], \
Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t]],\n\t\t\t\
SameQ[Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mud @ Model`ProcessModels`i,\
\n\t\t\t\t\tPlus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[\
Model`ProcessModels`t - 1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) \
* FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[Model`ProcessModels`i],\n\
\t\t\t\t\t\t(FernandoDuarte`LongRunRisk`Model`Parameters`phidc[Model`\
ProcessModels`i] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 2] * FernandoDuarte`LongRunRisk`Model`Parameters`xid[Model`ProcessModels`i] \
* FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t - \
1]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`wc[Model`ProcessModels`t] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 0,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[1] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[4] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg),\n\t\t\t\t\t\t\tPlus[\n\
\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 5,\n\t\t\t\t\t\t\t\t\
\tSubtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[3] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[2] * \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 1] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`\
ProcessModels`t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tSameQ[Model`ProcessModels`pd[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][0],\n\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[1],\n\t\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[4],\n\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
Subtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][5]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\
\t\tFernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t - 1] * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[2] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t],\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[3] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\
\n\t\t\t],\n\t\t\tSameQ[Model`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondret[Model`\
ProcessModels`t, Model`ProcessModels`i, 1] - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondyield[Model`\
ProcessModels`t - 1, 1]\n\t\t\t],\n\t\t\tSameQ[\n\t\t\t\t\
(Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
/. Normal[Model`ProcessModels`model[\"endogenousEq\"]]) /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, 1] + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t, Model`ProcessModels`i - 1]) - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, Model`ProcessModels`i]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\
\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-8N9NBK\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Cases[\n\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\
\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-AYAKZE\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
//. Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
//. Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\
\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\
\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\
\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-USIQ90\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tAllTrue[Map[Head, Keys @ \
Model`ProcessModels`modelsP[\"BKY\"][\"exogenousEq\"]],\n\t\t\t\tMatchQ[#, \
PatternTest]&\n\t\t\t],\n\t\t\tAllTrue[Map[Head, Keys @ \
Model`ProcessModels`modelsP[\"BKY\"][\"endogenousEq\"]],\n\t\t\t\tMatchQ[#, \
PatternTest]&\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-01ILTG\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\
\t\t\tFunction[\n\t\t\t\t\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ \
Model`ProcessModels`dc @ Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\
\t\t\t\t\t\tReplaceAll[\n\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`dc @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\t\t\tNormal @ \
Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ \
Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i],\n\t\t\t\
\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i],\n\t\t\t\
\t\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`wc @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`wc @ Model`ProcessModels`t,\n\t\t\t\t\
\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`sdf @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`sdf @ Model`ProcessModels`t,\n\t\t\t\t\
\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`bondyield @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`bondyield @ Model`ProcessModels`t,\n\t\
\t\t\t\t\t\t\t\t\tNormal @ \
Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-WT9V0J\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tSameQ[Head @ Model`ProcessModels`notVar @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\tReplaceAll[\n\t\t\
\t\t\t\t\t\t\tModel`ProcessModels`notVar @ Model`ProcessModels`t,\n\t\t\t\t\t\
\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-CET43T\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826520318244*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"ae27e065-2bf0-4c7e-b026-bec2ab861bc0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "shortname", " ", "different", " ", "from", " ", "model", " ", "key"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modelBY", "=", 
     RowBox[{"models", "[", "\"\<BY\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"modelBKY", "=", 
     RowBox[{"models", "[", "\"\<BKY\>\"", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"modelBKYP", "=", 
     RowBox[{"processModels", "[", 
      RowBox[{"<|", 
       RowBox[{"\"\<BKY\>\"", "->", "modelBKY"}], "|>"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"modelBYP", "=", 
     RowBox[{"processModels", "[", 
      RowBox[{"<|", 
       RowBox[{"\"\<BY\>\"", "->", "modelBY"}], "|>"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"newModels", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<myModel\>\"", "->", "modelBKY"}], ",", 
       RowBox[{"\"\<BY\>\"", "->", "modelBY"}]}], "|>"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"newModelsSameName", "=", 
     RowBox[{"<|", 
      RowBox[{"\"\<BY\>\"", "->", "modelBY"}], "|>"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"newModelsRename", "=", 
     RowBox[{"<|", 
      RowBox[{"\"\<myModel\>\"", "->", "modelBY"}], "|>"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"newModelsP", "=", 
     RowBox[{"processModels", "[", "newModels", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"newModelsSameNameP", "=", 
     RowBox[{"processModels", "[", "newModelsSameName", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"newModelsRenameP", "=", 
     RowBox[{"processModels", "[", "newModelsRename", "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"KeyDrop", "[", 
             RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}], "&"}], "@", 
           
           RowBox[{"newModelsP", "[", "\"\<myModel\>\"", "]"}]}], "===", 
          RowBox[{"KeyDrop", "[", 
           RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}]}], "&"}], "@", 
        
        RowBox[{"modelBKYP", "[", "\"\<BKY\>\"", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"KeyDrop", "[", 
             RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}], "&"}], "@", 
           
           RowBox[{"newModelsP", "[", "\"\<BY\>\"", "]"}]}], "===", 
          RowBox[{"KeyDrop", "[", 
           RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}]}], "&"}], "@", 
        
        RowBox[{"modelBYP", "[", "\"\<BY\>\"", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"KeyDrop", "[", 
             RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}], "&"}], "@", 
           
           RowBox[{"newModelsSameNameP", "[", "\"\<BY\>\"", "]"}]}], "===", 
          RowBox[{"KeyDrop", "[", 
           RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}]}], "&"}], "@", 
        
        RowBox[{"modelBYP", "[", "\"\<BY\>\"", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"KeyDrop", "[", 
             RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}], "&"}], "@", 
           
           RowBox[{"newModelsRenameP", "[", "\"\<myModel\>\"", "]"}]}], "===", 
          RowBox[{"KeyDrop", "[", 
           RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}]}], "&"}], "@", 
        
        RowBox[{"modelBYP", "[", "\"\<BY\>\"", "]"}]}]}], 
      "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8912512942103243`*^9, 3.8912513055502443`*^9}, {
   3.8912513517340593`*^9, 3.891251461543272*^9}, {3.891251500422112*^9, 
   3.891251525384585*^9}, 3.891251633145433*^9, {3.891251727184629*^9, 
   3.8912517398515368`*^9}, {3.89125184158985*^9, 3.891251848736774*^9}, {
   3.891252152348381*^9, 3.891252165553775*^9}, 3.892982996244417*^9, 
   3.893016163280417*^9, 3.893027217304699*^9, 3.89302736245364*^9, 
   3.905826496528831*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"623eb9c8-8fa8-49b6-8326-e888251e5b62"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231009-41WCOQ\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231009-41WCOQ"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905826536184978*^9},
 CellLabel->
  "During evaluation of \
In[35]:=",ExpressionUUID->"dd2c1b30-f0a9-4609-8730-1d7a281aff22"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826536185664*^9},
 CellLabel->
  "During evaluation of \
In[35]:=",ExpressionUUID->"23ce8778-2fb1-46ab-bd50-efe573be0ec3"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Model`ProcessModels`modelBY = \
FernandoDuarte`LongRunRisk`Model`Catalog`models @ \"BY\";\n\t\
Model`ProcessModels`modelBKY = \
FernandoDuarte`LongRunRisk`Model`Catalog`models @ \"BKY\";\n\t\
Model`ProcessModels`modelBKYP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[<|\"BKY\" -> \
Model`ProcessModels`modelBKY|>];\n\tModel`ProcessModels`modelBYP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[<|\"BY\" -> \
Model`ProcessModels`modelBY|>];\n\tModel`ProcessModels`newModels = \
<|\"myModel\" -> Model`ProcessModels`modelBKY, \"BY\" -> \
Model`ProcessModels`modelBY|>;\n\tModel`ProcessModels`newModelsSameName = \
<|\"BY\" -> Model`ProcessModels`modelBY|>;\n\t\
Model`ProcessModels`newModelsRename = <|\"myModel\" -> \
Model`ProcessModels`modelBY|>;\n\tModel`ProcessModels`newModelsP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels @ \
Model`ProcessModels`newModels;\n\tModel`ProcessModels`newModelsSameNameP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels @ \
Model`ProcessModels`newModelsSameName;\n\t\
Model`ProcessModels`newModelsRenameP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels @ \
Model`ProcessModels`newModelsRename;\n\tApply[And,\n\t\t{\n\t\t\tFunction[\n\t\
\t\t\tSameQ[\n\t\t\t\t\tFunction[KeyDrop[#, \
\"coeffsSolution\"]][Model`ProcessModels`newModelsP @ \"myModel\"],\n\t\t\t\t\
\tKeyDrop[#, \"coeffsSolution\"]\n\t\t\t\t]\n\t\t\t\
][Model`ProcessModels`modelBKYP @ \"BKY\"],\n\t\t\tFunction[\n\t\t\t\t\
SameQ[Function[KeyDrop[#, \"coeffsSolution\"]][Model`ProcessModels`newModelsP \
@ \"BY\"],\n\t\t\t\t\tKeyDrop[#, \"coeffsSolution\"]\n\t\t\t\t]\n\t\t\t\
][Model`ProcessModels`modelBYP @ \"BY\"],\n\t\t\tFunction[\n\t\t\t\tSameQ[\n\t\
\t\t\t\tFunction[KeyDrop[#, \
\"coeffsSolution\"]][Model`ProcessModels`newModelsSameNameP @ \"BY\"],\n\t\t\t\
\t\tKeyDrop[#, \"coeffsSolution\"]\n\t\t\t\t]\n\t\t\t\
][Model`ProcessModels`modelBYP @ \"BY\"],\n\t\t\tFunction[\n\t\t\t\tSameQ[\n\t\
\t\t\t\tFunction[KeyDrop[#, \
\"coeffsSolution\"]][Model`ProcessModels`newModelsRenameP @ \"myModel\"],\n\t\
\t\t\t\tKeyDrop[#, \"coeffsSolution\"]\n\t\t\t\t]\n\t\t\t\
][Model`ProcessModels`modelBYP @ \"BY\"]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tModel`ProcessModels`modelBY = \
FernandoDuarte`LongRunRisk`Model`Catalog`models @ \"BY\";\n\t\
Model`ProcessModels`modelBKY = \
FernandoDuarte`LongRunRisk`Model`Catalog`models @ \"BKY\";\n\t\
Model`ProcessModels`modelBKYP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[<|\"BKY\" -> \
Model`ProcessModels`modelBKY|>];\n\tModel`ProcessModels`modelBYP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[<|\"BY\" -> \
Model`ProcessModels`modelBY|>];\n\tModel`ProcessModels`newModels = \
<|\"myModel\" -> Model`ProcessModels`modelBKY, \"BY\" -> \
Model`ProcessModels`modelBY|>;\n\tModel`ProcessModels`newModelsSameName = \
<|\"BY\" -> Model`ProcessModels`modelBY|>;\n\t\
Model`ProcessModels`newModelsRename = <|\"myModel\" -> \
Model`ProcessModels`modelBY|>;\n\tModel`ProcessModels`newModelsP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels @ \
Model`ProcessModels`newModels;\n\tModel`ProcessModels`newModelsSameNameP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels @ \
Model`ProcessModels`newModelsSameName;\n\t\
Model`ProcessModels`newModelsRenameP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels @ \
Model`ProcessModels`newModelsRename;\n\tApply[And,\n\t\t{\n\t\t\tFunction[\n\t\
\t\t\tSameQ[\n\t\t\t\t\tFunction[KeyDrop[#, \
\"coeffsSolution\"]][Model`ProcessModels`newModelsP @ \"myModel\"],\n\t\t\t\t\
\tKeyDrop[#, \"coeffsSolution\"]\n\t\t\t\t]\n\t\t\t\
][Model`ProcessModels`modelBKYP @ \"BKY\"],\n\t\t\tFunction[\n\t\t\t\t\
SameQ[Function[KeyDrop[#, \"coeffsSolution\"]][Model`ProcessModels`newModelsP \
@ \"BY\"],\n\t\t\t\t\tKeyDrop[#, \"coeffsSolution\"]\n\t\t\t\t]\n\t\t\t\
][Model`ProcessModels`modelBYP @ \"BY\"],\n\t\t\tFunction[\n\t\t\t\tSameQ[\n\t\
\t\t\t\tFunction[KeyDrop[#, \
\"coeffsSolution\"]][Model`ProcessModels`newModelsSameNameP @ \"BY\"],\n\t\t\t\
\t\tKeyDrop[#, \"coeffsSolution\"]\n\t\t\t\t]\n\t\t\t\
][Model`ProcessModels`modelBYP @ \"BY\"],\n\t\t\tFunction[\n\t\t\t\tSameQ[\n\t\
\t\t\t\tFunction[KeyDrop[#, \
\"coeffsSolution\"]][Model`ProcessModels`newModelsRenameP @ \"myModel\"],\n\t\
\t\t\t\tKeyDrop[#, \"coeffsSolution\"]\n\t\t\t\t]\n\t\t\t\
][Model`ProcessModels`modelBYP @ \"BY\"]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"ProcessModels_20231009-41WCOQ\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 16.289, "AbsoluteTiming" -> 
   15.829, "InputString" :> ToString[
     Unevaluated[
     Model`ProcessModels`modelBY = 
       FernandoDuarte`LongRunRisk`Model`Catalog`models["BY"]; 
      Model`ProcessModels`modelBKY = 
       FernandoDuarte`LongRunRisk`Model`Catalog`models["BKY"]; 
      Model`ProcessModels`modelBKYP = 
       FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[<|
         "BKY" -> Model`ProcessModels`modelBKY|>]; 
      Model`ProcessModels`modelBYP = 
       FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[<|
         "BY" -> Model`ProcessModels`modelBY|>]; 
      Model`ProcessModels`newModels = <|
        "myModel" -> Model`ProcessModels`modelBKY, "BY" -> 
         Model`ProcessModels`modelBY|>; 
      Model`ProcessModels`newModelsSameName = <|
        "BY" -> Model`ProcessModels`modelBY|>; 
      Model`ProcessModels`newModelsRename = <|
        "myModel" -> Model`ProcessModels`modelBY|>; 
      Model`ProcessModels`newModelsP = 
       FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
        Model`ProcessModels`newModels]; 
      Model`ProcessModels`newModelsSameNameP = 
       FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
        Model`ProcessModels`newModelsSameName]; 
      Model`ProcessModels`newModelsRenameP = 
       FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
        Model`ProcessModels`newModelsRename]; Apply[And, {
         ((KeyDrop[#, "coeffsSolution"]& )[
           Model`ProcessModels`newModelsP["myModel"]] === 
         KeyDrop[#, "coeffsSolution"]& )[
          Model`ProcessModels`modelBKYP["BKY"]], 
         ((KeyDrop[#, "coeffsSolution"]& )[
           Model`ProcessModels`newModelsP["BY"]] === 
         KeyDrop[#, "coeffsSolution"]& )[
          Model`ProcessModels`modelBYP["BY"]], 
         ((KeyDrop[#, "coeffsSolution"]& )[
           Model`ProcessModels`newModelsSameNameP["BY"]] === 
         KeyDrop[#, "coeffsSolution"]& )[
          Model`ProcessModels`modelBYP["BY"]], 
         ((KeyDrop[#, "coeffsSolution"]& )[
           Model`ProcessModels`newModelsRenameP["myModel"]] === 
         KeyDrop[#, "coeffsSolution"]& )[
          Model`ProcessModels`modelBYP["BY"]]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-RWZJ5E\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-8R5BB3\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-PYXU62\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
FernandoDuarte`LongRunRisk`Model`Catalog`models;\n\t\
Model`ProcessModels`modelsP = FernandoDuarte`LongRunRisk`Models;\n\tTrue\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-9QO166\"\n]\n\n\n\
VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-XWY8XC\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-34IF7D\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-SMYVH5\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-C9IRRD\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231009-Y06BJ2\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-LS54ZU\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\
\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\
\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-X0148M\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\
\t\t\t\t\tSameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\t\
\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-F0AJCH\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\tApply[And,\n\
\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\
\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tInfinity\
\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\
\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\
\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-UXOKX8\"\n]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`coefs = Apply[Alternatives,\n\t\tMap[SymbolName,\n\t\t\t\
{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t]\n\t];\n\t\
Apply[And,\n\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\tFlatten[\
\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
Cases[Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tContext \
@ Model`ProcessModels`var\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tInfinity\n\t\t\t\t\
\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\
\t\t\t]\n\t\t]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-51KD31\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\tRuleDelayed[\n\
\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t\
}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-X4714J\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tSubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\
SubsetQ[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"]&\
, Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models],\n\t\t\t\t\
Map[Model`ProcessModels`modelsP[#][\"shortname\"]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ProcessModels_20231009-7HDX12\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[Function, #]&,\n\t\t\t\
\t\tMap[Head, Map[Model`ProcessModels`modelsP[#][\"stateVars\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[List, #]&,\n\t\t\t\t\tMap[Head, \
Map[Model`ProcessModels`modelsP[#][\"stateVars\"][Model`ProcessModels`t]&, \
Keys @ Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\
\t\t\t\tMap[MatchQ[1, #]&,\n\t\t\t\t\tMap[Length,\n\t\t\t\t\t\t\
Map[Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[MatchQ[\"t\", #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[Apply[SymbolName, \
Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]]],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Map[Model`ProcessModels`modelsP[#][\"stateVars\"][FernandoDuarte`\
LongRunRisk`Model`ExogenousEq`Private`t]&, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\t\
Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"]&, Keys \
@ Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"ProcessModels_20231009-OMD0EK\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[NumberQ, \
Map[Model`ProcessModels`modelsP[#][\"numStocks\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-K9FT9W\"\n]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`model = Model`ProcessModels`modelsP @ \"NRC\";\n\t\
Apply[And,\n\t\t{\n\t\t\tSameQ[Model`ProcessModels`pi[myContext`t] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mup,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`rhop * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[myContext`t - 1] - \
FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Parameters`xip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t - 1]) + \
FernandoDuarte`LongRunRisk`Model`Parameters`phip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t]\n\t\t\t\t\t]\
\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t] /. \
Model`ProcessModels`model[\"exogenousEq\"], \
Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t]],\n\t\t\t\
SameQ[Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mud @ Model`ProcessModels`i,\
\n\t\t\t\t\tPlus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[\
Model`ProcessModels`t - 1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) \
* FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[Model`ProcessModels`i],\n\
\t\t\t\t\t\t(FernandoDuarte`LongRunRisk`Model`Parameters`phidc[Model`\
ProcessModels`i] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 2] * FernandoDuarte`LongRunRisk`Model`Parameters`xid[Model`ProcessModels`i] \
* FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t - \
1]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`wc[Model`ProcessModels`t] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 0,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[1] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[4] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg),\n\t\t\t\t\t\t\tPlus[\n\
\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 5,\n\t\t\t\t\t\t\t\t\
\tSubtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[3] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[2] * \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 1] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`\
ProcessModels`t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tSameQ[Model`ProcessModels`pd[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][0],\n\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[1],\n\t\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[4],\n\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
Subtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][5]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\
\t\tFernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t - 1] * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[2] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t],\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[3] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\
\n\t\t\t],\n\t\t\tSameQ[Model`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondret[Model`\
ProcessModels`t, Model`ProcessModels`i, 1] - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondyield[Model`\
ProcessModels`t - 1, 1]\n\t\t\t],\n\t\t\tSameQ[\n\t\t\t\t\
(Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
/. Normal[Model`ProcessModels`model[\"endogenousEq\"]]) /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, 1] + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t, Model`ProcessModels`i - 1]) - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, Model`ProcessModels`i]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\
\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-8N9NBK\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Cases[\n\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\
\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-AYAKZE\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
//. Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
//. Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\
\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\
\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\
\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-USIQ90\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tAllTrue[Map[Head, Keys @ \
Model`ProcessModels`modelsP[\"BKY\"][\"exogenousEq\"]],\n\t\t\t\tMatchQ[#, \
PatternTest]&\n\t\t\t],\n\t\t\tAllTrue[Map[Head, Keys @ \
Model`ProcessModels`modelsP[\"BKY\"][\"endogenousEq\"]],\n\t\t\t\tMatchQ[#, \
PatternTest]&\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231009-01ILTG\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\
\t\t\tFunction[\n\t\t\t\t\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ \
Model`ProcessModels`dc @ Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\
\t\t\t\t\t\tReplaceAll[\n\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`dc @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\t\t\tNormal @ \
Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ \
Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i],\n\t\t\t\
\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i],\n\t\t\t\
\t\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`wc @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`wc @ Model`ProcessModels`t,\n\t\t\t\t\
\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`sdf @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`sdf @ Model`ProcessModels`t,\n\t\t\t\t\
\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`bondyield @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`bondyield @ Model`ProcessModels`t,\n\t\
\t\t\t\t\t\t\t\t\tNormal @ \
Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-WT9V0J\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tSameQ[Head @ Model`ProcessModels`notVar @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\tReplaceAll[\n\t\t\
\t\t\t\t\t\t\tModel`ProcessModels`notVar @ Model`ProcessModels`t,\n\t\t\t\t\t\
\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231009-CET43T\"\n]\n\n\n\
VerificationTest[\n\tModel`ProcessModels`modelBY = \
FernandoDuarte`LongRunRisk`Model`Catalog`models @ \"BY\";\n\t\
Model`ProcessModels`modelBKY = \
FernandoDuarte`LongRunRisk`Model`Catalog`models @ \"BKY\";\n\t\
Model`ProcessModels`modelBKYP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[<|\"BKY\" -> \
Model`ProcessModels`modelBKY|>];\n\tModel`ProcessModels`modelBYP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[<|\"BY\" -> \
Model`ProcessModels`modelBY|>];\n\tModel`ProcessModels`newModels = \
<|\"myModel\" -> Model`ProcessModels`modelBKY, \"BY\" -> \
Model`ProcessModels`modelBY|>;\n\tModel`ProcessModels`newModelsSameName = \
<|\"BY\" -> Model`ProcessModels`modelBY|>;\n\t\
Model`ProcessModels`newModelsRename = <|\"myModel\" -> \
Model`ProcessModels`modelBY|>;\n\tModel`ProcessModels`newModelsP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels @ \
Model`ProcessModels`newModels;\n\tModel`ProcessModels`newModelsSameNameP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels @ \
Model`ProcessModels`newModelsSameName;\n\t\
Model`ProcessModels`newModelsRenameP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels @ \
Model`ProcessModels`newModelsRename;\n\tApply[And,\n\t\t{\n\t\t\tFunction[\n\t\
\t\t\tSameQ[\n\t\t\t\t\tFunction[KeyDrop[#, \
\"coeffsSolution\"]][Model`ProcessModels`newModelsP @ \"myModel\"],\n\t\t\t\t\
\tKeyDrop[#, \"coeffsSolution\"]\n\t\t\t\t]\n\t\t\t\
][Model`ProcessModels`modelBKYP @ \"BKY\"],\n\t\t\tFunction[\n\t\t\t\t\
SameQ[Function[KeyDrop[#, \"coeffsSolution\"]][Model`ProcessModels`newModelsP \
@ \"BY\"],\n\t\t\t\t\tKeyDrop[#, \"coeffsSolution\"]\n\t\t\t\t]\n\t\t\t\
][Model`ProcessModels`modelBYP @ \"BY\"],\n\t\t\tFunction[\n\t\t\t\tSameQ[\n\t\
\t\t\t\tFunction[KeyDrop[#, \
\"coeffsSolution\"]][Model`ProcessModels`newModelsSameNameP @ \"BY\"],\n\t\t\t\
\t\tKeyDrop[#, \"coeffsSolution\"]\n\t\t\t\t]\n\t\t\t\
][Model`ProcessModels`modelBYP @ \"BY\"],\n\t\t\tFunction[\n\t\t\t\tSameQ[\n\t\
\t\t\t\tFunction[KeyDrop[#, \
\"coeffsSolution\"]][Model`ProcessModels`newModelsRenameP @ \"myModel\"],\n\t\
\t\t\t\tKeyDrop[#, \"coeffsSolution\"]\n\t\t\t\t]\n\t\t\t\
][Model`ProcessModels`modelBYP @ \"BY\"]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"ProcessModels_20231009-41WCOQ\"\n]\n\n\nEndTestSection[]\n\
"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print[
           "Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.9058265361986113`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"fdc78ecd-fe78-422c-9a62-63d3dbea5235"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"End", "[", "]"}]], "Input",
 CellChangeTimes->{{3.890680295645965*^9, 3.89068029650622*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"33ebf65e-6034-462e-bfb9-1324117a5073"],

Cell[BoxData["\<\"Model`ProcessModels`\"\>"], "Output",
 CellChangeTimes->{3.9058265362527*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"8bb29a01-a675-44c0-8bac-f10faab06462"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"add", " ", 
    RowBox[{"Begin", "[", "\"\<Context`\>\"", "]"}], " ", "and", " ", 
    RowBox[{"End", "[", "]"}], " ", "to", " ", "wlt", " ", "file"}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"helper", " ", "functions"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"countLines", "[", "file_String", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"readStream", "=", 
        RowBox[{"OpenRead", "[", "file", "]"}]}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"n", "=", "1"}], ",", "\[IndentingNewLine]", "temp"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"While", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"temp", "=!=", "EndOfFile"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"temp", "=", 
          RowBox[{"ReadLine", "[", "readStream", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"n", "=", 
          RowBox[{"n", "+", "1"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Close", "/@", 
       RowBox[{"{", "readStream", "}"}]}], ";", "\[IndentingNewLine]", 
      "n"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.890686194230386*^9, 3.890686228283702*^9}, 
   3.8911593195689373`*^9, {3.9058258879096937`*^9, 3.90582589361486*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"54483af6-5a40-4f54-bac7-293214472e69"],

Cell[BoxData[
 RowBox[{
  RowBox[{"replaceNthRecord", "[", 
   RowBox[{"file_String", ",", "n_Integer", ",", "replaceWith_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"readStream", "=", 
       RowBox[{"OpenRead", "[", "file", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"writeStream", "=", 
       RowBox[{"OpenWrite", "[", 
        RowBox[{"file", "<>", "\"\<temp\>\""}], "]"}]}], ",", 
      "\[IndentingNewLine]", "temp"}], "\[IndentingNewLine]", "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"WriteLine", "[", 
        RowBox[{"writeStream", ",", 
         RowBox[{"ReadLine", "[", "readStream", "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"n", "-", "1"}], "}"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"WriteLine", "[", 
      RowBox[{"writeStream", ",", 
       RowBox[{
        RowBox[{"ReadLine", "[", "readStream", "]"}], "<>", "\"\< \\r\\n\>\"",
         "<>", "replaceWith"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"temp", "=!=", "EndOfFile"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"temp", "=", 
         RowBox[{"ReadLine", "[", "readStream", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"UnsameQ", "[", 
           RowBox[{"temp", ",", "EndOfFile"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"WriteLine", "[", 
           RowBox[{"writeStream", ",", "temp"}], "]"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", 
     RowBox[{"Close", "/@", 
      RowBox[{"{", 
       RowBox[{"readStream", ",", "writeStream"}], "}"}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.890686194230386*^9, 3.890686228283702*^9}, 
   3.8911593195689373`*^9, {3.9058258879096937`*^9, 3.9058258980485497`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"ddca3c8e-dcd8-4cb0-9a56-cdb0739c327c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"insert", " ", "into", " ", "wlt", " ", "file"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"replaceNthRecord", "[", 
    RowBox[{
    "testFileName", ",", "1", ",", 
     "\"\<Begin[\\\"Model`ProcessModels`\\\"]\>\""}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CopyFile", "[", 
     RowBox[{
      RowBox[{"testFileName", "<>", "\"\<temp\>\""}], ",", "testFileName", 
      ",", 
      RowBox[{"OverwriteTarget", "->", "True"}]}], "]"}], ";"}], "\n", 
   RowBox[{"DeleteFile", "[", 
    RowBox[{"testFileName", "<>", "\"\<temp\>\""}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"numLines", "=", 
    RowBox[{"countLines", "[", "testFileName", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"replaceNthRecord", "[", 
    RowBox[{"testFileName", ",", 
     RowBox[{"numLines", "-", "3"}], ",", " ", "\"\<End[]\>\""}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CopyFile", "[", 
     RowBox[{
      RowBox[{"testFileName", "<>", "\"\<temp\>\""}], ",", "testFileName", 
      ",", 
      RowBox[{"OverwriteTarget", "->", "True"}]}], "]"}], ";"}], "\n", 
   RowBox[{"DeleteFile", "[", 
    RowBox[{"testFileName", "<>", "\"\<temp\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.890686194230386*^9, 3.890686228283702*^9}, 
   3.8911593195689373`*^9, {3.9058258879096937`*^9, 3.9058258980485497`*^9}, 
   3.905826396819344*^9},
 CellLabel->"In[39]:=",ExpressionUUID->"3c36af82-53b5-4d00-b969-206189441059"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlttemp\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.905826536338654*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"74d8f775-dc24-4b1c-9158-3ee689be40fb"],

Cell[BoxData["1233"], "Output",
 CellChangeTimes->{3.905826536369767*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"04c890d8-27e5-4697-9644-8190617b7772"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlttemp\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.905826536422573*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"f3d36603-df87-4699-9ded-8d8fff6390cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tr", "=", 
  RowBox[{"TestReport", "[", "testFileName", "]"}]}]], "Input",
 CellLabel->"In[46]:=",ExpressionUUID->"d8857335-0154-41ab-83b2-80a64e05c7ed"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: ProcessModels.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["25", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: ProcessModels.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["25", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["25", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "16.7685860000000000002`5.977071431713078", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                   "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: ProcessModels.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     5375586827632559237 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058265364924703`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "437e90c8-a9b6-4da7-9bd4-8567e29c45ea", "TestID" -> 
         "ProcessModels_20231009-RWZJ5E", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "ffdfb9ad-4e4b-4b13-adf0-0e2b3e1ed801", "Input" -> 
         HoldForm[
          Needs["FernandoDuarte`LongRunRisk`Model`Catalog`"]; 
           Needs["FernandoDuarte`LongRunRisk`Model`ProcessModels`"]; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000032`1.6556649761518998, "CPUTimeUsed" -> 0.00003300000000550085,
          "MemoryUsed" -> 2760, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 8829631460073174223 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905826536492794*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "266cf800-f353-428a-9d1e-4c0483b57c7b", "TestID" -> 
         "ProcessModels_20231009-8R5BB3", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "80739665-b91a-462f-a41b-eb2f2c44a750", "Input" -> HoldForm[
           Apply[And, {
             
             MemberQ[$ContextPath, 
              "FernandoDuarte`LongRunRisk`Model`Catalog`"], 
             
             MemberQ[$ContextPath, 
              "FernandoDuarte`LongRunRisk`Model`ProcessModels`"]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000024`1.5307262395435977, "CPUTimeUsed" -> 0.000022999999998774, 
         "MemoryUsed" -> 3264, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7065978814432599590 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905826536493038*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "ecd2903f-d274-49db-8134-7494802d9fcd", "TestID" -> 
         "ProcessModels_20231009-PYXU62", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "d3dbbca8-e139-45bd-9196-921fdd23c58f", "Input" -> HoldForm[
           Apply[And, {
             Not[Names["*processModels"] === {}], 
             Not[Names["*models"] === {}]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.04817`4.833291644146426, "CPUTimeUsed" -> 0.04808900000000094, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7403741812579976897 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905826536541626*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "5886b299-e08c-4c58-b2fd-88256b9acf2e", "TestID" -> 
         "ProcessModels_20231009-9QO166", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "022990e2-edb9-4051-84b8-795a51ee8738", "Input" -> HoldForm[Get[
             Get[
              FileNameJoin[{"FernandoDuarte/LongRunRisk", "Models.wl"}]]]; 
           FernandoDuarte`LongRunRisk`Model`Catalog`models = 
            FernandoDuarte`LongRunRisk`Model`Catalog`models; 
           Model`ProcessModels`modelsP = FernandoDuarte`LongRunRisk`Models; 
           True], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.122539`5.238789329709645, "CPUTimeUsed" -> 0.1286900000000024, 
         "MemoryUsed" -> 4910280, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 2918980053794528012 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058265366645613`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "ae2e623d-2e16-46d8-b4e1-941a0ddd05a3", "TestID" -> 
         "ProcessModels_20231009-XWY8XC", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "a3f9cfcb-4e37-485f-abae-ca9069d08031", "Input" -> HoldForm[
           Apply[And, 
            Map[StringQ, 
             Keys[Model`ProcessModels`modelsP]]]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000033`1.6690289377098768, "CPUTimeUsed" -> 0.00002999999999886427,
          "MemoryUsed" -> 2560, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 8331150784174585897 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905826536664861*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "3e7d21d6-fb4e-4567-a169-8fac4d3ea653", "TestID" -> 
         "ProcessModels_20231009-34IF7D", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "1d2551a6-5ae4-46a8-a0fd-ce28947b9af3", "Input" -> HoldForm[
           Apply[And, 
            Map[StringQ, 
             Flatten[
              Map[{
                Model`ProcessModels`modelsP[#]["name"], 
                Model`ProcessModels`modelsP[#]["shortname"], 
                Model`ProcessModels`modelsP[#]["bibRef"], 
                Model`ProcessModels`modelsP[#]["desc"], 
                Model`ProcessModels`modelsP[#]["exogenousVars"], 
                Model`ProcessModels`modelsP[#]["endogenousVars"]}& , 
               Keys[Model`ProcessModels`modelsP]]]]]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000063`1.9498555472855732, "CPUTimeUsed" -> 0.0000630000000008124, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 1707376024930864927 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058265366651564`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "f77336b9-55b3-4685-9880-399b21d3b3ca", "TestID" -> 
         "ProcessModels_20231009-SMYVH5", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "2dcbceff-b475-4d34-a5c2-058f3fcc0a92", "Input" -> HoldForm[
           Apply[And, {
             Apply[And, 
              Map[NumberQ, 
               Flatten[
                Map[Values[
                  N[
                   ReplaceRepeated[<|
                    FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                    "parameters"]|>, 
                    FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                    "parameters"]]]]& , 
                 Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]], 
             Apply[And, 
              Map[NumberQ, 
               Flatten[
                Map[Values[
                  N[
                   ReplaceRepeated[<|
                    Model`ProcessModels`modelsP[#]["parameters"]|>, 
                    Model`ProcessModels`modelsP[#]["parameters"]]]]& , 
                 Keys[Model`ProcessModels`modelsP]]]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.005398`3.8827478780524896, "CPUTimeUsed" -> 0.005399999999998073, 
         "MemoryUsed" -> 9440, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 1172341351109433578 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905826536670784*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "98e2e4d7-9b82-4634-9886-1f51566008d4", "TestID" -> 
         "ProcessModels_20231009-C9IRRD", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "23554160-986b-408c-8128-44acd5c4f979", "Input" -> HoldForm[
           Apply[And, {
             Apply[And, 
              Map[MemberQ[
                Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]& , {
               "BY", "BKY"}]], 
             Apply[And, 
              Map[MemberQ[
                Keys[Model`ProcessModels`modelsP], #]& , 
               Keys[Model`ProcessModels`modelsP]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000032`1.6556649761518956, "CPUTimeUsed" -> 0.00003199999999736747,
          "MemoryUsed" -> 3480, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 2846401956749092421 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90582653667105*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "eae04687-f30b-41ed-8a29-e279a02691b0", "TestID" -> 
         "ProcessModels_20231009-Y06BJ2", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "4e7d8df9-982b-4f98-842b-376d5f5b6595", "Input" -> HoldForm[
           Apply[And, {
             AllTrue[
             FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ], 
             AllTrue[Model`ProcessModels`modelsP, AssociationQ], 
             AllTrue[
              Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]& , 
               Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]], 
              AssociationQ], 
             AllTrue[
              Map[Model`ProcessModels`modelsP[#]& , 
               Keys[Model`ProcessModels`modelsP]], AssociationQ]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000033`1.6690289377098795, "CPUTimeUsed" -> 0.00003300000000194814,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7869456138112647227 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058265366714053`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "c02d1b77-2626-440d-a425-441b235932f0", "TestID" -> 
         "ProcessModels_20231009-LS54ZU", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "93ec434e-5ba1-430c-8998-c474ffacd703", "Input" -> HoldForm[
           Apply[And, {
             Apply[And, 
              Map[Apply[And, 
                
                Map[# === 
                 "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
                 Map[Context, 
                  Cases[
                   Model`ProcessModels`modelsP[#]["stateVars"], PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                    SymbolName[#]]& ][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                   Infinity]]]]& , 
               Keys[Model`ProcessModels`modelsP]]], 
             Apply[And, 
              Map[Apply[And, 
                
                Map[# === 
                 "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
                 Map[Context, 
                  Cases[
                   Model`ProcessModels`modelsP[#]["modelAssumptions"], 
                   PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                    SymbolName[#]]& ][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                   Infinity]]]]& , 
               Keys[Model`ProcessModels`modelsP]]], 
             Apply[And, 
              Map[Apply[And, 
                
                Map[# === 
                 "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
                 Map[Context, 
                  Cases[
                   Model`ProcessModels`modelsP[#]["exogenousEq"], 
                   PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                    SymbolName[#]]& ][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                   Infinity]]]]& , 
               Keys[Model`ProcessModels`modelsP]]], 
             Apply[And, 
              Map[Apply[And, 
                
                Map[# === 
                 "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
                 Map[Context, 
                  Cases[
                   Model`ProcessModels`modelsP[#]["endogenousEq"], PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                    SymbolName[#]]& ][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                   Infinity]]]]& , 
               Keys[Model`ProcessModels`modelsP]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.008444`4.077063222467613, "CPUTimeUsed" -> 0.008444000000000784, 
         "MemoryUsed" -> 2848, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 6335317185105275984 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905826536680129*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "74b05f61-ce8b-4675-8966-37b0b2222ef7", "TestID" -> 
         "ProcessModels_20231009-X0148M", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "8f1b79d8-a340-4efa-99ba-451962797403", "Input" -> HoldForm[
           Apply[And, {
             Apply[And, 
              Map[Apply[And, 
                Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
                 Map[Context, 
                  Cases[
                   Model`ProcessModels`modelsP[#]["stateVars"], PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                    BlankSequence[]][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                   Infinity]]]]& , 
               Keys[Model`ProcessModels`modelsP]]], 
             Apply[And, 
              Map[Apply[And, 
                Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
                 Map[Context, 
                  Cases[
                   Model`ProcessModels`modelsP[#]["modelAssumptions"], 
                   PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                    BlankSequence[]][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                   Infinity]]]]& , 
               Keys[Model`ProcessModels`modelsP]]], 
             Apply[And, 
              Map[Apply[And, 
                Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
                 Map[Context, 
                  Cases[
                   Model`ProcessModels`modelsP[#]["exogenousEq"], 
                   PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                    BlankSequence[]][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                   Infinity]]]]& , 
               Keys[Model`ProcessModels`modelsP]]], 
             Apply[And, 
              Map[Apply[And, 
                Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
                 Map[Context, 
                  Cases[
                   Model`ProcessModels`modelsP[#]["endogenousEq"], PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                    BlankSequence[]][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                   Infinity]]]]& , 
               Keys[Model`ProcessModels`modelsP]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000316`2.650202080450393, "CPUTimeUsed" -> 0.00031700000000256523`,
          "MemoryUsed" -> 4992, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 6683542446703220094 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905826536680744*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "02d52dfc-144d-4a7e-a34a-31d1d7497a62", "TestID" -> 
         "ProcessModels_20231009-F0AJCH", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "4ed0a6e9-a524-4b15-9a20-abc6e02bd6a2", "Input" -> HoldForm[
           Apply[And, {
             Apply[And, 
              Map[Apply[And, 
                Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
                 Map[Context, 
                  Cases[
                   Model`ProcessModels`modelsP[#]["parameters"], PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Model`ProcessModels`var, 
                   Infinity]]]]& , 
               Keys[Model`ProcessModels`modelsP]]], 
             Apply[And, 
              Map[Apply[And, 
                Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
                 Map[Context, 
                  Cases[
                   Model`ProcessModels`modelsP[#]["stateVars"], PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Model`ProcessModels`var, 
                   Infinity]]]]& , 
               Keys[Model`ProcessModels`modelsP]]], 
             Apply[And, 
              Map[Apply[And, 
                Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
                 Map[Context, 
                  Cases[
                   Model`ProcessModels`modelsP[#]["modelAssumptions"], 
                   PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Model`ProcessModels`var, 
                   Infinity]]]]& , 
               Keys[Model`ProcessModels`modelsP]]], 
             Apply[And, 
              Map[Apply[And, 
                Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
                 Map[Context, 
                  Cases[
                   Model`ProcessModels`modelsP[#]["exogenousEq"], 
                   PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Model`ProcessModels`var, 
                   Infinity]]]]& , 
               Keys[Model`ProcessModels`modelsP]]], 
             Apply[And, 
              Map[Apply[And, 
                Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
                 Map[Context, 
                  Cases[
                   Model`ProcessModels`modelsP[#]["endogenousEq"], PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Model`ProcessModels`var, 
                   Infinity]]]]& , 
               Keys[Model`ProcessModels`modelsP]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.002416`3.533611927781086, "CPUTimeUsed" -> 0.002416999999997671, 
         "MemoryUsed" -> 10528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7919038921161862590 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905826536683414*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "1463f7a9-244b-40a2-9c99-acdf341305de", "TestID" -> 
         "ProcessModels_20231009-UXOKX8", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "a534a309-276f-4e8a-934d-79ca69bf6952", "Input" -> HoldForm[
           Apply[And, {
             Apply[And, 
              Map[Apply[And, 
                
                Map[# === 
                 "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"& , 
                 Map[Context, 
                  Cases[
                   Model`ProcessModels`modelsP[#]["modelAssumptions"], 
                   PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                    SymbolName[#]]& ][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                   Infinity]]]]& , 
               Keys[Model`ProcessModels`modelsP]]], 
             Apply[And, 
              Map[Apply[And, 
                
                Map[# === 
                 "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"& , 
                 Map[Context, 
                  Cases[
                   Model`ProcessModels`modelsP[#]["endogenousEq"], PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                    SymbolName[#]]& ][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                   Infinity]]]]& , 
               Keys[Model`ProcessModels`modelsP]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.015017`4.327098178597487, "CPUTimeUsed" -> 0.015026999999999902`, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 870670436681468228 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905826536698738*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "66f09448-addc-4512-883c-5d0e36162cb2", "TestID" -> 
         "ProcessModels_20231009-51KD31", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "fe49e50a-132a-4eeb-aafe-dc633406d518", "Input" -> 
         HoldForm[Model`ProcessModels`coefs = Apply[Alternatives, 
              Map[
              SymbolName, {
               FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, 
                Head[
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd], 
                Head[
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb], 
                
                Head[
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb]}\
]]; Apply[And, 
             
             Map[# === 
              "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"& , 
              Flatten[
               Map[Cases[
                 Model`ProcessModels`modelsP[#]["modelAssumptions"], 
                 Alternatives[
                   PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], Model`ProcessModels`coefs]& ], 
                   PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], Model`ProcessModels`coefs]& ][
                    BlankSequence[]]] :> Context[Model`ProcessModels`var], 
                 Infinity]& , 
                Keys[Model`ProcessModels`modelsP]]]]]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000234`2.5197308552421327, "CPUTimeUsed" -> 
         0.00023499999999998522`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 38788944001558376 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9058265366992493`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "3dd2a73d-e1d2-48c3-81b0-3c7fbb89ca82", "TestID" -> 
         "ProcessModels_20231009-X4714J", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "0ce84861-0736-43e1-bb06-3139287425fe", "Input" -> HoldForm[
           Apply[And, {
             Apply[And, 
              Map[MatchQ[{}, #]& , 
               Map[Cases[
                 Model`ProcessModels`modelsP[#]["stateVars"], PatternTest[
                   Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                    SymbolName[#]]& ][
                   BlankSequence[]] :> Model`ProcessModels`var, Infinity]& , 
                Keys[Model`ProcessModels`modelsP]]]], 
             Apply[And, 
              Map[MatchQ[{}, #]& , 
               Map[Cases[
                 Model`ProcessModels`modelsP[#]["exogenousEq"], PatternTest[
                   Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                    SymbolName[#]]& ][
                   BlankSequence[]] :> Model`ProcessModels`var, Infinity]& , 
                Keys[Model`ProcessModels`modelsP]]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.003958`3.747990787702367, "CPUTimeUsed" -> 0.0039589999999982695`, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 9130567563134781192 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905826536703439*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "ba0ecd4b-016a-45aa-9621-b37cf5163e94", "TestID" -> 
         "ProcessModels_20231009-7HDX12", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "1a9cd568-6386-4e35-95cc-99f083c3e405", "Input" -> HoldForm[
           Apply[And, {
             SubsetQ[
              Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], 
              Keys[Model`ProcessModels`modelsP]], 
             SubsetQ[
              Map[
              FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
               "shortname"]& , 
               Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]], 
              Map[Model`ProcessModels`modelsP[#]["shortname"]& , 
               Keys[Model`ProcessModels`modelsP]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00009`2.104757507271315, "CPUTimeUsed" -> 0.00009000000000014552, 
         "MemoryUsed" -> 2976, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 6555753855618882404 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905826536703811*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "6644094a-a187-485b-bdb5-e1879faca520", "TestID" -> 
         "ProcessModels_20231009-OMD0EK", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "64a4ed36-c7ac-4f10-8991-4ee3e442c587", "Input" -> HoldForm[
           Apply[And, {
             Apply[And, 
              Map[MatchQ[Function, #]& , 
               Map[Head, 
                Map[Model`ProcessModels`modelsP[#]["stateVars"]& , 
                 Keys[Model`ProcessModels`modelsP]]]]], 
             Apply[And, 
              Map[MatchQ[List, #]& , 
               Map[Head, 
                Map[
                Model`ProcessModels`modelsP[#]["stateVars"][
                 Model`ProcessModels`t]& , 
                 Keys[Model`ProcessModels`modelsP]]]]], 
             Apply[And, 
              Map[MatchQ[1, #]& , 
               Map[Length, 
                Map[Part[
                  Model`ProcessModels`modelsP[#]["stateVars"], 1]& , 
                 Keys[Model`ProcessModels`modelsP]]]]], 
             Apply[And, 
              Map[MatchQ["t", #]& , 
               Map[Apply[SymbolName, 
                 Part[
                  Model`ProcessModels`modelsP[#]["stateVars"], 1]]& , 
                Keys[Model`ProcessModels`modelsP]]]], 
             Map[Model`ProcessModels`modelsP[#]["stateVars"][
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]& , 
               Keys[Model`ProcessModels`modelsP]] === 
             Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
               "stateVars"]& , 
               Keys[Model`ProcessModels`modelsP]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000093`2.1189979463859268, "CPUTimeUsed" -> 0.00009400000000070463,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 6952804194955476956 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905826536704115*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "fd6a9adb-e17b-492b-b660-26cab5133573", "TestID" -> 
         "ProcessModels_20231009-K9FT9W", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "efd3e5a3-b507-4ba5-9082-7ab76adb4750", "Input" -> HoldForm[
           Apply[And, 
            Map[NumberQ, 
             Map[Model`ProcessModels`modelsP[#]["numStocks"]& , 
              Keys[Model`ProcessModels`modelsP]]]]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000023`1.5122428338495828, "CPUTimeUsed" -> 
         0.000021999999997746045`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 6535147874673363883 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905826536704586*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a486dc20-c804-402e-b46e-263d89e93ca9", "TestID" -> 
         "ProcessModels_20231009-8N9NBK", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "0f8a4391-afa1-43d3-9601-83db22288421", "Input" -> 
         HoldForm[
          Model`ProcessModels`model = Model`ProcessModels`modelsP["NRC"]; 
           Apply[And, {ReplaceAll[
                Model`ProcessModels`pi[myContext`t], 
                Normal[
                 Model`ProcessModels`model["exogenousEq"]]] === 
              FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   myContext`t - 1] - 
                  FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                 FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                   myContext`t - 1] + 
                 FernandoDuarte`LongRunRisk`Model`Parameters`phip 
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                   myContext`t])), ReplaceAll[
                Model`ProcessModels`eps["dc"][Model`ProcessModels`t], 
                Model`ProcessModels`model["exogenousEq"]] === 
              Model`ProcessModels`eps["dc"][Model`ProcessModels`t], ReplaceAll[
                Model`ProcessModels`dd[
                Model`ProcessModels`t, Model`ProcessModels`i], 
                Normal[
                 Model`ProcessModels`model["exogenousEq"]]] === 
              FernandoDuarte`LongRunRisk`Model`Parameters`mud[
                Model`ProcessModels`i] + ((
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   Model`ProcessModels`t - 1] - 
                  FernandoDuarte`LongRunRisk`Model`Parameters`mup) 
                 FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[
                  Model`ProcessModels`i] + (
                 FernandoDuarte`LongRunRisk`Model`Parameters`phidc[
                   Model`ProcessModels`i] 
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                   Model`ProcessModels`t] + 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   Model`ProcessModels`t - 2] 
                  FernandoDuarte`LongRunRisk`Model`Parameters`xid[
                   Model`ProcessModels`i] 
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                   Model`ProcessModels`t - 1])), ReplaceAll[
                Model`ProcessModels`wc[Model`ProcessModels`t], 
                Normal[
                 Model`ProcessModels`model["endogenousEq"]]] === 
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[0] + (
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[1] (
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   Model`ProcessModels`t] - 
                  FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                 FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[4] (
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    Model`ProcessModels`t] - 
                   FernandoDuarte`LongRunRisk`Model`Parameters`Esg) + (
                  FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[5] 
                   Subtract[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    Model`ProcessModels`t]^2 - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`phig^2/(1 - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhog^2), 
                    FernandoDuarte`LongRunRisk`Model`Parameters`Esg^2] + (
                   FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[3] 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    Model`ProcessModels`t] + 
                   FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[2] 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    Model`ProcessModels`t - 1] 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    Model`ProcessModels`t])))), ReplaceAll[
                Model`ProcessModels`pd[
                Model`ProcessModels`t, Model`ProcessModels`i], 
                Normal[
                 Model`ProcessModels`model["endogenousEq"]]] === 
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
                Model`ProcessModels`i][
                0] + ((FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
pi[Model`ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) 
                 FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
                  Model`ProcessModels`i][
                  1] + ((FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
sg[Model`ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg) 
                  FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
                   Model`ProcessModels`i][4] + (
                  Subtract[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    Model`ProcessModels`t]^2 - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`phig^2/(1 - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhog^2), 
                    FernandoDuarte`LongRunRisk`Model`Parameters`Esg^2] 
                   FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
                    Model`ProcessModels`i][5] + (
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    Model`ProcessModels`t - 1] 
                    FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
                    Model`ProcessModels`i][2] 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    Model`ProcessModels`t] + 
                   FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
                    Model`ProcessModels`i][3] 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    Model`ProcessModels`t])))), ReplaceAll[
                Model`ProcessModels`bondexcret[
                Model`ProcessModels`t, Model`ProcessModels`i], 
                Normal[
                 Model`ProcessModels`model["endogenousEq"]]] === 
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondret[
                Model`ProcessModels`t, Model`ProcessModels`i, 1] - 
               FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\
bondyield[Model`ProcessModels`t - 1, 1], ReplaceAll[
                ReplaceAll[
                 Model`ProcessModels`bondexcret[
                 Model`ProcessModels`t, Model`ProcessModels`i], 
                 Normal[
                  Model`ProcessModels`model["endogenousEq"]]], 
                Normal[
                 Model`ProcessModels`model["endogenousEq"]]] === (
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[
                 Model`ProcessModels`t - 1, 1] + 
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[
                 Model`ProcessModels`t, Model`ProcessModels`i - 1]) - 
               FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[
               Model`ProcessModels`t - 1, Model`ProcessModels`i]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.003164`3.6507514726576287, "CPUTimeUsed" -> 0.0031659999999966715`,
          "MemoryUsed" -> -4980480, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 780153361385362848 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905826536708098*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "3abbf651-d4f3-4f1c-8b7a-dd365934e80b", "TestID" -> 
         "ProcessModels_20231009-AYAKZE", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "10daf8cd-878b-4c71-9f1a-7311f94ccf23", "Input" -> HoldForm[
           Apply[And, {
             Apply[And, 
              Map[MatchQ[{}, #]& , 
               Map[Cases[
                 ReplaceRepeated[
                  Model`ProcessModels`wc[Model`ProcessModels`t], 
                  Normal[
                   Model`ProcessModels`modelsP[#]["endogenousEq"]]], 
                 PatternTest[
                   Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                    SymbolName[#]]& ][
                   BlankSequence[]] :> Model`ProcessModels`var, Infinity]& , 
                Keys[Model`ProcessModels`modelsP]]]], 
             Apply[And, 
              Map[
              MatchQ[#, 
                "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"]& , 
               Flatten[
                Map[Cases[
                  ReplaceRepeated[
                   Model`ProcessModels`wc[Model`ProcessModels`t], 
                   Normal[
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]], 
                  PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                    SymbolName[#]]& ][
                    BlankSequence[]] :> Context[Model`ProcessModels`var], 
                  Infinity]& , 
                 Keys[Model`ProcessModels`modelsP]]]]], 
             Apply[And, 
              Map[MatchQ[#, "FernandoDuarte`LongRunRisk`Model`Parameters`"]& , 
               Flatten[
                Map[Cases[
                  ReplaceRepeated[
                   Model`ProcessModels`wc[Model`ProcessModels`t], 
                   Normal[
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]], 
                  PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Context[Model`ProcessModels`var], 
                  Infinity]& , 
                 Keys[Model`ProcessModels`modelsP]]]]], 
             Apply[And, 
              Map[MatchQ[#, "FernandoDuarte`LongRunRisk`Model`Shocks`"]& , 
               Flatten[
                Map[Cases[
                  ReplaceRepeated[
                   Model`ProcessModels`wc[Model`ProcessModels`t], 
                   Normal[
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]], 
                  PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                    BlankSequence[]][
                    BlankSequence[]] :> Context[Model`ProcessModels`var], 
                  Infinity]& , 
                 Keys[Model`ProcessModels`modelsP]]]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.008169`4.062683893891619, "CPUTimeUsed" -> 0.0081869999999995, 
         "MemoryUsed" -> 35536, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4999129460779555817 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905826536716628*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "cc93e1a4-ed66-41e2-9e11-41e1a58ec2de", "TestID" -> 
         "ProcessModels_20231009-USIQ90", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "16476a8f-4448-42df-b01b-662d5d3c3d1a", "Input" -> HoldForm[
           Apply[And, {
             Apply[And, 
              Map[MatchQ[{}, #]& , 
               Map[Cases[
                 ReplaceRepeated[
                  Model`ProcessModels`bondexcret[
                  Model`ProcessModels`t, Model`ProcessModels`i], 
                  Normal[
                   Model`ProcessModels`modelsP[#]["endogenousEq"]]], 
                 PatternTest[
                   Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                    SymbolName[#]]& ][
                   BlankSequence[]] :> Model`ProcessModels`var, Infinity]& , 
                Keys[Model`ProcessModels`modelsP]]]], 
             Apply[And, 
              Map[
              MatchQ[#, 
                "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"]& , 
               Flatten[
                Map[Cases[
                  ReplaceRepeated[
                   Model`ProcessModels`bondexcret[
                   Model`ProcessModels`t, Model`ProcessModels`i], 
                   Normal[
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]], 
                  PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                    SymbolName[#]]& ][
                    BlankSequence[]] :> Context[Model`ProcessModels`var], 
                  Infinity]& , 
                 Keys[Model`ProcessModels`modelsP]]]]], 
             Apply[And, 
              Map[MatchQ[#, "FernandoDuarte`LongRunRisk`Model`Parameters`"]& , 
               Flatten[
                Map[Cases[
                  ReplaceRepeated[
                   Model`ProcessModels`bondexcret[
                   Model`ProcessModels`t, Model`ProcessModels`i], 
                   Normal[
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]], 
                  PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Context[Model`ProcessModels`var], 
                  Infinity]& , 
                 Keys[Model`ProcessModels`modelsP]]]]], 
             Apply[And, 
              Map[MatchQ[#, "FernandoDuarte`LongRunRisk`Model`Shocks`"]& , 
               Flatten[
                Map[Cases[
                  ReplaceRepeated[
                   Model`ProcessModels`bondexcret[
                   Model`ProcessModels`t, Model`ProcessModels`i], 
                   Normal[
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]], 
                  PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                    BlankSequence[]][
                    BlankSequence[]] :> Context[Model`ProcessModels`var], 
                  Infinity]& , 
                 Keys[Model`ProcessModels`modelsP]]]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.030843`4.639671611701181, "CPUTimeUsed" -> 0.03085399999999794, 
         "MemoryUsed" -> 20408, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 6092130251443576952 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905826536747721*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "bf215a8f-b111-4102-8555-8918334a3a49", "TestID" -> 
         "ProcessModels_20231009-01ILTG", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "d329ce9c-02f0-43fd-bdeb-057a7c0dc968", "Input" -> HoldForm[
           Apply[And, {
             AllTrue[
              Map[Head, 
               Keys[
                Model`ProcessModels`modelsP["BKY"]["exogenousEq"]]], 
              MatchQ[#, PatternTest]& ], 
             AllTrue[
              Map[Head, 
               Keys[
                Model`ProcessModels`modelsP["BKY"]["endogenousEq"]]], 
              MatchQ[#, PatternTest]& ]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000035`1.6945830421822672, "CPUTimeUsed" -> 0.00003499999999689862,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 6090923909913028306 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905826536748072*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "2c61222f-2053-41de-b12d-a1d9f981cd76", "TestID" -> 
         "ProcessModels_20231009-WT9V0J", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "54a73d9c-d47f-4bc5-8825-7ff0a02ace4a", "Input" -> HoldForm[
           Apply[And, {
             Apply[And, 
              Map[Not, 
               Map[Head[
                  Model`ProcessModels`dc[Model`ProcessModels`t]] === Head[
                  ReplaceAll[
                   Model`ProcessModels`dc[Model`ProcessModels`t], 
                   Normal[
                    Join[
                    Model`ProcessModels`modelsP[#]["exogenousEq"], 
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
                Keys[Model`ProcessModels`modelsP]]]], 
             Apply[And, 
              Map[Not, 
               Map[Head[
                  Model`ProcessModels`dd[
                  Model`ProcessModels`t, Model`ProcessModels`i]] === Head[
                  ReplaceAll[
                   Model`ProcessModels`dd[
                   Model`ProcessModels`t, Model`ProcessModels`i], 
                   Normal[
                    Join[
                    Model`ProcessModels`modelsP[#]["exogenousEq"], 
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
                Keys[Model`ProcessModels`modelsP]]]], 
             Apply[And, 
              Map[Not, 
               Map[Head[
                  Model`ProcessModels`wc[Model`ProcessModels`t]] === Head[
                  ReplaceAll[
                   Model`ProcessModels`wc[Model`ProcessModels`t], 
                   Normal[
                    Join[
                    Model`ProcessModels`modelsP[#]["exogenousEq"], 
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
                Keys[Model`ProcessModels`modelsP]]]], 
             Apply[And, 
              Map[Not, 
               Map[Head[
                  Model`ProcessModels`sdf[Model`ProcessModels`t]] === Head[
                  ReplaceAll[
                   Model`ProcessModels`sdf[Model`ProcessModels`t], 
                   Normal[
                    Join[
                    Model`ProcessModels`modelsP[#]["exogenousEq"], 
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
                Keys[Model`ProcessModels`modelsP]]]], 
             Apply[And, 
              Map[Not, 
               Map[Head[
                  Model`ProcessModels`bondyield[Model`ProcessModels`t]] === 
                Head[
                  ReplaceAll[
                   Model`ProcessModels`bondyield[Model`ProcessModels`t], 
                   Normal[
                    Join[
                    Model`ProcessModels`modelsP[#]["exogenousEq"], 
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
                Keys[Model`ProcessModels`modelsP]]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.001263`3.2519183483873224, "CPUTimeUsed" -> 0.0012499999999988631`,
          "MemoryUsed" -> 13056, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 3484395737792486593 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905826536749577*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "8d666fae-4bf1-47a9-b5b1-3b19d612e4b6", "TestID" -> 
         "ProcessModels_20231009-CET43T", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "83bfbeba-25d5-4f3e-b741-ddb5844670ed", "Input" -> HoldForm[
           Apply[And, {
             Apply[And, 
              Map[Head[
                 Model`ProcessModels`notVar[Model`ProcessModels`t]] === Head[
                 ReplaceAll[
                  Model`ProcessModels`notVar[Model`ProcessModels`t], 
                  Normal[
                   Join[
                    Model`ProcessModels`modelsP[#]["exogenousEq"], 
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
               Keys[Model`ProcessModels`modelsP]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000286`2.6068810309610346, "CPUTimeUsed" -> 0.0002859999999991203, 
         "MemoryUsed" -> 9904, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 5530854330955031311 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905826536750155*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "c3a59be1-5c6c-42ab-99f5-d5a4d87a0e85", "TestID" -> 
         "ProcessModels_20231009-41WCOQ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "b9c1acc0-b6a7-4980-95c0-cd03199f1693", "Input" -> 
         HoldForm[
          Model`ProcessModels`modelBY = 
            FernandoDuarte`LongRunRisk`Model`Catalog`models["BY"]; 
           Model`ProcessModels`modelBKY = 
            FernandoDuarte`LongRunRisk`Model`Catalog`models["BKY"]; 
           Model`ProcessModels`modelBKYP = 
            FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[<|
              "BKY" -> Model`ProcessModels`modelBKY|>]; 
           Model`ProcessModels`modelBYP = 
            FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[<|
              "BY" -> Model`ProcessModels`modelBY|>]; 
           Model`ProcessModels`newModels = <|
             "myModel" -> Model`ProcessModels`modelBKY, "BY" -> 
              Model`ProcessModels`modelBY|>; 
           Model`ProcessModels`newModelsSameName = <|
             "BY" -> Model`ProcessModels`modelBY|>; 
           Model`ProcessModels`newModelsRename = <|
             "myModel" -> Model`ProcessModels`modelBY|>; 
           Model`ProcessModels`newModelsP = 
            FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
             Model`ProcessModels`newModels]; 
           Model`ProcessModels`newModelsSameNameP = 
            FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
             Model`ProcessModels`newModelsSameName]; 
           Model`ProcessModels`newModelsRenameP = 
            FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
             Model`ProcessModels`newModelsRename]; Apply[And, {
              ((KeyDrop[#, "coeffsSolution"]& )[
                Model`ProcessModels`newModelsP["myModel"]] === 
              KeyDrop[#, "coeffsSolution"]& )[
               Model`ProcessModels`modelBKYP["BKY"]], 
              ((KeyDrop[#, "coeffsSolution"]& )[
                Model`ProcessModels`newModelsP["BY"]] === 
              KeyDrop[#, "coeffsSolution"]& )[
               Model`ProcessModels`modelBYP["BY"]], 
              ((KeyDrop[#, "coeffsSolution"]& )[
                Model`ProcessModels`newModelsSameNameP["BY"]] === 
              KeyDrop[#, "coeffsSolution"]& )[
               Model`ProcessModels`modelBYP["BY"]], 
              ((KeyDrop[#, "coeffsSolution"]& )[
                Model`ProcessModels`newModelsRenameP["myModel"]] === 
              KeyDrop[#, "coeffsSolution"]& )[
               Model`ProcessModels`modelBYP["BY"]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         16.517911`7.368470119597278, "CPUTimeUsed" -> 17.024867000000004`, 
         "MemoryUsed" -> 4016056, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>]|>, "FailureResults" -> <||>, 
    "TestsNotEvaluatedKeys" -> {}, "TestsFailedWrongResultsKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {5375586827632559237, 8829631460073174223, 
     7065978814432599590, 7403741812579976897, 2918980053794528012, 
     8331150784174585897, 1707376024930864927, 1172341351109433578, 
     2846401956749092421, 7869456138112647227, 6335317185105275984, 
     6683542446703220094, 7919038921161862590, 870670436681468228, 
     38788944001558376, 9130567563134781192, 6555753855618882404, 
     6952804194955476956, 6535147874673363883, 780153361385362848, 
     4999129460779555817, 6092130251443576952, 6090923909913028306, 
     3484395737792486593, 5530854330955031311}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9058265534580603`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"dc5af840-9c77-406e-8b70-78766e997000"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"expected", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Flatten", "@", 
       RowBox[{"{", 
        RowBox[{"(", 
         RowBox[{"ReleaseHold", "@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
            RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
         ")"}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"jj", ",", "1", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "value", " ", "of", " ", "next", " ", "two", " ", "lines", " ", "should", 
    " ", "be", " ", "true"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"numEntries", "=", 
     RowBox[{
      RowBox[{"Dimensions", "[", "actual", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"numCol", "=", "5"}], ";", "\[IndentingNewLine]", 
    RowBox[{"numRows", "=", 
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{"numEntries", "/", "numCol"}], "]"}], "+", "1"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"TableForm", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ArrayReshape", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"TableForm", "[", 
              RowBox[{"{", 
               RowBox[{"#1", ",", "#2"}], "}"}], "]"}], "&"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"actual", ",", "\[IndentingNewLine]", "expected"}], 
             "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}], 
          "\[IndentingNewLine]", "}"}], "\[Transpose]"}], ",", 
        RowBox[{"{", 
         RowBox[{"numRows", ",", "numCol"}], "}"}], ",", "\"\<--\>\""}], 
       "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{"TableDepth", "\[Rule]", "1"}]}], " ", "]"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.905694462163437*^9, 3.905694478942039*^9}, {
   3.905697309999281*^9, 3.905697352099519*^9}, {3.905698637086853*^9, 
   3.905698637247707*^9}, {3.9056993097841167`*^9, 3.905699372508963*^9}, {
   3.905701884187395*^9, 3.905701885054824*^9}, {3.905767492744175*^9, 
   3.9057674935249777`*^9}, 3.9057678324661016`*^9, {3.905826299500319*^9, 
   3.9058263010264473`*^9}, {3.905826564911167*^9, 3.905826565857295*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"9ff6cbc9-039e-4dab-acd6-edafbf0c33ff"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.905826553552198*^9, 3.905826566487685*^9}},
 CellLabel->"Out[53]=",ExpressionUUID->"ead5ec2a-6425-40af-b404-9e5a2e786777"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.905826553552198*^9, 3.9058265664890347`*^9}},
 CellLabel->"Out[54]=",ExpressionUUID->"405a9e57-c2df-48d7-a12d-1db35b0db018"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Interactive Tests", "Subsection",
 CellChangeTimes->{{3.889905622471089*^9, 3.889905629759961*^9}, {
  3.889972063478182*^9, 
  3.889972065236586*^9}},ExpressionUUID->"2c4a83cf-8af5-4d19-89ae-\
a864a258310f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"packageFileName", "=", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DirectoryName", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "2"}], "]"}], ",", 
     "\"\<Kernel\>\"", ",", "\"\<Model\>\"", ",", 
     RowBox[{
      RowBox[{"FileBaseName", "[", 
       RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", "\"\<.wl\>\""}]}],
     "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", 
  RowBox[{
   RowBox[{"\"\<FernandoDuarte`LongRunRisk`Model`\>\"", "<>", 
    RowBox[{"FileBaseName", "[", 
     RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", "\"\<`\>\""}], ",", 
   "packageFileName"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<FernandoDuarte`LongRunRisk`Model`Catalog`\>\"", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.889968360919714*^9, 3.889968361169221*^9}, {
   3.889998753242611*^9, 3.8899987613556004`*^9}, 3.890825576987958*^9, {
   3.890987450098063*^9, 3.8909874502616673`*^9}, {3.8934756468185673`*^9, 
   3.893475650004422*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"f275bdc7-d1c5-4b14-9c2f-42b3fa65a747"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Kernel/Model/ProcessModels.wl\"\>"], \
"Output",
 CellChangeTimes->{3.905826575174717*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"911f1c21-5caa-48dc-9009-12db8490e364"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"modelsP", "=", 
     RowBox[{"processModels", "[", "models", "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"mm", "=", "models"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"subset", " ", "=", " ", 
     RowBox[{"\"\<BY\>\"", "|", "\"\<BKY\>\"", 
      RowBox[{"(*", 
       RowBox[{
       "|", "\"\<NRC\>\"", "|", "\"\<WCratio\>\"", "|", "\"\<hassel\>\""}], 
       "*)"}], "|", "\"\<BS\>\"", "|", "\"\<DES\>\""}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ms", "=", 
     RowBox[{"KeySelect", "[", 
      RowBox[{"mm", ",", 
       RowBox[{
        RowBox[{"MatchQ", "[", 
         RowBox[{"#", ",", " ", "subset"}], "]"}], "&"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mi", "=", 
     RowBox[{"KeySelect", "[", 
      RowBox[{"modelsExtraInfo", ",", 
       RowBox[{
        RowBox[{"MatchQ", "[", 
         RowBox[{"#", ",", "subset"}], " ", "]"}], "&"}]}], "]"}]}], ";"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.893003987314953*^9, 3.893004026425699*^9}, {
   3.8930856211076393`*^9, 3.893085624075651*^9}, {3.8931451899537*^9, 
   3.8931451945216627`*^9}, {3.8934757109210987`*^9, 3.893475715416621*^9}, {
   3.894796208784259*^9, 3.8947962740673447`*^9}, 3.894796381812685*^9, 
   3.8947967283672667`*^9, 3.894796997365782*^9, {3.894801758792932*^9, 
   3.894801782365992*^9}, 3.9058224704086027`*^9},
 CellLabel->"In[58]:=",ExpressionUUID->"f0dac05b-ee28-4e13-835c-2ef9d8d0b4c2"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Models", " ", "=", " ", 
    RowBox[{"processModels", "[", 
     RowBox[{"ms", ",", "mi"}], "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.894798379205834*^9, 3.894798410574834*^9}, {
  3.8948015481951513`*^9, 3.894801548491693*^9}, {3.89480158478799*^9, 
  3.894801619887068*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"ae834adf-53c5-48f1-9622-c69293a51957"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"tempfile", "=", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DirectoryName", "[", 
         RowBox[{
          RowBox[{"NotebookDirectory", "[", "]"}], ",", "2"}], "]"}], ",", 
        "\"\<Temp\>\"", ",", "\"\<Models.mx\>\""}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DumpSave", "[", 
     RowBox[{"tempfile", ",", "Models"}], "]"}], ";"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.894798379205834*^9, 3.894798410574834*^9}, {
  3.8948015481951513`*^9, 3.894801548491693*^9}, {3.89480158478799*^9, 
  3.894801627699708*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"a034aa39-6f0e-4aa1-88e1-7b3452b54788"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Models", "[", "\"\<NRC\>\"", "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.894801908942288*^9, 3.894801911601321*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"9bdfcdda-2cea-4c49-a1e8-165457a789ff"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"tempfile", "=", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"DirectoryName", "[", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], ",", "2"}], "]"}], ",", 
       "\"\<Temp\>\"", ",", "\"\<Models.mx\>\""}], "}"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Get", "[", "tempfile", "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.894797364776422*^9, 3.894797382494391*^9}, {
  3.894797466935896*^9, 3.894797467144679*^9}, {3.894801703778757*^9, 
  3.894801704178009*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"339baa73-32d4-47bd-bc3e-218de5f9097f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"resourcesDir", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DirectoryName", "[", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "2"}], "]"}], ",", 
      "\"\<Resources\>\""}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"filename", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"resourcesDir", ",", "\"\<Models.wl\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Get", "[", "filename", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "@", "data"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modelsP", "=", "FernandoDuarte`LongRunRisk`Models"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.905823471999531*^9, 3.905823472096312*^9}, 
   3.90582414475002*^9, 3.905825524183859*^9, {3.9058257636057587`*^9, 
   3.905825769590568*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"65d4b552-0021-4f46-bb34-71f4f20940b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Keys", " ", "are", " ", "strings"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{"StringQ", "/@", 
     RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{
  3.89000889839254*^9, {3.890016339728188*^9, 3.890016342139681*^9}, 
   3.891251908164126*^9, {3.8930041333335657`*^9, 3.8930041384325933`*^9}, {
   3.9058240207360353`*^9, 3.905824074472884*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"78177850-499e-456b-b442-fad780dafdf0"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575364916*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"8ef711d8-e620-42db-a80e-7764c649f778"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"string", " ", "fields"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{"StringQ", "/@", 
     RowBox[{"Flatten", "@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<name\>\"", "]"}], 
           ",", 
           RowBox[{
            RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<shortname\>\"", 
            "]"}], ",", 
           RowBox[{
            RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<bibRef\>\"", "]"}], 
           ",", 
           RowBox[{
            RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<desc\>\"", "]"}], 
           ",", 
           RowBox[{
            RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<exogenousVars\>\"", 
            "]"}], ",", 
           RowBox[{
            RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<endogenousVars\>\"",
             "]"}]}], "}"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.890008770382118*^9, 3.890008858894733*^9}, {
  3.890016345133547*^9, 3.8900163569166937`*^9}, {3.891251925999875*^9, 
  3.891251929267716*^9}, {3.89300415697269*^9, 3.893004157463492*^9}, {
  3.8930148354335337`*^9, 3.893014849329674*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"a17059c2-5416-45b1-b84e-0c2f842f7fb5"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575377797*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"097ba8b1-c561-4242-8229-fd000616d141"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"parameters", " ", "evaluate", " ", "to", " ", "numbers"}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"NumberQ", "/@", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Values", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Association", "@", 
             RowBox[{
              RowBox[{"models", "[", "#", "]"}], "[", "\"\<parameters\>\"", 
              "]"}]}], "//.", 
            RowBox[{
             RowBox[{"models", "[", "#", "]"}], "[", "\"\<parameters\>\"", 
             "]"}]}], "//", "N"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"Keys", "@", "models"}], ")"}]}], "]"}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"NumberQ", "/@", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Values", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Association", "@", 
             RowBox[{
              RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<parameters\>\"", 
              "]"}]}], "//.", 
            RowBox[{
             RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<parameters\>\"", 
             "]"}]}], "//", "N"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"Keys", "@", "modelsP"}], ")"}]}], "]"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.890008965671461*^9, 3.8900089726778793`*^9}, {
   3.8900090147612762`*^9, 3.890009193827691*^9}, 3.8900101461421833`*^9, 
   3.890015540563738*^9, {3.8900156352184877`*^9, 3.89001567714233*^9}, 
   3.8912519303524723`*^9, {3.891640840825358*^9, 3.8916408678776903`*^9}, {
   3.89164090174683*^9, 3.8916409201814632`*^9}, 3.892974136542371*^9, {
   3.89300417575723*^9, 3.893004176318849*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"61202b86-4708-4e03-aa51-3fcb0e388f46"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575388876*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"5cea24c7-1cc5-4278-b73f-a45b03209d4c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9058265753898*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"f66677f4-cc18-459b-bb15-f49fdc4ac435"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"can", " ", "find", " ", "some", " ", "models"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"Keys", "[", "models", "]"}], ",", "#"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<BY\>\"", ",", "\"\<BKY\>\""}], "}"}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"Keys", "[", "modelsP", "]"}], ",", "#"}], "]"}], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{"Keys", "@", "modelsP"}], ")"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8900087062162313`*^9, 3.890008740193614*^9}, {
   3.89001637048425*^9, 3.890016372993977*^9}, 3.8912519320207787`*^9, {
   3.891640927230764*^9, 3.891640929613118*^9}, 3.892974170435498*^9, {
   3.893004184988491*^9, 3.8930041852126703`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"78983d07-8f42-43d9-a50f-d26a03b2ee5c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575392767*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"6d93bba0-8156-4185-becc-2202590544bc"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.90582657539349*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"fb76dd7f-cf57-440a-a555-ca8e9de4790c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"models", ",", " ", 
    RowBox[{"modelsP", " ", "are", " ", "associations"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"AllTrue", "[", 
    RowBox[{"models", ",", "AssociationQ"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"AllTrue", "[", 
    RowBox[{"modelsP", ",", "AssociationQ"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"each", " ", "model", " ", "inside", " ", "models"}], ",", " ", 
     RowBox[{
     "modelsP", " ", "are", " ", "themselves", " ", "an", " ", 
      "association"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"AllTrue", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"models", "[", "#", "]"}], "&"}], "/@", 
      RowBox[{"Keys", "[", "models", "]"}]}], ",", "AssociationQ"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"AllTrue", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"modelsP", "[", "#", "]"}], "&"}], "/@", 
      RowBox[{"Keys", "[", "modelsP", "]"}]}], ",", "AssociationQ"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8900086430073547`*^9, 3.890008684982678*^9}, {
  3.890010177349143*^9, 3.890010179091837*^9}, {3.8900163791247263`*^9, 
  3.890016449580503*^9}, {3.891251933188879*^9, 3.891251935189865*^9}, {
  3.891640937075639*^9, 3.891640945348556*^9}, {3.893004194158003*^9, 
  3.893004229582778*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"33533fdf-b808-460b-a76c-9a554476db8f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575396047*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"647c69fe-fd46-4081-8556-c6699b870e3b"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.90582657539673*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"5d84b0e8-fc15-44c5-84cc-3589eff8242a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9058265753971653`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"ba3ef7c7-9288-4998-ba91-0965f537a6c3"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575397676*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"000b28cd-c773-402c-b290-0ccebb38057d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "exogenous", " ", "variables", " ", "are", " ", "in", " ", 
    "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\"\
"}], ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<stateVars\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", 
                 "Infinity"}], "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<modelAssumptions\>\"", "*)"}], "\[IndentingNewLine]", 
     
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\"\
"}], ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<modelAssumptions\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", 
                 "Infinity"}], "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<exogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\"\
"}], ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<exogenousEq\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", 
                 "Infinity"}], "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<endogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\"\
"}], ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<endogenousEq\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", 
                 "Infinity"}], "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}], 
    "\[IndentingNewLine]", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.893001201934902*^9, 3.893001214021667*^9}, {
   3.893001245798745*^9, 3.8930012743606873`*^9}, {3.893001352341578*^9, 
   3.893001386197197*^9}, {3.893001448430169*^9, 3.893001448726687*^9}, 
   3.8930026482885447`*^9, {3.8930042711283293`*^9, 3.8930042721384*^9}, {
   3.89301215129099*^9, 3.893012163688088*^9}, {3.893014370482971*^9, 
   3.893014438233089*^9}, {3.893014486322825*^9, 3.893014499135116*^9}, {
   3.893014551885273*^9, 3.893014565016636*^9}, 3.893016122561097*^9},
 CellLabel->"In[78]:=",ExpressionUUID->"534ec6f3-3445-4373-873f-bcdfb93d1e96"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575410779*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"d50a9776-96d7-4879-b2e0-84b22e3e83a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "shocks", " ", "are", " ", "in", " ", "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], ")"}], 
              "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<stateVars\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                   "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
                "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<modelAssumptions\>\"", "*)"}], "\[IndentingNewLine]", 
     
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], ")"}], 
              "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<modelAssumptions\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                   "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
                "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<exogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], ")"}], 
              "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<exogenousEq\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                   "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
                "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<endogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], ")"}], 
              "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<endogenousEq\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                   "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
                "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}], 
    "\[IndentingNewLine]", "}"}]}]}]], "Input",
 CellChangeTimes->{
  3.893001499960679*^9, {3.893002667440094*^9, 3.89300269939427*^9}, {
   3.893003083367228*^9, 3.893003083692607*^9}, {3.8930042730060863`*^9, 
   3.893004273989354*^9}, {3.893012064247108*^9, 3.8930120867411222`*^9}, {
   3.893014419748905*^9, 3.893014445806767*^9}, {3.893014573318915*^9, 
   3.893014592005512*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"0345d276-1ede-4d49-bc84-8f6ffb7b45d1"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9058265754145613`*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"fdd03402-6e60-4aa8-a573-df598382be5d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "parameters", " ", "are", " ", "in", " ", "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"(*", "\"\<parameters\>\"", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
               ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<parameters\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{"var_Symbol", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
              ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
               ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<stateVars\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{"var_Symbol", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
              ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<modelAssumptions\>\"", "*)"}], "\[IndentingNewLine]", 
     
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
               ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<modelAssumptions\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{"var_Symbol", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
              ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<exogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
               ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<exogenousEq\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{"var_Symbol", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
              ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<endogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
               ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<endogenousEq\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{"var_Symbol", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
              ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}], 
    "\[IndentingNewLine]", "}"}]}]}]], "Input",
 CellChangeTimes->{
  3.893001501399847*^9, {3.893002703969759*^9, 3.893002740019191*^9}, {
   3.893003056880762*^9, 3.893003109272599*^9}, {3.893003787588058*^9, 
   3.893003788104986*^9}, {3.893004274886281*^9, 3.893004277331174*^9}, {
   3.893012058196281*^9, 3.893012058639546*^9}, {3.8930144234979*^9, 
   3.8930144532880163`*^9}, {3.8930146005691023`*^9, 3.893014621517111*^9}, 
   3.893016128067835*^9},
 CellLabel->"In[80]:=",ExpressionUUID->"c15b2752-0fa5-4e0d-b1ab-0c8175dd4505"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9058265754250193`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"2efb13e1-57ae-4055-acf1-c2571ba7437a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "endogenous", " ", "variables", " ", "are", " ", "in", " ", 
    "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\>\""}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\"\<modelAssumptions\>\"", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\>\
\""}], ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<modelAssumptions\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", 
                 "Infinity"}], "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<endogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\>\
\""}], ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<endogenousEq\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", 
                 "Infinity"}], "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}], 
    "\[IndentingNewLine]", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.8930122537493258`*^9, 3.893012300221422*^9}, {
  3.893014429011052*^9, 3.893014460982974*^9}, {3.893014634019079*^9, 
  3.893014636342099*^9}, {3.893014692448086*^9, 3.89301469383664*^9}, {
  3.893014770636636*^9, 3.893014779588964*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"7b9a7110-6fcf-4036-b444-4addeb8c2186"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575443717*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"e1c00979-255d-40b8-952b-322850c04587"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"all", " ", "coefficients", " ", "of", " ", "wc"}], ",", " ", 
    "pd", ",", " ", 
    RowBox[{
    "bond", " ", "ratios", " ", "are", " ", "in", " ", "context", " ", 
     "\"\<FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\>\""}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"coefs", "=", 
     RowBox[{"Alternatives", "@@", 
      RowBox[{"SymbolName", "/@", 
       RowBox[{"{", 
        RowBox[{
        "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc", ",", 
         RowBox[{
         "Head", "@", 
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd"}], 
         ",", 
         RowBox[{
         "Head", "@", 
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb"}], 
         ",", 
         RowBox[{
         "Head", "@", 
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb"}]}], 
        "}"}]}]}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
        "#", "===", 
         "\"\<FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\>\""}], 
        ")"}], "&"}], "/@", 
      RowBox[{"Flatten", "@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"modelsP", "[", "#", "]"}], "[", 
             "\"\<modelAssumptions\>\"", "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"var_Symbol", "?", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"MatchQ", "[", 
                   RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", "coefs"}], 
                   "]"}], "&"}], ")"}]}], "|", 
               RowBox[{
                RowBox[{"var_Symbol", "?", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", "coefs"}], 
                    "]"}], "&"}], ")"}]}], "[", "__", "]"}]}], ")"}], ":>", 
             RowBox[{"Context", "[", "var", "]"}]}], ",", "Infinity"}], "]"}],
           "&"}], "/@", 
         RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.893012389695546*^9, 3.893012429793953*^9}, {
  3.893012999712995*^9, 3.893013013257292*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"1ab266c5-0090-45e7-9943-52d59a261191"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575447743*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"2f9efcc9-67a5-4a9a-b08c-dd0c8bf760e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "should", " ", "not", " ", "have", " ", "any", " ", "endogenous", " ", 
    "variables"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{
           RowBox[{"{", "}"}], ",", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
              "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"var_Symbol", "?", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"MemberQ", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                 ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
            "]"}], "&"}], "/@", 
          RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<exogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{
           RowBox[{"{", "}"}], ",", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<exogenousEq\>\"", 
              "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"var_Symbol", "?", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"MemberQ", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                 ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
            "]"}], "&"}], "/@", 
          RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}]}], 
    "\[IndentingNewLine]", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.89300111387222*^9, 3.8930011727459707`*^9}, {
   3.893001247830225*^9, 3.893001299678648*^9}, {3.893001353751255*^9, 
   3.8930015072417727`*^9}, {3.893002707727394*^9, 3.893002708411419*^9}, {
   3.893002748062245*^9, 3.893002826831513*^9}, 3.89300297523416*^9, {
   3.893003086535989*^9, 3.893003086763905*^9}, {3.8930042788551702`*^9, 
   3.893004279626916*^9}, {3.8930147061742983`*^9, 3.8930147624521227`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"15557545-9517-4d8e-be17-18fad593c1c8"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575460981*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"92500b18-ead2-4520-808f-6f77fa266a31"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "keys", " ", "and", " ", "shortname", " ", "are", " ", "preserved"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"SubsetQ", "[", 
      RowBox[{
       RowBox[{"Keys", "[", "models", "]"}], ",", 
       RowBox[{"Keys", "[", "modelsP", "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"SubsetQ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"models", "[", "#", "]"}], "[", "\"\<shortname\>\"", "]"}], 
         "&"}], "/@", 
        RowBox[{"Keys", "[", "models", "]"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<shortname\>\"", "]"}],
          "&"}], "/@", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.89301161589116*^9, 3.893011697195755*^9}, 
   3.893144709678164*^9, 3.893144758132229*^9},
 CellLabel->"In[85]:=",ExpressionUUID->"cd064082-f805-44ec-a045-aa1fa3aceeba"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575464373*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"e708efab-61c9-4cf6-9ba6-415f599c5873"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "stateVars", " ", "are", " ", "functions", " ", "of", " ", "one", " ", 
    "variable", " ", 
    RowBox[{"(", "time", ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{"Function", ",", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"Head", "/@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
               "]"}], ")"}], "&"}], "/@", 
            RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
       ")"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{"List", ",", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"Head", "/@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
                "]"}], "[", "t", "]"}], ")"}], "&"}], "/@", 
            RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
       ")"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{"1", ",", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"Length", "/@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
                "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ")"}], "&"}], "/@", 
            RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
       ")"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{"\"\<t\>\"", ",", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"SymbolName", "@@", 
             RowBox[{
              RowBox[{
               RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
               "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "&"}], "/@", 
          RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "evaluating", " ", "the", " ", "function", " ", "at", " ", 
       "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t", " ", "gives",
        " ", "the", " ", "same", " ", "as", " ", "\"\<stateVars\>\"", " ", 
       "in", " ", "models"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
            "]"}], "[", 
           "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t", "]"}], 
          ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}], "===", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"models", "[", "#", "]"}], "[", "\"\<stateVars\>\"", "]"}],
           ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}], 
    "\[IndentingNewLine]", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.893011149678734*^9, 3.893011151120873*^9}, {
   3.893011197672791*^9, 3.893011393092401*^9}, {3.8930114244175577`*^9, 
   3.893011594633165*^9}, {3.893011701053651*^9, 3.89301170872368*^9}, {
   3.8930117913212442`*^9, 3.893011831744893*^9}, 3.893013045538563*^9, 
   3.893144850494865*^9},
 CellLabel->"In[86]:=",ExpressionUUID->"5ef11f51-f78f-4db1-8add-279c869573f2"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575476613*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"c18e5e2b-ad2f-461b-a181-9d5094c9d3a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"numStocks", " ", "is", " ", "a", " ", "number"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{"NumberQ", "/@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<numStocks\>\"", "]"}], 
        "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{"Keys", "@", "modelsP"}], ")"}]}], ")"}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.893011853833601*^9, 3.893011940133402*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"488002c0-cddc-467b-bc55-ab11b4063392"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575479951*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"f30cba62-39c6-4115-86f2-8cd3166b01fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"compare", " ", "to", " ", "some", " ", "hand"}], "-", 
    RowBox[{
    "written", " ", "expressions", " ", "known", " ", "to", " ", "be", " ", 
     "correct"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"model", "=", 
     RowBox[{"modelsP", "[", "\"\<NRC\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"pi", "[", "myContext`t", "]"}], "/.", 
         RowBox[{"Normal", "@", 
          RowBox[{"model", "[", "\"\<exogenousEq\>\"", "]"}]}]}], ")"}], "===", 
       RowBox[{"(", 
        RowBox[{"FernandoDuarte`LongRunRisk`Model`Parameters`mup", "+", 
         RowBox[{"FernandoDuarte`LongRunRisk`Model`Parameters`rhop", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "FernandoDuarte`LongRunRisk`Model`Parameters`mup"}], 
            "+", 
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi", "[", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "myContext`t"}], "]"}]}], ")"}]}], "+", 
         RowBox[{"FernandoDuarte`LongRunRisk`Model`Parameters`xip", " ", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<pi\>\"", 
            "]"}], "[", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "myContext`t"}], "]"}]}], "+", 
         RowBox[{"FernandoDuarte`LongRunRisk`Model`Parameters`phip", " ", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<pi\>\"", 
            "]"}], "[", "myContext`t", "]"}]}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"eps", "[", "\"\<dc\>\"", "]"}], "[", "t", "]"}], "/.", 
         RowBox[{"model", "[", "\"\<exogenousEq\>\"", "]"}]}], ")"}], "===", 
       RowBox[{
        RowBox[{"eps", "[", "\"\<dc\>\"", "]"}], "[", "t", "]"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"dd", "[", 
          RowBox[{"t", ",", "i"}], "]"}], "/.", 
         RowBox[{"Normal", "@", 
          RowBox[{"model", "[", "\"\<exogenousEq\>\"", "]"}]}]}], ")"}], "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
         "FernandoDuarte`LongRunRisk`Model`Parameters`mud", "[", "i", "]"}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "FernandoDuarte`LongRunRisk`Model`Parameters`mup"}], 
            "+", 
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi", "[", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "t"}], "]"}]}], ")"}], " ", 
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`Parameters`rhodp", "[", "i", 
           "]"}]}], "+", 
         RowBox[{
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`Parameters`phidc", "[", "i", 
           "]"}], " ", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<dc\>\"", 
            "]"}], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg", "[", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "t"}], "]"}], " ", 
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`Parameters`xid", "[", "i", "]"}], 
          " ", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<pi\>\"", 
            "]"}], "[", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "t"}], "]"}]}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"wc", "[", "t", "]"}], "/.", 
         RowBox[{"Normal", "@", 
          RowBox[{"model", "[", "\"\<endogenousEq\>\"", "]"}]}]}], ")"}], "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
         "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A", "[", "0", 
          "]"}], "+", 
         RowBox[{
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A", "[", "1",
            "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "FernandoDuarte`LongRunRisk`Model`Parameters`mup"}], 
            "+", 
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi", "[", 
             "t", "]"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A", "[", "4",
            "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "FernandoDuarte`LongRunRisk`Model`Parameters`Esg"}], 
            "+", 
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg", "[", 
             "t", "]"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A", "[", "5",
            "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             
             SuperscriptBox["FernandoDuarte`LongRunRisk`Model`Parameters`Esg",
               "2"]}], "-", 
            FractionBox[
             
             SuperscriptBox[
              "FernandoDuarte`LongRunRisk`Model`Parameters`phig", "2"], 
             RowBox[{"1", "-", 
              
              SuperscriptBox[
               "FernandoDuarte`LongRunRisk`Model`Parameters`rhog", "2"]}]], 
            "+", 
            SuperscriptBox[
             RowBox[{
             "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg", "[", 
              "t", "]"}], "2"]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A", "[", "3",
            "]"}], " ", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<pi\>\"", 
            "]"}], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A", "[", "2",
            "]"}], " ", 
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg", "[", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "t"}], "]"}], " ", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<pi\>\"", 
            "]"}], "[", "t", "]"}]}]}], ")"}]}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"pd", "[", 
          RowBox[{"t", ",", "i"}], "]"}], "/.", 
         RowBox[{"Normal", "@", 
          RowBox[{"model", "[", "\"\<endogenousEq\>\"", "]"}]}]}], ")"}], "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B", "[", "i",
            "]"}], "[", "0", "]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "FernandoDuarte`LongRunRisk`Model`Parameters`mup"}], 
            "+", 
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi", "[", 
             "t", "]"}]}], ")"}], " ", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B", "[", 
            "i", "]"}], "[", "1", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "FernandoDuarte`LongRunRisk`Model`Parameters`Esg"}], 
            "+", 
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg", "[", 
             "t", "]"}]}], ")"}], " ", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B", "[", 
            "i", "]"}], "[", "4", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             
             SuperscriptBox["FernandoDuarte`LongRunRisk`Model`Parameters`Esg",
               "2"]}], "-", 
            FractionBox[
             
             SuperscriptBox[
              "FernandoDuarte`LongRunRisk`Model`Parameters`phig", "2"], 
             RowBox[{"1", "-", 
              
              SuperscriptBox[
               "FernandoDuarte`LongRunRisk`Model`Parameters`rhog", "2"]}]], 
            "+", 
            SuperscriptBox[
             RowBox[{
             "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg", "[", 
              "t", "]"}], "2"]}], ")"}], " ", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B", "[", 
            "i", "]"}], "[", "5", "]"}]}], "+", 
         RowBox[{
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg", "[", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "t"}], "]"}], " ", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B", "[", 
            "i", "]"}], "[", "2", "]"}], " ", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<pi\>\"", 
            "]"}], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B", "[", 
            "i", "]"}], "[", "3", "]"}], " ", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<pi\>\"", 
            "]"}], "[", "t", "]"}]}]}], ")"}]}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"bondexcret", "[", 
          RowBox[{"t", ",", "i"}], "]"}], "/.", 
         RowBox[{"Normal", "@", 
          RowBox[{"model", "[", "\"\<endogenousEq\>\"", "]"}]}]}], ")"}], "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
         "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondret", "[", 
          RowBox[{"t", ",", "i", ",", "1"}], "]"}], "-", 
         RowBox[{
         "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondyield", 
          "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "+", "t"}], ",", "1"}], "]"}]}], ")"}]}], ",",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"bondexcret", "[", 
           RowBox[{"t", ",", "i"}], "]"}], "/.", 
          RowBox[{"Normal", "@", 
           RowBox[{"model", "[", "\"\<endogenousEq\>\"", "]"}]}]}], "/.", 
         RowBox[{"Normal", "@", 
          RowBox[{"model", "[", "\"\<endogenousEq\>\"", "]"}]}]}], ")"}], "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
         "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "+", "t"}], ",", "1"}], "]"}], "-", 
         RowBox[{
         "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "+", "t"}], ",", "i"}], "]"}], "+", 
         RowBox[{
         "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond", "[", 
          RowBox[{"t", ",", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "i"}]}], "]"}]}], ")"}]}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.893013112707829*^9, 3.8930131579451036`*^9}, {
   3.89301319949829*^9, 3.8930132312916937`*^9}, {3.893014937931109*^9, 
   3.893015014205209*^9}, {3.8930150778885803`*^9, 3.893015081667938*^9}, 
   3.8930161054031553`*^9, 3.893016326710898*^9, {3.893016391754463*^9, 
   3.893016409333332*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"1e137b4c-2ecb-4bf4-991e-502dc176baf0"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9058265754945383`*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"5e9c6d1d-f2f5-472d-ab6c-32af794f293c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
    "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "no", " ", 
    "endogenous", " ", "variables"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"And", "@@", 
      RowBox[{"(", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{
           RowBox[{"{", "}"}], ",", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"wc", "[", "t", "]"}], "//.", 
              RowBox[{"Normal", "@", 
               RowBox[{
                RowBox[{"modelsP", "[", "#", "]"}], "[", 
                "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"var_Symbol", "?", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"MemberQ", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                 ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
            "]"}], "&"}], "/@", 
          RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], 
       "\[IndentingNewLine]", ")"}]}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
       "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "exogenous", 
       " ", "variables", " ", "that", " ", "are", " ", "all", " ", "in", " ", 
       "context", " ", 
       "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{
          "#", ",", 
           "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
          "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"Flatten", "@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"wc", "[", "t", "]"}], "//.", 
                RowBox[{"Normal", "@", 
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"var_Symbol", "?", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                   ")"}]}], "[", "__", "]"}], ":>", 
                RowBox[{"Context", "@", "var"}]}], ",", "Infinity"}], "]"}], 
             "&"}], "/@", 
            RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
       ")"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
       "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "parameters", 
       " ", "that", " ", "are", " ", "all", " ", "in", " ", "context", " ", 
       "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{
          "#", ",", "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
          "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"Flatten", "@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"wc", "[", "t", "]"}], "//.", 
                RowBox[{"Normal", "@", 
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{"var_Symbol", "?", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                  ")"}]}], ":>", 
                RowBox[{"Context", "@", "var"}]}], ",", "Infinity"}], "]"}], 
             "&"}], "/@", 
            RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
       ")"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
       "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "shocks", " ", 
       "that", " ", "are", " ", "all", " ", "in", " ", "context", " ", 
       "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{
          "#", ",", "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], 
          "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"Flatten", "@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"wc", "[", "t", "]"}], "//.", 
                RowBox[{"Normal", "@", 
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"var_Symbol", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                 "[", "__", "]"}], ":>", 
                RowBox[{"Context", "@", "var"}]}], ",", "Infinity"}], "]"}], 
             "&"}], "/@", 
            RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
       ")"}]}]}], "\[IndentingNewLine]", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.893013644050221*^9, 3.8930136594716587`*^9}, {
  3.893013788159135*^9, 3.8930139106431017`*^9}, {3.89301401209753*^9, 
  3.893014103933299*^9}, {3.893014148442313*^9, 3.8930142719501123`*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"9228741c-bdf9-4027-a094-b007a53b75d5"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575506809*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"6cc6109c-1d43-4ea3-a9e7-df476a6d97c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
    "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "no", " ", 
    "endogenous", " ", "variables"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"And", "@@", 
      RowBox[{"(", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{
           RowBox[{"{", "}"}], ",", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"bondexcret", "[", 
               RowBox[{"t", ",", "i"}], "]"}], "//.", 
              RowBox[{"Normal", "@", 
               RowBox[{
                RowBox[{"modelsP", "[", "#", "]"}], "[", 
                "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"var_Symbol", "?", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"MemberQ", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                 ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
            "]"}], "&"}], "/@", 
          RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], 
       "\[IndentingNewLine]", ")"}]}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
       "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "exogenous", 
       " ", "variables", " ", "that", " ", "are", " ", "all", " ", "in", " ", 
       "context", " ", 
       "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{
          "#", ",", 
           "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
          "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"Flatten", "@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"bondexcret", "[", 
                 RowBox[{"t", ",", "i"}], "]"}], "//.", 
                RowBox[{"Normal", "@", 
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"var_Symbol", "?", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                   ")"}]}], "[", "__", "]"}], ":>", 
                RowBox[{"Context", "@", "var"}]}], ",", "Infinity"}], "]"}], 
             "&"}], "/@", 
            RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
       ")"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
       "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "parameters", 
       " ", "that", " ", "are", " ", "all", " ", "in", " ", "context", " ", 
       "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{
          "#", ",", "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
          "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"Flatten", "@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"bondexcret", "[", 
                 RowBox[{"t", ",", "i"}], "]"}], "//.", 
                RowBox[{"Normal", "@", 
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{"var_Symbol", "?", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                  ")"}]}], ":>", 
                RowBox[{"Context", "@", "var"}]}], ",", "Infinity"}], "]"}], 
             "&"}], "/@", 
            RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
       ")"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
       "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "shocks", " ", 
       "that", " ", "are", " ", "all", " ", "in", " ", "context", " ", 
       "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{
          "#", ",", "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], 
          "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"Flatten", "@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"bondexcret", "[", 
                 RowBox[{"t", ",", "i"}], "]"}], "//.", 
                RowBox[{"Normal", "@", 
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"var_Symbol", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                 "[", "__", "]"}], ":>", 
                RowBox[{"Context", "@", "var"}]}], ",", "Infinity"}], "]"}], 
             "&"}], "/@", 
            RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
       ")"}]}]}], "\[IndentingNewLine]", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.893013644050221*^9, 3.8930136594716587`*^9}, {
  3.893013788159135*^9, 3.8930139106431017`*^9}, {3.89301401209753*^9, 
  3.893014103933299*^9}, {3.893014148442313*^9, 3.893014235255294*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"f26d2032-c2da-40bd-bfb1-8e2c7187a48f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575543051*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"084d82bb-d26f-4b41-b125-6f0b21a5f09d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"AllTrue", "[", 
  RowBox[{
   RowBox[{"Head", "/@", 
    RowBox[{"(", 
     RowBox[{"Keys", "@", 
      RowBox[{
       RowBox[{"modelsP", "[", "\"\<BKY\>\"", "]"}], "[", 
       "\"\<exogenousEq\>\"", "]"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"MatchQ", "[", 
     RowBox[{"#", ",", "PatternTest"}], "]"}], "&"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"AllTrue", "[", 
  RowBox[{
   RowBox[{"Head", "/@", 
    RowBox[{"(", 
     RowBox[{"Keys", "@", 
      RowBox[{
       RowBox[{"modelsP", "[", "\"\<BKY\>\"", "]"}], "[", 
       "\"\<endogenousEq\>\"", "]"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"MatchQ", "[", 
     RowBox[{"#", ",", "PatternTest"}], "]"}], "&"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.891157496969887*^9, 3.891157544107942*^9}, {
  3.8929829100824947`*^9, 3.89298291390197*^9}, {3.892982949507678*^9, 
  3.8929829531624527`*^9}, {3.893016267044709*^9, 3.8930162995723467`*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"cd8b1760-536a-488f-9246-597cbd161a39"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575547143*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"b5e1af8d-4b9f-443e-9234-64a4d64a749c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575547934*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"e18dd8d1-8ad1-41ec-b046-45c0e942abdc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "exogenousEq", " ", "and", " ", "endogenousEq", " ", "evaluate", " ", 
    "expressions", " ", "that", " ", "are", " ", "exogenous", " ", "or", " ", 
    "endogenous", " ", "variables"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{"Not", "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{"dc", "[", "t", "]"}], "]"}], "===", 
             RowBox[{"Head", "[", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"dc", "[", "t", "]"}], "/.", 
                RowBox[{"Normal", "[", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<exogenousEq\>\"", "]"}], ",", 
                   RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<endogenousEq\>\"", "]"}]}], "]"}], "]"}]}], ")"}], 
              "]"}]}], ")"}], "&"}], "/@", 
          RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{"Not", "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{"dd", "[", 
               RowBox[{"t", ",", "i"}], "]"}], "]"}], "===", 
             RowBox[{"Head", "[", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"dd", "[", 
                 RowBox[{"t", ",", "i"}], "]"}], "/.", 
                RowBox[{"Normal", "[", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<exogenousEq\>\"", "]"}], ",", 
                   RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<endogenousEq\>\"", "]"}]}], "]"}], "]"}]}], ")"}], 
              "]"}]}], ")"}], "&"}], "/@", 
          RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{"Not", "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{"wc", "[", "t", "]"}], "]"}], "===", 
             RowBox[{"Head", "[", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"wc", "[", "t", "]"}], "/.", 
                RowBox[{"Normal", "[", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<exogenousEq\>\"", "]"}], ",", 
                   RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<endogenousEq\>\"", "]"}]}], "]"}], "]"}]}], ")"}], 
              "]"}]}], ")"}], "&"}], "/@", 
          RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{"Not", "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{"sdf", "[", "t", "]"}], "]"}], "===", 
             RowBox[{"Head", "[", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"sdf", "[", "t", "]"}], "/.", 
                RowBox[{"Normal", "[", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<exogenousEq\>\"", "]"}], ",", 
                   RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<endogenousEq\>\"", "]"}]}], "]"}], "]"}]}], ")"}], 
              "]"}]}], ")"}], "&"}], "/@", 
          RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{"Not", "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{"bondyield", "[", "t", "]"}], "]"}], "===", 
             RowBox[{"Head", "[", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"bondyield", "[", "t", "]"}], "/.", 
                RowBox[{"Normal", "[", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<exogenousEq\>\"", "]"}], ",", 
                   RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<endogenousEq\>\"", "]"}]}], "]"}], "]"}]}], ")"}], 
              "]"}]}], ")"}], "&"}], "/@", 
          RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}]}], 
    "\[IndentingNewLine]", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.89301559217407*^9, 3.893015822830755*^9}, {
   3.89301600860408*^9, 3.893016031968368*^9}, 3.893016149396062*^9, 
   3.8931449612563457`*^9},
 CellLabel->"In[94]:=",ExpressionUUID->"b0ba81ee-3f3e-4642-a9d2-b012835fd8f5"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9058265755600157`*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"076ce723-3ce4-4981-831b-d86d613d764f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "exogenousEq", " ", "and", " ", "endogenousEq", " ", "do", " ", "not", " ",
     "evaluate", " ", "expressions", " ", "that", " ", "are", " ", "neither", 
    " ", "exogenous", " ", "nor", " ", "endogenous", " ", "variables"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Head", "[", 
           RowBox[{"notVar", "[", "t", "]"}], "]"}], "===", 
          RowBox[{"Head", "[", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"notVar", "[", "t", "]"}], "/.", 
             RowBox[{"Normal", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"modelsP", "[", "#", "]"}], "[", 
                 "\"\<exogenousEq\>\"", "]"}], ",", 
                RowBox[{
                 RowBox[{"modelsP", "[", "#", "]"}], "[", 
                 "\"\<endogenousEq\>\"", "]"}]}], "]"}], "]"}]}], ")"}], 
           "]"}]}], ")"}], "&"}], "/@", 
       RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], 
    "\[IndentingNewLine]", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.893015849081943*^9, 3.8930158504172277`*^9}, 
   3.893016091706109*^9},
 CellLabel->"In[95]:=",ExpressionUUID->"9400811d-ec42-4264-98c2-5f9d866e0a9d"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.90582657556355*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"f71773e4-1485-4328-bd5d-ae99230a4afb"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.894802891427039*^9, 3.894802901425165*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"7c0079fa-1efb-4944-84f4-72b72617407c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "shortname", " ", "different", " ", "from", " ", "model", " ", "key"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"modelBY", "=", 
     RowBox[{"models", "[", "\"\<BY\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modelBKY", "=", 
     RowBox[{"models", "[", "\"\<BKY\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modelBKYP", "=", 
     RowBox[{"processModels", "[", 
      RowBox[{"<|", 
       RowBox[{"\"\<BKY\>\"", "->", "modelBKY"}], "|>"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modelBYP", "=", 
     RowBox[{"processModels", "[", 
      RowBox[{"<|", 
       RowBox[{"\"\<BY\>\"", "->", "modelBY"}], "|>"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"newModels", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<myModel\>\"", "->", "modelBKY"}], ",", 
       RowBox[{"\"\<BY\>\"", "->", "modelBY"}]}], "|>"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"newModelsSameName", "=", 
     RowBox[{"<|", 
      RowBox[{"\"\<BY\>\"", "->", "modelBY"}], "|>"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"newModelsRename", "=", 
     RowBox[{"<|", 
      RowBox[{"\"\<myModel\>\"", "->", "modelBY"}], "|>"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"newModelsP", "=", 
     RowBox[{"processModels", "[", "newModels", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"newModelsSameNameP", "=", 
     RowBox[{"processModels", "[", "newModelsSameName", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"newModelsRenameP", "=", 
     RowBox[{"processModels", "[", "newModelsRename", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"KeyDrop", "[", 
            RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}], "&"}], "@", 
          RowBox[{"newModelsP", "[", "\"\<myModel\>\"", "]"}]}], "===", 
         RowBox[{"KeyDrop", "[", 
          RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}]}], "&"}], "@", 
       RowBox[{"modelBKYP", "[", "\"\<BKY\>\"", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"KeyDrop", "[", 
            RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}], "&"}], "@", 
          RowBox[{"newModelsP", "[", "\"\<BY\>\"", "]"}]}], "===", 
         RowBox[{"KeyDrop", "[", 
          RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}]}], "&"}], "@", 
       RowBox[{"modelBYP", "[", "\"\<BY\>\"", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"KeyDrop", "[", 
            RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}], "&"}], "@", 
          RowBox[{"newModelsSameNameP", "[", "\"\<BY\>\"", "]"}]}], "===", 
         RowBox[{"KeyDrop", "[", 
          RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}]}], "&"}], "@", 
       RowBox[{"modelBYP", "[", "\"\<BY\>\"", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"KeyDrop", "[", 
            RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}], "&"}], "@", 
          RowBox[{"newModelsRenameP", "[", "\"\<myModel\>\"", "]"}]}], "===", 
         
         RowBox[{"KeyDrop", "[", 
          RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}]}], "&"}], "@", 
       RowBox[{"modelBYP", "[", "\"\<BY\>\"", "]"}]}]}], 
     "\[IndentingNewLine]", "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8912512942103243`*^9, 3.8912513055502443`*^9}, {
   3.8912513517340593`*^9, 3.891251461543272*^9}, {3.891251500422112*^9, 
   3.891251525384585*^9}, 3.891251633145433*^9, {3.891251727184629*^9, 
   3.8912517398515368`*^9}, {3.89125184158985*^9, 3.891251848736774*^9}, {
   3.891252152348381*^9, 3.891252165553775*^9}, 3.892982996244417*^9, 
   3.893016163280417*^9, 3.893145167358938*^9, 3.893145254752489*^9, 
   3.89480217485483*^9, {3.8948027745066357`*^9, 3.894802832466658*^9}, {
   3.8948029030451307`*^9, 3.8948029093631897`*^9}, {3.894803218803307*^9, 
   3.8948032260346603`*^9}, {3.8948032639753523`*^9, 3.894803269943624*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"876ead52-65a8-42a3-aa99-574711040d84"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9058265919078503`*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"cc035e3d-ae6b-4a19-bfd4-9e68160a45e4"]
}, Open  ]]
}, Closed]]
},
CellGrouping->Manual,
WindowSize->{958, 992},
WindowMargins->{{-977, Automatic}, {Automatic, 43}},
WindowStatusArea->"",
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.25 Inherited,
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"8c85f702-113c-487a-8dec-6eaf60825603"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 215, 4, 37, "Input",ExpressionUUID->"2d530782-807c-4677-ac15-0a1524d3eb66"],
Cell[776, 26, 1924, 41, 194, "Input",ExpressionUUID->"0360f784-d335-43f3-8e4d-2bba830763e2"],
Cell[CellGroupData[{
Cell[2725, 71, 255, 4, 67, "Subsection",ExpressionUUID->"31e1b2df-6c38-4738-ae7d-157759dc5a90"],
Cell[2983, 77, 341, 9, 37, "Input",ExpressionUUID->"464119fe-5b46-4abb-930f-1de6d0c0c7ec"],
Cell[CellGroupData[{
Cell[3349, 90, 895, 15, 64, "Input",ExpressionUUID->"c66ba99e-d8d1-4f03-a4ff-e02a4a612fbe"],
Cell[4247, 107, 204, 3, 42, "Output",ExpressionUUID->"8b2e0bd1-2fd9-42fb-a1b8-82ca0d640ebf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4488, 115, 278, 4, 37, "Input",ExpressionUUID->"e0c56802-23a4-4683-930d-2f72f95927a4"],
Cell[4769, 121, 177, 2, 42, "Output",ExpressionUUID->"55d5e0ad-17f0-411b-be01-2d72d918083e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4983, 128, 2119, 35, 142, "Input",ExpressionUUID->"df3441c2-82a3-4dc6-ae55-72fe028a7826"],
Cell[7105, 165, 379, 9, 29, "Print",ExpressionUUID->"aed113ea-327c-4995-b4b3-5ba6a52ee5a0"],
Cell[7487, 176, 270, 5, 29, "Print",ExpressionUUID->"1970ad57-0c56-4ea6-9096-c87c2752cb36"],
Cell[7760, 183, 5211, 94, 69, "Output",ExpressionUUID->"c44a67df-aa7d-4551-8930-e7cb3e94f8de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13008, 282, 1480, 30, 116, "Input",ExpressionUUID->"37a69960-4a4b-47f2-bed8-e68905e00bd9"],
Cell[14491, 314, 379, 9, 29, "Print",ExpressionUUID->"000360cf-1f1d-49d3-b993-5949e477146e"],
Cell[14873, 325, 272, 5, 29, "Print",ExpressionUUID->"40e2812e-81dc-46ab-a3ca-101dcc645527"],
Cell[15148, 332, 5573, 101, 69, "Output",ExpressionUUID->"4b72e7cf-56d9-451c-a389-86958ab329df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20758, 438, 1313, 29, 116, "Input",ExpressionUUID->"78efcfa0-e9fa-47a2-9b51-782cbea2e41b"],
Cell[22074, 469, 381, 9, 29, "Print",ExpressionUUID->"9eedf987-c27a-4917-bf59-8171d2aa6876"],
Cell[22458, 480, 272, 5, 29, "Print",ExpressionUUID->"9eeb1611-6603-410c-9a1c-5bf34578746c"],
Cell[22733, 487, 5649, 100, 69, "Output",ExpressionUUID->"e5992041-d0ac-4a28-9daa-141954ca9383"]
}, Open  ]],
Cell[28397, 590, 447, 12, 37, "Input",ExpressionUUID->"cb607e00-5967-477a-8aac-14f80aff48c4"],
Cell[CellGroupData[{
Cell[28869, 606, 1191, 24, 168, "Input",ExpressionUUID->"0c1d9ae2-0329-4b69-96aa-5f6aff9fa9f6"],
Cell[30063, 632, 379, 9, 29, "Print",ExpressionUUID->"642fea89-e028-4706-9c31-adaef1c1f331"],
Cell[30445, 643, 270, 5, 29, "Print",ExpressionUUID->"960b8acd-42a5-4b3a-9f02-27ef9de90c3c"],
Cell[30718, 650, 6450, 113, 69, "Output",ExpressionUUID->"f83135bd-1c40-4e6d-89cc-9b838f527166"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37205, 768, 849, 19, 116, "Input",ExpressionUUID->"d64570f0-6c89-4079-b190-d3b7918e15ff"],
Cell[38057, 789, 378, 9, 29, "Print",ExpressionUUID->"e5c7d91d-465e-40cd-8261-6275c7c72d9a"],
Cell[38438, 800, 272, 5, 29, "Print",ExpressionUUID->"97ed2347-a8c9-4245-a6a4-24c7a89949f9"],
Cell[38713, 807, 6016, 107, 69, "Output",ExpressionUUID->"2a937403-f01a-4403-befd-481ba96edfee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44766, 919, 1794, 42, 246, "Input",ExpressionUUID->"2c5d8084-fdbc-4107-ac9f-d8d95c9c2236"],
Cell[46563, 963, 379, 9, 29, "Print",ExpressionUUID->"a03e2cd8-62b6-4238-b104-9912a2c28f0c"],
Cell[46945, 974, 270, 5, 29, "Print",ExpressionUUID->"38d4f70b-e20f-4fa9-a4bd-e1eaba0306de"],
Cell[47218, 981, 8012, 138, 69, "Output",ExpressionUUID->"857ec122-31b2-4e98-8909-70a030898b7d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55267, 1124, 2506, 57, 402, "Input",ExpressionUUID->"ce8ab224-5505-4d6e-9748-27f603f00530"],
Cell[57776, 1183, 379, 9, 29, "Print",ExpressionUUID->"b7f458df-54d5-4979-9157-8cb3d444ebc2"],
Cell[58158, 1194, 272, 5, 29, "Print",ExpressionUUID->"33d3c42a-1622-4b6c-83d6-1520749e41fe"],
Cell[58433, 1201, 10300, 174, 69, "Output",ExpressionUUID->"123f558f-96ab-4283-b61e-32204602d38c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68770, 1380, 1583, 37, 194, "Input",ExpressionUUID->"2b15a034-f304-4f7e-9d25-63e3f1ab5487"],
Cell[70356, 1419, 381, 9, 29, "Print",ExpressionUUID->"5ea611a5-ad6a-448b-b1d2-190f5f64ba4b"],
Cell[70740, 1430, 270, 5, 29, "Print",ExpressionUUID->"d86e5bd1-d715-4877-b252-fae5652ddf26"],
Cell[71013, 1437, 8738, 150, 69, "Output",ExpressionUUID->"0ccc8cb6-b3ee-49dd-9d16-21c19438e908"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79788, 1592, 2000, 46, 272, "Input",ExpressionUUID->"19926fe5-c4d1-4650-9995-919a3c44044f"],
Cell[81791, 1640, 379, 9, 29, "Print",ExpressionUUID->"d1467099-741e-4af0-933c-48a81a68216e"],
Cell[82173, 1651, 270, 5, 29, "Print",ExpressionUUID->"e8dd6dab-c761-4687-bed1-623acf582ec2"],
Cell[82446, 1658, 9785, 164, 69, "Output",ExpressionUUID->"06296a1f-5736-48dd-af60-4274cf261d6a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92268, 1827, 7772, 187, 974, "Input",ExpressionUUID->"1e140797-a692-49c2-9b2b-5f4c15874357"],
Cell[100043, 2016, 381, 9, 29, "Print",ExpressionUUID->"9c46f9cc-6f96-42a2-bf63-bf1345e2e1f4"],
Cell[100427, 2027, 270, 5, 29, "Print",ExpressionUUID->"89a80b05-9f0e-4c8a-badf-f63f9b2043db"],
Cell[100700, 2034, 24190, 392, 69, "Output",ExpressionUUID->"a9c5f618-e920-4d52-8166-103e7c531bc1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124927, 2431, 6682, 164, 844, "Input",ExpressionUUID->"87988790-43a9-4e61-8178-c645affb741e"],
Cell[131612, 2597, 381, 9, 29, "Print",ExpressionUUID->"03b76fc4-9e7d-4e51-bfe5-411eee57fac7"],
Cell[131996, 2608, 270, 5, 29, "Print",ExpressionUUID->"acb10969-99e8-478d-9f2a-72bbaf65543d"],
Cell[132269, 2615, 24125, 375, 69, "Output",ExpressionUUID->"5fe1ff1d-acd2-402e-ae53-90d64e2d4efe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156431, 2995, 8057, 196, 1156, "Input",ExpressionUUID->"5ba1a080-37af-4559-8675-5356610aa871"],
Cell[164491, 3193, 379, 9, 29, "Print",ExpressionUUID->"76f1c50f-fdbd-44e7-8ebf-91805f45de25"],
Cell[164873, 3204, 272, 5, 29, "Print",ExpressionUUID->"024848b7-0021-4490-aacc-1f8280d55a58"],
Cell[165148, 3211, 30720, 469, 69, "Output",ExpressionUUID->"479476ba-f05b-4fd1-82c7-417ac17d75fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195905, 3685, 4267, 102, 584, "Input",ExpressionUUID->"ef80abef-2c56-4f05-b149-7ef948f31da2"],
Cell[200175, 3789, 378, 9, 29, "Print",ExpressionUUID->"c00f5f5b-3264-4201-aa32-fc334f9e41d7"],
Cell[200556, 3800, 270, 5, 29, "Print",ExpressionUUID->"fd973319-5e4d-401d-b686-ae561e1410c9"],
Cell[200829, 3807, 28067, 429, 69, "Output",ExpressionUUID->"906b153e-4d73-45e6-a48d-72328c71baf6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228933, 4241, 2956, 76, 481, "Input",ExpressionUUID->"81f0314f-983a-4f35-94ac-9304a10f36a3"],
Cell[231892, 4319, 378, 9, 29, "Print",ExpressionUUID->"49d7aa23-fdc9-4b1b-88ef-85f9391c1da5"],
Cell[232273, 4330, 270, 5, 29, "Print",ExpressionUUID->"3cd26077-d26c-472a-82ca-af585aea75df"],
Cell[232546, 4337, 27010, 410, 69, "Output",ExpressionUUID->"27781c5c-646a-4313-a9f3-57193ffd9035"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259593, 4752, 3830, 90, 584, "Input",ExpressionUUID->"725929c0-e672-42a1-adf0-1f1427f6f63b"],
Cell[263426, 4844, 379, 9, 29, "Print",ExpressionUUID->"f73621c6-912c-41d3-b2de-4460bf3500a1"],
Cell[263808, 4855, 270, 5, 29, "Print",ExpressionUUID->"64345723-eb6d-497f-b8cf-44fadbb9b35d"],
Cell[264081, 4862, 29725, 446, 69, "Output",ExpressionUUID->"c8e3836b-5387-46af-84f3-6a970b387d39"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293843, 5313, 1429, 35, 246, "Input",ExpressionUUID->"a20999be-298b-4767-9b2b-66ebc0f4bed8"],
Cell[295275, 5350, 378, 9, 29, "Print",ExpressionUUID->"174696bd-2a91-4166-999b-4f392c4b1343"],
Cell[295656, 5361, 270, 5, 29, "Print",ExpressionUUID->"e9776310-a4a9-4063-9e4e-8bff996dd8d3"],
Cell[295929, 5368, 27079, 406, 69, "Output",ExpressionUUID->"913ec4eb-87fd-4edd-b8f0-effde768281c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323045, 5779, 4582, 117, 584, "Input",ExpressionUUID->"a3f64af9-a0ab-44c4-b3b2-109b0dd55536"],
Cell[327630, 5898, 379, 9, 29, "Print",ExpressionUUID->"482a5ab9-7d3b-4b5c-abec-05d38d7fa557"],
Cell[328012, 5909, 270, 5, 29, "Print",ExpressionUUID->"8c001598-3881-4094-82a8-d0900331c2de"],
Cell[328285, 5916, 30722, 468, 69, "Output",ExpressionUUID->"08adc008-f7df-4e63-8da6-f277f1879d6d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[359044, 6389, 916, 23, 116, "Input",ExpressionUUID->"d936375e-497e-40de-957c-ccbe13fec420"],
Cell[359963, 6414, 381, 9, 29, "Print",ExpressionUUID->"3fcbb08d-e597-45e7-ad5a-44d8f06fab8d"],
Cell[360347, 6425, 269, 5, 29, "Print",ExpressionUUID->"e77d204b-0411-4b1f-9df8-3f6be33f1149"],
Cell[360619, 6432, 27782, 415, 69, "Output",ExpressionUUID->"5d911b83-a78e-4a54-896c-f7fe1d0a6cb8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[388438, 6852, 12807, 321, 2323, "Input",ExpressionUUID->"140d7fd9-ef09-440e-be4b-3d323ff6adc5"],
Cell[401248, 7175, 379, 9, 29, "Print",ExpressionUUID->"8058fa3f-df34-423b-922c-4ae4116a2402"],
Cell[401630, 7186, 270, 5, 29, "Print",ExpressionUUID->"eaab4dbd-0cba-4d88-83ea-4a3674f763fe"],
Cell[401903, 7193, 52717, 813, 69, "Output",ExpressionUUID->"86c830ec-a380-4d46-bf28-620d3446cbb1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[454657, 8011, 8003, 191, 1130, "Input",ExpressionUUID->"48b7a866-608c-4752-acf2-21754b711ce9"],
Cell[462663, 8204, 379, 9, 29, "Print",ExpressionUUID->"d5e2463d-6a53-4a23-8d3b-d26b16048636"],
Cell[463045, 8215, 270, 5, 29, "Print",ExpressionUUID->"7b9047d2-f586-42b4-b355-0312a1dea3ed"],
Cell[463318, 8222, 46724, 707, 69, "Output",ExpressionUUID->"7494aecf-8b0c-4bb9-a890-03139f422197"]
}, Open  ]],
Cell[CellGroupData[{
Cell[510079, 8934, 8189, 195, 1130, "Input",ExpressionUUID->"3974f54a-f4f6-42cb-a52a-c3f69fc48e4c"],
Cell[518271, 9131, 381, 9, 29, "Print",ExpressionUUID->"32f37906-0a79-4c91-87d2-d865bfee0302"],
Cell[518655, 9142, 270, 5, 29, "Print",ExpressionUUID->"25edf3bb-dd78-4409-81c9-1cdd5bcad3b7"],
Cell[518928, 9149, 50757, 766, 69, "Output",ExpressionUUID->"6b9c427c-28c4-4825-aed0-3d05237dedf5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[569722, 9920, 1644, 38, 194, "Input",ExpressionUUID->"41b1f503-97ce-4425-bb64-d6b2f0385419"],
Cell[571369, 9960, 381, 9, 29, "Print",ExpressionUUID->"ecd4a083-d461-49ac-904b-7bf312409138"],
Cell[571753, 9971, 270, 5, 29, "Print",ExpressionUUID->"fbe844d4-2324-4e4d-bad5-3eb6c42bdeeb"],
Cell[572026, 9978, 42169, 626, 69, "Output",ExpressionUUID->"b5b3e7e4-46d8-4236-9e5a-de7d71753886"]
}, Open  ]],
Cell[CellGroupData[{
Cell[614232, 10609, 6154, 150, 948, "Input",ExpressionUUID->"30c4d933-59ab-4c6f-ac91-fbe51a928bb5"],
Cell[620389, 10761, 379, 9, 29, "Print",ExpressionUUID->"cbc6b7a1-fd31-42cf-afa3-49407697ce89"],
Cell[620771, 10772, 272, 5, 29, "Print",ExpressionUUID->"a13efab8-1faa-4548-bc4a-f4fb346b1db9"],
Cell[621046, 10779, 52931, 794, 69, "Output",ExpressionUUID->"628f8c9e-5698-4875-bba7-c9ba816acc5d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[674014, 11578, 1741, 40, 272, "Input",ExpressionUUID->"5c1e30d2-8195-4e5b-9a64-378acb156acd"],
Cell[675758, 11620, 379, 9, 29, "Print",ExpressionUUID->"9fb2f89f-a578-47ad-8d26-b6551d6804df"],
Cell[676140, 11631, 270, 5, 29, "Print",ExpressionUUID->"931495f3-e6e3-4233-807c-bb6134c96637"],
Cell[676413, 11638, 46661, 686, 69, "Output",ExpressionUUID->"ae27e065-2bf0-4c7e-b026-bec2ab861bc0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[723111, 12329, 4646, 114, 662, "Input",ExpressionUUID->"623eb9c8-8fa8-49b6-8326-e888251e5b62"],
Cell[727760, 12445, 379, 9, 29, "Print",ExpressionUUID->"dd2c1b30-f0a9-4609-8730-1d7a281aff22"],
Cell[728142, 12456, 270, 5, 29, "Print",ExpressionUUID->"23ce8778-2fb1-46ab-bd50-efe573be0ec3"],
Cell[728415, 12463, 53978, 810, 69, "Output",ExpressionUUID->"fdc78ecd-fe78-422c-9a62-63d3dbea5235"]
}, Open  ]],
Cell[CellGroupData[{
Cell[782430, 13278, 195, 3, 37, "Input",ExpressionUUID->"33ebf65e-6034-462e-bfb9-1324117a5073"],
Cell[782628, 13283, 174, 2, 42, "Output",ExpressionUUID->"8bb29a01-a675-44c0-8bac-f10faab06462"]
}, Open  ]],
Cell[782817, 13288, 1583, 36, 428, "Input",ExpressionUUID->"54483af6-5a40-4f54-bac7-293214472e69"],
Cell[784403, 13326, 2235, 52, 532, "Input",ExpressionUUID->"ddca3c8e-dcd8-4cb0-9a56-cdb0739c327c"],
Cell[CellGroupData[{
Cell[786663, 13382, 1509, 36, 246, "Input",ExpressionUUID->"3c36af82-53b5-4d00-b969-206189441059"],
Cell[788175, 13420, 397, 8, 121, "Output",ExpressionUUID->"74d8f775-dc24-4b1c-9158-3ee689be40fb"],
Cell[788575, 13430, 152, 2, 42, "Output",ExpressionUUID->"04c890d8-27e5-4697-9644-8190617b7772"],
Cell[788730, 13434, 397, 8, 121, "Output",ExpressionUUID->"f3d36603-df87-4699-9ded-8d8fff6390cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[789164, 13447, 177, 3, 37, "Input",ExpressionUUID->"d8857335-0154-41ab-83b2-80a64e05c7ed"],
Cell[789344, 13452, 69357, 1345, 76, "Output",ExpressionUUID->"dc5af840-9c77-406e-8b70-78766e997000"]
}, Open  ]],
Cell[CellGroupData[{
Cell[858738, 14802, 3675, 93, 532, "Input",ExpressionUUID->"9ff6cbc9-039e-4dab-acd6-edafbf0c33ff"],
Cell[862416, 14897, 176, 2, 42, "Output",ExpressionUUID->"ead5ec2a-6425-40af-b404-9e5a2e786777"],
Cell[862595, 14901, 178, 2, 42, "Output",ExpressionUUID->"405a9e57-c2df-48d7-a12d-1db35b0db018"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[862822, 14909, 214, 4, 46, "Subsection",ExpressionUUID->"2c4a83cf-8af5-4d19-89ae-a864a258310f"],
Cell[CellGroupData[{
Cell[863061, 14917, 1143, 25, 168, "Input",ExpressionUUID->"f275bdc7-d1c5-4b14-9c2f-42b3fa65a747"],
Cell[864207, 14944, 253, 4, 69, "Output",ExpressionUUID->"911f1c21-5caa-48dc-9009-12db8490e364"]
}, Open  ]],
Cell[864475, 14951, 1570, 40, 143, "Input",ExpressionUUID->"f0dac05b-ee28-4e13-835c-2ef9d8d0b4c2"],
Cell[866048, 14993, 422, 9, 37, "Input",ExpressionUUID->"ae834adf-53c5-48f1-9622-c69293a51957"],
Cell[866473, 15004, 751, 19, 64, "Input",ExpressionUUID->"a034aa39-6f0e-4aa1-88e1-7b3452b54788"],
Cell[867227, 15025, 239, 4, 37, "Input",ExpressionUUID->"9bdfcdda-2cea-4c49-a1e8-165457a789ff"],
Cell[867469, 15031, 667, 16, 64, "Input",ExpressionUUID->"339baa73-32d4-47bd-bc3e-218de5f9097f"],
Cell[868139, 15049, 1042, 27, 142, "Input",ExpressionUUID->"65d4b552-0021-4f46-bb34-71f4f20940b0"],
Cell[CellGroupData[{
Cell[869206, 15080, 559, 13, 64, "Input",ExpressionUUID->"78177850-499e-456b-b442-fad780dafdf0"],
Cell[869768, 15095, 152, 2, 42, "Output",ExpressionUUID->"8ef711d8-e620-42db-a80e-7764c649f778"]
}, Open  ]],
Cell[CellGroupData[{
Cell[869957, 15102, 1463, 37, 194, "Input",ExpressionUUID->"a17059c2-5416-45b1-b84e-0c2f842f7fb5"],
Cell[871423, 15141, 152, 2, 42, "Output",ExpressionUUID->"097ba8b1-c561-4242-8229-fd000616d141"]
}, Open  ]],
Cell[CellGroupData[{
Cell[871612, 15148, 1952, 50, 298, "Input",ExpressionUUID->"61202b86-4708-4e03-aa51-3fcb0e388f46"],
Cell[873567, 15200, 152, 2, 42, "Output",ExpressionUUID->"5cea24c7-1cc5-4278-b73f-a45b03209d4c"],
Cell[873722, 15204, 150, 2, 42, "Output",ExpressionUUID->"f66677f4-cc18-459b-bb15-f49fdc4ac435"]
}, Open  ]],
Cell[CellGroupData[{
Cell[873909, 15211, 1104, 29, 90, "Input",ExpressionUUID->"78983d07-8f42-43d9-a50f-d26a03b2ee5c"],
Cell[875016, 15242, 152, 2, 42, "Output",ExpressionUUID->"6d93bba0-8156-4185-becc-2202590544bc"],
Cell[875171, 15246, 151, 2, 42, "Output",ExpressionUUID->"fb76dd7f-cf57-440a-a555-ca8e9de4790c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[875359, 15253, 1475, 36, 168, "Input",ExpressionUUID->"33533fdf-b808-460b-a76c-9a554476db8f"],
Cell[876837, 15291, 152, 2, 42, "Output",ExpressionUUID->"647c69fe-fd46-4081-8556-c6699b870e3b"],
Cell[876992, 15295, 151, 2, 42, "Output",ExpressionUUID->"5d84b0e8-fc15-44c5-84cc-3589eff8242a"],
Cell[877146, 15299, 154, 2, 42, "Output",ExpressionUUID->"ba3ef7c7-9288-4998-ba91-0965f537a6c3"],
Cell[877303, 15303, 152, 2, 42, "Output",ExpressionUUID->"000b28cd-c773-402c-b290-0ccebb38057d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[877492, 15310, 7397, 187, 922, "Input",ExpressionUUID->"534ec6f3-3445-4373-873f-bcdfb93d1e96"],
Cell[884892, 15499, 152, 2, 42, "Output",ExpressionUUID->"d50a9776-96d7-4879-b2e0-84b22e3e83a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[885081, 15506, 6293, 161, 792, "Input",ExpressionUUID->"0345d276-1ede-4d49-bc84-8f6ffb7b45d1"],
Cell[891377, 15669, 154, 2, 42, "Output",ExpressionUUID->"fdd03402-6e60-4aa8-a573-df598382be5d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[891568, 15676, 7644, 193, 1104, "Input",ExpressionUUID->"c15b2752-0fa5-4e0d-b1ab-0c8175dd4505"],
Cell[899215, 15871, 154, 2, 42, "Output",ExpressionUUID->"2efb13e1-57ae-4055-acf1-c2571ba7437a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[899406, 15878, 3942, 99, 532, "Input",ExpressionUUID->"7b9a7110-6fcf-4036-b444-4addeb8c2186"],
Cell[903351, 15979, 152, 2, 42, "Output",ExpressionUUID->"e1c00979-255d-40b8-952b-322850c04587"]
}, Open  ]],
Cell[CellGroupData[{
Cell[903540, 15986, 2652, 72, 429, "Input",ExpressionUUID->"1ab266c5-0090-45e7-9943-52d59a261191"],
Cell[906195, 16060, 152, 2, 42, "Output",ExpressionUUID->"2f9efcc9-67a5-4a9a-b08c-dd0c8bf760e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[906384, 16067, 3494, 85, 532, "Input",ExpressionUUID->"15557545-9517-4d8e-be17-18fad593c1c8"],
Cell[909881, 16154, 152, 2, 42, "Output",ExpressionUUID->"92500b18-ead2-4520-808f-6f77fa266a31"]
}, Open  ]],
Cell[CellGroupData[{
Cell[910070, 16161, 1154, 31, 194, "Input",ExpressionUUID->"cd064082-f805-44ec-a045-aa1fa3aceeba"],
Cell[911227, 16194, 152, 2, 42, "Output",ExpressionUUID->"e708efab-61c9-4cf6-9ba6-415f599c5873"]
}, Open  ]],
Cell[CellGroupData[{
Cell[911416, 16201, 4206, 114, 506, "Input",ExpressionUUID->"5ef11f51-f78f-4db1-8add-279c869573f2"],
Cell[915625, 16317, 152, 2, 42, "Output",ExpressionUUID->"c18e5e2b-ad2f-461b-a181-9d5094c9d3a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[915814, 16324, 628, 18, 64, "Input",ExpressionUUID->"488002c0-cddc-467b-bc55-ab11b4063392"],
Cell[916445, 16344, 152, 2, 42, "Output",ExpressionUUID->"f30cba62-39c6-4115-86f2-8cd3166b01fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[916634, 16351, 12224, 315, 2253, "Input",ExpressionUUID->"1e137b4c-2ecb-4bf4-991e-502dc176baf0"],
Cell[928861, 16668, 154, 2, 42, "Output",ExpressionUUID->"5e9c6d1d-f2f5-472d-ab6c-32af794f293c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[929052, 16675, 7572, 186, 1078, "Input",ExpressionUUID->"9228741c-bdf9-4027-a094-b007a53b75d5"],
Cell[936627, 16863, 152, 2, 42, "Output",ExpressionUUID->"6cc6109c-1d43-4ea3-a9e7-df476a6d97c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[936816, 16870, 7752, 190, 1078, "Input",ExpressionUUID->"f26d2032-c2da-40bd-bfb1-8e2c7187a48f"],
Cell[944571, 17062, 152, 2, 42, "Output",ExpressionUUID->"084d82bb-d26f-4b41-b125-6f0b21a5f09d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[944760, 17069, 1025, 27, 64, "Input",ExpressionUUID->"cd8b1760-536a-488f-9246-597cbd161a39"],
Cell[945788, 17098, 152, 2, 42, "Output",ExpressionUUID->"b5e1af8d-4b9f-443e-9234-64a4d64a749c"],
Cell[945943, 17102, 152, 2, 42, "Output",ExpressionUUID->"e18dd8d1-8ad1-41ec-b046-45c0e942abdc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[946132, 17109, 5736, 145, 896, "Input",ExpressionUUID->"b0ba81ee-3f3e-4642-a9d2-b012835fd8f5"],
Cell[951871, 17256, 154, 2, 42, "Output",ExpressionUUID->"076ce723-3ce4-4981-831b-d86d613d764f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[952062, 17263, 1437, 36, 246, "Input",ExpressionUUID->"9400811d-ec42-4264-98c2-5f9d866e0a9d"],
Cell[953502, 17301, 151, 2, 42, "Output",ExpressionUUID->"f71773e4-1485-4328-bd5d-ae99230a4afb"]
}, Open  ]],
Cell[953668, 17306, 171, 2, 37, "Input",ExpressionUUID->"7c0079fa-1efb-4944-84f4-72b72617407c"],
Cell[CellGroupData[{
Cell[953864, 17312, 4628, 117, 610, "Input",ExpressionUUID->"876ead52-65a8-42a3-aa99-574711040d84"],
Cell[958495, 17431, 158, 3, 42, "Output",ExpressionUUID->"cc035e3d-ae6b-4a19-bfd4-9e68160a45e4"]
}, Open  ]]
}, Closed]]
}
]
*)

