(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1133394,      20216]
NotebookOptionsPosition[   1067224,      19067]
NotebookOutlinePosition[   1113605,      19923]
CellTagsIndexPosition[   1113562,      19920]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"Quit", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.889964198656839*^9, 3.889964203363894*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"2d530782-807c-4677-ac15-0a1524d3eb66"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"testFileName", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DirectoryName", "[", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "1"}], "]"}], ",", 
      RowBox[{
       RowBox[{"FileBaseName", "[", 
        RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", 
       "\"\<.wlt\>\""}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pacletDir", "=", 
   RowBox[{"DirectoryName", "[", 
    RowBox[{"testFileName", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", "pacletDir", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testContextBase", "=", 
   RowBox[{"FileBaseName", "[", "testFileName", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$ContextPath", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"$ContextPath", ",", 
     RowBox[{"Except", "[", "\"\<PacletizedResourceFunctions`\>\"", "]"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8890661685133457`*^9, 3.889066220685074*^9}, {
   3.8890662555512333`*^9, 3.889066299901951*^9}, {3.889066581166473*^9, 
   3.8890665847967653`*^9}, {3.889066731765956*^9, 3.889066745674687*^9}, {
   3.889431410824514*^9, 3.88943144002302*^9}, 3.889502968269744*^9, {
   3.889998928469849*^9, 3.889998928670561*^9}, {3.890676553021196*^9, 
   3.890676564028514*^9}, 3.890676636594749*^9, {3.890679618620262*^9, 
   3.89067961902995*^9}, {3.8908254134370813`*^9, 3.890825413876319*^9}, {
   3.890825459205497*^9, 3.890825473041605*^9}, {3.890825503118348*^9, 
   3.8908255374530487`*^9}, {3.891021675325671*^9, 3.891021675545487*^9}, {
   3.8911588731924877`*^9, 3.891158877904397*^9}, {3.8911592499395514`*^9, 
   3.8911592502376633`*^9}, {3.891250905264741*^9, 3.891250915510642*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"0360f784-d335-43f3-8e4d-2bba830763e2"],

Cell[CellGroupData[{

Cell["CI Tests", "Subsection",
 CellChangeTimes->{{3.8895791922306013`*^9, 3.889579196409403*^9}, {
  3.889905620469079*^9, 3.8899056207707977`*^9}, {3.889967624152501*^9, 
  3.889967626012704*^9}},ExpressionUUID->"31e1b2df-6c38-4738-ae7d-\
157759dc5a90"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FileNames", "[", "testFileName", "]"}], "===", 
     RowBox[{"{", "}"}]}], ",", "Nothing", ",", 
    RowBox[{"DeleteFile", "[", "testFileName", "]"}]}], "]"}], ";"}]], "Input",\

 CellLabel->"In[6]:=",ExpressionUUID->"464119fe-5b46-4abb-930f-1de6d0c0c7ec"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"confirm", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"testContext", "=", 
  RowBox[{
  "\"\<FernandoDuarte`LongRunRisk`Model`\>\"", "<>", "testContextBase", "<>", 
   "\"\<`\>\""}]}]}], "Input",
 CellChangeTimes->{{3.8906795325443907`*^9, 3.8906795357982817`*^9}, 
   3.890679566064293*^9, {3.8906796081672497`*^9, 3.8906796258061447`*^9}, {
   3.890679757679096*^9, 3.890679766260743*^9}, 3.890679874010334*^9, {
   3.89115778716877*^9, 3.8911577875972347`*^9}, {3.891158046655726*^9, 
   3.8911580470847473`*^9}, {3.8912509099668617`*^9, 
   3.8912509132288647`*^9}, {3.89164129470868*^9, 3.891641295139255*^9}, {
   3.8917057583850603`*^9, 3.891705758834621*^9}, {3.8917059158307037`*^9, 
   3.891705917269414*^9}, {3.8917066708409977`*^9, 3.8917066712983313`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"c66ba99e-d8d1-4f03-a4ff-e02a4a612fbe"],

Cell[BoxData["\<\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"\>"], \
"Output",
 CellChangeTimes->{3.905826518185441*^9, 3.905876119207623*^9, 
  3.905876236330271*^9, 3.905953234958042*^9, 3.905953430089561*^9, 
  3.905953673499165*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"417eb9a6-a68f-41a0-89d1-556ad3fbbbd3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Begin", "[", "\"\<Model`ProcessModels`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.890680288696157*^9, 3.8906802887021513`*^9}, 
   3.891157128406151*^9, 3.90582639035145*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"e0c56802-23a4-4683-930d-2f72f95927a4"],

Cell[BoxData["\<\"Model`ProcessModels`\"\>"], "Output",
 CellChangeTimes->{3.9058265181926517`*^9, 3.905876119221949*^9, 
  3.905876236334391*^9, 3.9059532349608793`*^9, 3.905953430105598*^9, 
  3.905953673512044*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"4d64f0a6-ad1d-4c62-9ebb-f9f80b83bb31"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"longTest", " ", "=", " ", "False"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"fast", " ", "and", " ", "partial", " ", "coverage", " ", 
      RowBox[{"(", "False", ")"}], " ", "or", " ", "slow", " ", "and", " ", 
      "full", " ", "coverage", " ", 
      RowBox[{"(", "True", ")"}]}], "*)"}], "\[IndentingNewLine]", "True"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellLabel->"In[10]:=",ExpressionUUID->"f63dce30-27eb-49ce-8e70-e4b45708bdbc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231010-116DCE\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231010-116DCE"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905876119482224*^9, 3.9058762365968227`*^9, 
  3.905953235236265*^9, 3.905953430379746*^9, 3.905953673780075*^9},
 CellLabel->
  "During evaluation of \
In[10]:=",ExpressionUUID->"0d7ecb34-fd99-4597-b07f-ebbe4aa68d87"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905876119482224*^9, 3.9058762365968227`*^9, 
  3.905953235236265*^9, 3.905953430379746*^9, 3.905953673797017*^9},
 CellLabel->
  "During evaluation of \
In[10]:=",ExpressionUUID->"eb67c5f1-4ae5-43b2-9bc4-2e9d4b025461"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Model`ProcessModels`longTest = False;\n\tTrue", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tModel`ProcessModels`longTest = False;\n\tTrue\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-116DCE\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[Model`ProcessModels`longTest = False; True], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`longTest = False;\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-116DCE\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905876119515527*^9, 3.905876236634799*^9, 
  3.905953235258047*^9, 3.9059534304064093`*^9, 3.905953673802959*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"69b957b7-844a-438d-baf9-62b2dc054c3c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Needs", "[", "\"\<FernandoDuarte`LongRunRisk`Model`Catalog`\>\"", "]"}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{
    "Needs", "[", "\"\<FernandoDuarte`LongRunRisk`Model`ProcessModels`\>\"", 
     "]"}], ";", "\[IndentingNewLine]", "True"}], "\[IndentingNewLine]", ",", 
   
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.8899652151465197`*^9, 3.889965235350771*^9}, 
   3.8899652808817787`*^9, {3.889967731242805*^9, 3.8899677356636972`*^9}, {
   3.889967971867523*^9, 3.889967975146998*^9}, {3.889968339451161*^9, 
   3.88996834001075*^9}, 3.889968619774049*^9, {3.8899688826075077`*^9, 
   3.88996888992594*^9}, {3.88996899475625*^9, 3.8899690018858624`*^9}, {
   3.8899691256166267`*^9, 3.8899691257757883`*^9}, {3.889969207667478*^9, 
   3.8899692141700287`*^9}, {3.8899692798779783`*^9, 3.889969288274632*^9}, 
   3.889969387087708*^9, 3.889969585993528*^9, {3.8899702972149563`*^9, 
   3.889970314454108*^9}, {3.890603045806611*^9, 3.890603046578224*^9}, 
   3.890603139674321*^9, {3.890676572733183*^9, 3.890676585108572*^9}, {
   3.890679071059198*^9, 3.890679121055434*^9}, {3.89067917308251*^9, 
   3.890679177122958*^9}, 3.890679328121275*^9, {3.8906795122187853`*^9, 
   3.890679514391316*^9}, {3.890679606901452*^9, 3.8906796293121653`*^9}, {
   3.890679668768669*^9, 3.890679669902752*^9}, {3.8906797200186*^9, 
   3.890679786626452*^9}, {3.890679828108779*^9, 3.890679882954316*^9}, {
   3.8911571592686443`*^9, 3.8911571682982073`*^9}, 3.891157792145975*^9, {
   3.891173222845828*^9, 3.8911732231089373`*^9}, {3.891173275033695*^9, 
   3.891173275304864*^9}, {3.891316564754774*^9, 3.8913166100337257`*^9}, {
   3.891852279447442*^9, 3.891852279736619*^9}, {3.893027061900147*^9, 
   3.89302706219648*^9}, 3.905825701340439*^9, {3.90582623727353*^9, 
   3.905826238087222*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"df3441c2-82a3-4dc6-ae55-72fe028a7826"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231010-K6S5F5\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231010-K6S5F5"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905826518538865*^9, 3.905876119625804*^9, 
  3.905876236740285*^9, 3.905953235367111*^9, 3.905953430510817*^9, 
  3.905953673914227*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"20427e19-5c88-4028-834f-d229d0d9d657"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826518538865*^9, 3.905876119625804*^9, 
  3.905876236740285*^9, 3.905953235367111*^9, 3.905953430510817*^9, 
  3.9059536739203863`*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"910c0641-2785-4f64-8cbc-510de59abe0c"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Needs @ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-K6S5F5\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.081, "AbsoluteTiming" -> 0.081, 
   "InputString" :> ToString[
     Unevaluated[
     Needs["FernandoDuarte`LongRunRisk`Model`Catalog`"]; 
      Needs["FernandoDuarte`LongRunRisk`Model`ProcessModels`"]; True], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`longTest = False;\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-116DCE\"\n]\n\n\nVerificationTest[\n\tNeeds \
@ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-K6S5F5\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826518559183*^9, 3.905876119642445*^9, 
  3.905876236761636*^9, 3.9059532353861103`*^9, 3.9059534305297937`*^9, 
  3.90595367393121*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"d20afb39-4389-498f-95c9-8b775fd1dc1a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", "\t", 
   RowBox[{"And", "@@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{
       "$ContextPath", ",", 
        "\"\<FernandoDuarte`LongRunRisk`Model`Catalog`\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
       "$ContextPath", ",", 
        "\"\<FernandoDuarte`LongRunRisk`Model`ProcessModels`\>\""}], "]"}]}], 
     "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{
  3.889901579125684*^9, {3.889965035911569*^9, 3.889965039550325*^9}, {
   3.889965296152458*^9, 3.889965305191854*^9}, 3.8899653858152437`*^9, 
   3.889967740469187*^9, {3.889968345370779*^9, 3.889968347169169*^9}, {
   3.889968526692542*^9, 3.8899685355316963`*^9}, {3.889968649261517*^9, 
   3.889968660343141*^9}, 3.889969395693264*^9, {3.88996958684683*^9, 
   3.8899695947482367`*^9}, {3.889970300225127*^9, 3.889970329366473*^9}, {
   3.890603050754869*^9, 3.8906030512673264`*^9}, 3.890603142316881*^9, 
   3.89067659639168*^9, {3.890679255090239*^9, 3.890679318737549*^9}, 
   3.890679634337233*^9, 3.890679895680545*^9, {3.891157174045011*^9, 
   3.891157185913196*^9}, 3.8911577932659283`*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"37a69960-4a4b-47f2-bed8-e68905e00bd9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231010-8B36RO\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231010-8B36RO"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905826518592025*^9, 3.905876119685568*^9, 
  3.905876236801148*^9, 3.905953235421186*^9, 3.905953430566182*^9, 
  3.9059536739673758`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"36ff8f2d-7105-4f28-ad32-b7af14e609b3"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826518592025*^9, 3.905876119685568*^9, 
  3.905876236801148*^9, 3.905953235421186*^9, 3.905953430566182*^9, 
  3.905953673973589*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"9f39a39e-8d5c-4177-8550-a7fa4b47a83c"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-8B36RO\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        MemberQ[$ContextPath, "FernandoDuarte`LongRunRisk`Model`Catalog`"], 
        MemberQ[$ContextPath, 
         "FernandoDuarte`LongRunRisk`Model`ProcessModels`"]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`longTest = False;\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-116DCE\"\n]\n\n\nVerificationTest[\n\tNeeds \
@ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-K6S5F5\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-8B36RO\"\n]\n\n\nEndTestSection[]\
\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826518608933*^9, 3.905876119693461*^9, 
  3.905876236816369*^9, 3.9059532354441833`*^9, 3.905953430586298*^9, 
  3.9059536739840527`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"7040fbd4-464c-4b42-9563-78866ee61fc1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "should", " ", "be", " ", "True", " ", "if", " ", "processModels"}], ",",
      " ", 
     RowBox[{"models", " ", "can", " ", "be", " ", "found"}]}], "*)"}], 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"And", "@@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Not", "[", 
       RowBox[{
        RowBox[{"Names", "[", "\"\<*processModels\>\"", "]"}], "===", 
        RowBox[{"{", "}"}]}], "]"}], ",", 
      RowBox[{"Not", "[", 
       RowBox[{
        RowBox[{"Names", "[", "\"\<*models\>\"", "]"}], "===", 
        RowBox[{"{", "}"}]}], "]"}]}], "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.8899706175264597`*^9, 3.889970628972746*^9}, 
   3.889972029349813*^9, {3.890016004516365*^9, 3.890016008058874*^9}, {
   3.890679266281045*^9, 3.8906792665642843`*^9}, {3.89067933542416*^9, 
   3.890679337313949*^9}, {3.8911571916035423`*^9, 3.891157220658489*^9}, {
   3.891157734825952*^9, 3.891157748683607*^9}, 3.891157795291888*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"78efcfa0-e9fa-47a2-9b51-782cbea2e41b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231010-HPANYO\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231010-HPANYO"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9058265186760397`*^9, 3.905876119770248*^9, 
  3.905876236885137*^9, 3.905953235513627*^9, 3.9059534306586657`*^9, 
  3.905953674053041*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"2c5d2f68-48eb-42ba-9b1c-a4a72ef15d21"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.9058265186760397`*^9, 3.905876119770248*^9, 
  3.905876236885137*^9, 3.905953235513627*^9, 3.9059534306586657`*^9, 
  3.905953674067463*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"3745a0a4-1e28-4c8b-8b06-0949b12fe8fc"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\", {}],\n\t\t\t\
!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \
\"*processModels\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\
\t,\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-HPANYO\"\n]\n\
\n", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.045, "AbsoluteTiming" -> 0.045, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        Not[Names["*processModels"] === {}], 
        Not[Names["*models"] === {}]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`longTest = False;\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-116DCE\"\n]\n\n\nVerificationTest[\n\tNeeds \
@ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-K6S5F5\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-8B36RO\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-HPANYO\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826518698269*^9, 3.9058761197860107`*^9, 
  3.905876236901416*^9, 3.905953235532045*^9, 3.90595343068272*^9, 
  3.905953674072195*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"45ac0427-2c54-49d4-9cd4-210107e863f0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"models", "=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"$ContextPath", " ", "=", " ", 
        RowBox[{"{", "}"}]}], "}"}], ",", " ", 
      RowBox[{"SetSymbolsContext", "[", "models", "]"}]}], "]"}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{3.8913169005664043`*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"cb607e00-5967-477a-8aac-14f80aff48c4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Get", "@", 
     RowBox[{"Get", "[", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
        "\"\<FernandoDuarte/LongRunRisk\>\"", ",", "\"\<Models.wl\>\""}], 
        "}"}], "]"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
    RowBox[{"models", "=", 
     RowBox[{"If", "[", 
      RowBox[{
      "longTest", ",", "\[IndentingNewLine]", 
       "FernandoDuarte`LongRunRisk`Model`Catalog`models", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"KeyTake", "[", 
        RowBox[{"FernandoDuarte`LongRunRisk`Model`Catalog`models", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<BY\>\"", ",", "\"\<BKY\>\"", ",", "\"\<NRC\>\""}], 
          "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"modelsP", "=", 
     RowBox[{"If", "[", 
      RowBox[{
      "longTest", ",", "\[IndentingNewLine]", 
       "FernandoDuarte`LongRunRisk`Models", ",", "\[IndentingNewLine]", 
       RowBox[{"KeyTake", "[", 
        RowBox[{"FernandoDuarte`LongRunRisk`Models", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<BY\>\"", ",", "\"\<BKY\>\"", ",", "\"\<NRC\>\""}], 
          "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
    "\[IndentingNewLine]", "True"}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.893003987314953*^9, 3.893004026425699*^9}, {
   3.8930271154371367`*^9, 3.893027117019199*^9}, {3.893027228841988*^9, 
   3.893027229065291*^9}, {3.8931053429292316`*^9, 3.893105351371242*^9}, {
   3.8931452041797323`*^9, 3.8931452049130917`*^9}, {3.905825751340439*^9, 
   3.905825834883211*^9}, 3.9058262489345703`*^9, {3.905875476927877*^9, 
   3.905875501021654*^9}, {3.905876202660138*^9, 3.905876212512597*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"0c1d9ae2-0329-4b69-96aa-5f6aff9fa9f6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231010-01INLQ\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231010-01INLQ"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905826519007328*^9, 3.905876120907888*^9, 
  3.905876238021785*^9, 3.905953236718627*^9, 3.905953431870454*^9, 
  3.9059536752561483`*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"2969b507-414d-41f7-b765-1060cb6a4ef6"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826519007328*^9, 3.905876120907888*^9, 
  3.905876238021785*^9, 3.905953236718627*^9, 3.905953431870454*^9, 
  3.90595367526226*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"4ad110a6-cbd0-4cc3-82ad-106178fce2af"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Get @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\", \
\"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Model`Catalog`models, \
KeyTake[FernandoDuarte`LongRunRisk`Model`Catalog`models, {\"BY\", \"BKY\", \
\"NRC\"}]];\n\tModel`ProcessModels`modelsP = If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Models, KeyTake[FernandoDuarte`LongRunRisk`Models, \
{\"BY\", \"BKY\", \"NRC\"}]];\n\tTrue", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tGet @ Get @ FileNameJoin @ \
{\"FernandoDuarte/LongRunRisk\", \"Models.wl\"};\n\t\
FernandoDuarte`LongRunRisk`Model`Catalog`models = \
If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Model`Catalog`models, \
KeyTake[FernandoDuarte`LongRunRisk`Model`Catalog`models, {\"BY\", \"BKY\", \
\"NRC\"}]];\n\tModel`ProcessModels`modelsP = If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Models, KeyTake[FernandoDuarte`LongRunRisk`Models, \
{\"BY\", \"BKY\", \"NRC\"}]];\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-01INLQ\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 1.16, "AbsoluteTiming" -> 
   1.1500000000000001`, "InputString" :> ToString[
     Unevaluated[Get[
        Get[
         FileNameJoin[{"FernandoDuarte/LongRunRisk", "Models.wl"}]]]; 
      FernandoDuarte`LongRunRisk`Model`Catalog`models = 
       If[Model`ProcessModels`longTest, 
         FernandoDuarte`LongRunRisk`Model`Catalog`models, 
         KeyTake[
         FernandoDuarte`LongRunRisk`Model`Catalog`models, {
          "BY", "BKY", "NRC"}]]; 
      Model`ProcessModels`modelsP = 
       If[Model`ProcessModels`longTest, FernandoDuarte`LongRunRisk`Models, 
         KeyTake[FernandoDuarte`LongRunRisk`Models, {"BY", "BKY", "NRC"}]]; 
      True], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`longTest = False;\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-116DCE\"\n]\n\n\nVerificationTest[\n\tNeeds \
@ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-K6S5F5\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-8B36RO\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-HPANYO\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Model`Catalog`models, \
KeyTake[FernandoDuarte`LongRunRisk`Model`Catalog`models, {\"BY\", \"BKY\", \
\"NRC\"}]];\n\tModel`ProcessModels`modelsP = If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Models, KeyTake[FernandoDuarte`LongRunRisk`Models, \
{\"BY\", \"BKY\", \"NRC\"}]];\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-01INLQ\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826519025723*^9, 3.905876120922595*^9, 
  3.9058762380377407`*^9, 3.905953236736403*^9, 3.905953431887114*^9, 
  3.905953675273572*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"d1c4d165-b92b-4ecd-bbb1-f9b99db75fc6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Keys", " ", "are", " ", "strings"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"StringQ", "/@", 
      RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{
  3.89000889839254*^9, {3.890016339728188*^9, 3.890016342139681*^9}, 
   3.891251908164126*^9, {3.8930041333335657`*^9, 3.8930041384325933`*^9}, {
   3.893027123262117*^9, 3.893027123521834*^9}, {3.8930272322165318`*^9, 
   3.8930272325266247`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"d64570f0-6c89-4079-b190-d3b7918e15ff"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231010-Q8F8Y7\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231010-Q8F8Y7"],
  Editable->False]], "Print",
 CellChangeTimes->{3.90582651905933*^9, 3.905876121101646*^9, 
  3.90587623822754*^9, 3.90595323685354*^9, 3.90595343198877*^9, 
  3.905953675373827*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"f52abf31-62e5-47b1-afac-9d8300b826a8"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.90582651905933*^9, 3.905876121101646*^9, 
  3.90587623822754*^9, 3.90595323685354*^9, 3.90595343198877*^9, 
  3.9059536753812428`*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"99b61837-9353-47cd-8a64-dada383f1430"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And, Map[StringQ, Keys @ Model`ProcessModels`modelsP]]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And, Map[StringQ, Keys @ \
Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-Q8F8Y7\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[StringQ, 
        Keys[Model`ProcessModels`modelsP]]]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`longTest = False;\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-116DCE\"\n]\n\n\nVerificationTest[\n\tNeeds \
@ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-K6S5F5\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-8B36RO\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-HPANYO\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Model`Catalog`models, \
KeyTake[FernandoDuarte`LongRunRisk`Model`Catalog`models, {\"BY\", \"BKY\", \
\"NRC\"}]];\n\tModel`ProcessModels`modelsP = If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Models, KeyTake[FernandoDuarte`LongRunRisk`Models, \
{\"BY\", \"BKY\", \"NRC\"}]];\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-01INLQ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[StringQ, Keys @ Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-Q8F8Y7\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826519074936*^9, 3.905876121108953*^9, 
  3.905876238235125*^9, 3.90595323686097*^9, 3.905953432006113*^9, 
  3.905953675393585*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"aa2b7d10-3383-4e3e-b75e-fdf51766abd3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"string", " ", "fields"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"StringQ", "/@", 
      RowBox[{"Flatten", "@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<name\>\"", "]"}], 
            ",", 
            RowBox[{
             RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<shortname\>\"", 
             "]"}], ",", 
            RowBox[{
             RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<bibRef\>\"", "]"}],
             ",", 
            RowBox[{
             RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<desc\>\"", "]"}], 
            ",", 
            RowBox[{
             RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<exogenousVars\>\"",
              "]"}], ",", 
            RowBox[{
             RowBox[{"modelsP", "[", "#", "]"}], "[", 
             "\"\<endogenousVars\>\"", "]"}]}], "}"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}], ")"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.890008770382118*^9, 3.890008858894733*^9}, {
   3.890016345133547*^9, 3.8900163569166937`*^9}, {3.891251925999875*^9, 
   3.891251929267716*^9}, {3.89300415697269*^9, 3.893004157463492*^9}, {
   3.8930148354335337`*^9, 3.893014849329674*^9}, {3.893027125239276*^9, 
   3.893027125482437*^9}, 3.893027240252756*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"2c5d8084-fdbc-4107-ac9f-d8d95c9c2236"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231010-XCSPNR\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231010-XCSPNR"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905826519115556*^9, 3.90587612114629*^9, 
  3.905876238274768*^9, 3.905953236897586*^9, 3.905953432049308*^9, 
  3.905953675429586*^9},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"67198422-6d31-42b7-ab71-726b7f29fec0"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826519115556*^9, 3.90587612114629*^9, 
  3.905876238274768*^9, 3.905953236897586*^9, 3.905953432049308*^9, 
  3.9059536754360332`*^9},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"7e0416be-e07b-4cb1-bc70-5d3964ff93d0"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\tMap[\n\t\t\t\t\t\
Function @ {\n\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\
\t\tModel`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction @ {\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-XCSPNR\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[StringQ, 
        Flatten[
         Map[{
           Model`ProcessModels`modelsP[#]["name"], 
           Model`ProcessModels`modelsP[#]["shortname"], 
           Model`ProcessModels`modelsP[#]["bibRef"], 
           Model`ProcessModels`modelsP[#]["desc"], 
           Model`ProcessModels`modelsP[#]["exogenousVars"], 
           Model`ProcessModels`modelsP[#]["endogenousVars"]}& , 
          Keys[Model`ProcessModels`modelsP]]]]]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`longTest = False;\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-116DCE\"\n]\n\n\nVerificationTest[\n\tNeeds \
@ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-K6S5F5\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-8B36RO\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-HPANYO\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Model`Catalog`models, \
KeyTake[FernandoDuarte`LongRunRisk`Model`Catalog`models, {\"BY\", \"BKY\", \
\"NRC\"}]];\n\tModel`ProcessModels`modelsP = If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Models, KeyTake[FernandoDuarte`LongRunRisk`Models, \
{\"BY\", \"BKY\", \"NRC\"}]];\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-01INLQ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[StringQ, Keys @ Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-Q8F8Y7\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction @ {\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-XCSPNR\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.9058265191222754`*^9, 3.905876121160509*^9, 
  3.905876238288949*^9, 3.905953236920361*^9, 3.905953432057081*^9, 
  3.9059536754478683`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"e1535d47-076d-46a6-8ce5-6f0f35552279"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"parameters", " ", "evaluate", " ", "to", " ", "numbers"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{"NumberQ", "/@", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Values", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Association", "@", 
                RowBox[{
                 RowBox[{"models", "[", "#", "]"}], "[", "\"\<parameters\>\"",
                  "]"}]}], "//.", 
               RowBox[{
                RowBox[{"models", "[", "#", "]"}], "[", "\"\<parameters\>\"", 
                "]"}]}], "//", "N"}], "]"}], "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{"Keys", "@", "models"}], ")"}]}], "]"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{"NumberQ", "/@", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Values", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Association", "@", 
                RowBox[{
                 RowBox[{"modelsP", "[", "#", "]"}], "[", 
                 "\"\<parameters\>\"", "]"}]}], "//.", 
               RowBox[{
                RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<parameters\>\"",
                 "]"}]}], "//", "N"}], "]"}], "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{"Keys", "@", "modelsP"}], ")"}]}], "]"}]}], ")"}]}]}], 
     "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.890008965671461*^9, 3.8900089726778793`*^9}, {
   3.8900090147612762`*^9, 3.890009193827691*^9}, 3.8900101461421833`*^9, 
   3.890015540563738*^9, {3.8900156352184877`*^9, 3.89001567714233*^9}, 
   3.8912519303524723`*^9, {3.891640840825358*^9, 3.8916408678776903`*^9}, {
   3.89164090174683*^9, 3.8916409201814632`*^9}, 3.892974136542371*^9, {
   3.89300417575723*^9, 3.893004176318849*^9}, {3.8930271288709583`*^9, 
   3.893027132853774*^9}, {3.893027244975909*^9, 3.8930272548041477`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"ce8ab224-5505-4d6e-9748-27f603f00530"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231010-8V68GY\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231010-8V68GY"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905826519170005*^9, 3.9058761212028627`*^9, 
  3.9058762383285427`*^9, 3.905953236957921*^9, 3.905953432097927*^9, 
  3.905953675486342*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"0824f9de-2f06-4106-bcfe-bac70ec52051"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826519170005*^9, 3.9058761212028627`*^9, 
  3.9058762383285427`*^9, 3.905953236957921*^9, 3.905953432097927*^9, 
  3.905953675498947*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"68da11d0-7164-4136-bd72-f7714d512161"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-8V68GY\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.002, "AbsoluteTiming" -> 0.002, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        Apply[And, 
         Map[NumberQ, 
          Flatten[
           Map[Values[
             N[
              ReplaceRepeated[<|
                FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                "parameters"]|>, 
               FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
               "parameters"]]]]& , 
            Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]], 
        Apply[And, 
         Map[NumberQ, 
          Flatten[
           Map[Values[
             N[
              ReplaceRepeated[<|
                Model`ProcessModels`modelsP[#]["parameters"]|>, 
               Model`ProcessModels`modelsP[#]["parameters"]]]]& , 
            Keys[Model`ProcessModels`modelsP]]]]]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`longTest = False;\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-116DCE\"\n]\n\n\nVerificationTest[\n\tNeeds \
@ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-K6S5F5\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-8B36RO\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-HPANYO\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Model`Catalog`models, \
KeyTake[FernandoDuarte`LongRunRisk`Model`Catalog`models, {\"BY\", \"BKY\", \
\"NRC\"}]];\n\tModel`ProcessModels`modelsP = If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Models, KeyTake[FernandoDuarte`LongRunRisk`Models, \
{\"BY\", \"BKY\", \"NRC\"}]];\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-01INLQ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[StringQ, Keys @ Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-Q8F8Y7\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction @ {\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-XCSPNR\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-8V68GY\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826519184909*^9, 3.905876121216631*^9, 
  3.905876238335733*^9, 3.9059532370783463`*^9, 3.905953432115809*^9, 
  3.905953675503625*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"482399b3-f53a-4275-afbb-7b1d5e2ccf7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"can", " ", "find", " ", "some", " ", "models"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"Keys", "[", "models", "]"}], ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"{", 
          RowBox[{"\"\<BY\>\"", ",", "\"\<BKY\>\""}], "}"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"Keys", "[", "modelsP", "]"}], ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"Keys", "@", "modelsP"}], ")"}]}], ")"}]}]}], 
     "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.8900087062162313`*^9, 3.890008740193614*^9}, {
   3.89001637048425*^9, 3.890016372993977*^9}, 3.8912519320207787`*^9, {
   3.891640927230764*^9, 3.891640929613118*^9}, 3.892974170435498*^9, {
   3.893004184988491*^9, 3.8930041852126703`*^9}, 3.8930271448468523`*^9, {
   3.893027262255954*^9, 3.893027282450307*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"2b15a034-f304-4f7e-9d25-63e3f1ab5487"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231010-NR97KO\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231010-NR97KO"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9058265192860107`*^9, 3.9058761212547817`*^9, 
  3.905876238370737*^9, 3.9059532371181993`*^9, 3.9059534321490583`*^9, 
  3.905953675537422*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"d74320cb-2533-4422-906f-6958508285e6"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.9058265192860107`*^9, 3.9058761212547817`*^9, 
  3.905876238370737*^9, 3.9059532371181993`*^9, 3.9059534321490583`*^9, 
  3.905953675549831*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"4817ca8a-ea04-4581-b699-da67214e14a3"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-NR97KO\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        Apply[And, 
         Map[MemberQ[
           Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]& , {
          "BY", "BKY"}]], 
        Apply[And, 
         Map[MemberQ[
           Keys[Model`ProcessModels`modelsP], #]& , 
          Keys[Model`ProcessModels`modelsP]]]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`longTest = False;\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-116DCE\"\n]\n\n\nVerificationTest[\n\tNeeds \
@ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-K6S5F5\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-8B36RO\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-HPANYO\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Model`Catalog`models, \
KeyTake[FernandoDuarte`LongRunRisk`Model`Catalog`models, {\"BY\", \"BKY\", \
\"NRC\"}]];\n\tModel`ProcessModels`modelsP = If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Models, KeyTake[FernandoDuarte`LongRunRisk`Models, \
{\"BY\", \"BKY\", \"NRC\"}]];\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-01INLQ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[StringQ, Keys @ Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-Q8F8Y7\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction @ {\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-XCSPNR\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-8V68GY\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-NR97KO\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.90582651930926*^9, 3.905876121261801*^9, 
  3.90587623838419*^9, 3.9059532371358347`*^9, 3.9059534321734257`*^9, 
  3.905953675554558*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"25226de4-56ea-4a55-b1df-652392d83acc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"models", ",", " ", 
       RowBox[{"modelsP", " ", "are", " ", "associations"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"AllTrue", "[", 
       RowBox[{"models", ",", "AssociationQ"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AllTrue", "[", 
       RowBox[{"modelsP", ",", "AssociationQ"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"each", " ", "model", " ", "inside", " ", "models"}], ",", 
        " ", 
        RowBox[{
        "modelsP", " ", "are", " ", "themselves", " ", "an", " ", 
         "association"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"AllTrue", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"models", "[", "#", "]"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "models", "]"}]}], ",", "AssociationQ"}], "]"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"AllTrue", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"modelsP", "[", "#", "]"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "modelsP", "]"}]}], ",", "AssociationQ"}], 
       "]"}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.8900086430073547`*^9, 3.890008684982678*^9}, {
   3.890010177349143*^9, 3.890010179091837*^9}, {3.8900163791247263`*^9, 
   3.890016449580503*^9}, {3.891251933188879*^9, 3.891251935189865*^9}, {
   3.891640937075639*^9, 3.891640945348556*^9}, {3.893004194158003*^9, 
   3.893004229582778*^9}, 3.89302714797476*^9, {3.893027270984724*^9, 
   3.893027285376198*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"19926fe5-c4d1-4650-9995-919a3c44044f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231010-3CEC3Q\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231010-3CEC3Q"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905826519342128*^9, 3.9058761212996902`*^9, 
  3.905876238422421*^9, 3.905953237172964*^9, 3.9059534322098417`*^9, 
  3.905953675591654*^9},
 CellLabel->
  "During evaluation of \
In[20]:=",ExpressionUUID->"e92eb7e7-79ce-4048-8c6a-7715bf95b5ac"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826519342128*^9, 3.9058761212996902`*^9, 
  3.905876238422421*^9, 3.905953237172964*^9, 3.9059534322098417`*^9, 
  3.905953675605836*^9},
 CellLabel->
  "During evaluation of \
In[20]:=",ExpressionUUID->"f61947d7-afdf-454c-8a5a-5315b19c318e"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-3CEC3Q\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        AllTrue[
        FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ], 
        AllTrue[Model`ProcessModels`modelsP, AssociationQ], 
        AllTrue[
         Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]& , 
          Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]], 
         AssociationQ], 
        AllTrue[
         Map[Model`ProcessModels`modelsP[#]& , 
          Keys[Model`ProcessModels`modelsP]], AssociationQ]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`longTest = False;\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-116DCE\"\n]\n\n\nVerificationTest[\n\tNeeds \
@ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-K6S5F5\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-8B36RO\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-HPANYO\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Model`Catalog`models, \
KeyTake[FernandoDuarte`LongRunRisk`Model`Catalog`models, {\"BY\", \"BKY\", \
\"NRC\"}]];\n\tModel`ProcessModels`modelsP = If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Models, KeyTake[FernandoDuarte`LongRunRisk`Models, \
{\"BY\", \"BKY\", \"NRC\"}]];\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-01INLQ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[StringQ, Keys @ Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-Q8F8Y7\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction @ {\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-XCSPNR\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-8V68GY\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-NR97KO\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-3CEC3Q\"\n]\n\n\nEndTestSection[]\
\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print[
           "Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826519358027*^9, 3.905876121314247*^9, 
  3.90587623842959*^9, 3.905953237191284*^9, 3.905953432226165*^9, 
  3.905953675608914*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"cd8fd47d-9456-4bdd-8d0a-a0d8ad493457"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{"longTest", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "all", " ", "exogenous", " ", "variables", " ", "are", " ", "in", " ", 
       "context", " ", 
       "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"And", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"And", "@@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                  "#", "===", 
                   "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
\>\""}], ")"}], "&"}], "/@", 
                RowBox[{"(", 
                 RowBox[{"Context", "/@", 
                  RowBox[{"Cases", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<stateVars\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", 
                    "Infinity"}], "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", "\"\<modelAssumptions\>\"", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"And", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"And", "@@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                  "#", "===", 
                   "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
\>\""}], ")"}], "&"}], "/@", 
                RowBox[{"(", 
                 RowBox[{"Context", "/@", 
                  RowBox[{"Cases", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<modelAssumptions\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", 
                    "Infinity"}], "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", "\"\<exogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"And", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"And", "@@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                  "#", "===", 
                   "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
\>\""}], ")"}], "&"}], "/@", 
                RowBox[{"(", 
                 RowBox[{"Context", "/@", 
                  RowBox[{"Cases", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<exogenousEq\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", 
                    "Infinity"}], "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", "\"\<endogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"And", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"And", "@@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                  "#", "===", 
                   "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
\>\""}], ")"}], "&"}], "/@", 
                RowBox[{"(", 
                 RowBox[{"Context", "/@", 
                  RowBox[{"Cases", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<endogenousEq\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", 
                    "Infinity"}], "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}], 
       "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", "True"}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.893001201934902*^9, 3.893001214021667*^9}, {
   3.893001245798745*^9, 3.8930012743606873`*^9}, {3.893001352341578*^9, 
   3.893001386197197*^9}, {3.893001448430169*^9, 3.893001448726687*^9}, 
   3.8930026482885447`*^9, {3.8930042711283293`*^9, 3.8930042721384*^9}, {
   3.89301215129099*^9, 3.893012163688088*^9}, {3.893014370482971*^9, 
   3.893014438233089*^9}, {3.893014486322825*^9, 3.893014499135116*^9}, {
   3.893014551885273*^9, 3.893014565016636*^9}, 3.893016122561097*^9, 
   3.893027149143408*^9, {3.893027292962989*^9, 3.893027295449093*^9}, {
   3.905875553199419*^9, 3.905875562981326*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"1e140797-a692-49c2-9b2b-5f4c15874357"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231010-AXC0ST\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231010-AXC0ST"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9058265194019337`*^9, 3.905876121356765*^9, 
  3.905876238468425*^9, 3.905953237229*^9, 3.905953432262306*^9, 
  3.905953675644347*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"b0e356e7-da1d-418f-ab8e-718727b439a3"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.9058265194019337`*^9, 3.905876121356765*^9, 
  3.905876238468425*^9, 3.905953237229*^9, 3.905953432262306*^9, 
  3.9059536756565733`*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"16e930b0-6582-4502-b883-5a829d552e01"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\
\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\
\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\
\t{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\
\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-AXC0ST\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      If[Model`ProcessModels`longTest, 
       Apply[And, {
         Apply[And, 
          Map[Apply[And, 
            
            Map[# === 
             "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
             Map[Context, 
              Cases[
               Model`ProcessModels`modelsP[#]["stateVars"], PatternTest[
                 Pattern[Model`ProcessModels`var, 
                  Blank[Symbol]], MemberQ[
                  Map[
                  StringDrop[#, -2]& , 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                  SymbolName[#]]& ][
                 BlankSequence[]] :> Model`ProcessModels`var, Infinity]]]]& , 
           
           Keys[Model`ProcessModels`modelsP]]], 
         Apply[And, 
          Map[Apply[And, 
            
            Map[# === 
             "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
             Map[Context, 
              Cases[
               Model`ProcessModels`modelsP[#]["modelAssumptions"], PatternTest[
                 Pattern[Model`ProcessModels`var, 
                  Blank[Symbol]], MemberQ[
                  Map[
                  StringDrop[#, -2]& , 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                  SymbolName[#]]& ][
                 BlankSequence[]] :> Model`ProcessModels`var, Infinity]]]]& , 
           
           Keys[Model`ProcessModels`modelsP]]], 
         Apply[And, 
          Map[Apply[And, 
            
            Map[# === 
             "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
             Map[Context, 
              Cases[
               Model`ProcessModels`modelsP[#]["exogenousEq"], PatternTest[
                 Pattern[Model`ProcessModels`var, 
                  Blank[Symbol]], MemberQ[
                  Map[
                  StringDrop[#, -2]& , 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                  SymbolName[#]]& ][
                 BlankSequence[]] :> Model`ProcessModels`var, Infinity]]]]& , 
           
           Keys[Model`ProcessModels`modelsP]]], 
         Apply[And, 
          Map[Apply[And, 
            
            Map[# === 
             "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
             Map[Context, 
              Cases[
               Model`ProcessModels`modelsP[#]["endogenousEq"], PatternTest[
                 Pattern[Model`ProcessModels`var, 
                  Blank[Symbol]], MemberQ[
                  Map[
                  StringDrop[#, -2]& , 
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                  SymbolName[#]]& ][
                 BlankSequence[]] :> Model`ProcessModels`var, Infinity]]]]& , 
           
           Keys[Model`ProcessModels`modelsP]]]}], True]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`longTest = False;\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-116DCE\"\n]\n\n\nVerificationTest[\n\tNeeds \
@ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-K6S5F5\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-8B36RO\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-HPANYO\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Model`Catalog`models, \
KeyTake[FernandoDuarte`LongRunRisk`Model`Catalog`models, {\"BY\", \"BKY\", \
\"NRC\"}]];\n\tModel`ProcessModels`modelsP = If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Models, KeyTake[FernandoDuarte`LongRunRisk`Models, \
{\"BY\", \"BKY\", \"NRC\"}]];\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-01INLQ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[StringQ, Keys @ Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-Q8F8Y7\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction @ {\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-XCSPNR\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-8V68GY\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-NR97KO\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-3CEC3Q\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\
\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-AXC0ST\"\n]\n\n\nEndTestSection[]\
\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826519420985*^9, 3.9058761213739347`*^9, 
  3.905876238485614*^9, 3.905953237251808*^9, 3.905953432281219*^9, 
  3.905953675667151*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"3c2ce1d3-d252-4e18-aa67-08612ad6486e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{"longTest", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "all", " ", "shocks", " ", "are", " ", "in", " ", "context", " ", 
       "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"And", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"And", "@@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                  "#", "===", 
                   "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], 
                  ")"}], "&"}], "/@", 
                RowBox[{"(", 
                 RowBox[{"Context", "/@", 
                  RowBox[{"Cases", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<stateVars\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                    "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
                   "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", "\"\<modelAssumptions\>\"", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"And", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"And", "@@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                  "#", "===", 
                   "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], 
                  ")"}], "&"}], "/@", 
                RowBox[{"(", 
                 RowBox[{"Context", "/@", 
                  RowBox[{"Cases", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<modelAssumptions\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                    "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
                   "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", "\"\<exogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"And", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"And", "@@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                  "#", "===", 
                   "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], 
                  ")"}], "&"}], "/@", 
                RowBox[{"(", 
                 RowBox[{"Context", "/@", 
                  RowBox[{"Cases", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<exogenousEq\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                    "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
                   "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", "\"\<endogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"And", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"And", "@@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                  "#", "===", 
                   "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], 
                  ")"}], "&"}], "/@", 
                RowBox[{"(", 
                 RowBox[{"Context", "/@", 
                  RowBox[{"Cases", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<endogenousEq\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                    "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
                   "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}], 
       "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", "True"}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{
  3.893001499960679*^9, {3.893002667440094*^9, 3.89300269939427*^9}, {
   3.893003083367228*^9, 3.893003083692607*^9}, {3.8930042730060863`*^9, 
   3.893004273989354*^9}, {3.893012064247108*^9, 3.8930120867411222`*^9}, {
   3.893014419748905*^9, 3.893014445806767*^9}, {3.893014573318915*^9, 
   3.893014592005512*^9}, 3.893027154979233*^9, 3.893027301110894*^9, {
   3.9058755668542852`*^9, 3.905875575357706*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"87988790-43a9-4e61-8178-c645affb741e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231010-S2DU7N\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231010-S2DU7N"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9058265194591427`*^9, 3.905876121435452*^9, 
  3.905876238548594*^9, 3.905953237293479*^9, 3.9059534323219423`*^9, 
  3.905953675708352*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"a00add14-180b-444c-a2d0-80ae823e1f4f"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.9058265194591427`*^9, 3.905876121435452*^9, 
  3.905876238548594*^9, 3.905953237293479*^9, 3.9059534323219423`*^9, 
  3.9059536757155848`*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"939b063c-ebfd-44b4-bbdc-ce47eb9d19c9"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t\
],\n\t\tTrue\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\
\t{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t\
],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-S2DU7N\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      If[Model`ProcessModels`longTest, 
       Apply[And, {
         Apply[And, 
          Map[Apply[And, 
            Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
             Map[Context, 
              Cases[
               Model`ProcessModels`modelsP[#]["stateVars"], PatternTest[
                 Pattern[Model`ProcessModels`var, 
                  Blank[Symbol]], MatchQ[
                  SymbolName[#], "eps"]& ][
                 BlankSequence[]][
                 BlankSequence[]] :> Model`ProcessModels`var, Infinity]]]]& , 
           
           Keys[Model`ProcessModels`modelsP]]], 
         Apply[And, 
          Map[Apply[And, 
            Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
             Map[Context, 
              Cases[
               Model`ProcessModels`modelsP[#]["modelAssumptions"], PatternTest[
                 Pattern[Model`ProcessModels`var, 
                  Blank[Symbol]], MatchQ[
                  SymbolName[#], "eps"]& ][
                 BlankSequence[]][
                 BlankSequence[]] :> Model`ProcessModels`var, Infinity]]]]& , 
           
           Keys[Model`ProcessModels`modelsP]]], 
         Apply[And, 
          Map[Apply[And, 
            Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
             Map[Context, 
              Cases[
               Model`ProcessModels`modelsP[#]["exogenousEq"], PatternTest[
                 Pattern[Model`ProcessModels`var, 
                  Blank[Symbol]], MatchQ[
                  SymbolName[#], "eps"]& ][
                 BlankSequence[]][
                 BlankSequence[]] :> Model`ProcessModels`var, Infinity]]]]& , 
           
           Keys[Model`ProcessModels`modelsP]]], 
         Apply[And, 
          Map[Apply[And, 
            Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
             Map[Context, 
              Cases[
               Model`ProcessModels`modelsP[#]["endogenousEq"], PatternTest[
                 Pattern[Model`ProcessModels`var, 
                  Blank[Symbol]], MatchQ[
                  SymbolName[#], "eps"]& ][
                 BlankSequence[]][
                 BlankSequence[]] :> Model`ProcessModels`var, Infinity]]]]& , 
           
           Keys[Model`ProcessModels`modelsP]]]}], True]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`longTest = False;\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-116DCE\"\n]\n\n\nVerificationTest[\n\tNeeds \
@ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-K6S5F5\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-8B36RO\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-HPANYO\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Model`Catalog`models, \
KeyTake[FernandoDuarte`LongRunRisk`Model`Catalog`models, {\"BY\", \"BKY\", \
\"NRC\"}]];\n\tModel`ProcessModels`modelsP = If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Models, KeyTake[FernandoDuarte`LongRunRisk`Models, \
{\"BY\", \"BKY\", \"NRC\"}]];\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-01INLQ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[StringQ, Keys @ Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-Q8F8Y7\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction @ {\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-XCSPNR\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-8V68GY\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-NR97KO\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-3CEC3Q\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\
\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-AXC0ST\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t\
],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-S2DU7N\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print[
           "Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826519478595*^9, 3.9058761214544764`*^9, 
  3.905876238566318*^9, 3.905953237311014*^9, 3.905953432338941*^9, 
  3.9059536757271023`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"c401d533-fbeb-426c-ad86-c2876d06f325"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{"longTest", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "all", " ", "parameters", " ", "are", " ", "in", " ", "context", " ", 
       "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"(*", "\"\<parameters\>\"", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"And", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"And", "@@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                  "#", "===", 
                   "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
                  ")"}], "&"}], "/@", 
                RowBox[{"(", 
                 RowBox[{"Context", "/@", 
                  RowBox[{"Cases", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<parameters\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
                 ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"And", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"And", "@@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                  "#", "===", 
                   "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
                  ")"}], "&"}], "/@", 
                RowBox[{"(", 
                 RowBox[{"Context", "/@", 
                  RowBox[{"Cases", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<stateVars\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
                 ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", "\"\<modelAssumptions\>\"", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"And", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"And", "@@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                  "#", "===", 
                   "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
                  ")"}], "&"}], "/@", 
                RowBox[{"(", 
                 RowBox[{"Context", "/@", 
                  RowBox[{"Cases", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<modelAssumptions\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
                 ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", "\"\<exogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"And", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"And", "@@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                  "#", "===", 
                   "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
                  ")"}], "&"}], "/@", 
                RowBox[{"(", 
                 RowBox[{"Context", "/@", 
                  RowBox[{"Cases", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<exogenousEq\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
                 ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", "\"\<endogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"And", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"And", "@@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                  "#", "===", 
                   "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
                  ")"}], "&"}], "/@", 
                RowBox[{"(", 
                 RowBox[{"Context", "/@", 
                  RowBox[{"Cases", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<endogenousEq\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
                 ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}], 
       "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", "True"}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{
  3.893001501399847*^9, {3.893002703969759*^9, 3.893002740019191*^9}, {
   3.893003056880762*^9, 3.893003109272599*^9}, {3.893003787588058*^9, 
   3.893003788104986*^9}, {3.893004274886281*^9, 3.893004277331174*^9}, {
   3.893012058196281*^9, 3.893012058639546*^9}, {3.8930144234979*^9, 
   3.8930144532880163`*^9}, {3.8930146005691023`*^9, 3.893014621517111*^9}, 
   3.893016128067835*^9, 3.893027157544302*^9, 3.893027305757145*^9, {
   3.90587557797712*^9, 3.905875588950036*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"5ba1a080-37af-4559-8675-5356610aa871"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231010-C1WRNJ\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231010-C1WRNJ"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905826519532745*^9, 3.905876121497834*^9, 
  3.9058762386107807`*^9, 3.905953237347476*^9, 3.905953432381632*^9, 
  3.905953675766562*^9},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"590c37d8-1be7-497b-8440-c6dd75f41655"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826519532745*^9, 3.905876121497834*^9, 
  3.9058762386107807`*^9, 3.905953237347476*^9, 3.905953432381632*^9, 
  3.905953675779566*^9},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"d6c50a0b-144b-4aef-81d6-5077c13d1fef"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\
\n\t\tTrue\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\
\t{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\
\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-C1WRNJ\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      If[Model`ProcessModels`longTest, 
       Apply[And, {
         Apply[And, 
          Map[Apply[And, 
            Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
             Map[Context, 
              Cases[
               Model`ProcessModels`modelsP[#]["parameters"], PatternTest[
                 Pattern[Model`ProcessModels`var, 
                  Blank[Symbol]], MemberQ[
                 FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                  SymbolName[#]]& ] :> Model`ProcessModels`var, 
               Infinity]]]]& , 
           Keys[Model`ProcessModels`modelsP]]], 
         Apply[And, 
          Map[Apply[And, 
            Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
             Map[Context, 
              Cases[
               Model`ProcessModels`modelsP[#]["stateVars"], PatternTest[
                 Pattern[Model`ProcessModels`var, 
                  Blank[Symbol]], MemberQ[
                 FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                  SymbolName[#]]& ] :> Model`ProcessModels`var, 
               Infinity]]]]& , 
           Keys[Model`ProcessModels`modelsP]]], 
         Apply[And, 
          Map[Apply[And, 
            Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
             Map[Context, 
              Cases[
               Model`ProcessModels`modelsP[#]["modelAssumptions"], PatternTest[
                 Pattern[Model`ProcessModels`var, 
                  Blank[Symbol]], MemberQ[
                 FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                  SymbolName[#]]& ] :> Model`ProcessModels`var, 
               Infinity]]]]& , 
           Keys[Model`ProcessModels`modelsP]]], 
         Apply[And, 
          Map[Apply[And, 
            Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
             Map[Context, 
              Cases[
               Model`ProcessModels`modelsP[#]["exogenousEq"], PatternTest[
                 Pattern[Model`ProcessModels`var, 
                  Blank[Symbol]], MemberQ[
                 FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                  SymbolName[#]]& ] :> Model`ProcessModels`var, 
               Infinity]]]]& , 
           Keys[Model`ProcessModels`modelsP]]], 
         Apply[And, 
          Map[Apply[And, 
            Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
             Map[Context, 
              Cases[
               Model`ProcessModels`modelsP[#]["endogenousEq"], PatternTest[
                 Pattern[Model`ProcessModels`var, 
                  Blank[Symbol]], MemberQ[
                 FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                  SymbolName[#]]& ] :> Model`ProcessModels`var, 
               Infinity]]]]& , 
           Keys[Model`ProcessModels`modelsP]]]}], True]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`longTest = False;\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-116DCE\"\n]\n\n\nVerificationTest[\n\tNeeds \
@ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-K6S5F5\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-8B36RO\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-HPANYO\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Model`Catalog`models, \
KeyTake[FernandoDuarte`LongRunRisk`Model`Catalog`models, {\"BY\", \"BKY\", \
\"NRC\"}]];\n\tModel`ProcessModels`modelsP = If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Models, KeyTake[FernandoDuarte`LongRunRisk`Models, \
{\"BY\", \"BKY\", \"NRC\"}]];\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-01INLQ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[StringQ, Keys @ Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-Q8F8Y7\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction @ {\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-XCSPNR\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-8V68GY\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-NR97KO\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-3CEC3Q\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\
\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-AXC0ST\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t\
],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-S2DU7N\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\
\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-C1WRNJ\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826519547595*^9, 3.905876121505168*^9, 
  3.9058762386265783`*^9, 3.905953237364419*^9, 3.905953432404317*^9, 
  3.90595367578579*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"b20bf22f-e772-470e-b3fe-5181617bbfe1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{"longTest", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "all", " ", "endogenous", " ", "variables", " ", "are", " ", "in", " ", 
       "context", " ", 
       "\"\<FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\>\""}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<modelAssumptions\>\"", "*)"}], "\[IndentingNewLine]", 
     
     RowBox[{"And", "@@", 
      RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"And", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"And", "@@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                  "#", "===", 
                   "\"\<FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\
\>\""}], ")"}], "&"}], "/@", 
                RowBox[{"(", 
                 RowBox[{"Context", "/@", 
                  RowBox[{"Cases", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<modelAssumptions\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", 
                    "Infinity"}], "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", "\"\<endogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"And", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"And", "@@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                  "#", "===", 
                   "\"\<FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\
\>\""}], ")"}], "&"}], "/@", 
                RowBox[{"(", 
                 RowBox[{"Context", "/@", 
                  RowBox[{"Cases", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<endogenousEq\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", 
                    "Infinity"}], "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}], 
       "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", "True"}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.8930122537493258`*^9, 3.893012300221422*^9}, {
   3.893014429011052*^9, 3.893014460982974*^9}, {3.893014634019079*^9, 
   3.893014636342099*^9}, {3.893014692448086*^9, 3.89301469383664*^9}, {
   3.893014770636636*^9, 3.893014779588964*^9}, 3.893027162806097*^9, 
   3.8930273091238203`*^9, {3.9058755933835983`*^9, 3.9058756016854343`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"ef80abef-2c56-4f05-b149-7ef948f31da2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231010-LV3Y1V\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231010-LV3Y1V"],
  Editable->False]], "Print",
 CellChangeTimes->{3.90582651958855*^9, 3.9058761215482197`*^9, 
  3.905876238668638*^9, 3.9059532374075947`*^9, 3.905953432443687*^9, 
  3.905953675825837*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"b818bc86-56e5-4a8d-ae12-c7f8b2dc01b9"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.90582651958855*^9, 3.9058761215482197`*^9, 
  3.905876238668638*^9, 3.9059532374075947`*^9, 3.905953432443687*^9, 
  3.905953675837668*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"3261d793-9aec-4a58-8d1c-8315d019cc03"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\
\t{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\
\t\t\t\t\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\
\tFunction[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-LV3Y1V\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      If[Model`ProcessModels`longTest, 
       Apply[And, {
         Apply[And, 
          Map[Apply[And, 
            
            Map[# === 
             "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"& , 
             Map[Context, 
              Cases[
               Model`ProcessModels`modelsP[#]["modelAssumptions"], PatternTest[
                 Pattern[Model`ProcessModels`var, 
                  Blank[Symbol]], MemberQ[
                  Map[
                  StringDrop[#, -2]& , 
                   FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                  SymbolName[#]]& ][
                 BlankSequence[]] :> Model`ProcessModels`var, Infinity]]]]& , 
           
           Keys[Model`ProcessModels`modelsP]]], 
         Apply[And, 
          Map[Apply[And, 
            
            Map[# === 
             "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"& , 
             Map[Context, 
              Cases[
               Model`ProcessModels`modelsP[#]["endogenousEq"], PatternTest[
                 Pattern[Model`ProcessModels`var, 
                  Blank[Symbol]], MemberQ[
                  Map[
                  StringDrop[#, -2]& , 
                   FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                  SymbolName[#]]& ][
                 BlankSequence[]] :> Model`ProcessModels`var, Infinity]]]]& , 
           
           Keys[Model`ProcessModels`modelsP]]]}], True]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`longTest = False;\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-116DCE\"\n]\n\n\nVerificationTest[\n\tNeeds \
@ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-K6S5F5\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-8B36RO\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-HPANYO\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Model`Catalog`models, \
KeyTake[FernandoDuarte`LongRunRisk`Model`Catalog`models, {\"BY\", \"BKY\", \
\"NRC\"}]];\n\tModel`ProcessModels`modelsP = If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Models, KeyTake[FernandoDuarte`LongRunRisk`Models, \
{\"BY\", \"BKY\", \"NRC\"}]];\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-01INLQ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[StringQ, Keys @ Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-Q8F8Y7\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction @ {\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-XCSPNR\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-8V68GY\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-NR97KO\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-3CEC3Q\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\
\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-AXC0ST\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t\
],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-S2DU7N\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\
\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-C1WRNJ\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-LV3Y1V\"\n]\n\n\nEndTestSection[]\
\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.9058265196053257`*^9, 3.9058761215613737`*^9, 
  3.905876238685583*^9, 3.905953237422374*^9, 3.9059534324514637`*^9, 
  3.90595367584621*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"7cea4cfc-fed8-4c20-8a9b-d8538035e007"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{"longTest", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"all", " ", "coefficients", " ", "of", " ", "wc"}], ",", " ", 
       "pd", ",", " ", 
       RowBox[{
       "bond", " ", "ratios", " ", "are", " ", "in", " ", "context", " ", 
        "\"\<FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\>\""}]}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"coefs", "=", 
       RowBox[{"Alternatives", "@@", 
        RowBox[{"SymbolName", "/@", 
         RowBox[{"{", 
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc", ",", 
           RowBox[{
           "Head", "@", 
            "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd"}], 
           ",", 
           RowBox[{
           "Head", "@", 
            "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb"}], 
           ",", 
           RowBox[{
           "Head", "@", 
            "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb"}]}]\
, "}"}]}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
           "#", "===", 
            "\"\<FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\>\""}]\
, ")"}], "&"}], "/@", 
         RowBox[{"Flatten", "@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"modelsP", "[", "#", "]"}], "[", 
                "\"\<modelAssumptions\>\"", "]"}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"var_Symbol", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", "coefs"}], 
                    "]"}], "&"}], ")"}]}], "|", 
                  RowBox[{
                   RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", "coefs"}], 
                    "]"}], "&"}], ")"}]}], "[", "__", "]"}]}], ")"}], ":>", 
                RowBox[{"Context", "[", "var", "]"}]}], ",", "Infinity"}], 
              "]"}], "&"}], "/@", 
            RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}], ")"}]}]}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "True"}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.893012389695546*^9, 3.893012429793953*^9}, {
   3.893012999712995*^9, 3.893013013257292*^9}, 3.893027168767529*^9, 
   3.89302731516646*^9, {3.9058756349780397`*^9, 3.905875648767393*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"81f0314f-983a-4f35-94ac-9304a10f36a3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231010-TEO87Q\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231010-TEO87Q"],
  Editable->False]], "Print",
 CellChangeTimes->{3.90582651963768*^9, 3.905876121599382*^9, 
  3.905876238724103*^9, 3.9059532374675694`*^9, 3.905953432488475*^9, 
  3.905953675884688*^9},
 CellLabel->
  "During evaluation of \
In[25]:=",ExpressionUUID->"a0965ca6-749e-4743-9b4f-dcae5aef293f"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.90582651963768*^9, 3.905876121599382*^9, 
  3.905876238724103*^9, 3.9059532374675694`*^9, 3.905953432488475*^9, 
  3.905953675890819*^9},
 CellLabel->
  "During evaluation of \
In[25]:=",ExpressionUUID->"6b93948a-c2ae-4644-b13c-31087d7996eb"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "If[Model`ProcessModels`longTest,\n\t\tModel`ProcessModels`coefs = Apply[\n\
\t\t\tAlternatives,\n\t\t\tMap[SymbolName,\n\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t\t]\n\t\t\
];\n\t\tApply[And,\n\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\
Flatten[\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\
True\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\t\
Model`ProcessModels`coefs = Apply[\n\t\t\tAlternatives,\n\t\t\t\
Map[SymbolName,\n\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t\t]\n\t\t\
];\n\t\tApply[And,\n\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\
Flatten[\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\
True\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-TEO87Q\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      If[Model`ProcessModels`longTest, 
       Model`ProcessModels`coefs = Apply[Alternatives, 
          Map[
          SymbolName, {
           FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, 
            Head[
            FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd], 
            Head[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb], 
            Head[
            FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb]}]]; 
       Apply[And, 
         Map[# === "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"& , 
          Flatten[
           Map[Cases[
             Model`ProcessModels`modelsP[#]["modelAssumptions"], 
             Alternatives[
               PatternTest[
                Pattern[Model`ProcessModels`var, 
                 Blank[Symbol]], MatchQ[
                 SymbolName[#], Model`ProcessModels`coefs]& ], 
               PatternTest[
                Pattern[Model`ProcessModels`var, 
                 Blank[Symbol]], MatchQ[
                 SymbolName[#], Model`ProcessModels`coefs]& ][
                BlankSequence[]]] :> Context[Model`ProcessModels`var], 
             Infinity]& , 
            Keys[Model`ProcessModels`modelsP]]]]], True]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`longTest = False;\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-116DCE\"\n]\n\n\nVerificationTest[\n\tNeeds \
@ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-K6S5F5\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-8B36RO\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-HPANYO\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Model`Catalog`models, \
KeyTake[FernandoDuarte`LongRunRisk`Model`Catalog`models, {\"BY\", \"BKY\", \
\"NRC\"}]];\n\tModel`ProcessModels`modelsP = If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Models, KeyTake[FernandoDuarte`LongRunRisk`Models, \
{\"BY\", \"BKY\", \"NRC\"}]];\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-01INLQ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[StringQ, Keys @ Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-Q8F8Y7\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction @ {\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-XCSPNR\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-8V68GY\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-NR97KO\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-3CEC3Q\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\
\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-AXC0ST\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t\
],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-S2DU7N\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\
\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-C1WRNJ\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-LV3Y1V\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\t\
Model`ProcessModels`coefs = Apply[\n\t\t\tAlternatives,\n\t\t\t\
Map[SymbolName,\n\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t\t]\n\t\t\
];\n\t\tApply[And,\n\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\
Flatten[\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\
True\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-TEO87Q\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826519652289*^9, 3.9058761216065807`*^9, 
  3.905876238739354*^9, 3.90595323748314*^9, 3.905953432506133*^9, 
  3.905953675902211*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"e1dbab9d-0866-4403-a3cc-377eed061d23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "should", " ", "not", " ", "have", " ", "any", " ", "endogenous", " ", 
     "variables"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{
            RowBox[{"{", "}"}], ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
               "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"var_Symbol", "?", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                  ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}],
              "]"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", "\"\<exogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{
            RowBox[{"{", "}"}], ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<exogenousEq\>\"",
                "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"var_Symbol", "?", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                  ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}],
              "]"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}]}], 
     "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.89300111387222*^9, 3.8930011727459707`*^9}, {
   3.893001247830225*^9, 3.893001299678648*^9}, {3.893001353751255*^9, 
   3.8930015072417727`*^9}, {3.893002707727394*^9, 3.893002708411419*^9}, {
   3.893002748062245*^9, 3.893002826831513*^9}, 3.89300297523416*^9, {
   3.893003086535989*^9, 3.893003086763905*^9}, {3.8930042788551702`*^9, 
   3.893004279626916*^9}, {3.8930147061742983`*^9, 3.8930147624521227`*^9}, 
   3.893027171825409*^9, 3.893027320855521*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"725929c0-e672-42a1-adf0-1f1427f6f63b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231010-L6QYTE\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231010-L6QYTE"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905826519698761*^9, 3.905876121663658*^9, 
  3.905876238775303*^9, 3.905953237524194*^9, 3.905953432548994*^9, 
  3.90595367593886*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"49885db3-5a3d-4273-bf8b-eb430e2fe5f6"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826519698761*^9, 3.905876121663658*^9, 
  3.905876238775303*^9, 3.905953237524194*^9, 3.905953432548994*^9, 
  3.9059536759523993`*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"d49983bd-cc4f-4995-9433-0215d9cb50c8"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\
\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\tRuleDelayed[\n\
\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t\
}\n\t]", FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Cases[\n\t\t\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t\
}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-L6QYTE\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.002, "AbsoluteTiming" -> 0.002, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        Apply[And, 
         Map[MatchQ[{}, #]& , 
          Map[Cases[
            Model`ProcessModels`modelsP[#]["stateVars"], PatternTest[
              Pattern[Model`ProcessModels`var, 
               Blank[Symbol]], MemberQ[
               Map[
               StringDrop[#, -2]& , 
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]\
, 
               SymbolName[#]]& ][
              BlankSequence[]] :> Model`ProcessModels`var, Infinity]& , 
           Keys[Model`ProcessModels`modelsP]]]], 
        Apply[And, 
         Map[MatchQ[{}, #]& , 
          Map[Cases[
            Model`ProcessModels`modelsP[#]["exogenousEq"], PatternTest[
              Pattern[Model`ProcessModels`var, 
               Blank[Symbol]], MemberQ[
               Map[
               StringDrop[#, -2]& , 
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]\
, 
               SymbolName[#]]& ][
              BlankSequence[]] :> Model`ProcessModels`var, Infinity]& , 
           Keys[Model`ProcessModels`modelsP]]]]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`longTest = False;\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-116DCE\"\n]\n\n\nVerificationTest[\n\tNeeds \
@ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-K6S5F5\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-8B36RO\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-HPANYO\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Model`Catalog`models, \
KeyTake[FernandoDuarte`LongRunRisk`Model`Catalog`models, {\"BY\", \"BKY\", \
\"NRC\"}]];\n\tModel`ProcessModels`modelsP = If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Models, KeyTake[FernandoDuarte`LongRunRisk`Models, \
{\"BY\", \"BKY\", \"NRC\"}]];\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-01INLQ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[StringQ, Keys @ Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-Q8F8Y7\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction @ {\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-XCSPNR\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-8V68GY\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-NR97KO\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-3CEC3Q\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\
\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-AXC0ST\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t\
],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-S2DU7N\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\
\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-C1WRNJ\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-LV3Y1V\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\t\
Model`ProcessModels`coefs = Apply[\n\t\t\tAlternatives,\n\t\t\t\
Map[SymbolName,\n\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t\t]\n\t\t\
];\n\t\tApply[And,\n\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\
Flatten[\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\
True\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-TEO87Q\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\tRuleDelayed[\n\
\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t\
}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-L6QYTE\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826519705927*^9, 3.905876121678896*^9, 
  3.905876238795369*^9, 3.905953237544224*^9, 3.9059534325652037`*^9, 
  3.905953675960099*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"a453d259-dcf5-4834-9460-3e9235bd579c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "keys", " ", "and", " ", "shortname", " ", "are", " ", "preserved"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SubsetQ", "[", 
       RowBox[{
        RowBox[{"Keys", "[", "models", "]"}], ",", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"SubsetQ", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"models", "[", "#", "]"}], "[", "\"\<shortname\>\"", "]"}],
           "&"}], "/@", 
         RowBox[{"Keys", "[", "models", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<shortname\>\"", 
           "]"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "modelsP", "]"}]}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.89301161589116*^9, 3.893011697195755*^9}, 
   3.8930271750973*^9, 3.893027322877461*^9, 3.893144799365404*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"a20999be-298b-4767-9b2b-66ebc0f4bed8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231010-INNT84\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231010-INNT84"],
  Editable->False]], "Print",
 CellChangeTimes->{3.90582651974461*^9, 3.905876121717448*^9, 
  3.905876238834922*^9, 3.9059532375800133`*^9, 3.905953432602744*^9, 
  3.9059536759963217`*^9},
 CellLabel->
  "During evaluation of \
In[27]:=",ExpressionUUID->"e46886c7-ebfa-488d-a748-a43ae37bb660"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.90582651974461*^9, 3.905876121717448*^9, 
  3.905876238834922*^9, 3.9059532375800133`*^9, 3.905953432602744*^9, 
  3.905953676002678*^9},
 CellLabel->
  "During evaluation of \
In[27]:=",ExpressionUUID->"801e6472-f88d-42c2-a1da-e070e20c539d"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\tSubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\
SubsetQ[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"]&\
, Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models],\n\t\t\t\t\
Map[Model`ProcessModels`modelsP[#][\"shortname\"]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tSubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\
SubsetQ[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"]&\
, Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models],\n\t\t\t\t\
Map[Model`ProcessModels`modelsP[#][\"shortname\"]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ProcessModels_20231010-INNT84\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        SubsetQ[
         Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], 
         Keys[Model`ProcessModels`modelsP]], 
        SubsetQ[
         Map[
         FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["shortname"]& , 
          Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]], 
         Map[Model`ProcessModels`modelsP[#]["shortname"]& , 
          Keys[Model`ProcessModels`modelsP]]]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`longTest = False;\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-116DCE\"\n]\n\n\nVerificationTest[\n\tNeeds \
@ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-K6S5F5\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-8B36RO\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-HPANYO\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Model`Catalog`models, \
KeyTake[FernandoDuarte`LongRunRisk`Model`Catalog`models, {\"BY\", \"BKY\", \
\"NRC\"}]];\n\tModel`ProcessModels`modelsP = If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Models, KeyTake[FernandoDuarte`LongRunRisk`Models, \
{\"BY\", \"BKY\", \"NRC\"}]];\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-01INLQ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[StringQ, Keys @ Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-Q8F8Y7\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction @ {\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-XCSPNR\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-8V68GY\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-NR97KO\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-3CEC3Q\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\
\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-AXC0ST\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t\
],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-S2DU7N\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\
\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-C1WRNJ\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-LV3Y1V\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\t\
Model`ProcessModels`coefs = Apply[\n\t\t\tAlternatives,\n\t\t\t\
Map[SymbolName,\n\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t\t]\n\t\t\
];\n\t\tApply[And,\n\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\
Flatten[\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\
True\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-TEO87Q\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\tRuleDelayed[\n\
\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t\
}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-L6QYTE\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tSubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\
SubsetQ[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"]&\
, Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models],\n\t\t\t\t\
Map[Model`ProcessModels`modelsP[#][\"shortname\"]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ProcessModels_20231010-INNT84\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826519764894*^9, 3.905876121725821*^9, 
  3.905876238851898*^9, 3.9059532376031857`*^9, 3.9059534326184483`*^9, 
  3.9059536760136833`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"e35d67d0-0cd3-45f1-8123-4535ebf8842d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "stateVars", " ", "are", " ", "functions", " ", "of", " ", "one", " ", 
     "variable", " ", 
     RowBox[{"(", "time", ")"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{"Function", ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"Head", "/@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
                "]"}], ")"}], "&"}], "/@", 
             RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
        ")"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{"List", ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"Head", "/@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<stateVars\>\"",
                  "]"}], "[", "t", "]"}], ")"}], "&"}], "/@", 
             RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
        ")"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{"1", ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"Length", "/@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<stateVars\>\"",
                  "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ")"}], "&"}], "/@", 
             RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
        ")"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{"\"\<t\>\"", ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"SymbolName", "@@", 
              RowBox[{
               RowBox[{
                RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
                "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "evaluating", " ", "the", " ", "function", " ", "at", " ", 
        "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t", " ", 
        "gives", " ", "the", " ", "same", " ", "as", " ", "\"\<stateVars\>\"",
         " ", "in", " ", "models"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
             "]"}], "[", 
            "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t", "]"}], 
           ")"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}], "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"models", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
            "]"}], ")"}], "&"}], "/@", 
         RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}], 
     "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.893011149678734*^9, 3.893011151120873*^9}, {
   3.893011197672791*^9, 3.893011393092401*^9}, {3.8930114244175577`*^9, 
   3.893011594633165*^9}, {3.893011701053651*^9, 3.89301170872368*^9}, {
   3.8930117913212442`*^9, 3.893011831744893*^9}, 3.893013045538563*^9, 
   3.893027177302371*^9, 3.89302732535247*^9, 3.893144899211803*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"a3f64af9-a0ab-44c4-b3b2-109b0dd55536"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231010-YYJQ1J\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231010-YYJQ1J"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905826519802617*^9, 3.905876121768825*^9, 
  3.90587623888909*^9, 3.905953237640902*^9, 3.905953432652255*^9, 
  3.905953676049962*^9},
 CellLabel->
  "During evaluation of \
In[28]:=",ExpressionUUID->"4545b2f0-b476-403d-974c-091e54d3d641"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826519802617*^9, 3.905876121768825*^9, 
  3.90587623888909*^9, 3.905953237640902*^9, 3.905953432652255*^9, 
  3.905953676056918*^9},
 CellLabel->
  "During evaluation of \
In[28]:=",ExpressionUUID->"2ae393c2-2d64-4040-ad50-f457622bd077"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[Function, #]&,\n\t\
\t\t\t\tMap[Head, Map[Model`ProcessModels`modelsP[#][\"stateVars\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[List, #]&,\n\t\t\t\t\tMap[Head, \
Map[Model`ProcessModels`modelsP[#][\"stateVars\"][Model`ProcessModels`t]&, \
Keys @ Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\
\t\t\t\tMap[MatchQ[1, #]&,\n\t\t\t\t\tMap[Length,\n\t\t\t\t\t\t\
Map[Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[MatchQ[\"t\", #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[Apply[SymbolName, \
Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]]],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Map[Model`ProcessModels`modelsP[#][\"stateVars\"][FernandoDuarte`\
LongRunRisk`Model`ExogenousEq`Private`t]&, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\t\
Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"]&, Keys \
@ Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[Function, #]&,\n\t\t\t\t\tMap[Head, \
Map[Model`ProcessModels`modelsP[#][\"stateVars\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[List, #]&,\n\t\t\t\t\tMap[Head, \
Map[Model`ProcessModels`modelsP[#][\"stateVars\"][Model`ProcessModels`t]&, \
Keys @ Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\
\t\t\t\tMap[MatchQ[1, #]&,\n\t\t\t\t\tMap[Length,\n\t\t\t\t\t\t\
Map[Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[MatchQ[\"t\", #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[Apply[SymbolName, \
Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]]],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Map[Model`ProcessModels`modelsP[#][\"stateVars\"][FernandoDuarte`\
LongRunRisk`Model`ExogenousEq`Private`t]&, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\t\
Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"]&, Keys \
@ Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"ProcessModels_20231010-YYJQ1J\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        Apply[And, 
         Map[MatchQ[Function, #]& , 
          Map[Head, 
           Map[Model`ProcessModels`modelsP[#]["stateVars"]& , 
            Keys[Model`ProcessModels`modelsP]]]]], 
        Apply[And, 
         Map[MatchQ[List, #]& , 
          Map[Head, 
           Map[
           Model`ProcessModels`modelsP[#]["stateVars"][
            Model`ProcessModels`t]& , 
            Keys[Model`ProcessModels`modelsP]]]]], 
        Apply[And, 
         Map[MatchQ[1, #]& , 
          Map[Length, 
           Map[Part[
             Model`ProcessModels`modelsP[#]["stateVars"], 1]& , 
            Keys[Model`ProcessModels`modelsP]]]]], 
        Apply[And, 
         Map[MatchQ["t", #]& , 
          Map[Apply[SymbolName, 
            Part[
             Model`ProcessModels`modelsP[#]["stateVars"], 1]]& , 
           Keys[Model`ProcessModels`modelsP]]]], 
        Map[Model`ProcessModels`modelsP[#]["stateVars"][
          FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]& , 
          Keys[Model`ProcessModels`modelsP]] === 
        Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]["stateVars"]& , 
          Keys[Model`ProcessModels`modelsP]]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`longTest = False;\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-116DCE\"\n]\n\n\nVerificationTest[\n\tNeeds \
@ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-K6S5F5\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-8B36RO\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-HPANYO\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Model`Catalog`models, \
KeyTake[FernandoDuarte`LongRunRisk`Model`Catalog`models, {\"BY\", \"BKY\", \
\"NRC\"}]];\n\tModel`ProcessModels`modelsP = If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Models, KeyTake[FernandoDuarte`LongRunRisk`Models, \
{\"BY\", \"BKY\", \"NRC\"}]];\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-01INLQ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[StringQ, Keys @ Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-Q8F8Y7\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction @ {\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-XCSPNR\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-8V68GY\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-NR97KO\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-3CEC3Q\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\
\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-AXC0ST\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t\
],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-S2DU7N\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\
\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-C1WRNJ\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-LV3Y1V\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\t\
Model`ProcessModels`coefs = Apply[\n\t\t\tAlternatives,\n\t\t\t\
Map[SymbolName,\n\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t\t]\n\t\t\
];\n\t\tApply[And,\n\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\
Flatten[\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\
True\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-TEO87Q\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\tRuleDelayed[\n\
\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t\
}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-L6QYTE\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tSubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\
SubsetQ[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"]&\
, Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models],\n\t\t\t\t\
Map[Model`ProcessModels`modelsP[#][\"shortname\"]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ProcessModels_20231010-INNT84\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[Function, #]&,\n\t\t\t\
\t\tMap[Head, Map[Model`ProcessModels`modelsP[#][\"stateVars\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[List, #]&,\n\t\t\t\t\tMap[Head, \
Map[Model`ProcessModels`modelsP[#][\"stateVars\"][Model`ProcessModels`t]&, \
Keys @ Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\
\t\t\t\tMap[MatchQ[1, #]&,\n\t\t\t\t\tMap[Length,\n\t\t\t\t\t\t\
Map[Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[MatchQ[\"t\", #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[Apply[SymbolName, \
Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]]],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Map[Model`ProcessModels`modelsP[#][\"stateVars\"][FernandoDuarte`\
LongRunRisk`Model`ExogenousEq`Private`t]&, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\t\
Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"]&, Keys \
@ Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"ProcessModels_20231010-YYJQ1J\"\n]\n\n\nEndTestSection[]\n\
"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; 
        Print["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826519823678*^9, 3.905876121783451*^9, 
  3.9058762389084044`*^9, 3.90595323766013*^9, 3.905953432670971*^9, 
  3.905953676066258*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"10814923-324a-4b20-9531-5ac4f430385b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"numStocks", " ", "is", " ", "a", " ", "number"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"NumberQ", "/@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<numStocks\>\"", "]"}],
          "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"Keys", "@", "modelsP"}], ")"}]}], ")"}]}], ")"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.893011853833601*^9, 3.893011940133402*^9}, 
   3.893027178823254*^9, 3.893027328757538*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"d936375e-497e-40de-957c-ccbe13fec420"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231010-CO6JXI\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231010-CO6JXI"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9058265198599243`*^9, 3.905876121821927*^9, 
  3.905876238945106*^9, 3.90595323769606*^9, 3.9059534327047253`*^9, 
  3.9059536761013393`*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"f4456e43-3cd9-4c42-aded-85cc42789514"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.9058265198599243`*^9, 3.905876121821927*^9, 
  3.905876238945106*^9, 3.90595323769606*^9, 3.9059534327047253`*^9, 
  3.905953676107449*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"dd7d00b8-8e3c-4712-b846-2e224eb5c0b9"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tMap[NumberQ, \
Map[Model`ProcessModels`modelsP[#][\"numStocks\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tMap[NumberQ, \
Map[Model`ProcessModels`modelsP[#][\"numStocks\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-CO6JXI\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Map[NumberQ, 
        Map[Model`ProcessModels`modelsP[#]["numStocks"]& , 
         Keys[Model`ProcessModels`modelsP]]]]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`longTest = False;\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-116DCE\"\n]\n\n\nVerificationTest[\n\tNeeds \
@ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-K6S5F5\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-8B36RO\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-HPANYO\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Model`Catalog`models, \
KeyTake[FernandoDuarte`LongRunRisk`Model`Catalog`models, {\"BY\", \"BKY\", \
\"NRC\"}]];\n\tModel`ProcessModels`modelsP = If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Models, KeyTake[FernandoDuarte`LongRunRisk`Models, \
{\"BY\", \"BKY\", \"NRC\"}]];\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-01INLQ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[StringQ, Keys @ Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-Q8F8Y7\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction @ {\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-XCSPNR\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-8V68GY\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-NR97KO\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-3CEC3Q\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\
\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-AXC0ST\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t\
],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-S2DU7N\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\
\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-C1WRNJ\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-LV3Y1V\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\t\
Model`ProcessModels`coefs = Apply[\n\t\t\tAlternatives,\n\t\t\t\
Map[SymbolName,\n\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t\t]\n\t\t\
];\n\t\tApply[And,\n\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\
Flatten[\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\
True\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-TEO87Q\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\tRuleDelayed[\n\
\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t\
}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-L6QYTE\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tSubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\
SubsetQ[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"]&\
, Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models],\n\t\t\t\t\
Map[Model`ProcessModels`modelsP[#][\"shortname\"]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ProcessModels_20231010-INNT84\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[Function, #]&,\n\t\t\t\
\t\tMap[Head, Map[Model`ProcessModels`modelsP[#][\"stateVars\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[List, #]&,\n\t\t\t\t\tMap[Head, \
Map[Model`ProcessModels`modelsP[#][\"stateVars\"][Model`ProcessModels`t]&, \
Keys @ Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\
\t\t\t\tMap[MatchQ[1, #]&,\n\t\t\t\t\tMap[Length,\n\t\t\t\t\t\t\
Map[Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[MatchQ[\"t\", #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[Apply[SymbolName, \
Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]]],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Map[Model`ProcessModels`modelsP[#][\"stateVars\"][FernandoDuarte`\
LongRunRisk`Model`ExogenousEq`Private`t]&, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\t\
Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"]&, Keys \
@ Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"ProcessModels_20231010-YYJQ1J\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[NumberQ, \
Map[Model`ProcessModels`modelsP[#][\"numStocks\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-CO6JXI\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826519873651*^9, 3.905876121841585*^9, 
  3.905876238961379*^9, 3.905953237715802*^9, 3.905953432722021*^9, 
  3.905953676121491*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"ca2ad491-a6f3-4985-b80a-f5d56a018f31"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"compare", " ", "to", " ", "some", " ", "hand"}], "-", 
     RowBox[{
     "written", " ", "expressions", " ", "known", " ", "to", " ", "be", " ", 
      "correct"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"model", "=", 
     RowBox[{"modelsP", "[", "\"\<NRC\>\"", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"pi", "[", "myContext`t", "]"}], "/.", 
          RowBox[{"Normal", "@", 
           RowBox[{"model", "[", "\"\<exogenousEq\>\"", "]"}]}]}], ")"}], "===", 
        RowBox[{"(", 
         RowBox[{"FernandoDuarte`LongRunRisk`Model`Parameters`mup", "+", 
          RowBox[{"FernandoDuarte`LongRunRisk`Model`Parameters`rhop", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "FernandoDuarte`LongRunRisk`Model`Parameters`mup"}],
              "+", 
             RowBox[{
             "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi", "[", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "myContext`t"}], "]"}]}], ")"}]}], 
          "+", 
          RowBox[{"FernandoDuarte`LongRunRisk`Model`Parameters`xip", " ", 
           RowBox[{
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<pi\>\"", 
             "]"}], "[", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "myContext`t"}], "]"}]}], "+", 
          RowBox[{"FernandoDuarte`LongRunRisk`Model`Parameters`phip", " ", 
           RowBox[{
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<pi\>\"", 
             "]"}], "[", "myContext`t", "]"}]}]}], ")"}]}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"eps", "[", "\"\<dc\>\"", "]"}], "[", "t", "]"}], "/.", 
          RowBox[{"model", "[", "\"\<exogenousEq\>\"", "]"}]}], ")"}], "===", 
        
        RowBox[{
         RowBox[{"eps", "[", "\"\<dc\>\"", "]"}], "[", "t", "]"}]}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"dd", "[", 
           RowBox[{"t", ",", "i"}], "]"}], "/.", 
          RowBox[{"Normal", "@", 
           RowBox[{"model", "[", "\"\<exogenousEq\>\"", "]"}]}]}], ")"}], "===", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`Parameters`mud", "[", "i", "]"}], 
          "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "FernandoDuarte`LongRunRisk`Model`Parameters`mup"}],
              "+", 
             RowBox[{
             "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi", "[", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "t"}], "]"}]}], ")"}], " ", 
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`Parameters`rhodp", "[", "i", 
            "]"}]}], "+", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`Parameters`phidc", "[", "i", 
            "]"}], " ", 
           RowBox[{
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<dc\>\"", 
             "]"}], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg", "[", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "t"}], "]"}], " ", 
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`Parameters`xid", "[", "i", "]"}],
            " ", 
           RowBox[{
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<pi\>\"", 
             "]"}], "[", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "t"}], "]"}]}]}], ")"}]}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"wc", "[", "t", "]"}], "/.", 
          RowBox[{"Normal", "@", 
           RowBox[{"model", "[", "\"\<endogenousEq\>\"", "]"}]}]}], ")"}], "===", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A", "[", "0",
            "]"}], "+", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A", "[", 
            "1", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "FernandoDuarte`LongRunRisk`Model`Parameters`mup"}],
              "+", 
             RowBox[{
             "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi", "[", 
              "t", "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A", "[", 
            "4", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "FernandoDuarte`LongRunRisk`Model`Parameters`Esg"}],
              "+", 
             RowBox[{
             "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg", "[", 
              "t", "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A", "[", 
            "5", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              
              SuperscriptBox[
               "FernandoDuarte`LongRunRisk`Model`Parameters`Esg", "2"]}], "-", 
             FractionBox[
              
              SuperscriptBox[
               "FernandoDuarte`LongRunRisk`Model`Parameters`phig", "2"], 
              RowBox[{"1", "-", 
               
               SuperscriptBox[
                "FernandoDuarte`LongRunRisk`Model`Parameters`rhog", "2"]}]], 
             "+", 
             SuperscriptBox[
              RowBox[{
              "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg", "[", 
               "t", "]"}], "2"]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A", "[", 
            "3", "]"}], " ", 
           RowBox[{
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<pi\>\"", 
             "]"}], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A", "[", 
            "2", "]"}], " ", 
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg", "[", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "t"}], "]"}], " ", 
           RowBox[{
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<pi\>\"", 
             "]"}], "[", "t", "]"}]}]}], ")"}]}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"pd", "[", 
           RowBox[{"t", ",", "i"}], "]"}], "/.", 
          RowBox[{"Normal", "@", 
           RowBox[{"model", "[", "\"\<endogenousEq\>\"", "]"}]}]}], ")"}], "===", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B", "[", 
            "i", "]"}], "[", "0", "]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "FernandoDuarte`LongRunRisk`Model`Parameters`mup"}],
              "+", 
             RowBox[{
             "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi", "[", 
              "t", "]"}]}], ")"}], " ", 
           RowBox[{
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B", "[", 
             "i", "]"}], "[", "1", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "FernandoDuarte`LongRunRisk`Model`Parameters`Esg"}],
              "+", 
             RowBox[{
             "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg", "[", 
              "t", "]"}]}], ")"}], " ", 
           RowBox[{
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B", "[", 
             "i", "]"}], "[", "4", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox[
               "FernandoDuarte`LongRunRisk`Model`Parameters`Esg", "2"]}], "-", 
             FractionBox[
              
              SuperscriptBox[
               "FernandoDuarte`LongRunRisk`Model`Parameters`phig", "2"], 
              RowBox[{"1", "-", 
               
               SuperscriptBox[
                "FernandoDuarte`LongRunRisk`Model`Parameters`rhog", "2"]}]], 
             "+", 
             SuperscriptBox[
              RowBox[{
              "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg", "[", 
               "t", "]"}], "2"]}], ")"}], " ", 
           RowBox[{
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B", "[", 
             "i", "]"}], "[", "5", "]"}]}], "+", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg", "[", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "t"}], "]"}], " ", 
           RowBox[{
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B", "[", 
             "i", "]"}], "[", "2", "]"}], " ", 
           RowBox[{
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<pi\>\"", 
             "]"}], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B", "[", 
             "i", "]"}], "[", "3", "]"}], " ", 
           RowBox[{
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<pi\>\"", 
             "]"}], "[", "t", "]"}]}]}], ")"}]}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"bondexcret", "[", 
           RowBox[{"t", ",", "i"}], "]"}], "/.", 
          RowBox[{"Normal", "@", 
           RowBox[{"model", "[", "\"\<endogenousEq\>\"", "]"}]}]}], ")"}], "===", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondret", 
           "[", 
           RowBox[{"t", ",", "i", ",", "1"}], "]"}], "-", 
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondyield", 
           "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "+", "t"}], ",", "1"}], "]"}]}], ")"}]}], 
       ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"bondexcret", "[", 
            RowBox[{"t", ",", "i"}], "]"}], "/.", 
           RowBox[{"Normal", "@", 
            RowBox[{"model", "[", "\"\<endogenousEq\>\"", "]"}]}]}], "/.", 
          RowBox[{"Normal", "@", 
           RowBox[{"model", "[", "\"\<endogenousEq\>\"", "]"}]}]}], ")"}], "===", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "+", "t"}], ",", "1"}], "]"}], "-", 
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "+", "t"}], ",", "i"}], "]"}], "+", 
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond", "[", 
           RowBox[{"t", ",", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "i"}]}], "]"}]}], ")"}]}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}]}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.893013112707829*^9, 3.8930131579451036`*^9}, {
   3.89301319949829*^9, 3.8930132312916937`*^9}, {3.893014937931109*^9, 
   3.893015014205209*^9}, {3.8930150778885803`*^9, 3.893015081667938*^9}, 
   3.8930161054031553`*^9, 3.893016326710898*^9, {3.893016391754463*^9, 
   3.893016409333332*^9}, 3.893027182376034*^9, 3.893027336541357*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"140d7fd9-ef09-440e-be4b-3d323ff6adc5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231010-RI0LE2\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231010-RI0LE2"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905826519956622*^9, 3.9058761219189873`*^9, 
  3.90587623903863*^9, 3.9059532378016644`*^9, 3.905953432800518*^9, 
  3.905953676213271*^9},
 CellLabel->
  "During evaluation of \
In[30]:=",ExpressionUUID->"93cffe6d-09db-4807-a653-86807712526e"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826519956622*^9, 3.9058761219189873`*^9, 
  3.90587623903863*^9, 3.9059532378016644`*^9, 3.905953432800518*^9, 
  3.905953676213951*^9},
 CellLabel->
  "During evaluation of \
In[30]:=",ExpressionUUID->"ddc619b3-1cbc-4622-8f22-85f5c189af93"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Model`ProcessModels`model = Model`ProcessModels`modelsP @ \"NRC\";\n\t\
Apply[And,\n\t\t{\n\t\t\tSameQ[Model`ProcessModels`pi[myContext`t] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mup,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`rhop * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[myContext`t - 1] - \
FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Parameters`xip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t - 1]) + \
FernandoDuarte`LongRunRisk`Model`Parameters`phip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t]\n\t\t\t\t\t]\
\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t] /. \
Model`ProcessModels`model[\"exogenousEq\"], \
Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t]],\n\t\t\t\
SameQ[Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mud @ Model`ProcessModels`i,\
\n\t\t\t\t\tPlus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[\
Model`ProcessModels`t - 1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) \
* FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[Model`ProcessModels`i],\n\
\t\t\t\t\t\t(FernandoDuarte`LongRunRisk`Model`Parameters`phidc[Model`\
ProcessModels`i] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 2] * FernandoDuarte`LongRunRisk`Model`Parameters`xid[Model`ProcessModels`i] \
* FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t - \
1]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`wc[Model`ProcessModels`t] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 0,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[1] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[4] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg),\n\t\t\t\t\t\t\tPlus[\n\
\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 5,\n\t\t\t\t\t\t\t\t\
\tSubtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[3] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[2] * \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 1] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`\
ProcessModels`t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tSameQ[Model`ProcessModels`pd[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][0],\n\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[1],\n\t\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[4],\n\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
Subtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][5]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\
\t\tFernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t - 1] * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[2] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t],\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[3] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\
\n\t\t\t],\n\t\t\tSameQ[Model`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondret[Model`\
ProcessModels`t, Model`ProcessModels`i, 1] - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondyield[Model`\
ProcessModels`t - 1, 1]\n\t\t\t],\n\t\t\tSameQ[\n\t\t\t\t\
(Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
/. Normal[Model`ProcessModels`model[\"endogenousEq\"]]) /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, 1] + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t, Model`ProcessModels`i - 1]) - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, Model`ProcessModels`i]\n\t\t\t]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tModel`ProcessModels`model = \
Model`ProcessModels`modelsP @ \"NRC\";\n\tApply[And,\n\t\t{\n\t\t\t\
SameQ[Model`ProcessModels`pi[myContext`t] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mup,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`rhop * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[myContext`t - 1] - \
FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Parameters`xip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t - 1]) + \
FernandoDuarte`LongRunRisk`Model`Parameters`phip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t]\n\t\t\t\t\t]\
\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t] /. \
Model`ProcessModels`model[\"exogenousEq\"], \
Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t]],\n\t\t\t\
SameQ[Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mud @ Model`ProcessModels`i,\
\n\t\t\t\t\tPlus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[\
Model`ProcessModels`t - 1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) \
* FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[Model`ProcessModels`i],\n\
\t\t\t\t\t\t(FernandoDuarte`LongRunRisk`Model`Parameters`phidc[Model`\
ProcessModels`i] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 2] * FernandoDuarte`LongRunRisk`Model`Parameters`xid[Model`ProcessModels`i] \
* FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t - \
1]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`wc[Model`ProcessModels`t] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 0,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[1] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[4] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg),\n\t\t\t\t\t\t\tPlus[\n\
\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 5,\n\t\t\t\t\t\t\t\t\
\tSubtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[3] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[2] * \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 1] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`\
ProcessModels`t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tSameQ[Model`ProcessModels`pd[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][0],\n\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[1],\n\t\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[4],\n\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
Subtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][5]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\
\t\tFernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t - 1] * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[2] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t],\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[3] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\
\n\t\t\t],\n\t\t\tSameQ[Model`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondret[Model`\
ProcessModels`t, Model`ProcessModels`i, 1] - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondyield[Model`\
ProcessModels`t - 1, 1]\n\t\t\t],\n\t\t\tSameQ[\n\t\t\t\t\
(Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
/. Normal[Model`ProcessModels`model[\"endogenousEq\"]]) /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, 1] + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t, Model`ProcessModels`i - 1]) - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, Model`ProcessModels`i]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\
\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-RI0LE2\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.001, "AbsoluteTiming" -> 0.001, 
   "InputString" :> ToString[
     Unevaluated[
     Model`ProcessModels`model = Model`ProcessModels`modelsP["NRC"]; 
      Apply[And, {ReplaceAll[
           Model`ProcessModels`pi[myContext`t], 
           Normal[
            Model`ProcessModels`model["exogenousEq"]]] === 
         FernandoDuarte`LongRunRisk`Model`Parameters`mup + 
          FernandoDuarte`LongRunRisk`Model`Parameters`rhop (-
             FernandoDuarte`LongRunRisk`Model`Parameters`mup + 
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[-1 + 
              myContext`t]) + 
          FernandoDuarte`LongRunRisk`Model`Parameters`xip 
           FernandoDuarte`LongRunRisk`Model`Shocks`eps[
            "pi"][-1 + myContext`t] + 
          FernandoDuarte`LongRunRisk`Model`Parameters`phip 
           FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][myContext`t], 
         ReplaceAll[
           Model`ProcessModels`eps["dc"][Model`ProcessModels`t], 
           Model`ProcessModels`model["exogenousEq"]] === 
         Model`ProcessModels`eps["dc"][Model`ProcessModels`t], ReplaceAll[
           Model`ProcessModels`dd[
           Model`ProcessModels`t, Model`ProcessModels`i], 
           Normal[
            Model`ProcessModels`model["exogenousEq"]]] === 
         FernandoDuarte`LongRunRisk`Model`Parameters`mud[
           Model`ProcessModels`i] + (-
             FernandoDuarte`LongRunRisk`Model`Parameters`mup + 
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[-1 + 
              Model`ProcessModels`t]) 
           FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[
            Model`ProcessModels`i] + 
          FernandoDuarte`LongRunRisk`Model`Parameters`phidc[
            Model`ProcessModels`i] 
           FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
            Model`ProcessModels`t] + 
          FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[-2 + 
             Model`ProcessModels`t] 
           FernandoDuarte`LongRunRisk`Model`Parameters`xid[
            Model`ProcessModels`i] 
           FernandoDuarte`LongRunRisk`Model`Shocks`eps[
            "pi"][-1 + Model`ProcessModels`t], ReplaceAll[
           Model`ProcessModels`wc[Model`ProcessModels`t], 
           Normal[
            Model`ProcessModels`model["endogenousEq"]]] === 
         FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[0] + 
          FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[
            1] (-FernandoDuarte`LongRunRisk`Model`Parameters`mup + 
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
             Model`ProcessModels`t]) + 
          FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[
            4] (-FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
             Model`ProcessModels`t]) + 
          FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[
            5] (-FernandoDuarte`LongRunRisk`Model`Parameters`Esg^2 - 
            FernandoDuarte`LongRunRisk`Model`Parameters`phig^2/(1 - 
            FernandoDuarte`LongRunRisk`Model`Parameters`rhog^2) + 
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
              Model`ProcessModels`t]^2) + 
          FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[3] 
           FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
            Model`ProcessModels`t] + 
          FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[2] 
           FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[-1 + 
             Model`ProcessModels`t] 
           FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
            Model`ProcessModels`t], ReplaceAll[
           Model`ProcessModels`pd[
           Model`ProcessModels`t, Model`ProcessModels`i], 
           Normal[
            Model`ProcessModels`model["endogenousEq"]]] === 
         FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
           Model`ProcessModels`i][
           0] + (-FernandoDuarte`LongRunRisk`Model`Parameters`mup + 
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
             Model`ProcessModels`t]) 
           FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
            Model`ProcessModels`i][
            1] + (-FernandoDuarte`LongRunRisk`Model`Parameters`Esg + 
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
             Model`ProcessModels`t]) 
           FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
            Model`ProcessModels`i][
            4] + (-FernandoDuarte`LongRunRisk`Model`Parameters`Esg^2 - 
            FernandoDuarte`LongRunRisk`Model`Parameters`phig^2/(1 - 
            FernandoDuarte`LongRunRisk`Model`Parameters`rhog^2) + 
            FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
              Model`ProcessModels`t]^2) 
           FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
            Model`ProcessModels`i][5] + 
          FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[-1 + 
             Model`ProcessModels`t] 
           FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
            Model`ProcessModels`i][2] 
           FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
            Model`ProcessModels`t] + 
          FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
            Model`ProcessModels`i][3] 
           FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
            Model`ProcessModels`t], ReplaceAll[
           Model`ProcessModels`bondexcret[
           Model`ProcessModels`t, Model`ProcessModels`i], 
           Normal[
            Model`ProcessModels`model["endogenousEq"]]] === 
         FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondret[
           Model`ProcessModels`t, Model`ProcessModels`i, 1] - 
          FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondyield[-1 + 
           Model`ProcessModels`t, 1], ReplaceAll[
           ReplaceAll[
            Model`ProcessModels`bondexcret[
            Model`ProcessModels`t, Model`ProcessModels`i], 
            Normal[
             Model`ProcessModels`model["endogenousEq"]]], 
           Normal[
            Model`ProcessModels`model["endogenousEq"]]] === 
         FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[-1 + 
            Model`ProcessModels`t, 1] - 
          FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[-1 + 
           Model`ProcessModels`t, Model`ProcessModels`i] + 
          FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[
           Model`ProcessModels`t, -1 + Model`ProcessModels`i]}]], 
     InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`longTest = False;\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-116DCE\"\n]\n\n\nVerificationTest[\n\tNeeds \
@ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-K6S5F5\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-8B36RO\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-HPANYO\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Model`Catalog`models, \
KeyTake[FernandoDuarte`LongRunRisk`Model`Catalog`models, {\"BY\", \"BKY\", \
\"NRC\"}]];\n\tModel`ProcessModels`modelsP = If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Models, KeyTake[FernandoDuarte`LongRunRisk`Models, \
{\"BY\", \"BKY\", \"NRC\"}]];\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-01INLQ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[StringQ, Keys @ Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-Q8F8Y7\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction @ {\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-XCSPNR\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-8V68GY\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-NR97KO\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-3CEC3Q\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\
\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-AXC0ST\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t\
],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-S2DU7N\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\
\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-C1WRNJ\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-LV3Y1V\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\t\
Model`ProcessModels`coefs = Apply[\n\t\t\tAlternatives,\n\t\t\t\
Map[SymbolName,\n\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t\t]\n\t\t\
];\n\t\tApply[And,\n\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\
Flatten[\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\
True\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-TEO87Q\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\tRuleDelayed[\n\
\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t\
}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-L6QYTE\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tSubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\
SubsetQ[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"]&\
, Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models],\n\t\t\t\t\
Map[Model`ProcessModels`modelsP[#][\"shortname\"]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ProcessModels_20231010-INNT84\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[Function, #]&,\n\t\t\t\
\t\tMap[Head, Map[Model`ProcessModels`modelsP[#][\"stateVars\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[List, #]&,\n\t\t\t\t\tMap[Head, \
Map[Model`ProcessModels`modelsP[#][\"stateVars\"][Model`ProcessModels`t]&, \
Keys @ Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\
\t\t\t\tMap[MatchQ[1, #]&,\n\t\t\t\t\tMap[Length,\n\t\t\t\t\t\t\
Map[Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[MatchQ[\"t\", #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[Apply[SymbolName, \
Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]]],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Map[Model`ProcessModels`modelsP[#][\"stateVars\"][FernandoDuarte`\
LongRunRisk`Model`ExogenousEq`Private`t]&, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\t\
Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"]&, Keys \
@ Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"ProcessModels_20231010-YYJQ1J\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[NumberQ, \
Map[Model`ProcessModels`modelsP[#][\"numStocks\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-CO6JXI\"\n]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`model = Model`ProcessModels`modelsP @ \"NRC\";\n\t\
Apply[And,\n\t\t{\n\t\t\tSameQ[Model`ProcessModels`pi[myContext`t] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mup,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`rhop * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[myContext`t - 1] - \
FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Parameters`xip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t - 1]) + \
FernandoDuarte`LongRunRisk`Model`Parameters`phip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t]\n\t\t\t\t\t]\
\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t] /. \
Model`ProcessModels`model[\"exogenousEq\"], \
Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t]],\n\t\t\t\
SameQ[Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mud @ Model`ProcessModels`i,\
\n\t\t\t\t\tPlus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[\
Model`ProcessModels`t - 1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) \
* FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[Model`ProcessModels`i],\n\
\t\t\t\t\t\t(FernandoDuarte`LongRunRisk`Model`Parameters`phidc[Model`\
ProcessModels`i] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 2] * FernandoDuarte`LongRunRisk`Model`Parameters`xid[Model`ProcessModels`i] \
* FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t - \
1]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`wc[Model`ProcessModels`t] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 0,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[1] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[4] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg),\n\t\t\t\t\t\t\tPlus[\n\
\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 5,\n\t\t\t\t\t\t\t\t\
\tSubtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[3] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[2] * \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 1] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`\
ProcessModels`t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tSameQ[Model`ProcessModels`pd[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][0],\n\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[1],\n\t\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[4],\n\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
Subtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][5]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\
\t\tFernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t - 1] * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[2] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t],\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[3] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\
\n\t\t\t],\n\t\t\tSameQ[Model`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondret[Model`\
ProcessModels`t, Model`ProcessModels`i, 1] - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondyield[Model`\
ProcessModels`t - 1, 1]\n\t\t\t],\n\t\t\tSameQ[\n\t\t\t\t\
(Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
/. Normal[Model`ProcessModels`model[\"endogenousEq\"]]) /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, 1] + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t, Model`ProcessModels`i - 1]) - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, Model`ProcessModels`i]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\
\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-RI0LE2\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.90582651997182*^9, 3.9058761219347*^9, 
  3.905876239054037*^9, 3.905953237824131*^9, 3.905953432819376*^9, 
  3.905953676220952*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"1dc8f6da-3e44-473a-9e16-32a1434563d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
     "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "no", " ", 
     "endogenous", " ", "variables"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"And", "@@", 
       RowBox[{"(", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{
            RowBox[{"{", "}"}], ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"wc", "[", "t", "]"}], "//.", 
               RowBox[{"Normal", "@", 
                RowBox[{
                 RowBox[{"modelsP", "[", "#", "]"}], "[", 
                 "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"var_Symbol", "?", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                  ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}],
              "]"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], 
        "\[IndentingNewLine]", ")"}]}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
        "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "exogenous", 
        " ", "variables", " ", "that", " ", "are", " ", "all", " ", "in", " ",
         "context", " ", 
        "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{
           "#", ",", 
            "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}],
            "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"Flatten", "@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cases", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"wc", "[", "t", "]"}], "//.", 
                 RowBox[{"Normal", "@", 
                  RowBox[{
                   RowBox[{"modelsP", "[", "#", "]"}], "[", 
                   "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"var_Symbol", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", 
                 RowBox[{"Context", "@", "var"}]}], ",", "Infinity"}], "]"}], 
              "&"}], "/@", 
             RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
        ")"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
        "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "parameters", 
        " ", "that", " ", "are", " ", "all", " ", "in", " ", "context", " ", 
        "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{
           "#", ",", "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}],
            "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"Flatten", "@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cases", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"wc", "[", "t", "]"}], "//.", 
                 RowBox[{"Normal", "@", 
                  RowBox[{
                   RowBox[{"modelsP", "[", "#", "]"}], "[", 
                   "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
                RowBox[{
                 RowBox[{"var_Symbol", "?", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                   ")"}]}], ":>", 
                 RowBox[{"Context", "@", "var"}]}], ",", "Infinity"}], "]"}], 
              "&"}], "/@", 
             RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
        ")"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
        "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "shocks", " ", 
        "that", " ", "are", " ", "all", " ", "in", " ", "context", " ", 
        "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{
           "#", ",", "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], 
           "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"Flatten", "@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cases", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"wc", "[", "t", "]"}], "//.", 
                 RowBox[{"Normal", "@", 
                  RowBox[{
                   RowBox[{"modelsP", "[", "#", "]"}], "[", 
                   "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                  "[", "__", "]"}], ":>", 
                 RowBox[{"Context", "@", "var"}]}], ",", "Infinity"}], "]"}], 
              "&"}], "/@", 
             RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
        ")"}]}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.893013644050221*^9, 3.8930136594716587`*^9}, {
   3.893013788159135*^9, 3.8930139106431017`*^9}, {3.89301401209753*^9, 
   3.893014103933299*^9}, {3.893014148442313*^9, 3.8930142719501123`*^9}, 
   3.893027186585471*^9, 3.893027342828599*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"48b7a866-608c-4752-acf2-21754b711ce9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231010-W55HXX\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231010-W55HXX"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905826520020553*^9, 3.905876122018053*^9, 
  3.905876239128716*^9, 3.905953237901753*^9, 3.9059534328656816`*^9, 
  3.905953676258779*^9},
 CellLabel->
  "During evaluation of \
In[31]:=",ExpressionUUID->"62213b02-5478-40b2-b5db-02dc3e291cb3"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826520020553*^9, 3.905876122018053*^9, 
  3.905876239128716*^9, 3.905953237901753*^9, 3.9059534328656816`*^9, 
  3.905953676271089*^9},
 CellLabel->
  "During evaluation of \
In[31]:=",ExpressionUUID->"8a7c2406-e81a-4800-8b1a-de5109e0aecb"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\
\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\
\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Cases[\n\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\
\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-W55HXX\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.003, "AbsoluteTiming" -> 0.003, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        Apply[And, 
         Map[MatchQ[{}, #]& , 
          Map[Cases[
            ReplaceRepeated[
             Model`ProcessModels`wc[Model`ProcessModels`t], 
             Normal[
              Model`ProcessModels`modelsP[#]["endogenousEq"]]], PatternTest[
              Pattern[Model`ProcessModels`var, 
               Blank[Symbol]], MemberQ[
               Map[
               StringDrop[#, -2]& , 
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]\
, 
               SymbolName[#]]& ][
              BlankSequence[]] :> Model`ProcessModels`var, Infinity]& , 
           Keys[Model`ProcessModels`modelsP]]]], 
        Apply[And, 
         Map[
         MatchQ[#, "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"]& , 
          Flatten[
           Map[Cases[
             ReplaceRepeated[
              Model`ProcessModels`wc[Model`ProcessModels`t], 
              Normal[
               Model`ProcessModels`modelsP[#]["endogenousEq"]]], PatternTest[
               Pattern[Model`ProcessModels`var, 
                Blank[Symbol]], MemberQ[
                Map[
                StringDrop[#, -2]& , 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars], 
                SymbolName[#]]& ][
               BlankSequence[]] :> Context[Model`ProcessModels`var], 
             Infinity]& , 
            Keys[Model`ProcessModels`modelsP]]]]], 
        Apply[And, 
         Map[MatchQ[#, "FernandoDuarte`LongRunRisk`Model`Parameters`"]& , 
          Flatten[
           Map[Cases[
             ReplaceRepeated[
              Model`ProcessModels`wc[Model`ProcessModels`t], 
              Normal[
               Model`ProcessModels`modelsP[#]["endogenousEq"]]], PatternTest[
               Pattern[Model`ProcessModels`var, 
                Blank[Symbol]], MemberQ[
               FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                SymbolName[#]]& ] :> Context[Model`ProcessModels`var], 
             Infinity]& , 
            Keys[Model`ProcessModels`modelsP]]]]], 
        Apply[And, 
         Map[MatchQ[#, "FernandoDuarte`LongRunRisk`Model`Shocks`"]& , 
          Flatten[
           Map[Cases[
             ReplaceRepeated[
              Model`ProcessModels`wc[Model`ProcessModels`t], 
              Normal[
               Model`ProcessModels`modelsP[#]["endogenousEq"]]], PatternTest[
               Pattern[Model`ProcessModels`var, 
                Blank[Symbol]], MatchQ[
                SymbolName[#], "eps"]& ][
               BlankSequence[]][
               BlankSequence[]] :> Context[Model`ProcessModels`var], 
             Infinity]& , 
            Keys[Model`ProcessModels`modelsP]]]]]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`longTest = False;\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-116DCE\"\n]\n\n\nVerificationTest[\n\tNeeds \
@ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-K6S5F5\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-8B36RO\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-HPANYO\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Model`Catalog`models, \
KeyTake[FernandoDuarte`LongRunRisk`Model`Catalog`models, {\"BY\", \"BKY\", \
\"NRC\"}]];\n\tModel`ProcessModels`modelsP = If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Models, KeyTake[FernandoDuarte`LongRunRisk`Models, \
{\"BY\", \"BKY\", \"NRC\"}]];\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-01INLQ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[StringQ, Keys @ Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-Q8F8Y7\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction @ {\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-XCSPNR\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-8V68GY\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-NR97KO\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-3CEC3Q\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\
\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-AXC0ST\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t\
],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-S2DU7N\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\
\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-C1WRNJ\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-LV3Y1V\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\t\
Model`ProcessModels`coefs = Apply[\n\t\t\tAlternatives,\n\t\t\t\
Map[SymbolName,\n\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t\t]\n\t\t\
];\n\t\tApply[And,\n\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\
Flatten[\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\
True\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-TEO87Q\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\tRuleDelayed[\n\
\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t\
}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-L6QYTE\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tSubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\
SubsetQ[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"]&\
, Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models],\n\t\t\t\t\
Map[Model`ProcessModels`modelsP[#][\"shortname\"]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ProcessModels_20231010-INNT84\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[Function, #]&,\n\t\t\t\
\t\tMap[Head, Map[Model`ProcessModels`modelsP[#][\"stateVars\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[List, #]&,\n\t\t\t\t\tMap[Head, \
Map[Model`ProcessModels`modelsP[#][\"stateVars\"][Model`ProcessModels`t]&, \
Keys @ Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\
\t\t\t\tMap[MatchQ[1, #]&,\n\t\t\t\t\tMap[Length,\n\t\t\t\t\t\t\
Map[Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[MatchQ[\"t\", #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[Apply[SymbolName, \
Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]]],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Map[Model`ProcessModels`modelsP[#][\"stateVars\"][FernandoDuarte`\
LongRunRisk`Model`ExogenousEq`Private`t]&, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\t\
Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"]&, Keys \
@ Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"ProcessModels_20231010-YYJQ1J\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[NumberQ, \
Map[Model`ProcessModels`modelsP[#][\"numStocks\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-CO6JXI\"\n]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`model = Model`ProcessModels`modelsP @ \"NRC\";\n\t\
Apply[And,\n\t\t{\n\t\t\tSameQ[Model`ProcessModels`pi[myContext`t] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mup,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`rhop * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[myContext`t - 1] - \
FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Parameters`xip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t - 1]) + \
FernandoDuarte`LongRunRisk`Model`Parameters`phip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t]\n\t\t\t\t\t]\
\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t] /. \
Model`ProcessModels`model[\"exogenousEq\"], \
Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t]],\n\t\t\t\
SameQ[Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mud @ Model`ProcessModels`i,\
\n\t\t\t\t\tPlus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[\
Model`ProcessModels`t - 1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) \
* FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[Model`ProcessModels`i],\n\
\t\t\t\t\t\t(FernandoDuarte`LongRunRisk`Model`Parameters`phidc[Model`\
ProcessModels`i] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 2] * FernandoDuarte`LongRunRisk`Model`Parameters`xid[Model`ProcessModels`i] \
* FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t - \
1]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`wc[Model`ProcessModels`t] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 0,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[1] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[4] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg),\n\t\t\t\t\t\t\tPlus[\n\
\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 5,\n\t\t\t\t\t\t\t\t\
\tSubtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[3] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[2] * \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 1] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`\
ProcessModels`t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tSameQ[Model`ProcessModels`pd[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][0],\n\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[1],\n\t\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[4],\n\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
Subtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][5]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\
\t\tFernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t - 1] * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[2] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t],\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[3] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\
\n\t\t\t],\n\t\t\tSameQ[Model`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondret[Model`\
ProcessModels`t, Model`ProcessModels`i, 1] - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondyield[Model`\
ProcessModels`t - 1, 1]\n\t\t\t],\n\t\t\tSameQ[\n\t\t\t\t\
(Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
/. Normal[Model`ProcessModels`model[\"endogenousEq\"]]) /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, 1] + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t, Model`ProcessModels`i - 1]) - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, Model`ProcessModels`i]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\
\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-RI0LE2\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Cases[\n\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\
\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-W55HXX\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826520038151*^9, 3.9058761220319*^9, 
  3.905876239144195*^9, 3.905953237925908*^9, 3.905953432885474*^9, 
  3.905953676275043*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"d0e673f8-898b-49cf-8a6d-07db6894d07c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
     "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "no", " ", 
     "endogenous", " ", "variables"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"And", "@@", 
       RowBox[{"(", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{
            RowBox[{"{", "}"}], ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"bondexcret", "[", 
                RowBox[{"t", ",", "i"}], "]"}], "//.", 
               RowBox[{"Normal", "@", 
                RowBox[{
                 RowBox[{"modelsP", "[", "#", "]"}], "[", 
                 "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"var_Symbol", "?", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                  ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}],
              "]"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], 
        "\[IndentingNewLine]", ")"}]}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
        "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "exogenous", 
        " ", "variables", " ", "that", " ", "are", " ", "all", " ", "in", " ",
         "context", " ", 
        "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{
           "#", ",", 
            "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}],
            "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"Flatten", "@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cases", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"bondexcret", "[", 
                  RowBox[{"t", ",", "i"}], "]"}], "//.", 
                 RowBox[{"Normal", "@", 
                  RowBox[{
                   RowBox[{"modelsP", "[", "#", "]"}], "[", 
                   "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"var_Symbol", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", 
                 RowBox[{"Context", "@", "var"}]}], ",", "Infinity"}], "]"}], 
              "&"}], "/@", 
             RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
        ")"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
        "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "parameters", 
        " ", "that", " ", "are", " ", "all", " ", "in", " ", "context", " ", 
        "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{
           "#", ",", "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}],
            "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"Flatten", "@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cases", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"bondexcret", "[", 
                  RowBox[{"t", ",", "i"}], "]"}], "//.", 
                 RowBox[{"Normal", "@", 
                  RowBox[{
                   RowBox[{"modelsP", "[", "#", "]"}], "[", 
                   "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
                RowBox[{
                 RowBox[{"var_Symbol", "?", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                   ")"}]}], ":>", 
                 RowBox[{"Context", "@", "var"}]}], ",", "Infinity"}], "]"}], 
              "&"}], "/@", 
             RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
        ")"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
        "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "shocks", " ", 
        "that", " ", "are", " ", "all", " ", "in", " ", "context", " ", 
        "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{
           "#", ",", "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], 
           "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"Flatten", "@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cases", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"bondexcret", "[", 
                  RowBox[{"t", ",", "i"}], "]"}], "//.", 
                 RowBox[{"Normal", "@", 
                  RowBox[{
                   RowBox[{"modelsP", "[", "#", "]"}], "[", 
                   "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                  "[", "__", "]"}], ":>", 
                 RowBox[{"Context", "@", "var"}]}], ",", "Infinity"}], "]"}], 
              "&"}], "/@", 
             RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
        ")"}]}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.893013644050221*^9, 3.8930136594716587`*^9}, {
   3.893013788159135*^9, 3.8930139106431017`*^9}, {3.89301401209753*^9, 
   3.893014103933299*^9}, {3.893014148442313*^9, 3.893014235255294*^9}, 
   3.893027190207966*^9, 3.8930273500561934`*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"3974f54a-f4f6-42cb-a52a-c3f69fc48e4c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231010-GCQIGS\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231010-GCQIGS"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9058265201070337`*^9, 3.905876122156069*^9, 
  3.905876239194212*^9, 3.905953237983111*^9, 3.9059534329360437`*^9, 
  3.905953676325801*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"40375ef2-14d2-4cff-a2d6-ea794657a8b7"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.9058265201070337`*^9, 3.905876122156069*^9, 
  3.905876239194212*^9, 3.905953237983111*^9, 3.9059534329360437`*^9, 
  3.905953676337737*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"d6aaade7-4ffd-42c2-bd2b-92c6501d06e4"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\
\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
//. Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
//. Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\
\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\
\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\
\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Cases[\n\t\t\t\t\t\t\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
//. Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\
\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\
\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\
\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-GCQIGS\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.014, "AbsoluteTiming" -> 0.014, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        Apply[And, 
         Map[MatchQ[{}, #]& , 
          Map[Cases[
            ReplaceRepeated[
             Model`ProcessModels`bondexcret[
             Model`ProcessModels`t, Model`ProcessModels`i], 
             Normal[
              Model`ProcessModels`modelsP[#]["endogenousEq"]]], PatternTest[
              Pattern[Model`ProcessModels`var, 
               Blank[Symbol]], MemberQ[
               Map[
               StringDrop[#, -2]& , 
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars]\
, 
               SymbolName[#]]& ][
              BlankSequence[]] :> Model`ProcessModels`var, Infinity]& , 
           Keys[Model`ProcessModels`modelsP]]]], 
        Apply[And, 
         Map[
         MatchQ[#, "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"]& , 
          Flatten[
           Map[Cases[
             ReplaceRepeated[
              Model`ProcessModels`bondexcret[
              Model`ProcessModels`t, Model`ProcessModels`i], 
              Normal[
               Model`ProcessModels`modelsP[#]["endogenousEq"]]], PatternTest[
               Pattern[Model`ProcessModels`var, 
                Blank[Symbol]], MemberQ[
                Map[
                StringDrop[#, -2]& , 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars], 
                SymbolName[#]]& ][
               BlankSequence[]] :> Context[Model`ProcessModels`var], 
             Infinity]& , 
            Keys[Model`ProcessModels`modelsP]]]]], 
        Apply[And, 
         Map[MatchQ[#, "FernandoDuarte`LongRunRisk`Model`Parameters`"]& , 
          Flatten[
           Map[Cases[
             ReplaceRepeated[
              Model`ProcessModels`bondexcret[
              Model`ProcessModels`t, Model`ProcessModels`i], 
              Normal[
               Model`ProcessModels`modelsP[#]["endogenousEq"]]], PatternTest[
               Pattern[Model`ProcessModels`var, 
                Blank[Symbol]], MemberQ[
               FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                SymbolName[#]]& ] :> Context[Model`ProcessModels`var], 
             Infinity]& , 
            Keys[Model`ProcessModels`modelsP]]]]], 
        Apply[And, 
         Map[MatchQ[#, "FernandoDuarte`LongRunRisk`Model`Shocks`"]& , 
          Flatten[
           Map[Cases[
             ReplaceRepeated[
              Model`ProcessModels`bondexcret[
              Model`ProcessModels`t, Model`ProcessModels`i], 
              Normal[
               Model`ProcessModels`modelsP[#]["endogenousEq"]]], PatternTest[
               Pattern[Model`ProcessModels`var, 
                Blank[Symbol]], MatchQ[
                SymbolName[#], "eps"]& ][
               BlankSequence[]][
               BlankSequence[]] :> Context[Model`ProcessModels`var], 
             Infinity]& , 
            Keys[Model`ProcessModels`modelsP]]]]]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`longTest = False;\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-116DCE\"\n]\n\n\nVerificationTest[\n\tNeeds \
@ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-K6S5F5\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-8B36RO\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-HPANYO\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Model`Catalog`models, \
KeyTake[FernandoDuarte`LongRunRisk`Model`Catalog`models, {\"BY\", \"BKY\", \
\"NRC\"}]];\n\tModel`ProcessModels`modelsP = If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Models, KeyTake[FernandoDuarte`LongRunRisk`Models, \
{\"BY\", \"BKY\", \"NRC\"}]];\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-01INLQ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[StringQ, Keys @ Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-Q8F8Y7\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction @ {\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-XCSPNR\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-8V68GY\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-NR97KO\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-3CEC3Q\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\
\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-AXC0ST\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t\
],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-S2DU7N\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\
\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-C1WRNJ\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-LV3Y1V\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\t\
Model`ProcessModels`coefs = Apply[\n\t\t\tAlternatives,\n\t\t\t\
Map[SymbolName,\n\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t\t]\n\t\t\
];\n\t\tApply[And,\n\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\
Flatten[\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\
True\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-TEO87Q\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\tRuleDelayed[\n\
\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t\
}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-L6QYTE\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tSubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\
SubsetQ[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"]&\
, Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models],\n\t\t\t\t\
Map[Model`ProcessModels`modelsP[#][\"shortname\"]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ProcessModels_20231010-INNT84\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[Function, #]&,\n\t\t\t\
\t\tMap[Head, Map[Model`ProcessModels`modelsP[#][\"stateVars\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[List, #]&,\n\t\t\t\t\tMap[Head, \
Map[Model`ProcessModels`modelsP[#][\"stateVars\"][Model`ProcessModels`t]&, \
Keys @ Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\
\t\t\t\tMap[MatchQ[1, #]&,\n\t\t\t\t\tMap[Length,\n\t\t\t\t\t\t\
Map[Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[MatchQ[\"t\", #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[Apply[SymbolName, \
Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]]],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Map[Model`ProcessModels`modelsP[#][\"stateVars\"][FernandoDuarte`\
LongRunRisk`Model`ExogenousEq`Private`t]&, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\t\
Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"]&, Keys \
@ Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"ProcessModels_20231010-YYJQ1J\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[NumberQ, \
Map[Model`ProcessModels`modelsP[#][\"numStocks\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-CO6JXI\"\n]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`model = Model`ProcessModels`modelsP @ \"NRC\";\n\t\
Apply[And,\n\t\t{\n\t\t\tSameQ[Model`ProcessModels`pi[myContext`t] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mup,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`rhop * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[myContext`t - 1] - \
FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Parameters`xip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t - 1]) + \
FernandoDuarte`LongRunRisk`Model`Parameters`phip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t]\n\t\t\t\t\t]\
\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t] /. \
Model`ProcessModels`model[\"exogenousEq\"], \
Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t]],\n\t\t\t\
SameQ[Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mud @ Model`ProcessModels`i,\
\n\t\t\t\t\tPlus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[\
Model`ProcessModels`t - 1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) \
* FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[Model`ProcessModels`i],\n\
\t\t\t\t\t\t(FernandoDuarte`LongRunRisk`Model`Parameters`phidc[Model`\
ProcessModels`i] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 2] * FernandoDuarte`LongRunRisk`Model`Parameters`xid[Model`ProcessModels`i] \
* FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t - \
1]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`wc[Model`ProcessModels`t] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 0,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[1] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[4] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg),\n\t\t\t\t\t\t\tPlus[\n\
\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 5,\n\t\t\t\t\t\t\t\t\
\tSubtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[3] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[2] * \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 1] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`\
ProcessModels`t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tSameQ[Model`ProcessModels`pd[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][0],\n\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[1],\n\t\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[4],\n\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
Subtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][5]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\
\t\tFernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t - 1] * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[2] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t],\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[3] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\
\n\t\t\t],\n\t\t\tSameQ[Model`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondret[Model`\
ProcessModels`t, Model`ProcessModels`i, 1] - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondyield[Model`\
ProcessModels`t - 1, 1]\n\t\t\t],\n\t\t\tSameQ[\n\t\t\t\t\
(Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
/. Normal[Model`ProcessModels`model[\"endogenousEq\"]]) /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, 1] + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t, Model`ProcessModels`i - 1]) - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, Model`ProcessModels`i]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\
\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-RI0LE2\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Cases[\n\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\
\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-W55HXX\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
//. Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
//. Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\
\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\
\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\
\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-GCQIGS\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; 
        Print["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.90582652012554*^9, 3.90587612217227*^9, 
  3.905876239212988*^9, 3.905953238109271*^9, 3.9059534329550056`*^9, 
  3.905953676342801*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"76328271-5976-46a8-b21e-35a2e9a27789"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
   RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AllTrue", "[", 
        RowBox[{
         RowBox[{"Head", "/@", 
          RowBox[{"(", 
           RowBox[{"Keys", "@", 
            RowBox[{
             RowBox[{"modelsP", "[", "\"\<BKY\>\"", "]"}], "[", 
             "\"\<exogenousEq\>\"", "]"}]}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{"#", ",", "PatternTest"}], "]"}], "&"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"AllTrue", "[", 
        RowBox[{
         RowBox[{"Head", "/@", 
          RowBox[{"(", 
           RowBox[{"Keys", "@", 
            RowBox[{
             RowBox[{"modelsP", "[", "\"\<BKY\>\"", "]"}], "[", 
             "\"\<endogenousEq\>\"", "]"}]}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{"#", ",", "PatternTest"}], "]"}], "&"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
    RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.891157496969887*^9, 3.891157544107942*^9}, {
   3.8929829100824947`*^9, 3.89298291390197*^9}, {3.892982949507678*^9, 
   3.8929829531624527`*^9}, {3.893016267044709*^9, 3.8930162995723467`*^9}, {
   3.893027194352297*^9, 3.893027208252322*^9}, 3.8930273522329617`*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"41b1f503-97ce-4425-bb64-d6b2f0385419"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231010-ZAMP0W\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231010-ZAMP0W"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9058265201653748`*^9, 3.905876122211672*^9, 
  3.905876239258335*^9, 3.9059532381511707`*^9, 3.905953433018448*^9, 
  3.905953676403295*^9},
 CellLabel->
  "During evaluation of \
In[33]:=",ExpressionUUID->"6243f1ce-c38a-4a80-9122-b9e50ecec407"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.9058265201653748`*^9, 3.905876122211672*^9, 
  3.905876239258335*^9, 3.9059532381511707`*^9, 3.905953433018448*^9, 
  3.905953676415454*^9},
 CellLabel->
  "During evaluation of \
In[33]:=",ExpressionUUID->"c5cad65a-81c7-4d7a-bf1f-31b845299420"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\tAllTrue[Map[Head, Keys @ \
Model`ProcessModels`modelsP[\"BKY\"][\"exogenousEq\"]],\n\t\t\t\tMatchQ[#, \
PatternTest]&\n\t\t\t],\n\t\t\tAllTrue[Map[Head, Keys @ \
Model`ProcessModels`modelsP[\"BKY\"][\"endogenousEq\"]],\n\t\t\t\tMatchQ[#, \
PatternTest]&\n\t\t\t]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tAllTrue[Map[Head, Keys @ \
Model`ProcessModels`modelsP[\"BKY\"][\"exogenousEq\"]],\n\t\t\t\tMatchQ[#, \
PatternTest]&\n\t\t\t],\n\t\t\tAllTrue[Map[Head, Keys @ \
Model`ProcessModels`modelsP[\"BKY\"][\"endogenousEq\"]],\n\t\t\t\tMatchQ[#, \
PatternTest]&\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-ZAMP0W\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        AllTrue[
         Map[Head, 
          Keys[
           Model`ProcessModels`modelsP["BKY"]["exogenousEq"]]], 
         MatchQ[#, PatternTest]& ], 
        AllTrue[
         Map[Head, 
          Keys[
           Model`ProcessModels`modelsP["BKY"]["endogenousEq"]]], 
         MatchQ[#, PatternTest]& ]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`longTest = False;\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-116DCE\"\n]\n\n\nVerificationTest[\n\tNeeds \
@ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-K6S5F5\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-8B36RO\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-HPANYO\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Model`Catalog`models, \
KeyTake[FernandoDuarte`LongRunRisk`Model`Catalog`models, {\"BY\", \"BKY\", \
\"NRC\"}]];\n\tModel`ProcessModels`modelsP = If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Models, KeyTake[FernandoDuarte`LongRunRisk`Models, \
{\"BY\", \"BKY\", \"NRC\"}]];\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-01INLQ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[StringQ, Keys @ Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-Q8F8Y7\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction @ {\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-XCSPNR\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-8V68GY\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-NR97KO\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-3CEC3Q\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\
\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-AXC0ST\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t\
],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-S2DU7N\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\
\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-C1WRNJ\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-LV3Y1V\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\t\
Model`ProcessModels`coefs = Apply[\n\t\t\tAlternatives,\n\t\t\t\
Map[SymbolName,\n\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t\t]\n\t\t\
];\n\t\tApply[And,\n\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\
Flatten[\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\
True\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-TEO87Q\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\tRuleDelayed[\n\
\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t\
}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-L6QYTE\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tSubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\
SubsetQ[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"]&\
, Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models],\n\t\t\t\t\
Map[Model`ProcessModels`modelsP[#][\"shortname\"]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ProcessModels_20231010-INNT84\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[Function, #]&,\n\t\t\t\
\t\tMap[Head, Map[Model`ProcessModels`modelsP[#][\"stateVars\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[List, #]&,\n\t\t\t\t\tMap[Head, \
Map[Model`ProcessModels`modelsP[#][\"stateVars\"][Model`ProcessModels`t]&, \
Keys @ Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\
\t\t\t\tMap[MatchQ[1, #]&,\n\t\t\t\t\tMap[Length,\n\t\t\t\t\t\t\
Map[Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[MatchQ[\"t\", #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[Apply[SymbolName, \
Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]]],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Map[Model`ProcessModels`modelsP[#][\"stateVars\"][FernandoDuarte`\
LongRunRisk`Model`ExogenousEq`Private`t]&, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\t\
Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"]&, Keys \
@ Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"ProcessModels_20231010-YYJQ1J\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[NumberQ, \
Map[Model`ProcessModels`modelsP[#][\"numStocks\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-CO6JXI\"\n]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`model = Model`ProcessModels`modelsP @ \"NRC\";\n\t\
Apply[And,\n\t\t{\n\t\t\tSameQ[Model`ProcessModels`pi[myContext`t] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mup,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`rhop * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[myContext`t - 1] - \
FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Parameters`xip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t - 1]) + \
FernandoDuarte`LongRunRisk`Model`Parameters`phip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t]\n\t\t\t\t\t]\
\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t] /. \
Model`ProcessModels`model[\"exogenousEq\"], \
Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t]],\n\t\t\t\
SameQ[Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mud @ Model`ProcessModels`i,\
\n\t\t\t\t\tPlus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[\
Model`ProcessModels`t - 1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) \
* FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[Model`ProcessModels`i],\n\
\t\t\t\t\t\t(FernandoDuarte`LongRunRisk`Model`Parameters`phidc[Model`\
ProcessModels`i] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 2] * FernandoDuarte`LongRunRisk`Model`Parameters`xid[Model`ProcessModels`i] \
* FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t - \
1]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`wc[Model`ProcessModels`t] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 0,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[1] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[4] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg),\n\t\t\t\t\t\t\tPlus[\n\
\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 5,\n\t\t\t\t\t\t\t\t\
\tSubtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[3] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[2] * \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 1] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`\
ProcessModels`t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tSameQ[Model`ProcessModels`pd[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][0],\n\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[1],\n\t\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[4],\n\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
Subtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][5]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\
\t\tFernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t - 1] * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[2] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t],\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[3] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\
\n\t\t\t],\n\t\t\tSameQ[Model`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondret[Model`\
ProcessModels`t, Model`ProcessModels`i, 1] - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondyield[Model`\
ProcessModels`t - 1, 1]\n\t\t\t],\n\t\t\tSameQ[\n\t\t\t\t\
(Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
/. Normal[Model`ProcessModels`model[\"endogenousEq\"]]) /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, 1] + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t, Model`ProcessModels`i - 1]) - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, Model`ProcessModels`i]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\
\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-RI0LE2\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Cases[\n\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\
\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-W55HXX\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
//. Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
//. Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\
\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\
\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\
\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-GCQIGS\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tAllTrue[Map[Head, Keys @ \
Model`ProcessModels`modelsP[\"BKY\"][\"exogenousEq\"]],\n\t\t\t\tMatchQ[#, \
PatternTest]&\n\t\t\t],\n\t\t\tAllTrue[Map[Head, Keys @ \
Model`ProcessModels`modelsP[\"BKY\"][\"endogenousEq\"]],\n\t\t\t\tMatchQ[#, \
PatternTest]&\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-ZAMP0W\"\n]\n\n\nEndTestSection[]\n"}, \
"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826520182096*^9, 3.90587612222821*^9, 
  3.90587623927698*^9, 3.9059532381691*^9, 3.905953433035264*^9, 
  3.905953676420638*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"a396dfab-e478-477d-acdd-793b0a83cc68"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "exogenousEq", " ", "and", " ", "endogenousEq", " ", "evaluate", " ", 
     "expressions", " ", "that", " ", "are", " ", "exogenous", " ", "or", " ",
      "endogenous", " ", "variables"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{"Not", "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Head", "[", 
               RowBox[{"dc", "[", "t", "]"}], "]"}], "===", 
              RowBox[{"Head", "[", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"dc", "[", "t", "]"}], "/.", 
                 RowBox[{"Normal", "[", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<exogenousEq\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<endogenousEq\>\"", "]"}]}], "]"}], "]"}]}], ")"}], 
               "]"}]}], ")"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{"Not", "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Head", "[", 
               RowBox[{"dd", "[", 
                RowBox[{"t", ",", "i"}], "]"}], "]"}], "===", 
              RowBox[{"Head", "[", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"dd", "[", 
                  RowBox[{"t", ",", "i"}], "]"}], "/.", 
                 RowBox[{"Normal", "[", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<exogenousEq\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<endogenousEq\>\"", "]"}]}], "]"}], "]"}]}], ")"}], 
               "]"}]}], ")"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{"Not", "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Head", "[", 
               RowBox[{"wc", "[", "t", "]"}], "]"}], "===", 
              RowBox[{"Head", "[", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"wc", "[", "t", "]"}], "/.", 
                 RowBox[{"Normal", "[", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<exogenousEq\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<endogenousEq\>\"", "]"}]}], "]"}], "]"}]}], ")"}], 
               "]"}]}], ")"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{"Not", "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Head", "[", 
               RowBox[{"sdf", "[", "t", "]"}], "]"}], "===", 
              RowBox[{"Head", "[", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"sdf", "[", "t", "]"}], "/.", 
                 RowBox[{"Normal", "[", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<exogenousEq\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<endogenousEq\>\"", "]"}]}], "]"}], "]"}]}], ")"}], 
               "]"}]}], ")"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{"Not", "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Head", "[", 
               RowBox[{"bondyield", "[", "t", "]"}], "]"}], "===", 
              RowBox[{"Head", "[", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"bondyield", "[", "t", "]"}], "/.", 
                 RowBox[{"Normal", "[", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<exogenousEq\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<endogenousEq\>\"", "]"}]}], "]"}], "]"}]}], ")"}], 
               "]"}]}], ")"}], "&"}], "/@", 
           RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}]}], 
     "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.89301559217407*^9, 3.893015822830755*^9}, {
   3.89301600860408*^9, 3.893016031968368*^9}, 3.893016149396062*^9, 
   3.89302721181734*^9, 3.893027356773507*^9, {3.893144986859014*^9, 
   3.8931449876901093`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"30c4d933-59ab-4c6f-ac91-fbe51a928bb5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231010-FZJF95\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231010-FZJF95"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905826520226046*^9, 3.9058761222721653`*^9, 
  3.905876239313224*^9, 3.905953238217658*^9, 3.905953433071343*^9, 
  3.905953676457148*^9},
 CellLabel->
  "During evaluation of \
In[34]:=",ExpressionUUID->"92ebe965-9c55-4eb6-8829-ad53c45737f7"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826520226046*^9, 3.9058761222721653`*^9, 
  3.905876239313224*^9, 3.905953238217658*^9, 3.905953433071343*^9, 
  3.905953676469524*^9},
 CellLabel->
  "During evaluation of \
In[34]:=",ExpressionUUID->"445a6b02-fff6-443d-a7da-232fabf519c5"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\
\t\t\t\tFunction[\n\t\t\t\t\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ \
Model`ProcessModels`dc @ Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\
\t\t\t\t\t\tReplaceAll[\n\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`dc @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\t\t\tNormal @ \
Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ \
Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i],\n\t\t\t\
\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i],\n\t\t\t\
\t\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`wc @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`wc @ Model`ProcessModels`t,\n\t\t\t\t\
\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`sdf @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`sdf @ Model`ProcessModels`t,\n\t\t\t\t\
\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`bondyield @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`bondyield @ Model`ProcessModels`t,\n\t\
\t\t\t\t\t\t\t\t\tNormal @ \
Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[Not,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tSameQ[\n\t\t\t\t\t\t\t\
\tHead @ Model`ProcessModels`dc @ Model`ProcessModels`t,\n\t\t\t\t\t\t\t\t\
Head[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`dc @ Model`ProcessModels`t,\n\t\t\t\t\t\t\t\t\t\tNormal @ \
Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ \
Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i],\n\t\t\t\
\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i],\n\t\t\t\
\t\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`wc @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`wc @ Model`ProcessModels`t,\n\t\t\t\t\
\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`sdf @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`sdf @ Model`ProcessModels`t,\n\t\t\t\t\
\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`bondyield @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`bondyield @ Model`ProcessModels`t,\n\t\
\t\t\t\t\t\t\t\t\tNormal @ \
Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-FZJF95\"\n]\n\n",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.001, "AbsoluteTiming" -> 0.001, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        Apply[And, 
         Map[Not, 
          Map[Head[
             Model`ProcessModels`dc[Model`ProcessModels`t]] === Head[
             ReplaceAll[
              Model`ProcessModels`dc[Model`ProcessModels`t], 
              Normal[
               Join[
                Model`ProcessModels`modelsP[#]["exogenousEq"], 
                Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
           Keys[Model`ProcessModels`modelsP]]]], 
        Apply[And, 
         Map[Not, 
          Map[Head[
             Model`ProcessModels`dd[
             Model`ProcessModels`t, Model`ProcessModels`i]] === Head[
             ReplaceAll[
              Model`ProcessModels`dd[
              Model`ProcessModels`t, Model`ProcessModels`i], 
              Normal[
               Join[
                Model`ProcessModels`modelsP[#]["exogenousEq"], 
                Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
           Keys[Model`ProcessModels`modelsP]]]], 
        Apply[And, 
         Map[Not, 
          Map[Head[
             Model`ProcessModels`wc[Model`ProcessModels`t]] === Head[
             ReplaceAll[
              Model`ProcessModels`wc[Model`ProcessModels`t], 
              Normal[
               Join[
                Model`ProcessModels`modelsP[#]["exogenousEq"], 
                Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
           Keys[Model`ProcessModels`modelsP]]]], 
        Apply[And, 
         Map[Not, 
          Map[Head[
             Model`ProcessModels`sdf[Model`ProcessModels`t]] === Head[
             ReplaceAll[
              Model`ProcessModels`sdf[Model`ProcessModels`t], 
              Normal[
               Join[
                Model`ProcessModels`modelsP[#]["exogenousEq"], 
                Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
           Keys[Model`ProcessModels`modelsP]]]], 
        Apply[And, 
         Map[Not, 
          Map[Head[
             Model`ProcessModels`bondyield[Model`ProcessModels`t]] === Head[
             ReplaceAll[
              Model`ProcessModels`bondyield[Model`ProcessModels`t], 
              Normal[
               Join[
                Model`ProcessModels`modelsP[#]["exogenousEq"], 
                Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
           Keys[Model`ProcessModels`modelsP]]]]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`longTest = False;\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-116DCE\"\n]\n\n\nVerificationTest[\n\tNeeds \
@ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-K6S5F5\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-8B36RO\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-HPANYO\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Model`Catalog`models, \
KeyTake[FernandoDuarte`LongRunRisk`Model`Catalog`models, {\"BY\", \"BKY\", \
\"NRC\"}]];\n\tModel`ProcessModels`modelsP = If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Models, KeyTake[FernandoDuarte`LongRunRisk`Models, \
{\"BY\", \"BKY\", \"NRC\"}]];\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-01INLQ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[StringQ, Keys @ Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-Q8F8Y7\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction @ {\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-XCSPNR\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-8V68GY\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-NR97KO\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-3CEC3Q\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\
\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-AXC0ST\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t\
],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-S2DU7N\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\
\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-C1WRNJ\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-LV3Y1V\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\t\
Model`ProcessModels`coefs = Apply[\n\t\t\tAlternatives,\n\t\t\t\
Map[SymbolName,\n\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t\t]\n\t\t\
];\n\t\tApply[And,\n\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\
Flatten[\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\
True\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-TEO87Q\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\tRuleDelayed[\n\
\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t\
}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-L6QYTE\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tSubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\
SubsetQ[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"]&\
, Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models],\n\t\t\t\t\
Map[Model`ProcessModels`modelsP[#][\"shortname\"]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ProcessModels_20231010-INNT84\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[Function, #]&,\n\t\t\t\
\t\tMap[Head, Map[Model`ProcessModels`modelsP[#][\"stateVars\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[List, #]&,\n\t\t\t\t\tMap[Head, \
Map[Model`ProcessModels`modelsP[#][\"stateVars\"][Model`ProcessModels`t]&, \
Keys @ Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\
\t\t\t\tMap[MatchQ[1, #]&,\n\t\t\t\t\tMap[Length,\n\t\t\t\t\t\t\
Map[Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[MatchQ[\"t\", #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[Apply[SymbolName, \
Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]]],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Map[Model`ProcessModels`modelsP[#][\"stateVars\"][FernandoDuarte`\
LongRunRisk`Model`ExogenousEq`Private`t]&, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\t\
Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"]&, Keys \
@ Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"ProcessModels_20231010-YYJQ1J\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[NumberQ, \
Map[Model`ProcessModels`modelsP[#][\"numStocks\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-CO6JXI\"\n]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`model = Model`ProcessModels`modelsP @ \"NRC\";\n\t\
Apply[And,\n\t\t{\n\t\t\tSameQ[Model`ProcessModels`pi[myContext`t] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mup,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`rhop * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[myContext`t - 1] - \
FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Parameters`xip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t - 1]) + \
FernandoDuarte`LongRunRisk`Model`Parameters`phip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t]\n\t\t\t\t\t]\
\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t] /. \
Model`ProcessModels`model[\"exogenousEq\"], \
Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t]],\n\t\t\t\
SameQ[Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mud @ Model`ProcessModels`i,\
\n\t\t\t\t\tPlus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[\
Model`ProcessModels`t - 1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) \
* FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[Model`ProcessModels`i],\n\
\t\t\t\t\t\t(FernandoDuarte`LongRunRisk`Model`Parameters`phidc[Model`\
ProcessModels`i] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 2] * FernandoDuarte`LongRunRisk`Model`Parameters`xid[Model`ProcessModels`i] \
* FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t - \
1]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`wc[Model`ProcessModels`t] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 0,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[1] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[4] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg),\n\t\t\t\t\t\t\tPlus[\n\
\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 5,\n\t\t\t\t\t\t\t\t\
\tSubtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[3] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[2] * \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 1] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`\
ProcessModels`t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tSameQ[Model`ProcessModels`pd[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][0],\n\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[1],\n\t\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[4],\n\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
Subtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][5]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\
\t\tFernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t - 1] * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[2] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t],\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[3] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\
\n\t\t\t],\n\t\t\tSameQ[Model`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondret[Model`\
ProcessModels`t, Model`ProcessModels`i, 1] - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondyield[Model`\
ProcessModels`t - 1, 1]\n\t\t\t],\n\t\t\tSameQ[\n\t\t\t\t\
(Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
/. Normal[Model`ProcessModels`model[\"endogenousEq\"]]) /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, 1] + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t, Model`ProcessModels`i - 1]) - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, Model`ProcessModels`i]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\
\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-RI0LE2\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Cases[\n\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\
\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-W55HXX\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
//. Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
//. Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\
\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\
\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\
\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-GCQIGS\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tAllTrue[Map[Head, Keys @ \
Model`ProcessModels`modelsP[\"BKY\"][\"exogenousEq\"]],\n\t\t\t\tMatchQ[#, \
PatternTest]&\n\t\t\t],\n\t\t\tAllTrue[Map[Head, Keys @ \
Model`ProcessModels`modelsP[\"BKY\"][\"endogenousEq\"]],\n\t\t\t\tMatchQ[#, \
PatternTest]&\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-ZAMP0W\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\
\t\t\tFunction[\n\t\t\t\t\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ \
Model`ProcessModels`dc @ Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\
\t\t\t\t\t\tReplaceAll[\n\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`dc @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\t\t\tNormal @ \
Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ \
Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i],\n\t\t\t\
\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i],\n\t\t\t\
\t\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`wc @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`wc @ Model`ProcessModels`t,\n\t\t\t\t\
\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`sdf @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`sdf @ Model`ProcessModels`t,\n\t\t\t\t\
\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`bondyield @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`bondyield @ Model`ProcessModels`t,\n\t\
\t\t\t\t\t\t\t\t\tNormal @ \
Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-FZJF95\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.9058265202452717`*^9, 3.905876122288679*^9, 
  3.9058762393296432`*^9, 3.9059532383497477`*^9, 3.905953433087943*^9, 
  3.905953676474628*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"692962c2-2784-4cde-bb89-e656fa482c46"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "exogenousEq", " ", "and", " ", "endogenousEq", " ", "do", " ", "not", 
     " ", "evaluate", " ", "expressions", " ", "that", " ", "are", " ", 
     "neither", " ", "exogenous", " ", "nor", " ", "endogenous", " ", 
     "variables"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Head", "[", 
            RowBox[{"notVar", "[", "t", "]"}], "]"}], "===", 
           RowBox[{"Head", "[", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"notVar", "[", "t", "]"}], "/.", 
              RowBox[{"Normal", "[", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<exogenousEq\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<endogenousEq\>\"", "]"}]}], "]"}], "]"}]}], ")"}], 
            "]"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], 
     "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.893015849081943*^9, 3.8930158504172277`*^9}, 
   3.893016091706109*^9, 3.893027215640544*^9, 3.893027359790337*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"5c1e30d2-8195-4e5b-9a64-378acb156acd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231010-1ZAJZL\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231010-1ZAJZL"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905826520302061*^9, 3.9058761223193493`*^9, 
  3.9058762393705397`*^9, 3.905953238391938*^9, 3.905953433128215*^9, 
  3.905953676511858*^9},
 CellLabel->
  "During evaluation of \
In[35]:=",ExpressionUUID->"da15bc4c-5c64-44d6-8991-3d04966bb7d5"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826520302061*^9, 3.9058761223193493`*^9, 
  3.9058762393705397`*^9, 3.905953238391938*^9, 3.905953433128215*^9, 
  3.905953676523346*^9},
 CellLabel->
  "During evaluation of \
In[35]:=",ExpressionUUID->"d0b188f7-9033-476d-9cab-57d8726bf830"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\
\t\t\t\t\tSameQ[Head @ Model`ProcessModels`notVar @ Model`ProcessModels`t,\n\t\
\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\tReplaceAll[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`notVar @ Model`ProcessModels`t,\n\t\t\t\t\t\t\t\t\tNormal \
@ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\
\t\t\t\tFunction[\n\t\t\t\t\t\tSameQ[Head @ Model`ProcessModels`notVar @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\tReplaceAll[\n\t\t\
\t\t\t\t\t\t\tModel`ProcessModels`notVar @ Model`ProcessModels`t,\n\t\t\t\t\t\
\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-1ZAJZL\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, {
        Apply[And, 
         Map[Head[
            Model`ProcessModels`notVar[Model`ProcessModels`t]] === Head[
            ReplaceAll[
             Model`ProcessModels`notVar[Model`ProcessModels`t], 
             Normal[
              Join[
               Model`ProcessModels`modelsP[#]["exogenousEq"], 
               Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
          Keys[Model`ProcessModels`modelsP]]]}]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`longTest = False;\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-116DCE\"\n]\n\n\nVerificationTest[\n\tNeeds \
@ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-K6S5F5\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-8B36RO\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-HPANYO\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Model`Catalog`models, \
KeyTake[FernandoDuarte`LongRunRisk`Model`Catalog`models, {\"BY\", \"BKY\", \
\"NRC\"}]];\n\tModel`ProcessModels`modelsP = If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Models, KeyTake[FernandoDuarte`LongRunRisk`Models, \
{\"BY\", \"BKY\", \"NRC\"}]];\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-01INLQ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[StringQ, Keys @ Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-Q8F8Y7\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction @ {\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-XCSPNR\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-8V68GY\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-NR97KO\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-3CEC3Q\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\
\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-AXC0ST\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t\
],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-S2DU7N\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\
\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-C1WRNJ\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-LV3Y1V\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\t\
Model`ProcessModels`coefs = Apply[\n\t\t\tAlternatives,\n\t\t\t\
Map[SymbolName,\n\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t\t]\n\t\t\
];\n\t\tApply[And,\n\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\
Flatten[\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\
True\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-TEO87Q\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\tRuleDelayed[\n\
\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t\
}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-L6QYTE\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tSubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\
SubsetQ[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"]&\
, Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models],\n\t\t\t\t\
Map[Model`ProcessModels`modelsP[#][\"shortname\"]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ProcessModels_20231010-INNT84\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[Function, #]&,\n\t\t\t\
\t\tMap[Head, Map[Model`ProcessModels`modelsP[#][\"stateVars\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[List, #]&,\n\t\t\t\t\tMap[Head, \
Map[Model`ProcessModels`modelsP[#][\"stateVars\"][Model`ProcessModels`t]&, \
Keys @ Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\
\t\t\t\tMap[MatchQ[1, #]&,\n\t\t\t\t\tMap[Length,\n\t\t\t\t\t\t\
Map[Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[MatchQ[\"t\", #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[Apply[SymbolName, \
Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]]],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Map[Model`ProcessModels`modelsP[#][\"stateVars\"][FernandoDuarte`\
LongRunRisk`Model`ExogenousEq`Private`t]&, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\t\
Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"]&, Keys \
@ Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"ProcessModels_20231010-YYJQ1J\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[NumberQ, \
Map[Model`ProcessModels`modelsP[#][\"numStocks\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-CO6JXI\"\n]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`model = Model`ProcessModels`modelsP @ \"NRC\";\n\t\
Apply[And,\n\t\t{\n\t\t\tSameQ[Model`ProcessModels`pi[myContext`t] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mup,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`rhop * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[myContext`t - 1] - \
FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Parameters`xip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t - 1]) + \
FernandoDuarte`LongRunRisk`Model`Parameters`phip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t]\n\t\t\t\t\t]\
\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t] /. \
Model`ProcessModels`model[\"exogenousEq\"], \
Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t]],\n\t\t\t\
SameQ[Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mud @ Model`ProcessModels`i,\
\n\t\t\t\t\tPlus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[\
Model`ProcessModels`t - 1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) \
* FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[Model`ProcessModels`i],\n\
\t\t\t\t\t\t(FernandoDuarte`LongRunRisk`Model`Parameters`phidc[Model`\
ProcessModels`i] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 2] * FernandoDuarte`LongRunRisk`Model`Parameters`xid[Model`ProcessModels`i] \
* FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t - \
1]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`wc[Model`ProcessModels`t] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 0,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[1] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[4] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg),\n\t\t\t\t\t\t\tPlus[\n\
\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 5,\n\t\t\t\t\t\t\t\t\
\tSubtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[3] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[2] * \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 1] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`\
ProcessModels`t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tSameQ[Model`ProcessModels`pd[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][0],\n\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[1],\n\t\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[4],\n\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
Subtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][5]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\
\t\tFernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t - 1] * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[2] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t],\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[3] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\
\n\t\t\t],\n\t\t\tSameQ[Model`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondret[Model`\
ProcessModels`t, Model`ProcessModels`i, 1] - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondyield[Model`\
ProcessModels`t - 1, 1]\n\t\t\t],\n\t\t\tSameQ[\n\t\t\t\t\
(Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
/. Normal[Model`ProcessModels`model[\"endogenousEq\"]]) /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, 1] + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t, Model`ProcessModels`i - 1]) - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, Model`ProcessModels`i]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\
\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-RI0LE2\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Cases[\n\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\
\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-W55HXX\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
//. Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
//. Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\
\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\
\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\
\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-GCQIGS\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tAllTrue[Map[Head, Keys @ \
Model`ProcessModels`modelsP[\"BKY\"][\"exogenousEq\"]],\n\t\t\t\tMatchQ[#, \
PatternTest]&\n\t\t\t],\n\t\t\tAllTrue[Map[Head, Keys @ \
Model`ProcessModels`modelsP[\"BKY\"][\"endogenousEq\"]],\n\t\t\t\tMatchQ[#, \
PatternTest]&\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-ZAMP0W\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\
\t\t\tFunction[\n\t\t\t\t\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ \
Model`ProcessModels`dc @ Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\
\t\t\t\t\t\tReplaceAll[\n\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`dc @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\t\t\tNormal @ \
Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ \
Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i],\n\t\t\t\
\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i],\n\t\t\t\
\t\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`wc @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`wc @ Model`ProcessModels`t,\n\t\t\t\t\
\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`sdf @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`sdf @ Model`ProcessModels`t,\n\t\t\t\t\
\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`bondyield @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`bondyield @ Model`ProcessModels`t,\n\t\
\t\t\t\t\t\t\t\t\tNormal @ \
Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-FZJF95\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tSameQ[Head @ Model`ProcessModels`notVar @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\tReplaceAll[\n\t\t\
\t\t\t\t\t\t\tModel`ProcessModels`notVar @ Model`ProcessModels`t,\n\t\t\t\t\t\
\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-1ZAJZL\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; 
        Print["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.905826520318244*^9, 3.9058761223410473`*^9, 
  3.905876239387187*^9, 3.905953238407987*^9, 3.905953433144918*^9, 
  3.9059536765285883`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"b067ff5c-ad11-450d-aa95-4a2f75426d9e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{"longTest", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "shortname", " ", "different", " ", "from", " ", "model", " ", "key"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"modelBY", "=", 
       RowBox[{"models", "[", "\"\<BY\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"modelBKY", "=", 
       RowBox[{"models", "[", "\"\<BKY\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"modelBKYP", "=", 
       RowBox[{"processModels", "[", 
        RowBox[{"<|", 
         RowBox[{"\"\<BKY\>\"", "->", "modelBKY"}], "|>"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"modelBYP", "=", 
       RowBox[{"processModels", "[", 
        RowBox[{"<|", 
         RowBox[{"\"\<BY\>\"", "->", "modelBY"}], "|>"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"newModels", "=", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<myModel\>\"", "->", "modelBKY"}], ",", 
         RowBox[{"\"\<BY\>\"", "->", "modelBY"}]}], "|>"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"newModelsSameName", "=", 
       RowBox[{"<|", 
        RowBox[{"\"\<BY\>\"", "->", "modelBY"}], "|>"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"newModelsRename", "=", 
       RowBox[{"<|", 
        RowBox[{"\"\<myModel\>\"", "->", "modelBY"}], "|>"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"newModelsP", "=", 
       RowBox[{"processModels", "[", "newModels", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"newModelsSameNameP", "=", 
       RowBox[{"processModels", "[", "newModelsSameName", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"newModelsRenameP", "=", 
       RowBox[{"processModels", "[", "newModelsRename", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"KeyDrop", "[", 
               RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}], "&"}], 
             "@", 
             RowBox[{"newModelsP", "[", "\"\<myModel\>\"", "]"}]}], "===", 
            RowBox[{"KeyDrop", "[", 
             RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}]}], "&"}], 
          "@", 
          RowBox[{"modelBKYP", "[", "\"\<BKY\>\"", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"KeyDrop", "[", 
               RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}], "&"}], 
             "@", 
             RowBox[{"newModelsP", "[", "\"\<BY\>\"", "]"}]}], "===", 
            RowBox[{"KeyDrop", "[", 
             RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}]}], "&"}], 
          "@", 
          RowBox[{"modelBYP", "[", "\"\<BY\>\"", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"KeyDrop", "[", 
               RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}], "&"}], 
             "@", 
             RowBox[{"newModelsSameNameP", "[", "\"\<BY\>\"", "]"}]}], "===", 
            
            RowBox[{"KeyDrop", "[", 
             RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}]}], "&"}], 
          "@", 
          RowBox[{"modelBYP", "[", "\"\<BY\>\"", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"KeyDrop", "[", 
               RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}], "&"}], 
             "@", 
             RowBox[{"newModelsRenameP", "[", "\"\<myModel\>\"", "]"}]}], "===", 
            RowBox[{"KeyDrop", "[", 
             RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}]}], "&"}], 
          "@", 
          RowBox[{"modelBYP", "[", "\"\<BY\>\"", "]"}]}]}], 
        "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", "True"}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.8912512942103243`*^9, 3.8912513055502443`*^9}, {
   3.8912513517340593`*^9, 3.891251461543272*^9}, {3.891251500422112*^9, 
   3.891251525384585*^9}, 3.891251633145433*^9, {3.891251727184629*^9, 
   3.8912517398515368`*^9}, {3.89125184158985*^9, 3.891251848736774*^9}, {
   3.891252152348381*^9, 3.891252165553775*^9}, 3.892982996244417*^9, 
   3.893016163280417*^9, 3.893027217304699*^9, 3.89302736245364*^9, 
   3.905826496528831*^9, {3.905875713720913*^9, 3.905875720806246*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"623eb9c8-8fa8-49b6-8326-e888251e5b62"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231010-EU88H5\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231010-EU88H5"],
  Editable->False]], "Print",
 CellChangeTimes->{3.905826536184978*^9, 3.9058761223798637`*^9, 
  3.905876239428013*^9, 3.9059532384411583`*^9, 3.905953433180632*^9, 
  3.9059536765624*^9},
 CellLabel->
  "During evaluation of \
In[36]:=",ExpressionUUID->"946bfab7-bdfd-45de-8cb8-1cf3a62b6f70"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.905826536184978*^9, 3.9058761223798637`*^9, 
  3.905876239428013*^9, 3.9059532384411583`*^9, 3.905953433180632*^9, 
  3.905953676573979*^9},
 CellLabel->
  "During evaluation of \
In[36]:=",ExpressionUUID->"2141fc08-1b05-4faf-b93c-4c34fe2c5d33"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "If[Model`ProcessModels`longTest,\n\t\tModel`ProcessModels`modelBY = \
FernandoDuarte`LongRunRisk`Model`Catalog`models @ \"BY\";\n\t\t\
Model`ProcessModels`modelBKY = \
FernandoDuarte`LongRunRisk`Model`Catalog`models @ \"BKY\";\n\t\t\
Model`ProcessModels`modelBKYP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[<|\"BKY\" -> \
Model`ProcessModels`modelBKY|>];\n\t\tModel`ProcessModels`modelBYP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[<|\"BY\" -> \
Model`ProcessModels`modelBY|>];\n\t\tModel`ProcessModels`newModels = \
<|\"myModel\" -> Model`ProcessModels`modelBKY, \"BY\" -> \
Model`ProcessModels`modelBY|>;\n\t\tModel`ProcessModels`newModelsSameName = \
<|\"BY\" -> Model`ProcessModels`modelBY|>;\n\t\t\
Model`ProcessModels`newModelsRename = <|\"myModel\" -> \
Model`ProcessModels`modelBY|>;\n\t\tModel`ProcessModels`newModelsP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels @ \
Model`ProcessModels`newModels;\n\t\tModel`ProcessModels`newModelsSameNameP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels @ \
Model`ProcessModels`newModelsSameName;\n\t\t\
Model`ProcessModels`newModelsRenameP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels @ \
Model`ProcessModels`newModelsRename;\n\t\tApply[And,\n\t\t\t{\n\t\t\t\t\
Function[\n\t\t\t\t\tSameQ[\n\t\t\t\t\t\tFunction[KeyDrop[#, \"coeffsSolution\
\"]][Model`ProcessModels`newModelsP @ \"myModel\"],\n\t\t\t\t\t\tKeyDrop[#, \
\"coeffsSolution\"]\n\t\t\t\t\t]\n\t\t\t\t][Model`ProcessModels`modelBKYP @ \
\"BKY\"],\n\t\t\t\tFunction[\n\t\t\t\t\tSameQ[\n\t\t\t\t\t\t\
Function[KeyDrop[#, \"coeffsSolution\"]][Model`ProcessModels`newModelsP @ \
\"BY\"],\n\t\t\t\t\t\tKeyDrop[#, \"coeffsSolution\"]\n\t\t\t\t\t]\n\t\t\t\t\
][Model`ProcessModels`modelBYP @ \"BY\"],\n\t\t\t\tFunction[\n\t\t\t\t\t\
SameQ[\n\t\t\t\t\t\tFunction[KeyDrop[#, \
\"coeffsSolution\"]][Model`ProcessModels`newModelsSameNameP @ \"BY\"],\n\t\t\t\
\t\t\tKeyDrop[#, \"coeffsSolution\"]\n\t\t\t\t\t]\n\t\t\t\t\
][Model`ProcessModels`modelBYP @ \"BY\"],\n\t\t\t\tFunction[\n\t\t\t\t\t\
SameQ[\n\t\t\t\t\t\tFunction[KeyDrop[#, \
\"coeffsSolution\"]][Model`ProcessModels`newModelsRenameP @ \"myModel\"],\n\t\
\t\t\t\t\tKeyDrop[#, \"coeffsSolution\"]\n\t\t\t\t\t]\n\t\t\t\t\
][Model`ProcessModels`modelBYP @ \"BY\"]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\t\
Model`ProcessModels`modelBY = FernandoDuarte`LongRunRisk`Model`Catalog`models \
@ \"BY\";\n\t\tModel`ProcessModels`modelBKY = \
FernandoDuarte`LongRunRisk`Model`Catalog`models @ \"BKY\";\n\t\t\
Model`ProcessModels`modelBKYP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[<|\"BKY\" -> \
Model`ProcessModels`modelBKY|>];\n\t\tModel`ProcessModels`modelBYP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[<|\"BY\" -> \
Model`ProcessModels`modelBY|>];\n\t\tModel`ProcessModels`newModels = \
<|\"myModel\" -> Model`ProcessModels`modelBKY, \"BY\" -> \
Model`ProcessModels`modelBY|>;\n\t\tModel`ProcessModels`newModelsSameName = \
<|\"BY\" -> Model`ProcessModels`modelBY|>;\n\t\t\
Model`ProcessModels`newModelsRename = <|\"myModel\" -> \
Model`ProcessModels`modelBY|>;\n\t\tModel`ProcessModels`newModelsP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels @ \
Model`ProcessModels`newModels;\n\t\tModel`ProcessModels`newModelsSameNameP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels @ \
Model`ProcessModels`newModelsSameName;\n\t\t\
Model`ProcessModels`newModelsRenameP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels @ \
Model`ProcessModels`newModelsRename;\n\t\tApply[And,\n\t\t\t{\n\t\t\t\t\
Function[\n\t\t\t\t\tSameQ[\n\t\t\t\t\t\tFunction[KeyDrop[#, \"coeffsSolution\
\"]][Model`ProcessModels`newModelsP @ \"myModel\"],\n\t\t\t\t\t\tKeyDrop[#, \
\"coeffsSolution\"]\n\t\t\t\t\t]\n\t\t\t\t][Model`ProcessModels`modelBKYP @ \
\"BKY\"],\n\t\t\t\tFunction[\n\t\t\t\t\tSameQ[\n\t\t\t\t\t\t\
Function[KeyDrop[#, \"coeffsSolution\"]][Model`ProcessModels`newModelsP @ \
\"BY\"],\n\t\t\t\t\t\tKeyDrop[#, \"coeffsSolution\"]\n\t\t\t\t\t]\n\t\t\t\t\
][Model`ProcessModels`modelBYP @ \"BY\"],\n\t\t\t\tFunction[\n\t\t\t\t\t\
SameQ[\n\t\t\t\t\t\tFunction[KeyDrop[#, \
\"coeffsSolution\"]][Model`ProcessModels`newModelsSameNameP @ \"BY\"],\n\t\t\t\
\t\t\tKeyDrop[#, \"coeffsSolution\"]\n\t\t\t\t\t]\n\t\t\t\t\
][Model`ProcessModels`modelBYP @ \"BY\"],\n\t\t\t\tFunction[\n\t\t\t\t\t\
SameQ[\n\t\t\t\t\t\tFunction[KeyDrop[#, \
\"coeffsSolution\"]][Model`ProcessModels`newModelsRenameP @ \"myModel\"],\n\t\
\t\t\t\t\tKeyDrop[#, \"coeffsSolution\"]\n\t\t\t\t\t]\n\t\t\t\t\
][Model`ProcessModels`modelBYP @ \"BY\"]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-EU88H5\"\n]\n\n",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0., "AbsoluteTiming" -> 0., 
   "InputString" :> ToString[
     Unevaluated[
      If[Model`ProcessModels`longTest, 
       Model`ProcessModels`modelBY = 
        FernandoDuarte`LongRunRisk`Model`Catalog`models["BY"]; 
       Model`ProcessModels`modelBKY = 
        FernandoDuarte`LongRunRisk`Model`Catalog`models["BKY"]; 
       Model`ProcessModels`modelBKYP = 
        FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[<|
          "BKY" -> Model`ProcessModels`modelBKY|>]; 
       Model`ProcessModels`modelBYP = 
        FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[<|
          "BY" -> Model`ProcessModels`modelBY|>]; 
       Model`ProcessModels`newModels = <|
         "myModel" -> Model`ProcessModels`modelBKY, "BY" -> 
          Model`ProcessModels`modelBY|>; 
       Model`ProcessModels`newModelsSameName = <|
         "BY" -> Model`ProcessModels`modelBY|>; 
       Model`ProcessModels`newModelsRename = <|
         "myModel" -> Model`ProcessModels`modelBY|>; 
       Model`ProcessModels`newModelsP = 
        FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
         Model`ProcessModels`newModels]; 
       Model`ProcessModels`newModelsSameNameP = 
        FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
         Model`ProcessModels`newModelsSameName]; 
       Model`ProcessModels`newModelsRenameP = 
        FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
         Model`ProcessModels`newModelsRename]; Apply[And, {
          ((KeyDrop[#, "coeffsSolution"]& )[
            Model`ProcessModels`newModelsP["myModel"]] === 
          KeyDrop[#, "coeffsSolution"]& )[
           Model`ProcessModels`modelBKYP["BKY"]], 
          ((KeyDrop[#, "coeffsSolution"]& )[
            Model`ProcessModels`newModelsP["BY"]] === 
          KeyDrop[#, "coeffsSolution"]& )[
           Model`ProcessModels`modelBYP["BY"]], 
          ((KeyDrop[#, "coeffsSolution"]& )[
            Model`ProcessModels`newModelsSameNameP["BY"]] === 
          KeyDrop[#, "coeffsSolution"]& )[
           Model`ProcessModels`modelBYP["BY"]], 
          ((KeyDrop[#, "coeffsSolution"]& )[
            Model`ProcessModels`newModelsRenameP["myModel"]] === 
          KeyDrop[#, "coeffsSolution"]& )[
           Model`ProcessModels`modelBYP["BY"]]}], True]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`longTest = False;\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-116DCE\"\n]\n\n\nVerificationTest[\n\tNeeds \
@ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-K6S5F5\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-8B36RO\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-HPANYO\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Model`Catalog`models, \
KeyTake[FernandoDuarte`LongRunRisk`Model`Catalog`models, {\"BY\", \"BKY\", \
\"NRC\"}]];\n\tModel`ProcessModels`modelsP = If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Models, KeyTake[FernandoDuarte`LongRunRisk`Models, \
{\"BY\", \"BKY\", \"NRC\"}]];\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-01INLQ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[StringQ, Keys @ Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-Q8F8Y7\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction @ {\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-XCSPNR\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-8V68GY\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-NR97KO\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-3CEC3Q\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\
\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-AXC0ST\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t\
],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-S2DU7N\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\
\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-C1WRNJ\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-LV3Y1V\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\t\
Model`ProcessModels`coefs = Apply[\n\t\t\tAlternatives,\n\t\t\t\
Map[SymbolName,\n\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t\t]\n\t\t\
];\n\t\tApply[And,\n\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\
Flatten[\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\
True\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-TEO87Q\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\tRuleDelayed[\n\
\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t\
}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-L6QYTE\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tSubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\
SubsetQ[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"]&\
, Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models],\n\t\t\t\t\
Map[Model`ProcessModels`modelsP[#][\"shortname\"]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ProcessModels_20231010-INNT84\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[Function, #]&,\n\t\t\t\
\t\tMap[Head, Map[Model`ProcessModels`modelsP[#][\"stateVars\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[List, #]&,\n\t\t\t\t\tMap[Head, \
Map[Model`ProcessModels`modelsP[#][\"stateVars\"][Model`ProcessModels`t]&, \
Keys @ Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\
\t\t\t\tMap[MatchQ[1, #]&,\n\t\t\t\t\tMap[Length,\n\t\t\t\t\t\t\
Map[Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[MatchQ[\"t\", #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[Apply[SymbolName, \
Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]]],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Map[Model`ProcessModels`modelsP[#][\"stateVars\"][FernandoDuarte`\
LongRunRisk`Model`ExogenousEq`Private`t]&, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\t\
Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"]&, Keys \
@ Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"ProcessModels_20231010-YYJQ1J\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[NumberQ, \
Map[Model`ProcessModels`modelsP[#][\"numStocks\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-CO6JXI\"\n]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`model = Model`ProcessModels`modelsP @ \"NRC\";\n\t\
Apply[And,\n\t\t{\n\t\t\tSameQ[Model`ProcessModels`pi[myContext`t] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mup,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`rhop * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[myContext`t - 1] - \
FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Parameters`xip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t - 1]) + \
FernandoDuarte`LongRunRisk`Model`Parameters`phip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t]\n\t\t\t\t\t]\
\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t] /. \
Model`ProcessModels`model[\"exogenousEq\"], \
Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t]],\n\t\t\t\
SameQ[Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mud @ Model`ProcessModels`i,\
\n\t\t\t\t\tPlus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[\
Model`ProcessModels`t - 1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) \
* FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[Model`ProcessModels`i],\n\
\t\t\t\t\t\t(FernandoDuarte`LongRunRisk`Model`Parameters`phidc[Model`\
ProcessModels`i] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 2] * FernandoDuarte`LongRunRisk`Model`Parameters`xid[Model`ProcessModels`i] \
* FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t - \
1]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`wc[Model`ProcessModels`t] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 0,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[1] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[4] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg),\n\t\t\t\t\t\t\tPlus[\n\
\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 5,\n\t\t\t\t\t\t\t\t\
\tSubtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[3] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[2] * \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 1] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`\
ProcessModels`t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tSameQ[Model`ProcessModels`pd[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][0],\n\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[1],\n\t\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[4],\n\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
Subtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][5]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\
\t\tFernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t - 1] * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[2] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t],\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[3] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\
\n\t\t\t],\n\t\t\tSameQ[Model`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondret[Model`\
ProcessModels`t, Model`ProcessModels`i, 1] - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondyield[Model`\
ProcessModels`t - 1, 1]\n\t\t\t],\n\t\t\tSameQ[\n\t\t\t\t\
(Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
/. Normal[Model`ProcessModels`model[\"endogenousEq\"]]) /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, 1] + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t, Model`ProcessModels`i - 1]) - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, Model`ProcessModels`i]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\
\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-RI0LE2\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Cases[\n\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\
\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-W55HXX\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
//. Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
//. Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\
\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\
\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\
\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-GCQIGS\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tAllTrue[Map[Head, Keys @ \
Model`ProcessModels`modelsP[\"BKY\"][\"exogenousEq\"]],\n\t\t\t\tMatchQ[#, \
PatternTest]&\n\t\t\t],\n\t\t\tAllTrue[Map[Head, Keys @ \
Model`ProcessModels`modelsP[\"BKY\"][\"endogenousEq\"]],\n\t\t\t\tMatchQ[#, \
PatternTest]&\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-ZAMP0W\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\
\t\t\tFunction[\n\t\t\t\t\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ \
Model`ProcessModels`dc @ Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\
\t\t\t\t\t\tReplaceAll[\n\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`dc @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\t\t\tNormal @ \
Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ \
Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i],\n\t\t\t\
\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i],\n\t\t\t\
\t\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`wc @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`wc @ Model`ProcessModels`t,\n\t\t\t\t\
\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`sdf @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`sdf @ Model`ProcessModels`t,\n\t\t\t\t\
\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`bondyield @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`bondyield @ Model`ProcessModels`t,\n\t\
\t\t\t\t\t\t\t\t\tNormal @ \
Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-FZJF95\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tSameQ[Head @ Model`ProcessModels`notVar @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\tReplaceAll[\n\t\t\
\t\t\t\t\t\t\tModel`ProcessModels`notVar @ Model`ProcessModels`t,\n\t\t\t\t\t\
\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-1ZAJZL\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\t\
Model`ProcessModels`modelBY = FernandoDuarte`LongRunRisk`Model`Catalog`models \
@ \"BY\";\n\t\tModel`ProcessModels`modelBKY = \
FernandoDuarte`LongRunRisk`Model`Catalog`models @ \"BKY\";\n\t\t\
Model`ProcessModels`modelBKYP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[<|\"BKY\" -> \
Model`ProcessModels`modelBKY|>];\n\t\tModel`ProcessModels`modelBYP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[<|\"BY\" -> \
Model`ProcessModels`modelBY|>];\n\t\tModel`ProcessModels`newModels = \
<|\"myModel\" -> Model`ProcessModels`modelBKY, \"BY\" -> \
Model`ProcessModels`modelBY|>;\n\t\tModel`ProcessModels`newModelsSameName = \
<|\"BY\" -> Model`ProcessModels`modelBY|>;\n\t\t\
Model`ProcessModels`newModelsRename = <|\"myModel\" -> \
Model`ProcessModels`modelBY|>;\n\t\tModel`ProcessModels`newModelsP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels @ \
Model`ProcessModels`newModels;\n\t\tModel`ProcessModels`newModelsSameNameP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels @ \
Model`ProcessModels`newModelsSameName;\n\t\t\
Model`ProcessModels`newModelsRenameP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels @ \
Model`ProcessModels`newModelsRename;\n\t\tApply[And,\n\t\t\t{\n\t\t\t\t\
Function[\n\t\t\t\t\tSameQ[\n\t\t\t\t\t\tFunction[KeyDrop[#, \"coeffsSolution\
\"]][Model`ProcessModels`newModelsP @ \"myModel\"],\n\t\t\t\t\t\tKeyDrop[#, \
\"coeffsSolution\"]\n\t\t\t\t\t]\n\t\t\t\t][Model`ProcessModels`modelBKYP @ \
\"BKY\"],\n\t\t\t\tFunction[\n\t\t\t\t\tSameQ[\n\t\t\t\t\t\t\
Function[KeyDrop[#, \"coeffsSolution\"]][Model`ProcessModels`newModelsP @ \
\"BY\"],\n\t\t\t\t\t\tKeyDrop[#, \"coeffsSolution\"]\n\t\t\t\t\t]\n\t\t\t\t\
][Model`ProcessModels`modelBYP @ \"BY\"],\n\t\t\t\tFunction[\n\t\t\t\t\t\
SameQ[\n\t\t\t\t\t\tFunction[KeyDrop[#, \
\"coeffsSolution\"]][Model`ProcessModels`newModelsSameNameP @ \"BY\"],\n\t\t\t\
\t\t\tKeyDrop[#, \"coeffsSolution\"]\n\t\t\t\t\t]\n\t\t\t\t\
][Model`ProcessModels`modelBYP @ \"BY\"],\n\t\t\t\tFunction[\n\t\t\t\t\t\
SameQ[\n\t\t\t\t\t\tFunction[KeyDrop[#, \
\"coeffsSolution\"]][Model`ProcessModels`newModelsRenameP @ \"myModel\"],\n\t\
\t\t\t\t\tKeyDrop[#, \"coeffsSolution\"]\n\t\t\t\t\t]\n\t\t\t\t\
][Model`ProcessModels`modelBYP @ \"BY\"]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-EU88H5\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.9058265361986113`*^9, 3.905876122395472*^9, 
  3.9058762394486923`*^9, 3.905953238458612*^9, 3.90595343320467*^9, 
  3.905953676583826*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"8b40d4bf-2424-4bb0-bebe-588979defb84"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<WriteUnitTest\>\"", "]"}], "[", 
  RowBox[{"testFileName", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "numeric", " ", "solution", " ", "for", " ", "coefficients", " ", "only", 
     " ", "has", " ", "numbers"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"Flatten", "@", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"And", "@@", 
          RowBox[{"(", 
           RowBox[{"NumberQ", "/@", 
            RowBox[{"(", 
             RowBox[{"Values", "@", 
              RowBox[{
               RowBox[{"modelsP", "[", "#", "]"}], "[", 
               "\"\<coeffsSolutionN\>\"", "]"}]}], ")"}]}], ")"}]}], ")"}], 
        "&"}], "/@", 
       RowBox[{"Keys", "[", "modelsP", "]"}]}], "\[IndentingNewLine]", 
      "}"}]}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<ConfirmResults\>\"", "\[Rule]", "confirm"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.905944240729081*^9, 3.9059442477785673`*^9}, {
   3.905944286699092*^9, 3.905944289870077*^9}, {3.905952002188285*^9, 
   3.90595200246597*^9}, {3.90595341027776*^9, 3.905953412111039*^9}, 
   3.905953664443612*^9},
 CellLabel->"In[37]:=",ExpressionUUID->"1170fbd9-84e6-49e0-82bf-8b5391a03642"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Adding test: \"\>", 
   "\[InvisibleSpace]", "\<\"ProcessModels_20231010-QE7U4H\"\>"}],
  SequenceForm["Adding test: ", "ProcessModels_20231010-QE7U4H"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9059532386967793`*^9, 3.90595343324861*^9, 
  3.905953676624797*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"4eade6ce-bb7c-4a7b-a0a3-05e266352278"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>"], "Print",
 CellChangeTimes->{3.9059532386967793`*^9, 3.90595343324861*^9, 
  3.905953676637363*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"3d526723-4c03-464d-90fb-a7017e8b5f8a"],

Cell[BoxData[
 DynamicModuleBox[{
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$ = 
  "Apply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\tMap[\n\t\t\t\t\tFunction[\n\t\t\
\t\t\t\tApply[And, Map[NumberQ, Values @ \
Model`ProcessModels`modelsP[#][\"coeffsSolutionN\"]]]\n\t\t\t\t\t],\n\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t]", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`output$$ = True, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
  "VerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\tMap[\n\t\t\
\t\t\tFunction[\n\t\t\t\t\t\tApply[And, Map[NumberQ, Values @ \
Model`ProcessModels`modelsP[#][\"coeffsSolutionN\"]]]\n\t\t\t\t\t],\n\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-QE7U4H\"\n]\n\n", 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`evaluationData$$ = <|
  "Result" :> True, "Success" -> True, "FailureType" -> None, 
   "OutputLog" -> {}, "Messages" -> {}, "MessagesText" -> {}, 
   "MessagesExpressions" -> {}, "Timing" -> 0.003, "AbsoluteTiming" -> 0.003, 
   "InputString" :> ToString[
     Unevaluated[
      Apply[And, 
       Flatten[{
         Map[Apply[And, 
           Map[NumberQ, 
            Values[
             Model`ProcessModels`modelsP[#]["coeffsSolutionN"]]]]& , 
          Keys[Model`ProcessModels`modelsP]]}]]], InputForm]|>, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messages$$ = {}, 
  FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`messageString$$ = "{}",
   FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
  "BeginTestSection[\"ProcessModels\"]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`longTest = False;\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-116DCE\"\n]\n\n\nVerificationTest[\n\tNeeds \
@ \"FernandoDuarte`LongRunRisk`Model`Catalog`\";\n\tNeeds @ \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\";\n\tTrue\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-K6S5F5\"\n]\n\n\n\
VerificationTest[\n\tApply[And, {MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`Catalog`\"], MemberQ[$ContextPath, \
\"FernandoDuarte`LongRunRisk`Model`ProcessModels`\"]}]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-8B36RO\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\t!SameQ[Names @ \"*processModels\
\", {}],\n\t\t\t!SameQ[Names @ \"*models\", {}]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-HPANYO\"\n]\n\n\n\
VerificationTest[\n\tGet @ Get @ FileNameJoin @ {\"FernandoDuarte/LongRunRisk\
\", \"Models.wl\"};\n\tFernandoDuarte`LongRunRisk`Model`Catalog`models = \
If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Model`Catalog`models, \
KeyTake[FernandoDuarte`LongRunRisk`Model`Catalog`models, {\"BY\", \"BKY\", \
\"NRC\"}]];\n\tModel`ProcessModels`modelsP = If[Model`ProcessModels`longTest, \
FernandoDuarte`LongRunRisk`Models, KeyTake[FernandoDuarte`LongRunRisk`Models, \
{\"BY\", \"BKY\", \"NRC\"}]];\n\tTrue\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-01INLQ\"\n]\n\n\nVerificationTest[\n\t\
Apply[And, Map[StringQ, Keys @ Model`ProcessModels`modelsP]]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-Q8F8Y7\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tMap[StringQ,\n\t\t\tFlatten[\n\t\t\t\t\
Map[\n\t\t\t\t\tFunction @ {\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"name\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"shortname\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"bibRef\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"desc\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousVars\"],\n\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousVars\"]\n\t\t\t\t\t},\n\t\t\t\t\t\
Keys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-XCSPNR\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[NumberQ,\n\t\t\t\t\tFlatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\tValues[\n\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\
] //. FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"parameters\"]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\
\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[NumberQ,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tValues[\n\
\t\t\t\t\t\t\t\t\tN[\n\t\t\t\t\t\t\t\t\t\t\
Association[Model`ProcessModels`modelsP[#][\"parameters\"]] //. \
Model`ProcessModels`modelsP[#][\"parameters\"]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\
\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t\
,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-8V68GY\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And, \
Map[MemberQ[Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]&, {\"BY\
\", \"BKY\"}]],\n\t\t\tApply[And, \
Map[MemberQ[Keys[Model`ProcessModels`modelsP], #]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-NR97KO\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\t\
AllTrue[FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ],\n\t\t\
\tAllTrue[Model`ProcessModels`modelsP, AssociationQ],\n\t\t\t\
AllTrue[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]&, Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models], AssociationQ],\n\t\t\t\
AllTrue[Map[Model`ProcessModels`modelsP[#]&, Keys @ \
Model`ProcessModels`modelsP], AssociationQ]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-3CEC3Q\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\
\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\
\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\t\
\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\
\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\
\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-AXC0ST\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t\
{\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Apply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\t\
SameQ[#, \"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\t\
Map[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\t\t\
\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t\
],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-S2DU7N\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"parameters\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t\
Apply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\
\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\t\
\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\
\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-C1WRNJ\"\n]\n\n\nVerificationTest[\n\t\
If[Model`ProcessModels`longTest,\n\t\tApply[And,\n\t\t\t{\n\t\t\t\tApply[And,\
\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\
\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\
\t\t\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\tApply[And,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tApply[\n\t\t\t\t\t\t\t\tAnd,\n\t\t\t\t\t\t\t\tMap[\n\
\t\t\t\t\t\t\t\t\tSameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\t\t\t\tContext,\n\t\t\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\
\t\t\t\t\t\tModel`ProcessModels`modelsP[#][\"endogenousEq\"],\n\t\t\t\t\t\t\t\
\t\t\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\
\t\t\t\tModel`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tFunction[\n\
\t\t\t\t\t\t\t\t\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
Map[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\
\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\
\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\n\tTrue\n\t,\n\t\
{}\n\t,\n\tTestID->\"ProcessModels_20231010-LV3Y1V\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\t\
Model`ProcessModels`coefs = Apply[\n\t\t\tAlternatives,\n\t\t\t\
Map[SymbolName,\n\t\t\t\t\
{FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb, Head @ \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb}\n\t\t\t]\n\t\t\
];\n\t\tApply[And,\n\t\t\tMap[SameQ[#, \
\"FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\"]&,\n\t\t\t\t\
Flatten[\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\
\t\t\t\t\tModel`ProcessModels`modelsP[#][\"modelAssumptions\"],\n\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tAlternatives[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]],\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
Model`ProcessModels`coefs]]][__]\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\
True\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-TEO87Q\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"stateVars\"],\n\t\t\t\t\t\t\t\tRuleDelayed[\n\
\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`modelsP[#][\"exogenousEq\"],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t\
}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-L6QYTE\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tSubsetQ[Keys @ \
FernandoDuarte`LongRunRisk`Model`Catalog`models, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\
SubsetQ[Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"shortname\"]&\
, Keys @ FernandoDuarte`LongRunRisk`Model`Catalog`models],\n\t\t\t\t\
Map[Model`ProcessModels`modelsP[#][\"shortname\"]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t\
,\n\tTestID->\"ProcessModels_20231010-INNT84\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[Function, #]&,\n\t\t\t\
\t\tMap[Head, Map[Model`ProcessModels`modelsP[#][\"stateVars\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[List, #]&,\n\t\t\t\t\tMap[Head, \
Map[Model`ProcessModels`modelsP[#][\"stateVars\"][Model`ProcessModels`t]&, \
Keys @ Model`ProcessModels`modelsP]]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\
\t\t\t\tMap[MatchQ[1, #]&,\n\t\t\t\t\tMap[Length,\n\t\t\t\t\t\t\
Map[Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]&, Keys @ \
Model`ProcessModels`modelsP]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[MatchQ[\"t\", #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\t\
Function[Apply[SymbolName, \
Part[Model`ProcessModels`modelsP[#][\"stateVars\"], 1]]],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Map[Model`ProcessModels`modelsP[#][\"stateVars\"][FernandoDuarte`\
LongRunRisk`Model`ExogenousEq`Private`t]&, Keys @ \
Model`ProcessModels`modelsP],\n\t\t\t\t\
Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][\"stateVars\"]&, Keys \
@ Model`ProcessModels`modelsP]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\
\t,\n\tTestID->\"ProcessModels_20231010-YYJQ1J\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\tMap[NumberQ, \
Map[Model`ProcessModels`modelsP[#][\"numStocks\"]&, Keys @ \
Model`ProcessModels`modelsP]]\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-CO6JXI\"\n]\n\n\nVerificationTest[\n\t\
Model`ProcessModels`model = Model`ProcessModels`modelsP @ \"NRC\";\n\t\
Apply[And,\n\t\t{\n\t\t\tSameQ[Model`ProcessModels`pi[myContext`t] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mup,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`rhop * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[myContext`t - 1] - \
FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`Parameters`xip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t - 1]) + \
FernandoDuarte`LongRunRisk`Model`Parameters`phip * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][myContext`t]\n\t\t\t\t\t]\
\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t] /. \
Model`ProcessModels`model[\"exogenousEq\"], \
Model`ProcessModels`eps[\"dc\"][Model`ProcessModels`t]],\n\t\t\t\
SameQ[Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"exogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`Parameters`mud @ Model`ProcessModels`i,\
\n\t\t\t\t\tPlus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[\
Model`ProcessModels`t - 1] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) \
* FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[Model`ProcessModels`i],\n\
\t\t\t\t\t\t(FernandoDuarte`LongRunRisk`Model`Parameters`phidc[Model`\
ProcessModels`i] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"dc\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 2] * FernandoDuarte`LongRunRisk`Model`Parameters`xid[Model`ProcessModels`i] \
* FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t - \
1]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
SameQ[Model`ProcessModels`wc[Model`ProcessModels`t] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 0,\n\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[1] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup),\n\t\t\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[4] * \
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg),\n\t\t\t\t\t\t\tPlus[\n\
\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A @ 5,\n\t\t\t\t\t\t\t\t\
\tSubtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t]\n\t\t\
\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[3] * \
FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`t]) + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[2] * \
FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`t \
- 1] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`\
ProcessModels`t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\
\t],\n\t\t\tSameQ[Model`ProcessModels`pd[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
Plus[FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][0],\n\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[1],\n\t\t\t\t\t\t\
Plus[(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg) * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[4],\n\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\tTimes[\n\t\t\t\t\t\t\t\t\t\
Subtract[\n\t\t\t\t\t\t\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`ProcessModels`\
t] ^ 2) - (FernandoDuarte`LongRunRisk`Model`Parameters`phig ^ 2) / (1 - \
FernandoDuarte`LongRunRisk`Model`Parameters`rhog ^ 2),\n\t\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`Parameters`Esg ^ 2\n\t\t\t\t\t\t\t\t\t],\n\t\
\t\t\t\t\t\t\t\tFernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`\
ProcessModels`i][5]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tPlus[\n\t\t\t\t\t\t\t\
\t\tFernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[Model`\
ProcessModels`t - 1] * \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[2] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t],\n\t\t\t\t\t\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[Model`ProcessModels`i]\
[3] * FernandoDuarte`LongRunRisk`Model`Shocks`eps[\"pi\"][Model`ProcessModels`\
t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\
\n\t\t\t],\n\t\t\tSameQ[Model`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondret[Model`\
ProcessModels`t, Model`ProcessModels`i, 1] - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondyield[Model`\
ProcessModels`t - 1, 1]\n\t\t\t],\n\t\t\tSameQ[\n\t\t\t\t\
(Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
/. Normal[Model`ProcessModels`model[\"endogenousEq\"]]) /. \
Normal[Model`ProcessModels`model[\"endogenousEq\"]],\n\t\t\t\t\
(FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, 1] + \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t, Model`ProcessModels`i - 1]) - \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[Model`\
ProcessModels`t - 1, Model`ProcessModels`i]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\
\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-RI0LE2\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\t\
Map[MatchQ[{}, #]&,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
Cases[\n\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`wc[Model`ProcessModels`t] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MatchQ[SymbolName[#], \"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\t\
Context @ Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\
Infinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\
\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-W55HXX\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[{}, #]&,\n\t\t\t\t\t\
Map[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\
Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
//. Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\
\tRuleDelayed[\n\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\
\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, -2]], \
FernandoDuarte`LongRunRisk`Model`EndogenousEq`$endogenousVars],\n\t\t\t\t\t\t\
\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t]\n\t\
\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\tModel`ProcessModels`var\n\t\t\t\t\t\
\t\t\t],\n\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\
\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\
\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\"]&,\n\t\t\t\t\t\
Flatten[\n\t\t\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\
\t\t\t\t\t\t\t\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[\n\t\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`var_Symbol,\n\t\t\t\t\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\
\t\t\t\t\t\tMemberQ[\n\t\t\t\t\t\t\t\t\t\t\t\t\tMap[Function[StringDrop[#, \
-2]], FernandoDuarte`LongRunRisk`Model`ExogenousEq`$exogenousVars],\n\t\t\t\t\
\t\t\t\t\t\t\t\t\tSymbolName[#]\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\
\t\t]\n\t\t\t\t\t\t\t\t\t\t][__],\n\t\t\t\t\t\t\t\t\t\tContext @ \
Model`ProcessModels`var\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\
\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\
\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Parameters`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\
\t\t\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\
\t\tModel`ProcessModels`bondexcret[Model`ProcessModels`t, \
Model`ProcessModels`i] //. \
Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\t\t\
RuleDelayed[\n\t\t\t\t\t\t\t\t\t\tPatternTest[Model`ProcessModels`var_Symbol, \
Function[MemberQ[FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, \
SymbolName[#]]]],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\t\
\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\
\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\t\
\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tApply[And,\n\t\t\t\tMap[MatchQ[#, \
\"FernandoDuarte`LongRunRisk`Model`Shocks`\"]&,\n\t\t\t\t\tFlatten[\n\t\t\t\t\
\t\tMap[\n\t\t\t\t\t\t\tFunction[\n\t\t\t\t\t\t\t\tCases[\n\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`bondexcret[Model`ProcessModels`t, Model`ProcessModels`i] \
//. Normal[Model`ProcessModels`modelsP[#][\"endogenousEq\"]],\n\t\t\t\t\t\t\t\
\t\tRuleDelayed[\n\t\t\t\t\t\t\t\t\t\t\
PatternTest[Model`ProcessModels`var_Symbol, Function[MatchQ[SymbolName[#], \
\"eps\"]]][__][__],\n\t\t\t\t\t\t\t\t\t\tContext @ Model`ProcessModels`var\n\t\
\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tInfinity\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\
\t\t],\n\t\t\t\t\t\t\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t\t\t]\n\t\t\
\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-GCQIGS\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tAllTrue[Map[Head, Keys @ \
Model`ProcessModels`modelsP[\"BKY\"][\"exogenousEq\"]],\n\t\t\t\tMatchQ[#, \
PatternTest]&\n\t\t\t],\n\t\t\tAllTrue[Map[Head, Keys @ \
Model`ProcessModels`modelsP[\"BKY\"][\"endogenousEq\"]],\n\t\t\t\tMatchQ[#, \
PatternTest]&\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\n\t{}\n\t,\n\t\
TestID->\"ProcessModels_20231010-ZAMP0W\"\n]\n\n\nVerificationTest[\n\t\
Apply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\
\t\t\tFunction[\n\t\t\t\t\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ \
Model`ProcessModels`dc @ Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\
\t\t\t\t\t\tReplaceAll[\n\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`dc @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\t\t\tNormal @ \
Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ \
Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i],\n\t\t\t\
\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\t\t\t\t\t\t\t\t\t\t\
Model`ProcessModels`dd[Model`ProcessModels`t, Model`ProcessModels`i],\n\t\t\t\
\t\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`wc @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`wc @ Model`ProcessModels`t,\n\t\t\t\t\
\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`sdf @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`sdf @ Model`ProcessModels`t,\n\t\t\t\t\
\t\t\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\
Apply[And,\n\t\t\t\tMap[Not,\n\t\t\t\t\tMap[\n\t\t\t\t\t\tFunction[\n\t\t\t\t\
\t\t\tSameQ[\n\t\t\t\t\t\t\t\tHead @ Model`ProcessModels`bondyield @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\t\tReplaceAll[\n\
\t\t\t\t\t\t\t\t\t\tModel`ProcessModels`bondyield @ Model`ProcessModels`t,\n\t\
\t\t\t\t\t\t\t\t\tNormal @ \
Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\
\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-FZJF95\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\t{\n\t\t\tApply[And,\n\t\t\t\tMap[\n\t\t\t\
\t\tFunction[\n\t\t\t\t\t\tSameQ[Head @ Model`ProcessModels`notVar @ \
Model`ProcessModels`t,\n\t\t\t\t\t\t\tHead[\n\t\t\t\t\t\t\t\tReplaceAll[\n\t\t\
\t\t\t\t\t\t\tModel`ProcessModels`notVar @ Model`ProcessModels`t,\n\t\t\t\t\t\
\t\t\t\tNormal @ Join[Model`ProcessModels`modelsP[#][\"exogenousEq\"], \
Model`ProcessModels`modelsP[#][\"endogenousEq\"]]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\
\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\tKeys @ \
Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t]\n\t\t}\n\t]\n\t,\n\tTrue\n\t,\
\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-1ZAJZL\"\n]\n\n\n\
VerificationTest[\n\tIf[Model`ProcessModels`longTest,\n\t\t\
Model`ProcessModels`modelBY = FernandoDuarte`LongRunRisk`Model`Catalog`models \
@ \"BY\";\n\t\tModel`ProcessModels`modelBKY = \
FernandoDuarte`LongRunRisk`Model`Catalog`models @ \"BKY\";\n\t\t\
Model`ProcessModels`modelBKYP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[<|\"BKY\" -> \
Model`ProcessModels`modelBKY|>];\n\t\tModel`ProcessModels`modelBYP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[<|\"BY\" -> \
Model`ProcessModels`modelBY|>];\n\t\tModel`ProcessModels`newModels = \
<|\"myModel\" -> Model`ProcessModels`modelBKY, \"BY\" -> \
Model`ProcessModels`modelBY|>;\n\t\tModel`ProcessModels`newModelsSameName = \
<|\"BY\" -> Model`ProcessModels`modelBY|>;\n\t\t\
Model`ProcessModels`newModelsRename = <|\"myModel\" -> \
Model`ProcessModels`modelBY|>;\n\t\tModel`ProcessModels`newModelsP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels @ \
Model`ProcessModels`newModels;\n\t\tModel`ProcessModels`newModelsSameNameP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels @ \
Model`ProcessModels`newModelsSameName;\n\t\t\
Model`ProcessModels`newModelsRenameP = \
FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels @ \
Model`ProcessModels`newModelsRename;\n\t\tApply[And,\n\t\t\t{\n\t\t\t\t\
Function[\n\t\t\t\t\tSameQ[\n\t\t\t\t\t\tFunction[KeyDrop[#, \"coeffsSolution\
\"]][Model`ProcessModels`newModelsP @ \"myModel\"],\n\t\t\t\t\t\tKeyDrop[#, \
\"coeffsSolution\"]\n\t\t\t\t\t]\n\t\t\t\t][Model`ProcessModels`modelBKYP @ \
\"BKY\"],\n\t\t\t\tFunction[\n\t\t\t\t\tSameQ[\n\t\t\t\t\t\t\
Function[KeyDrop[#, \"coeffsSolution\"]][Model`ProcessModels`newModelsP @ \
\"BY\"],\n\t\t\t\t\t\tKeyDrop[#, \"coeffsSolution\"]\n\t\t\t\t\t]\n\t\t\t\t\
][Model`ProcessModels`modelBYP @ \"BY\"],\n\t\t\t\tFunction[\n\t\t\t\t\t\
SameQ[\n\t\t\t\t\t\tFunction[KeyDrop[#, \
\"coeffsSolution\"]][Model`ProcessModels`newModelsSameNameP @ \"BY\"],\n\t\t\t\
\t\t\tKeyDrop[#, \"coeffsSolution\"]\n\t\t\t\t\t]\n\t\t\t\t\
][Model`ProcessModels`modelBYP @ \"BY\"],\n\t\t\t\tFunction[\n\t\t\t\t\t\
SameQ[\n\t\t\t\t\t\tFunction[KeyDrop[#, \
\"coeffsSolution\"]][Model`ProcessModels`newModelsRenameP @ \"myModel\"],\n\t\
\t\t\t\t\tKeyDrop[#, \"coeffsSolution\"]\n\t\t\t\t\t]\n\t\t\t\t\
][Model`ProcessModels`modelBYP @ \"BY\"]\n\t\t\t}\n\t\t],\n\t\tTrue\n\t]\n\t,\
\n\tTrue\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-EU88H5\"\n]\n\n\n\
VerificationTest[\n\tApply[And,\n\t\tFlatten[\n\t\t\t{\n\t\t\t\tMap[\n\t\t\t\t\
\tFunction[\n\t\t\t\t\t\tApply[And, Map[NumberQ, Values @ \
Model`ProcessModels`modelsP[#][\"coeffsSolutionN\"]]]\n\t\t\t\t\t],\n\t\t\t\t\
\tKeys @ Model`ProcessModels`modelsP\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t]\n\t,\n\t\
True\n\t,\n\t{}\n\t,\n\tTestID->\"ProcessModels_20231010-QE7U4H\"\n]\n\n\n\
EndTestSection[]\n"}, "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>",
  DynamicModuleValues:>{{
    DownValues[
      FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$] = {
      HoldPattern[
         FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`writeToFile$$[]]\
 :> (If[FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`newFile$$, 
          Export[
          "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
           "BeginTestSection[\"" <> 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"] <> 
           "\"]\n\n\nEndTestSection[]\n", "Text"]]; 
        Block[{
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FileBaseName[
            "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]}, 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id = 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> "_" <> 
            StringJoin[
              Map[If[# > 9, "", "0"] <> ToString[#]& , 
               Part[
                Date[], 
                Span[1, 3]]]] <> "-" <> ToUpperCase[
              IntegerString[
               RandomInteger[{0, 2176782336}], 36, 6]] <> ""; 
          Print["Adding test: ", 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id]; 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$$ = 
           "VerificationTest[\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`inputString$$\
 <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\n\t,\n\t" <> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
messageString$$ <> ("\n\t,\n\tTestID->\"" <> 
             FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`id <> 
             "\"\n]\n\n"); Null]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = 
         Import["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "Text"]; 
        FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ = If[
           StringContainsQ[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]"], 
           StringReplace[
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
            "EndTestSection[]" :> 
            FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`outputString$\
$ <> "\nEndTestSection[]\n"], 
           FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$ <> 
           "\n" <> FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`\
outputString$$]; 
        Export["/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", 
          FunctionRepository`$87c594a82e7747e7937a43b61bd90d72`fileText$$, 
          "Text"]; Print[
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt"]; SelectionMove[
          ButtonNotebook[], All, ButtonCell]; NotebookDelete[
          ButtonNotebook[]]; Null)}}}]], "Output",
 CellChangeTimes->{3.9059532387223663`*^9, 3.905953433271894*^9, 
  3.905953676641081*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"e29b2b4a-6781-42fe-9ea9-ebd0ee23447b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"End", "[", "]"}]], "Input",
 CellChangeTimes->{{3.890680295645965*^9, 3.89068029650622*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"33ebf65e-6034-462e-bfb9-1324117a5073"],

Cell[BoxData["\<\"Model`ProcessModels`\"\>"], "Output",
 CellChangeTimes->{3.9058265362527*^9, 3.90587612241088*^9, 
  3.905876239456191*^9, 3.9059532387381887`*^9, 3.9059534332787027`*^9, 
  3.905953676654537*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"fb1bd7bc-4129-45cb-93ae-2a84acf43bb5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"add", " ", 
    RowBox[{"Begin", "[", "\"\<Context`\>\"", "]"}], " ", "and", " ", 
    RowBox[{"End", "[", "]"}], " ", "to", " ", "wlt", " ", "file"}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"helper", " ", "functions"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"countLines", "[", "file_String", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"readStream", "=", 
        RowBox[{"OpenRead", "[", "file", "]"}]}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"n", "=", "1"}], ",", "\[IndentingNewLine]", "temp"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"While", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"temp", "=!=", "EndOfFile"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"temp", "=", 
          RowBox[{"ReadLine", "[", "readStream", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"n", "=", 
          RowBox[{"n", "+", "1"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Close", "/@", 
       RowBox[{"{", "readStream", "}"}]}], ";", "\[IndentingNewLine]", 
      "n"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.890686194230386*^9, 3.890686228283702*^9}, 
   3.8911593195689373`*^9, {3.9058258879096937`*^9, 3.90582589361486*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"54483af6-5a40-4f54-bac7-293214472e69"],

Cell[BoxData[
 RowBox[{
  RowBox[{"replaceNthRecord", "[", 
   RowBox[{"file_String", ",", "n_Integer", ",", "replaceWith_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"readStream", "=", 
       RowBox[{"OpenRead", "[", "file", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"writeStream", "=", 
       RowBox[{"OpenWrite", "[", 
        RowBox[{"file", "<>", "\"\<temp\>\""}], "]"}]}], ",", 
      "\[IndentingNewLine]", "temp"}], "\[IndentingNewLine]", "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"WriteLine", "[", 
        RowBox[{"writeStream", ",", 
         RowBox[{"ReadLine", "[", "readStream", "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"n", "-", "1"}], "}"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"WriteLine", "[", 
      RowBox[{"writeStream", ",", 
       RowBox[{
        RowBox[{"ReadLine", "[", "readStream", "]"}], "<>", "\"\< \\r\\n\>\"",
         "<>", "replaceWith"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"temp", "=!=", "EndOfFile"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"temp", "=", 
         RowBox[{"ReadLine", "[", "readStream", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"UnsameQ", "[", 
           RowBox[{"temp", ",", "EndOfFile"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"WriteLine", "[", 
           RowBox[{"writeStream", ",", "temp"}], "]"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", 
     RowBox[{"Close", "/@", 
      RowBox[{"{", 
       RowBox[{"readStream", ",", "writeStream"}], "}"}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.890686194230386*^9, 3.890686228283702*^9}, 
   3.8911593195689373`*^9, {3.9058258879096937`*^9, 3.9058258980485497`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"ddca3c8e-dcd8-4cb0-9a56-cdb0739c327c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"insert", " ", "into", " ", "wlt", " ", "file"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"replaceNthRecord", "[", 
    RowBox[{
    "testFileName", ",", "1", ",", 
     "\"\<Begin[\\\"Model`ProcessModels`\\\"]\>\""}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CopyFile", "[", 
     RowBox[{
      RowBox[{"testFileName", "<>", "\"\<temp\>\""}], ",", "testFileName", 
      ",", 
      RowBox[{"OverwriteTarget", "->", "True"}]}], "]"}], ";"}], "\n", 
   RowBox[{"DeleteFile", "[", 
    RowBox[{"testFileName", "<>", "\"\<temp\>\""}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"numLines", "=", 
    RowBox[{"countLines", "[", "testFileName", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"replaceNthRecord", "[", 
    RowBox[{"testFileName", ",", 
     RowBox[{"numLines", "-", "3"}], ",", " ", "\"\<End[]\>\""}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CopyFile", "[", 
     RowBox[{
      RowBox[{"testFileName", "<>", "\"\<temp\>\""}], ",", "testFileName", 
      ",", 
      RowBox[{"OverwriteTarget", "->", "True"}]}], "]"}], ";"}], "\n", 
   RowBox[{"DeleteFile", "[", 
    RowBox[{"testFileName", "<>", "\"\<temp\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.890686194230386*^9, 3.890686228283702*^9}, 
   3.8911593195689373`*^9, {3.9058258879096937`*^9, 3.9058258980485497`*^9}, 
   3.905826396819344*^9},
 CellLabel->"In[41]:=",ExpressionUUID->"3c36af82-53b5-4d00-b969-206189441059"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlttemp\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.905826536338654*^9, 3.905876122504537*^9, 
  3.905876239552593*^9, 3.905953238826576*^9, 3.905953433372098*^9, 
  3.905953676744424*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"3069c0f8-2bb0-4a08-8117-028c1c55974c"],

Cell[BoxData["1299"], "Output",
 CellChangeTimes->{3.905826536338654*^9, 3.905876122504537*^9, 
  3.905876239552593*^9, 3.905953238826576*^9, 3.905953433372098*^9, 
  3.9059536767778397`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"3f1b51df-36ab-403e-b00f-3c4e43b5836d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt\"\>", 
   ",", "\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlttemp\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.905826536338654*^9, 3.905876122504537*^9, 
  3.905876239552593*^9, 3.905953238826576*^9, 3.905953433372098*^9, 
  3.9059536768333817`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"c6603595-3d83-4aa8-b398-03e436f63872"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tr", "=", 
  RowBox[{"TestReport", "[", "testFileName", "]"}]}]], "Input",
 CellLabel->"In[48]:=",ExpressionUUID->"d8857335-0154-41ab-83b2-80a64e05c7ed"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: ProcessModels.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["27", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: ProcessModels.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["27", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["27", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "1.1157260000000000001`4.766708787326133", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                   "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: ProcessModels.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     1751450084735553702 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905953676900321*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "39750ca3-d24c-4889-8602-e88374dc5b42", "TestID" -> 
         "ProcessModels_20231010-116DCE", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "9ce11dcd-c969-415d-ad2b-82a54a67db5b", "Input" -> 
         HoldForm[Model`ProcessModels`longTest = False; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000032`1.6556649761518998, "CPUTimeUsed" -> 0.00003200000000092018,
          "MemoryUsed" -> 2760, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4407731332530855761 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9059536769006453`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "629aca14-7e88-4e00-86af-9c666a7106a6", "TestID" -> 
         "ProcessModels_20231010-K6S5F5", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "e2b8e950-88b9-44df-88b2-cac9ec097a37", "Input" -> 
         HoldForm[
          Needs["FernandoDuarte`LongRunRisk`Model`Catalog`"]; 
           Needs["FernandoDuarte`LongRunRisk`Model`ProcessModels`"]; True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00003`1.6276362525516561, "CPUTimeUsed" -> 0.00002899999999961267, 
         "MemoryUsed" -> 2896, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7656963938221493396 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905953676900906*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "49d58dcf-f792-4c62-a02e-57d386e50d56", "TestID" -> 
         "ProcessModels_20231010-8B36RO", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "fb51a85a-460c-4fdd-b30e-80eb6fc68f53", "Input" -> HoldForm[
           Apply[And, {
             
             MemberQ[$ContextPath, 
              "FernandoDuarte`LongRunRisk`Model`Catalog`"], 
             
             MemberQ[$ContextPath, 
              "FernandoDuarte`LongRunRisk`Model`ProcessModels`"]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000022`1.4929376786542, "CPUTimeUsed" -> 0.00002299999999966218, 
         "MemoryUsed" -> 2896, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7909825404203891694 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9059536769011374`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "78202fe9-87eb-4ada-b6c9-2310db195cb2", "TestID" -> 
         "ProcessModels_20231010-HPANYO", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "414cf5c9-c21e-4e3d-8bc9-0c1654e821c4", "Input" -> HoldForm[
           Apply[And, {
             Not[Names["*processModels"] === {}], 
             Not[Names["*models"] === {}]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.033668`4.677732316335855, "CPUTimeUsed" -> 0.03369200000000028, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7879643618757303755 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905953676935131*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "f8601495-a530-4e01-a8f6-99bd95d0ce09", "TestID" -> 
         "ProcessModels_20231010-01INLQ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "1d602ca3-0b46-45cd-8a47-62bc06d27369", "Input" -> HoldForm[Get[
             Get[
              FileNameJoin[{"FernandoDuarte/LongRunRisk", "Models.wl"}]]]; 
           FernandoDuarte`LongRunRisk`Model`Catalog`models = 
            If[Model`ProcessModels`longTest, 
              FernandoDuarte`LongRunRisk`Model`Catalog`models, 
              KeyTake[
              FernandoDuarte`LongRunRisk`Model`Catalog`models, {
               "BY", "BKY", "NRC"}]]; 
           Model`ProcessModels`modelsP = 
            If[Model`ProcessModels`longTest, 
              FernandoDuarte`LongRunRisk`Models, 
              KeyTake[
              FernandoDuarte`LongRunRisk`Models, {"BY", "BKY", "NRC"}]]; 
           True], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         1.055147`6.173827966320247, "CPUTimeUsed" -> 1.0637059999999998`, 
         "MemoryUsed" -> 4956472, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 8996612822099650177 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905953677990681*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "97d18f85-bef7-409d-b347-7ad651b33b90", "TestID" -> 
         "ProcessModels_20231010-Q8F8Y7", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "cf951fc5-0ae7-4a68-8f51-38379ba6f4de", "Input" -> HoldForm[
           Apply[And, 
            Map[StringQ, 
             Keys[Model`ProcessModels`modelsP]]]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000026`1.5654883458028126, "CPUTimeUsed" -> 
         0.000026000000000081513`, "MemoryUsed" -> 2560, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 2947283007299988117 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90595367799097*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "b8c5f25b-47fa-40c8-8d52-eac5fa42f802", "TestID" -> 
         "ProcessModels_20231010-XCSPNR", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "5ccdc8a1-96a4-44cb-b18c-ea591051638e", "Input" -> HoldForm[
           Apply[And, 
            Map[StringQ, 
             Flatten[
              Map[{
                Model`ProcessModels`modelsP[#]["name"], 
                Model`ProcessModels`modelsP[#]["shortname"], 
                Model`ProcessModels`modelsP[#]["bibRef"], 
                Model`ProcessModels`modelsP[#]["desc"], 
                Model`ProcessModels`modelsP[#]["exogenousVars"], 
                Model`ProcessModels`modelsP[#]["endogenousVars"]}& , 
               Keys[Model`ProcessModels`modelsP]]]]]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000044`1.7939676743181816, "CPUTimeUsed" -> 0.00004399999999993298,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 8006407568304240307 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905953677991252*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "ffc5c41c-5b25-4d6c-b193-56f003e45be8", "TestID" -> 
         "ProcessModels_20231010-8V68GY", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "a84582d9-ef9d-48ef-81e7-22220965dc19", "Input" -> HoldForm[
           Apply[And, {
             Apply[And, 
              Map[NumberQ, 
               Flatten[
                Map[Values[
                  N[
                   ReplaceRepeated[<|
                    FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                    "parameters"]|>, 
                    FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
                    "parameters"]]]]& , 
                 Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]]]]], 
             Apply[And, 
              Map[NumberQ, 
               Flatten[
                Map[Values[
                  N[
                   ReplaceRepeated[<|
                    Model`ProcessModels`modelsP[#]["parameters"]|>, 
                    Model`ProcessModels`modelsP[#]["parameters"]]]]& , 
                 Keys[Model`ProcessModels`modelsP]]]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.001671`3.3734914477253852, "CPUTimeUsed" -> 0.0016730000000002576`,
          "MemoryUsed" -> 6400, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 6051200735864239683 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905953677993154*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "91ca4b82-c881-4587-9d26-d206e31a0d80", "TestID" -> 
         "ProcessModels_20231010-NR97KO", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "0721434b-4a30-464d-9c70-f67f0ab65db4", "Input" -> HoldForm[
           Apply[And, {
             Apply[And, 
              Map[MemberQ[
                Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], #]& , {
               "BY", "BKY"}]], 
             Apply[And, 
              Map[MemberQ[
                Keys[Model`ProcessModels`modelsP], #]& , 
               Keys[Model`ProcessModels`modelsP]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000027`1.581878761990981, "CPUTimeUsed" -> 0.00002700000000022129, 
         "MemoryUsed" -> 3208, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 1945983504833090690 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905953677993402*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a083b21d-fb8b-4fcf-bad7-4102583667e1", "TestID" -> 
         "ProcessModels_20231010-3CEC3Q", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "cb71057d-89cf-4787-91a3-26c2a840f079", "Input" -> HoldForm[
           Apply[And, {
             AllTrue[
             FernandoDuarte`LongRunRisk`Model`Catalog`models, AssociationQ], 
             AllTrue[Model`ProcessModels`modelsP, AssociationQ], 
             AllTrue[
              Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#]& , 
               Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]], 
              AssociationQ], 
             AllTrue[
              Map[Model`ProcessModels`modelsP[#]& , 
               Keys[Model`ProcessModels`modelsP]], AssociationQ]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000025`1.5484550065040317, "CPUTimeUsed" -> 
         0.000024999999999053557`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 3333715840075879761 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90595367799374*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a2af8809-be83-4047-bc48-45e844226b3d", "TestID" -> 
         "ProcessModels_20231010-AXC0ST", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "a7e8eb77-9d2e-4c2b-a0f0-72a6c7183ec2", "Input" -> HoldForm[
           If[Model`ProcessModels`longTest, 
            Apply[And, {
              Apply[And, 
               Map[Apply[And, 
                 
                 Map[# === 
                  "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["stateVars"], PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                    SymbolName[#]]& ][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]], 
              Apply[And, 
               Map[Apply[And, 
                 
                 Map[# === 
                  "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["modelAssumptions"], 
                    PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                    SymbolName[#]]& ][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]], 
              Apply[And, 
               Map[Apply[And, 
                 
                 Map[# === 
                  "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["exogenousEq"], PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                    SymbolName[#]]& ][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]], 
              Apply[And, 
               Map[Apply[And, 
                 
                 Map[# === 
                  "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"& , 
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["endogenousEq"], 
                    PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                    SymbolName[#]]& ][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]]}], True]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000017`1.3809639192102672, "CPUTimeUsed" -> 
         0.000018999999999991246`, "MemoryUsed" -> 2528, "ExpectedOutput" -> 
         HoldForm[True], "Outcome" -> "Success"|>], 7878088851520911208 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905953677994046*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "9d6283ee-a120-4161-92a6-d4f395ff7a14", "TestID" -> 
         "ProcessModels_20231010-S2DU7N", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "20a99f68-abf7-4bc6-9925-c602b19f3ca8", "Input" -> HoldForm[
           If[Model`ProcessModels`longTest, 
            Apply[And, {
              Apply[And, 
               Map[Apply[And, 
                 Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["stateVars"], PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                    BlankSequence[]][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]], 
              Apply[And, 
               Map[Apply[And, 
                 Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["modelAssumptions"], 
                    PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                    BlankSequence[]][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]], 
              Apply[And, 
               Map[Apply[And, 
                 Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["exogenousEq"], PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                    BlankSequence[]][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]], 
              Apply[And, 
               Map[Apply[And, 
                 Map[# === "FernandoDuarte`LongRunRisk`Model`Shocks`"& , 
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["endogenousEq"], 
                    PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                    BlankSequence[]][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]]}], True]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000017`1.3809639192102672, "CPUTimeUsed" -> 0.00001699999999971169,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7725820426437125908 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9059536779943633`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "1f1c27b5-ae3e-4364-b67a-d4ade45dde54", "TestID" -> 
         "ProcessModels_20231010-C1WRNJ", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "c3fcdbd8-357b-4ad7-b334-b39aaf8e9389", "Input" -> HoldForm[
           If[Model`ProcessModels`longTest, 
            Apply[And, {
              Apply[And, 
               Map[Apply[And, 
                 Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["parameters"], 
                    PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]], 
              Apply[And, 
               Map[Apply[And, 
                 Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["stateVars"], PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]], 
              Apply[And, 
               Map[Apply[And, 
                 Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["modelAssumptions"], 
                    PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]], 
              Apply[And, 
               Map[Apply[And, 
                 Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["exogenousEq"], PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]], 
              Apply[And, 
               Map[Apply[And, 
                 Map[# === "FernandoDuarte`LongRunRisk`Model`Parameters`"& , 
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["endogenousEq"], 
                    PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]]}], True]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000017`1.3809639192102672, "CPUTimeUsed" -> 0.00001700000000059987,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 8715563321151683146 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905953677994625*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "d4d21969-d811-4f3e-a595-cdd27e430f03", "TestID" -> 
         "ProcessModels_20231010-LV3Y1V", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "98c9696e-6933-4a76-aa50-76e23a98d1ec", "Input" -> HoldForm[
           If[Model`ProcessModels`longTest, 
            Apply[And, {
              Apply[And, 
               Map[Apply[And, 
                 
                 Map[# === 
                  "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"& , 
                  
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["modelAssumptions"], 
                    PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                    SymbolName[#]]& ][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]], 
              Apply[And, 
               Map[Apply[And, 
                 
                 Map[# === 
                  "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"& , 
                  
                  Map[Context, 
                   Cases[
                    Model`ProcessModels`modelsP[#]["endogenousEq"], 
                    PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                    SymbolName[#]]& ][
                    BlankSequence[]] :> Model`ProcessModels`var, 
                    Infinity]]]]& , 
                Keys[Model`ProcessModels`modelsP]]]}], True]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000016`1.3546349804879187, "CPUTimeUsed" -> 0.00001699999999971169,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7074728670497732429 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.90595367799488*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "80b5af8f-c66b-4274-b70a-b093f2f81a26", "TestID" -> 
         "ProcessModels_20231010-TEO87Q", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "ddd24ede-4273-4937-9e5b-8f84029f4171", "Input" -> HoldForm[
           If[
           Model`ProcessModels`longTest, 
            Model`ProcessModels`coefs = Apply[Alternatives, 
               Map[
               SymbolName, {
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc, 
                 
                 Head[
                 FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd]\
, 
                 Head[
                 FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb], 
                 Head[
                 FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb]\
}]]; Apply[And, 
              
              Map[# === 
               "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`"& , 
               Flatten[
                Map[Cases[
                  Model`ProcessModels`modelsP[#]["modelAssumptions"], 
                  Alternatives[
                    PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], Model`ProcessModels`coefs]& ], 
                    PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], Model`ProcessModels`coefs]& ][
                    BlankSequence[]]] :> Context[Model`ProcessModels`var], 
                  Infinity]& , 
                 Keys[Model`ProcessModels`modelsP]]]]], True]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000017`1.3809639192102672, "CPUTimeUsed" -> 0.00001799999999896329,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4551185920031106503 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9059536779951344`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "ae526189-5206-493d-ae7d-dd3fc374aa29", "TestID" -> 
         "ProcessModels_20231010-L6QYTE", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "b08d2391-a73a-4d3e-b56b-d8503c1f0ec4", "Input" -> HoldForm[
           Apply[And, {
             Apply[And, 
              Map[MatchQ[{}, #]& , 
               Map[Cases[
                 Model`ProcessModels`modelsP[#]["stateVars"], PatternTest[
                   Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                    SymbolName[#]]& ][
                   BlankSequence[]] :> Model`ProcessModels`var, Infinity]& , 
                Keys[Model`ProcessModels`modelsP]]]], 
             Apply[And, 
              Map[MatchQ[{}, #]& , 
               Map[Cases[
                 Model`ProcessModels`modelsP[#]["exogenousEq"], PatternTest[
                   Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                    SymbolName[#]]& ][
                   BlankSequence[]] :> Model`ProcessModels`var, Infinity]& , 
                Keys[Model`ProcessModels`modelsP]]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.001949`3.440326836949615, "CPUTimeUsed" -> 0.0019499999999998963`, 
         "MemoryUsed" -> 2624, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7152573484056565775 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9059536779972963`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "e431f372-6fb9-42cb-ac51-98bacc4fa0aa", "TestID" -> 
         "ProcessModels_20231010-INNT84", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "0c831eaa-f50a-4bf1-ab75-94acc070e6ec", "Input" -> HoldForm[
           Apply[And, {
             SubsetQ[
              Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models], 
              Keys[Model`ProcessModels`modelsP]], 
             SubsetQ[
              Map[
              FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
               "shortname"]& , 
               Keys[FernandoDuarte`LongRunRisk`Model`Catalog`models]], 
              Map[Model`ProcessModels`modelsP[#]["shortname"]& , 
               Keys[Model`ProcessModels`modelsP]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00007`1.9956130378462509, "CPUTimeUsed" -> 0.0000700000000000145, 
         "MemoryUsed" -> 2912, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 5514093256656215785 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9059536779976263`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "d7406888-c406-4a8a-be3c-b066410e3093", "TestID" -> 
         "ProcessModels_20231010-YYJQ1J", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "a6ac7e8a-1298-4208-8451-bfc00fb1866a", "Input" -> HoldForm[
           Apply[And, {
             Apply[And, 
              Map[MatchQ[Function, #]& , 
               Map[Head, 
                Map[Model`ProcessModels`modelsP[#]["stateVars"]& , 
                 Keys[Model`ProcessModels`modelsP]]]]], 
             Apply[And, 
              Map[MatchQ[List, #]& , 
               Map[Head, 
                Map[
                Model`ProcessModels`modelsP[#]["stateVars"][
                 Model`ProcessModels`t]& , 
                 Keys[Model`ProcessModels`modelsP]]]]], 
             Apply[And, 
              Map[MatchQ[1, #]& , 
               Map[Length, 
                Map[Part[
                  Model`ProcessModels`modelsP[#]["stateVars"], 1]& , 
                 Keys[Model`ProcessModels`modelsP]]]]], 
             Apply[And, 
              Map[MatchQ["t", #]& , 
               Map[Apply[SymbolName, 
                 Part[
                  Model`ProcessModels`modelsP[#]["stateVars"], 1]]& , 
                Keys[Model`ProcessModels`modelsP]]]], 
             Map[Model`ProcessModels`modelsP[#]["stateVars"][
               FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t]& , 
               Keys[Model`ProcessModels`modelsP]] === 
             Map[FernandoDuarte`LongRunRisk`Model`Catalog`models[#][
               "stateVars"]& , 
               Keys[Model`ProcessModels`modelsP]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000065`1.9634283544748494, "CPUTimeUsed" -> 0.000064000000000064, 
         "MemoryUsed" -> 2856, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 8613355341666003181 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9059536779978933`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "99f3c561-964d-4ad0-8e71-96778c9d984b", "TestID" -> 
         "ProcessModels_20231010-CO6JXI", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "1ec44415-e2ae-4f2c-9e39-09dbf3259bd8", "Input" -> HoldForm[
           Apply[And, 
            Map[NumberQ, 
             Map[Model`ProcessModels`modelsP[#]["numStocks"]& , 
              Keys[Model`ProcessModels`modelsP]]]]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00002`1.451544993495975, "CPUTimeUsed" -> 0.000021000000000270802`,
          "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 5448601792892496016 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9059536779983563`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "d3af9e7c-b0d3-481b-a6df-4136c3c81316", "TestID" -> 
         "ProcessModels_20231010-RI0LE2", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "107021d8-31ad-473e-bbe4-40743b7f01cf", "Input" -> 
         HoldForm[
          Model`ProcessModels`model = Model`ProcessModels`modelsP["NRC"]; 
           Apply[And, {ReplaceAll[
                Model`ProcessModels`pi[myContext`t], 
                Normal[
                 Model`ProcessModels`model["exogenousEq"]]] === 
              FernandoDuarte`LongRunRisk`Model`Parameters`mup + (
                FernandoDuarte`LongRunRisk`Model`Parameters`rhop (
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   myContext`t - 1] - 
                  FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                 FernandoDuarte`LongRunRisk`Model`Parameters`xip 
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                   myContext`t - 1] + 
                 FernandoDuarte`LongRunRisk`Model`Parameters`phip 
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                   myContext`t])), ReplaceAll[
                Model`ProcessModels`eps["dc"][Model`ProcessModels`t], 
                Model`ProcessModels`model["exogenousEq"]] === 
              Model`ProcessModels`eps["dc"][Model`ProcessModels`t], ReplaceAll[
                Model`ProcessModels`dd[
                Model`ProcessModels`t, Model`ProcessModels`i], 
                Normal[
                 Model`ProcessModels`model["exogenousEq"]]] === 
              FernandoDuarte`LongRunRisk`Model`Parameters`mud[
                Model`ProcessModels`i] + ((
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   Model`ProcessModels`t - 1] - 
                  FernandoDuarte`LongRunRisk`Model`Parameters`mup) 
                 FernandoDuarte`LongRunRisk`Model`Parameters`rhodp[
                  Model`ProcessModels`i] + (
                 FernandoDuarte`LongRunRisk`Model`Parameters`phidc[
                   Model`ProcessModels`i] 
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["dc"][
                   Model`ProcessModels`t] + 
                 FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                   Model`ProcessModels`t - 2] 
                  FernandoDuarte`LongRunRisk`Model`Parameters`xid[
                   Model`ProcessModels`i] 
                  FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                   Model`ProcessModels`t - 1])), ReplaceAll[
                Model`ProcessModels`wc[Model`ProcessModels`t], 
                Normal[
                 Model`ProcessModels`model["endogenousEq"]]] === 
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[0] + (
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[1] (
                  FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi[
                   Model`ProcessModels`t] - 
                  FernandoDuarte`LongRunRisk`Model`Parameters`mup) + (
                 FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[4] (
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    Model`ProcessModels`t] - 
                   FernandoDuarte`LongRunRisk`Model`Parameters`Esg) + (
                  FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[5] 
                   Subtract[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    Model`ProcessModels`t]^2 - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`phig^2/(1 - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhog^2), 
                    FernandoDuarte`LongRunRisk`Model`Parameters`Esg^2] + (
                   FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[3] 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    Model`ProcessModels`t] + 
                   FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A[2] 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    Model`ProcessModels`t - 1] 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    Model`ProcessModels`t])))), ReplaceAll[
                Model`ProcessModels`pd[
                Model`ProcessModels`t, Model`ProcessModels`i], 
                Normal[
                 Model`ProcessModels`model["endogenousEq"]]] === 
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
                Model`ProcessModels`i][
                0] + ((FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
pi[Model`ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`mup) 
                 FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
                  Model`ProcessModels`i][
                  1] + ((FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\
sg[Model`ProcessModels`t] - FernandoDuarte`LongRunRisk`Model`Parameters`Esg) 
                  FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
                   Model`ProcessModels`i][4] + (
                  Subtract[
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    Model`ProcessModels`t]^2 - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`phig^2/(1 - 
                    FernandoDuarte`LongRunRisk`Model`Parameters`rhog^2), 
                    FernandoDuarte`LongRunRisk`Model`Parameters`Esg^2] 
                   FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
                    Model`ProcessModels`i][5] + (
                   FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg[
                    Model`ProcessModels`t - 1] 
                    FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
                    Model`ProcessModels`i][2] 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    Model`ProcessModels`t] + 
                   FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B[
                    Model`ProcessModels`i][3] 
                    FernandoDuarte`LongRunRisk`Model`Shocks`eps["pi"][
                    Model`ProcessModels`t])))), ReplaceAll[
                Model`ProcessModels`bondexcret[
                Model`ProcessModels`t, Model`ProcessModels`i], 
                Normal[
                 Model`ProcessModels`model["endogenousEq"]]] === 
              FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondret[
                Model`ProcessModels`t, Model`ProcessModels`i, 1] - 
               FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\
bondyield[Model`ProcessModels`t - 1, 1], ReplaceAll[
                ReplaceAll[
                 Model`ProcessModels`bondexcret[
                 Model`ProcessModels`t, Model`ProcessModels`i], 
                 Normal[
                  Model`ProcessModels`model["endogenousEq"]]], 
                Normal[
                 Model`ProcessModels`model["endogenousEq"]]] === (
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[
                 Model`ProcessModels`t - 1, 1] + 
                FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[
                 Model`ProcessModels`t, Model`ProcessModels`i - 1]) - 
               FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond[
               Model`ProcessModels`t - 1, Model`ProcessModels`i]}]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.003204`3.6562075052441942, "CPUTimeUsed" -> 0.003205999999999598, 
         "MemoryUsed" -> -4975320, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 4070677275576202017 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9059536780019174`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "e93c5272-d814-4842-81e4-561c2547e09d", "TestID" -> 
         "ProcessModels_20231010-W55HXX", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "8ada5c9e-7c72-4df9-b13b-0b8758ad7a8f", "Input" -> HoldForm[
           Apply[And, {
             Apply[And, 
              Map[MatchQ[{}, #]& , 
               Map[Cases[
                 ReplaceRepeated[
                  Model`ProcessModels`wc[Model`ProcessModels`t], 
                  Normal[
                   Model`ProcessModels`modelsP[#]["endogenousEq"]]], 
                 PatternTest[
                   Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                    SymbolName[#]]& ][
                   BlankSequence[]] :> Model`ProcessModels`var, Infinity]& , 
                Keys[Model`ProcessModels`modelsP]]]], 
             Apply[And, 
              Map[
              MatchQ[#, 
                "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"]& , 
               Flatten[
                Map[Cases[
                  ReplaceRepeated[
                   Model`ProcessModels`wc[Model`ProcessModels`t], 
                   Normal[
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]], 
                  PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                    SymbolName[#]]& ][
                    BlankSequence[]] :> Context[Model`ProcessModels`var], 
                  Infinity]& , 
                 Keys[Model`ProcessModels`modelsP]]]]], 
             Apply[And, 
              Map[MatchQ[#, "FernandoDuarte`LongRunRisk`Model`Parameters`"]& , 
               Flatten[
                Map[Cases[
                  ReplaceRepeated[
                   Model`ProcessModels`wc[Model`ProcessModels`t], 
                   Normal[
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]], 
                  PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Context[Model`ProcessModels`var], 
                  Infinity]& , 
                 Keys[Model`ProcessModels`modelsP]]]]], 
             Apply[And, 
              Map[MatchQ[#, "FernandoDuarte`LongRunRisk`Model`Shocks`"]& , 
               Flatten[
                Map[Cases[
                  ReplaceRepeated[
                   Model`ProcessModels`wc[Model`ProcessModels`t], 
                   Normal[
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]], 
                  PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                    BlankSequence[]][
                    BlankSequence[]] :> Context[Model`ProcessModels`var], 
                  Infinity]& , 
                 Keys[Model`ProcessModels`modelsP]]]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.003283`3.6667858805613345, "CPUTimeUsed" -> 0.0032839999999998426`,
          "MemoryUsed" -> 22336, "ExpectedOutput" -> HoldForm[True], 
         "Outcome" -> "Success"|>], 2808396440178581548 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905953678005536*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "d3724203-f290-42e9-8e86-4c3a27d9d882", "TestID" -> 
         "ProcessModels_20231010-GCQIGS", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "50ae0a58-0c88-41b7-b9df-2579079f2808", "Input" -> HoldForm[
           Apply[And, {
             Apply[And, 
              Map[MatchQ[{}, #]& , 
               Map[Cases[
                 ReplaceRepeated[
                  Model`ProcessModels`bondexcret[
                  Model`ProcessModels`t, Model`ProcessModels`i], 
                  Normal[
                   Model`ProcessModels`modelsP[#]["endogenousEq"]]], 
                 PatternTest[
                   Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars], 
                    SymbolName[#]]& ][
                   BlankSequence[]] :> Model`ProcessModels`var, Infinity]& , 
                Keys[Model`ProcessModels`modelsP]]]], 
             Apply[And, 
              Map[
              MatchQ[#, 
                "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`"]& , 
               Flatten[
                Map[Cases[
                  ReplaceRepeated[
                   Model`ProcessModels`bondexcret[
                   Model`ProcessModels`t, Model`ProcessModels`i], 
                   Normal[
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]], 
                  PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    Map[
                    StringDrop[#, -2]& , 
                    FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars], 
                    SymbolName[#]]& ][
                    BlankSequence[]] :> Context[Model`ProcessModels`var], 
                  Infinity]& , 
                 Keys[Model`ProcessModels`modelsP]]]]], 
             Apply[And, 
              Map[MatchQ[#, "FernandoDuarte`LongRunRisk`Model`Parameters`"]& , 
               Flatten[
                Map[Cases[
                  ReplaceRepeated[
                   Model`ProcessModels`bondexcret[
                   Model`ProcessModels`t, Model`ProcessModels`i], 
                   Normal[
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]], 
                  PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MemberQ[
                    FernandoDuarte`LongRunRisk`Model`Parameters`$parameters, 
                    SymbolName[#]]& ] :> Context[Model`ProcessModels`var], 
                  Infinity]& , 
                 Keys[Model`ProcessModels`modelsP]]]]], 
             Apply[And, 
              Map[MatchQ[#, "FernandoDuarte`LongRunRisk`Model`Shocks`"]& , 
               Flatten[
                Map[Cases[
                  ReplaceRepeated[
                   Model`ProcessModels`bondexcret[
                   Model`ProcessModels`t, Model`ProcessModels`i], 
                   Normal[
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]], 
                  PatternTest[
                    Pattern[Model`ProcessModels`var, 
                    Blank[Symbol]], MatchQ[
                    SymbolName[#], "eps"]& ][
                    BlankSequence[]][
                    BlankSequence[]] :> Context[Model`ProcessModels`var], 
                  Infinity]& , 
                 Keys[Model`ProcessModels`modelsP]]]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.012993`4.2642244362814985, "CPUTimeUsed" -> 0.01299899999999976, 
         "MemoryUsed" -> 8896, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 3302772853041677420 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9059536780188074`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "26c78e66-b76a-4be1-a1d8-b6f53549339b", "TestID" -> 
         "ProcessModels_20231010-ZAMP0W", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "f4e5cb32-86d0-4dee-8a48-e6689bc8ea35", "Input" -> HoldForm[
           Apply[And, {
             AllTrue[
              Map[Head, 
               Keys[
                Model`ProcessModels`modelsP["BKY"]["exogenousEq"]]], 
              MatchQ[#, PatternTest]& ], 
             AllTrue[
              Map[Head, 
               Keys[
                Model`ProcessModels`modelsP["BKY"]["endogenousEq"]]], 
              MatchQ[#, PatternTest]& ]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000036`1.706817498599281, "CPUTimeUsed" -> 0.00003700000000073089, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 6366980054961637714 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9059536780191703`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "35c50de1-01f3-4a23-a88b-8bf81aa6ac4c", "TestID" -> 
         "ProcessModels_20231010-FZJF95", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "f89957b1-30bf-4f0c-8b07-3a860d0c0ddf", "Input" -> HoldForm[
           Apply[And, {
             Apply[And, 
              Map[Not, 
               Map[Head[
                  Model`ProcessModels`dc[Model`ProcessModels`t]] === Head[
                  ReplaceAll[
                   Model`ProcessModels`dc[Model`ProcessModels`t], 
                   Normal[
                    Join[
                    Model`ProcessModels`modelsP[#]["exogenousEq"], 
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
                Keys[Model`ProcessModels`modelsP]]]], 
             Apply[And, 
              Map[Not, 
               Map[Head[
                  Model`ProcessModels`dd[
                  Model`ProcessModels`t, Model`ProcessModels`i]] === Head[
                  ReplaceAll[
                   Model`ProcessModels`dd[
                   Model`ProcessModels`t, Model`ProcessModels`i], 
                   Normal[
                    Join[
                    Model`ProcessModels`modelsP[#]["exogenousEq"], 
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
                Keys[Model`ProcessModels`modelsP]]]], 
             Apply[And, 
              Map[Not, 
               Map[Head[
                  Model`ProcessModels`wc[Model`ProcessModels`t]] === Head[
                  ReplaceAll[
                   Model`ProcessModels`wc[Model`ProcessModels`t], 
                   Normal[
                    Join[
                    Model`ProcessModels`modelsP[#]["exogenousEq"], 
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
                Keys[Model`ProcessModels`modelsP]]]], 
             Apply[And, 
              Map[Not, 
               Map[Head[
                  Model`ProcessModels`sdf[Model`ProcessModels`t]] === Head[
                  ReplaceAll[
                   Model`ProcessModels`sdf[Model`ProcessModels`t], 
                   Normal[
                    Join[
                    Model`ProcessModels`modelsP[#]["exogenousEq"], 
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
                Keys[Model`ProcessModels`modelsP]]]], 
             Apply[And, 
              Map[Not, 
               Map[Head[
                  Model`ProcessModels`bondyield[Model`ProcessModels`t]] === 
                Head[
                  ReplaceAll[
                   Model`ProcessModels`bondyield[Model`ProcessModels`t], 
                   Normal[
                    Join[
                    Model`ProcessModels`modelsP[#]["exogenousEq"], 
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
                Keys[Model`ProcessModels`modelsP]]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000717`3.006034153499794, "CPUTimeUsed" -> 0.0007190000000001362, 
         "MemoryUsed" -> 7952, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 6876471843790442260 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905953678020123*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "ddf45d09-4f81-4b0e-8904-c12f70fea23f", "TestID" -> 
         "ProcessModels_20231010-1ZAJZL", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "fa9c089a-f768-41a9-bef8-277e00dccde5", "Input" -> HoldForm[
           Apply[And, {
             Apply[And, 
              Map[Head[
                 Model`ProcessModels`notVar[Model`ProcessModels`t]] === Head[
                 ReplaceAll[
                  Model`ProcessModels`notVar[Model`ProcessModels`t], 
                  Normal[
                   Join[
                    Model`ProcessModels`modelsP[#]["exogenousEq"], 
                    Model`ProcessModels`modelsP[#]["endogenousEq"]]]]]& , 
               Keys[Model`ProcessModels`modelsP]]]}]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00016`2.3546349804879183, "CPUTimeUsed" -> 0.0001610000000002998, 
         "MemoryUsed" -> 5568, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 7942922131228155499 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9059536780205674`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "b03438f8-af97-4fe3-82d7-549ac0e3688a", "TestID" -> 
         "ProcessModels_20231010-EU88H5", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "6065db1b-b9bc-4b85-8b29-6ea703c31fc4", "Input" -> HoldForm[
           If[
           Model`ProcessModels`longTest, 
            Model`ProcessModels`modelBY = 
             FernandoDuarte`LongRunRisk`Model`Catalog`models["BY"]; 
            Model`ProcessModels`modelBKY = 
             FernandoDuarte`LongRunRisk`Model`Catalog`models["BKY"]; 
            Model`ProcessModels`modelBKYP = 
             FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[<|
               "BKY" -> Model`ProcessModels`modelBKY|>]; 
            Model`ProcessModels`modelBYP = 
             FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[<|
               "BY" -> Model`ProcessModels`modelBY|>]; 
            Model`ProcessModels`newModels = <|
              "myModel" -> Model`ProcessModels`modelBKY, "BY" -> 
               Model`ProcessModels`modelBY|>; 
            Model`ProcessModels`newModelsSameName = <|
              "BY" -> Model`ProcessModels`modelBY|>; 
            Model`ProcessModels`newModelsRename = <|
              "myModel" -> Model`ProcessModels`modelBY|>; 
            Model`ProcessModels`newModelsP = 
             FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
              Model`ProcessModels`newModels]; 
            Model`ProcessModels`newModelsSameNameP = 
             FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
              Model`ProcessModels`newModelsSameName]; 
            Model`ProcessModels`newModelsRenameP = 
             FernandoDuarte`LongRunRisk`Model`ProcessModels`processModels[
              Model`ProcessModels`newModelsRename]; Apply[And, {
               ((KeyDrop[#, "coeffsSolution"]& )[
                 Model`ProcessModels`newModelsP["myModel"]] === 
               KeyDrop[#, "coeffsSolution"]& )[
                Model`ProcessModels`modelBKYP["BKY"]], 
               ((KeyDrop[#, "coeffsSolution"]& )[
                 Model`ProcessModels`newModelsP["BY"]] === 
               KeyDrop[#, "coeffsSolution"]& )[
                Model`ProcessModels`modelBYP["BY"]], 
               ((KeyDrop[#, "coeffsSolution"]& )[
                 Model`ProcessModels`newModelsSameNameP["BY"]] === 
               KeyDrop[#, "coeffsSolution"]& )[
                Model`ProcessModels`modelBYP["BY"]], 
               ((KeyDrop[#, "coeffsSolution"]& )[
                 Model`ProcessModels`newModelsRenameP["myModel"]] === 
               KeyDrop[#, "coeffsSolution"]& )[
                Model`ProcessModels`modelBYP["BY"]]}], True]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000018`1.4057875029353, "CPUTimeUsed" -> 0.00001699999999971169, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>], 4932883245498104485 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.905953678020791*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "3f04a1e8-c908-4560-bdc2-0545b76f5d7f", "TestID" -> 
         "ProcessModels_20231010-QE7U4H", "TestFileName" -> 
         "/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Tests/ProcessModels.wlt", "EvaluationID" -> 
         "e2da89ba-2641-4e8a-b240-fa216ef94602", "Input" -> HoldForm[
           Apply[And, 
            Flatten[{
              Map[Apply[And, 
                Map[NumberQ, 
                 Values[
                  Model`ProcessModels`modelsP[#]["coeffsSolutionN"]]]]& , 
               Keys[Model`ProcessModels`modelsP]]}]]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.002435`3.5370139633826474, "CPUTimeUsed" -> 0.002436000000000327, 
         "MemoryUsed" -> 2528, "ExpectedOutput" -> HoldForm[True], "Outcome" -> 
         "Success"|>]|>, "FailureResults" -> <||>, 
    "TestsNotEvaluatedKeys" -> {}, "TestsFailedWrongResultsKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {1751450084735553702, 4407731332530855761, 
     7656963938221493396, 7909825404203891694, 7879643618757303755, 
     8996612822099650177, 2947283007299988117, 8006407568304240307, 
     6051200735864239683, 1945983504833090690, 3333715840075879761, 
     7878088851520911208, 7725820426437125908, 8715563321151683146, 
     7074728670497732429, 4551185920031106503, 7152573484056565775, 
     5514093256656215785, 8613355341666003181, 5448601792892496016, 
     4070677275576202017, 2808396440178581548, 3302772853041677420, 
     6366980054961637714, 6876471843790442260, 7942922131228155499, 
     4932883245498104485}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9058265534580603`*^9, 3.9058761239893*^9, 
  3.905876240917491*^9, 3.905953240356948*^9, 3.905953434806787*^9, 
  3.905953678205388*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"ff369f86-7c2c-44fa-b62e-db75071d9bfb"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{"ReleaseHold", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "\"\<ActualOutput\>\"", "]"}], "]"}], ")"}]}], ")"}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"expected", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Flatten", "@", 
       RowBox[{"{", 
        RowBox[{"(", 
         RowBox[{"ReleaseHold", "@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"jj", ",", "1"}], "]"}], "]"}], "[", 
            RowBox[{"[", "\"\<ExpectedOutput\>\"", "]"}], "]"}], ")"}]}], 
         ")"}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"jj", ",", "1", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"tr", "[", "\"\<Results\>\"", "]"}], "]"}]}], "}"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "value", " ", "of", " ", "next", " ", "two", " ", "lines", " ", "should", 
    " ", "be", " ", "true"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "actual"}]}], "\[IndentingNewLine]", 
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", "expected"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"numEntries", "=", 
     RowBox[{
      RowBox[{"Dimensions", "[", "actual", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"numCol", "=", "5"}], ";", "\[IndentingNewLine]", 
    RowBox[{"numRows", "=", 
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{"numEntries", "/", "numCol"}], "]"}], "+", "1"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"TableForm", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ArrayReshape", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"TableForm", "[", 
              RowBox[{"{", 
               RowBox[{"#1", ",", "#2"}], "}"}], "]"}], "&"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"actual", ",", "\[IndentingNewLine]", "expected"}], 
             "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}], 
          "\[IndentingNewLine]", "}"}], "\[Transpose]"}], ",", 
        RowBox[{"{", 
         RowBox[{"numRows", ",", "numCol"}], "}"}], ",", "\"\<--\>\""}], 
       "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{"TableDepth", "\[Rule]", "1"}]}], " ", "]"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.905694462163437*^9, 3.905694478942039*^9}, {
   3.905697309999281*^9, 3.905697352099519*^9}, {3.905698637086853*^9, 
   3.905698637247707*^9}, {3.9056993097841167`*^9, 3.905699372508963*^9}, {
   3.905701884187395*^9, 3.905701885054824*^9}, {3.905767492744175*^9, 
   3.9057674935249777`*^9}, 3.9057678324661016`*^9, {3.905826299500319*^9, 
   3.9058263010264473`*^9}, {3.905826564911167*^9, 3.905826565857295*^9}, {
   3.905953842625307*^9, 3.9059538440831842`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"9ff6cbc9-039e-4dab-acd6-edafbf0c33ff"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.905826553552198*^9, 3.905826566487685*^9}, 
   3.905876124150447*^9, 3.905876241089423*^9, 3.905953240447652*^9, 
   3.9059534348948507`*^9, 3.905953678300564*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"02fb2a1f-8aa0-4203-b1ec-b5d2751a103e"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.905826553552198*^9, 3.905826566487685*^9}, 
   3.905876124150447*^9, 3.905876241089423*^9, 3.905953240447652*^9, 
   3.9059534348948507`*^9, 3.905953678301632*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"ab629cbe-da7b-478f-8035-90305fa125aa"]
}, Closed]],

Cell[CellGroupData[{

Cell["Interactive Tests", "Subsection",
 CellChangeTimes->{{3.889905622471089*^9, 3.889905629759961*^9}, {
  3.889972063478182*^9, 
  3.889972065236586*^9}},ExpressionUUID->"2c4a83cf-8af5-4d19-89ae-\
a864a258310f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"packageFileName", "=", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DirectoryName", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "2"}], "]"}], ",", 
     "\"\<Kernel\>\"", ",", "\"\<Model\>\"", ",", 
     RowBox[{
      RowBox[{"FileBaseName", "[", 
       RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", "\"\<.wl\>\""}]}],
     "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", 
  RowBox[{
   RowBox[{"\"\<FernandoDuarte`LongRunRisk`Model`\>\"", "<>", 
    RowBox[{"FileBaseName", "[", 
     RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", "\"\<`\>\""}], ",", 
   "packageFileName"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<FernandoDuarte`LongRunRisk`Model`Catalog`\>\"", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.889968360919714*^9, 3.889968361169221*^9}, {
   3.889998753242611*^9, 3.8899987613556004`*^9}, 3.890825576987958*^9, {
   3.890987450098063*^9, 3.8909874502616673`*^9}, {3.8934756468185673`*^9, 
   3.893475650004422*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"f275bdc7-d1c5-4b14-9c2f-42b3fa65a747"],

Cell[BoxData["\<\"/Users/fernandoduarte/Dropbox \
(Personal)/MyPackages/LongRunRisk/Kernel/Model/ProcessModels.wl\"\>"], \
"Output",
 CellChangeTimes->{3.905826575174717*^9, 3.9059534858645687`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"11e83dc2-fe03-43fa-88c4-39b6efdde0ed"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"resourcesDir", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DirectoryName", "[", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "2"}], "]"}], ",", 
      "\"\<Resources\>\""}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"filename", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"resourcesDir", ",", "\"\<Models.wl\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Get", "[", "filename", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "@", "data"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modelsP", "=", "FernandoDuarte`LongRunRisk`Models"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.905823471999531*^9, 3.905823472096312*^9}, 
   3.90582414475002*^9, 3.905825524183859*^9, {3.9058257636057587`*^9, 
   3.905825769590568*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"65d4b552-0021-4f46-bb34-71f4f20940b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Keys", " ", "are", " ", "strings"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{"StringQ", "/@", 
     RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{
  3.89000889839254*^9, {3.890016339728188*^9, 3.890016342139681*^9}, 
   3.891251908164126*^9, {3.8930041333335657`*^9, 3.8930041384325933`*^9}, {
   3.9058240207360353`*^9, 3.905824074472884*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"78177850-499e-456b-b442-fad780dafdf0"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575364916*^9, 3.905953487459325*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"ce1f4414-8a53-4820-9a5c-e00c2f66c6a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"string", " ", "fields"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{"StringQ", "/@", 
     RowBox[{"Flatten", "@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<name\>\"", "]"}], 
           ",", 
           RowBox[{
            RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<shortname\>\"", 
            "]"}], ",", 
           RowBox[{
            RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<bibRef\>\"", "]"}], 
           ",", 
           RowBox[{
            RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<desc\>\"", "]"}], 
           ",", 
           RowBox[{
            RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<exogenousVars\>\"", 
            "]"}], ",", 
           RowBox[{
            RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<endogenousVars\>\"",
             "]"}]}], "}"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.890008770382118*^9, 3.890008858894733*^9}, {
  3.890016345133547*^9, 3.8900163569166937`*^9}, {3.891251925999875*^9, 
  3.891251929267716*^9}, {3.89300415697269*^9, 3.893004157463492*^9}, {
  3.8930148354335337`*^9, 3.893014849329674*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"a17059c2-5416-45b1-b84e-0c2f842f7fb5"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575377797*^9, 3.905953487464807*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"fe6a8504-fdb2-42fa-8b58-bf1a51df8065"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"parameters", " ", "evaluate", " ", "to", " ", "numbers"}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"NumberQ", "/@", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Values", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Association", "@", 
             RowBox[{
              RowBox[{"models", "[", "#", "]"}], "[", "\"\<parameters\>\"", 
              "]"}]}], "//.", 
            RowBox[{
             RowBox[{"models", "[", "#", "]"}], "[", "\"\<parameters\>\"", 
             "]"}]}], "//", "N"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"Keys", "@", "models"}], ")"}]}], "]"}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"NumberQ", "/@", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Values", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Association", "@", 
             RowBox[{
              RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<parameters\>\"", 
              "]"}]}], "//.", 
            RowBox[{
             RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<parameters\>\"", 
             "]"}]}], "//", "N"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"Keys", "@", "modelsP"}], ")"}]}], "]"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.890008965671461*^9, 3.8900089726778793`*^9}, {
   3.8900090147612762`*^9, 3.890009193827691*^9}, 3.8900101461421833`*^9, 
   3.890015540563738*^9, {3.8900156352184877`*^9, 3.89001567714233*^9}, 
   3.8912519303524723`*^9, {3.891640840825358*^9, 3.8916408678776903`*^9}, {
   3.89164090174683*^9, 3.8916409201814632`*^9}, 3.892974136542371*^9, {
   3.89300417575723*^9, 3.893004176318849*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"61202b86-4708-4e03-aa51-3fcb0e388f46"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575388876*^9, 3.905953487475636*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"b889ec67-fec7-4191-bcfd-5858dba4f84a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575388876*^9, 3.905953487476501*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"9f12fda1-c152-4d8b-b3b0-a6c9779e7486"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"can", " ", "find", " ", "some", " ", "models"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"Keys", "[", "models", "]"}], ",", "#"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<BY\>\"", ",", "\"\<BKY\>\""}], "}"}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"Keys", "[", "modelsP", "]"}], ",", "#"}], "]"}], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{"Keys", "@", "modelsP"}], ")"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8900087062162313`*^9, 3.890008740193614*^9}, {
   3.89001637048425*^9, 3.890016372993977*^9}, 3.8912519320207787`*^9, {
   3.891640927230764*^9, 3.891640929613118*^9}, 3.892974170435498*^9, {
   3.893004184988491*^9, 3.8930041852126703`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"78983d07-8f42-43d9-a50f-d26a03b2ee5c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575392767*^9, 3.905953487481063*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"70071a4f-93fa-410b-8f64-711e0876017b"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575392767*^9, 3.905953487481901*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"aadd89bf-9012-4274-9937-02a32514c56f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"models", ",", " ", 
    RowBox[{"modelsP", " ", "are", " ", "associations"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"AllTrue", "[", 
    RowBox[{"models", ",", "AssociationQ"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"AllTrue", "[", 
    RowBox[{"modelsP", ",", "AssociationQ"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"each", " ", "model", " ", "inside", " ", "models"}], ",", " ", 
     RowBox[{
     "modelsP", " ", "are", " ", "themselves", " ", "an", " ", 
      "association"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"AllTrue", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"models", "[", "#", "]"}], "&"}], "/@", 
      RowBox[{"Keys", "[", "models", "]"}]}], ",", "AssociationQ"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"AllTrue", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"modelsP", "[", "#", "]"}], "&"}], "/@", 
      RowBox[{"Keys", "[", "modelsP", "]"}]}], ",", "AssociationQ"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8900086430073547`*^9, 3.890008684982678*^9}, {
  3.890010177349143*^9, 3.890010179091837*^9}, {3.8900163791247263`*^9, 
  3.890016449580503*^9}, {3.891251933188879*^9, 3.891251935189865*^9}, {
  3.891640937075639*^9, 3.891640945348556*^9}, {3.893004194158003*^9, 
  3.893004229582778*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"33533fdf-b808-460b-a76c-9a554476db8f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575396047*^9, 3.905953487493431*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"beb494c2-8ea8-4231-8154-6e4ff5c9ee2b"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575396047*^9, 3.9059534874943447`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"61aad7a6-01d2-4856-8294-4666d8918577"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575396047*^9, 3.9059534874949703`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"7a25cb4f-a82a-483c-8f8e-0cc8d19ad4ad"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575396047*^9, 3.905953487495586*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"90d108c0-f178-4ca5-8597-59d9f3bf23b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "exogenous", " ", "variables", " ", "are", " ", "in", " ", 
    "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\"\
"}], ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<stateVars\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", 
                 "Infinity"}], "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<modelAssumptions\>\"", "*)"}], "\[IndentingNewLine]", 
     
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\"\
"}], ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<modelAssumptions\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", 
                 "Infinity"}], "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<exogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\"\
"}], ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<exogenousEq\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", 
                 "Infinity"}], "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<endogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\"\
"}], ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<endogenousEq\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", 
                 "Infinity"}], "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}], 
    "\[IndentingNewLine]", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.893001201934902*^9, 3.893001214021667*^9}, {
   3.893001245798745*^9, 3.8930012743606873`*^9}, {3.893001352341578*^9, 
   3.893001386197197*^9}, {3.893001448430169*^9, 3.893001448726687*^9}, 
   3.8930026482885447`*^9, {3.8930042711283293`*^9, 3.8930042721384*^9}, {
   3.89301215129099*^9, 3.893012163688088*^9}, {3.893014370482971*^9, 
   3.893014438233089*^9}, {3.893014486322825*^9, 3.893014499135116*^9}, {
   3.893014551885273*^9, 3.893014565016636*^9}, 3.893016122561097*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"534ec6f3-3445-4373-873f-bcdfb93d1e96"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575410779*^9, 3.90595348753106*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"8a5f20bf-6558-4646-81b3-4aaa19ec7bdc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "shocks", " ", "are", " ", "in", " ", "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], ")"}], 
              "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<stateVars\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                   "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
                "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<modelAssumptions\>\"", "*)"}], "\[IndentingNewLine]", 
     
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], ")"}], 
              "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<modelAssumptions\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                   "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
                "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<exogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], ")"}], 
              "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<exogenousEq\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                   "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
                "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<endogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], ")"}], 
              "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<endogenousEq\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                   "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
                "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}], 
    "\[IndentingNewLine]", "}"}]}]}]], "Input",
 CellChangeTimes->{
  3.893001499960679*^9, {3.893002667440094*^9, 3.89300269939427*^9}, {
   3.893003083367228*^9, 3.893003083692607*^9}, {3.8930042730060863`*^9, 
   3.893004273989354*^9}, {3.893012064247108*^9, 3.8930120867411222`*^9}, {
   3.893014419748905*^9, 3.893014445806767*^9}, {3.893014573318915*^9, 
   3.893014592005512*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"0345d276-1ede-4d49-bc84-8f6ffb7b45d1"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9058265754145613`*^9, 3.9059534875456743`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"4ecb4727-db57-4485-9d67-f2af98456d40"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "parameters", " ", "are", " ", "in", " ", "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"(*", "\"\<parameters\>\"", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
               ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<parameters\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{"var_Symbol", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
              ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
               ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<stateVars\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{"var_Symbol", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
              ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<modelAssumptions\>\"", "*)"}], "\[IndentingNewLine]", 
     
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
               ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<modelAssumptions\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{"var_Symbol", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
              ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<exogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
               ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<exogenousEq\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{"var_Symbol", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
              ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<endogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
               ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<endogenousEq\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{"var_Symbol", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], ":>", "var"}], ",", "Infinity"}], "]"}]}], 
              ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}], 
    "\[IndentingNewLine]", "}"}]}]}]], "Input",
 CellChangeTimes->{
  3.893001501399847*^9, {3.893002703969759*^9, 3.893002740019191*^9}, {
   3.893003056880762*^9, 3.893003109272599*^9}, {3.893003787588058*^9, 
   3.893003788104986*^9}, {3.893004274886281*^9, 3.893004277331174*^9}, {
   3.893012058196281*^9, 3.893012058639546*^9}, {3.8930144234979*^9, 
   3.8930144532880163`*^9}, {3.8930146005691023`*^9, 3.893014621517111*^9}, 
   3.893016128067835*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"c15b2752-0fa5-4e0d-b1ab-0c8175dd4505"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9058265754250193`*^9, 3.905953487559404*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"0fd34fac-4430-4a8f-854c-ae74ad9c82af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "endogenous", " ", "variables", " ", "are", " ", "in", " ", 
    "context", " ", 
    "\"\<FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\>\""}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\"\<modelAssumptions\>\"", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\>\
\""}], ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<modelAssumptions\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", 
                 "Infinity"}], "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<endogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "#", "===", 
                "\"\<FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\>\
\""}], ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"Context", "/@", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<endogenousEq\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"var_Symbol", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                    ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", 
                 "Infinity"}], "]"}]}], ")"}]}], ")"}]}], ")"}], "&"}], "/@", 
        
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}], 
    "\[IndentingNewLine]", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.8930122537493258`*^9, 3.893012300221422*^9}, {
  3.893014429011052*^9, 3.893014460982974*^9}, {3.893014634019079*^9, 
  3.893014636342099*^9}, {3.893014692448086*^9, 3.89301469383664*^9}, {
  3.893014770636636*^9, 3.893014779588964*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"7b9a7110-6fcf-4036-b444-4addeb8c2186"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575443717*^9, 3.9059534876183968`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"692cfbe5-a80f-42a0-a27a-ce91200b7b74"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"all", " ", "coefficients", " ", "of", " ", "wc"}], ",", " ", 
    "pd", ",", " ", 
    RowBox[{
    "bond", " ", "ratios", " ", "are", " ", "in", " ", "context", " ", 
     "\"\<FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\>\""}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"coefs", "=", 
     RowBox[{"Alternatives", "@@", 
      RowBox[{"SymbolName", "/@", 
       RowBox[{"{", 
        RowBox[{
        "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefwc", ",", 
         RowBox[{
         "Head", "@", 
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefpd"}], 
         ",", 
         RowBox[{
         "Head", "@", 
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefb"}], 
         ",", 
         RowBox[{
         "Head", "@", 
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`coefnb"}]}], 
        "}"}]}]}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
        "#", "===", 
         "\"\<FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`\>\""}], 
        ")"}], "&"}], "/@", 
      RowBox[{"Flatten", "@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"modelsP", "[", "#", "]"}], "[", 
             "\"\<modelAssumptions\>\"", "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"var_Symbol", "?", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"MatchQ", "[", 
                   RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", "coefs"}], 
                   "]"}], "&"}], ")"}]}], "|", 
               RowBox[{
                RowBox[{"var_Symbol", "?", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", "coefs"}], 
                    "]"}], "&"}], ")"}]}], "[", "__", "]"}]}], ")"}], ":>", 
             RowBox[{"Context", "[", "var", "]"}]}], ",", "Infinity"}], "]"}],
           "&"}], "/@", 
         RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.893012389695546*^9, 3.893012429793953*^9}, {
  3.893012999712995*^9, 3.893013013257292*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"1ab266c5-0090-45e7-9943-52d59a261191"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575447743*^9, 3.905953487623114*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"bbd06c3d-f7b8-421d-aad7-00345985c14e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "should", " ", "not", " ", "have", " ", "any", " ", "endogenous", " ", 
    "variables"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\"\<stateVars\>\"", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{
           RowBox[{"{", "}"}], ",", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
              "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"var_Symbol", "?", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"MemberQ", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                 ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
            "]"}], "&"}], "/@", 
          RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "\"\<exogenousEq\>\"", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{
           RowBox[{"{", "}"}], ",", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<exogenousEq\>\"", 
              "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"var_Symbol", "?", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"MemberQ", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                 ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
            "]"}], "&"}], "/@", 
          RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}]}], 
    "\[IndentingNewLine]", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.89300111387222*^9, 3.8930011727459707`*^9}, {
   3.893001247830225*^9, 3.893001299678648*^9}, {3.893001353751255*^9, 
   3.8930015072417727`*^9}, {3.893002707727394*^9, 3.893002708411419*^9}, {
   3.893002748062245*^9, 3.893002826831513*^9}, 3.89300297523416*^9, {
   3.893003086535989*^9, 3.893003086763905*^9}, {3.8930042788551702`*^9, 
   3.893004279626916*^9}, {3.8930147061742983`*^9, 3.8930147624521227`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"15557545-9517-4d8e-be17-18fad593c1c8"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575460981*^9, 3.9059534876412277`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"43e3e1cb-8585-419c-a120-5758d394406e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "keys", " ", "and", " ", "shortname", " ", "are", " ", "preserved"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"SubsetQ", "[", 
      RowBox[{
       RowBox[{"Keys", "[", "models", "]"}], ",", 
       RowBox[{"Keys", "[", "modelsP", "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"SubsetQ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"models", "[", "#", "]"}], "[", "\"\<shortname\>\"", "]"}], 
         "&"}], "/@", 
        RowBox[{"Keys", "[", "models", "]"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<shortname\>\"", "]"}],
          "&"}], "/@", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.89301161589116*^9, 3.893011697195755*^9}, 
   3.893144709678164*^9, 3.893144758132229*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"cd064082-f805-44ec-a045-aa1fa3aceeba"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575464373*^9, 3.9059534876461763`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"4e82be8d-f2a6-427e-9606-5969ebfe1f46"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "stateVars", " ", "are", " ", "functions", " ", "of", " ", "one", " ", 
    "variable", " ", 
    RowBox[{"(", "time", ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{"Function", ",", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"Head", "/@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
               "]"}], ")"}], "&"}], "/@", 
            RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
       ")"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{"List", ",", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"Head", "/@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
                "]"}], "[", "t", "]"}], ")"}], "&"}], "/@", 
            RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
       ")"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{"1", ",", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"Length", "/@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
                "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ")"}], "&"}], "/@", 
            RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
       ")"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{"\"\<t\>\"", ",", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"SymbolName", "@@", 
             RowBox[{
              RowBox[{
               RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
               "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "&"}], "/@", 
          RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "evaluating", " ", "the", " ", "function", " ", "at", " ", 
       "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t", " ", "gives",
        " ", "the", " ", "same", " ", "as", " ", "\"\<stateVars\>\"", " ", 
       "in", " ", "models"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<stateVars\>\"", 
            "]"}], "[", 
           "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`t", "]"}], 
          ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}], "===", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"models", "[", "#", "]"}], "[", "\"\<stateVars\>\"", "]"}],
           ")"}], "&"}], "/@", 
        RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}]}], 
    "\[IndentingNewLine]", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.893011149678734*^9, 3.893011151120873*^9}, {
   3.893011197672791*^9, 3.893011393092401*^9}, {3.8930114244175577`*^9, 
   3.893011594633165*^9}, {3.893011701053651*^9, 3.89301170872368*^9}, {
   3.8930117913212442`*^9, 3.893011831744893*^9}, 3.893013045538563*^9, 
   3.893144850494865*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"5ef11f51-f78f-4db1-8add-279c869573f2"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575476613*^9, 3.905953487656929*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"d3c27b62-caa4-4ced-9d54-d2c8cdecee1d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"numStocks", " ", "is", " ", "a", " ", "number"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{"NumberQ", "/@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"modelsP", "[", "#", "]"}], "[", "\"\<numStocks\>\"", "]"}], 
        "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{"Keys", "@", "modelsP"}], ")"}]}], ")"}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.893011853833601*^9, 3.893011940133402*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"488002c0-cddc-467b-bc55-ab11b4063392"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575479951*^9, 3.905953487661829*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"75dc6f57-0950-4179-90bb-b417ea1b638e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"compare", " ", "to", " ", "some", " ", "hand"}], "-", 
    RowBox[{
    "written", " ", "expressions", " ", "known", " ", "to", " ", "be", " ", 
     "correct"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"model", "=", 
     RowBox[{"modelsP", "[", "\"\<NRC\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"pi", "[", "myContext`t", "]"}], "/.", 
         RowBox[{"Normal", "@", 
          RowBox[{"model", "[", "\"\<exogenousEq\>\"", "]"}]}]}], ")"}], "===", 
       RowBox[{"(", 
        RowBox[{"FernandoDuarte`LongRunRisk`Model`Parameters`mup", "+", 
         RowBox[{"FernandoDuarte`LongRunRisk`Model`Parameters`rhop", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "FernandoDuarte`LongRunRisk`Model`Parameters`mup"}], 
            "+", 
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi", "[", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "myContext`t"}], "]"}]}], ")"}]}], "+", 
         RowBox[{"FernandoDuarte`LongRunRisk`Model`Parameters`xip", " ", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<pi\>\"", 
            "]"}], "[", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "myContext`t"}], "]"}]}], "+", 
         RowBox[{"FernandoDuarte`LongRunRisk`Model`Parameters`phip", " ", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<pi\>\"", 
            "]"}], "[", "myContext`t", "]"}]}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"eps", "[", "\"\<dc\>\"", "]"}], "[", "t", "]"}], "/.", 
         RowBox[{"model", "[", "\"\<exogenousEq\>\"", "]"}]}], ")"}], "===", 
       RowBox[{
        RowBox[{"eps", "[", "\"\<dc\>\"", "]"}], "[", "t", "]"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"dd", "[", 
          RowBox[{"t", ",", "i"}], "]"}], "/.", 
         RowBox[{"Normal", "@", 
          RowBox[{"model", "[", "\"\<exogenousEq\>\"", "]"}]}]}], ")"}], "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
         "FernandoDuarte`LongRunRisk`Model`Parameters`mud", "[", "i", "]"}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "FernandoDuarte`LongRunRisk`Model`Parameters`mup"}], 
            "+", 
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi", "[", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "t"}], "]"}]}], ")"}], " ", 
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`Parameters`rhodp", "[", "i", 
           "]"}]}], "+", 
         RowBox[{
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`Parameters`phidc", "[", "i", 
           "]"}], " ", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<dc\>\"", 
            "]"}], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg", "[", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "t"}], "]"}], " ", 
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`Parameters`xid", "[", "i", "]"}], 
          " ", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<pi\>\"", 
            "]"}], "[", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "t"}], "]"}]}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"wc", "[", "t", "]"}], "/.", 
         RowBox[{"Normal", "@", 
          RowBox[{"model", "[", "\"\<endogenousEq\>\"", "]"}]}]}], ")"}], "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
         "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A", "[", "0", 
          "]"}], "+", 
         RowBox[{
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A", "[", "1",
            "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "FernandoDuarte`LongRunRisk`Model`Parameters`mup"}], 
            "+", 
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi", "[", 
             "t", "]"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A", "[", "4",
            "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "FernandoDuarte`LongRunRisk`Model`Parameters`Esg"}], 
            "+", 
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg", "[", 
             "t", "]"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A", "[", "5",
            "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             
             SuperscriptBox["FernandoDuarte`LongRunRisk`Model`Parameters`Esg",
               "2"]}], "-", 
            FractionBox[
             
             SuperscriptBox[
              "FernandoDuarte`LongRunRisk`Model`Parameters`phig", "2"], 
             RowBox[{"1", "-", 
              
              SuperscriptBox[
               "FernandoDuarte`LongRunRisk`Model`Parameters`rhog", "2"]}]], 
            "+", 
            SuperscriptBox[
             RowBox[{
             "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg", "[", 
              "t", "]"}], "2"]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A", "[", "3",
            "]"}], " ", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<pi\>\"", 
            "]"}], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`A", "[", "2",
            "]"}], " ", 
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg", "[", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "t"}], "]"}], " ", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<pi\>\"", 
            "]"}], "[", "t", "]"}]}]}], ")"}]}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"pd", "[", 
          RowBox[{"t", ",", "i"}], "]"}], "/.", 
         RowBox[{"Normal", "@", 
          RowBox[{"model", "[", "\"\<endogenousEq\>\"", "]"}]}]}], ")"}], "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B", "[", "i",
            "]"}], "[", "0", "]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "FernandoDuarte`LongRunRisk`Model`Parameters`mup"}], 
            "+", 
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`pi", "[", 
             "t", "]"}]}], ")"}], " ", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B", "[", 
            "i", "]"}], "[", "1", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "FernandoDuarte`LongRunRisk`Model`Parameters`Esg"}], 
            "+", 
            RowBox[{
            "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg", "[", 
             "t", "]"}]}], ")"}], " ", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B", "[", 
            "i", "]"}], "[", "4", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             
             SuperscriptBox["FernandoDuarte`LongRunRisk`Model`Parameters`Esg",
               "2"]}], "-", 
            FractionBox[
             
             SuperscriptBox[
              "FernandoDuarte`LongRunRisk`Model`Parameters`phig", "2"], 
             RowBox[{"1", "-", 
              
              SuperscriptBox[
               "FernandoDuarte`LongRunRisk`Model`Parameters`rhog", "2"]}]], 
            "+", 
            SuperscriptBox[
             RowBox[{
             "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg", "[", 
              "t", "]"}], "2"]}], ")"}], " ", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B", "[", 
            "i", "]"}], "[", "5", "]"}]}], "+", 
         RowBox[{
          RowBox[{
          "FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`sg", "[", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "t"}], "]"}], " ", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B", "[", 
            "i", "]"}], "[", "2", "]"}], " ", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<pi\>\"", 
            "]"}], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`B", "[", 
            "i", "]"}], "[", "3", "]"}], " ", 
          RowBox[{
           RowBox[{
           "FernandoDuarte`LongRunRisk`Model`Shocks`eps", "[", "\"\<pi\>\"", 
            "]"}], "[", "t", "]"}]}]}], ")"}]}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"bondexcret", "[", 
          RowBox[{"t", ",", "i"}], "]"}], "/.", 
         RowBox[{"Normal", "@", 
          RowBox[{"model", "[", "\"\<endogenousEq\>\"", "]"}]}]}], ")"}], "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
         "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondret", "[", 
          RowBox[{"t", ",", "i", ",", "1"}], "]"}], "-", 
         RowBox[{
         "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bondyield", 
          "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "+", "t"}], ",", "1"}], "]"}]}], ")"}]}], ",",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"bondexcret", "[", 
           RowBox[{"t", ",", "i"}], "]"}], "/.", 
          RowBox[{"Normal", "@", 
           RowBox[{"model", "[", "\"\<endogenousEq\>\"", "]"}]}]}], "/.", 
         RowBox[{"Normal", "@", 
          RowBox[{"model", "[", "\"\<endogenousEq\>\"", "]"}]}]}], ")"}], "===", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
         "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "+", "t"}], ",", "1"}], "]"}], "-", 
         RowBox[{
         "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "+", "t"}], ",", "i"}], "]"}], "+", 
         RowBox[{
         "FernandoDuarte`LongRunRisk`Model`EndogenousEq`Private`bond", "[", 
          RowBox[{"t", ",", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "i"}]}], "]"}]}], ")"}]}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.893013112707829*^9, 3.8930131579451036`*^9}, {
   3.89301319949829*^9, 3.8930132312916937`*^9}, {3.893014937931109*^9, 
   3.893015014205209*^9}, {3.8930150778885803`*^9, 3.893015081667938*^9}, 
   3.8930161054031553`*^9, 3.893016326710898*^9, {3.893016391754463*^9, 
   3.893016409333332*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"1e137b4c-2ecb-4bf4-991e-502dc176baf0"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9058265754945383`*^9, 3.905953487674622*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"7241634c-e1dd-4dac-9872-c72d58cc9338"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
    "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "no", " ", 
    "endogenous", " ", "variables"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"And", "@@", 
      RowBox[{"(", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{
           RowBox[{"{", "}"}], ",", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"wc", "[", "t", "]"}], "//.", 
              RowBox[{"Normal", "@", 
               RowBox[{
                RowBox[{"modelsP", "[", "#", "]"}], "[", 
                "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"var_Symbol", "?", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"MemberQ", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                 ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
            "]"}], "&"}], "/@", 
          RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], 
       "\[IndentingNewLine]", ")"}]}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
       "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "exogenous", 
       " ", "variables", " ", "that", " ", "are", " ", "all", " ", "in", " ", 
       "context", " ", 
       "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{
          "#", ",", 
           "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
          "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"Flatten", "@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"wc", "[", "t", "]"}], "//.", 
                RowBox[{"Normal", "@", 
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"var_Symbol", "?", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                   ")"}]}], "[", "__", "]"}], ":>", 
                RowBox[{"Context", "@", "var"}]}], ",", "Infinity"}], "]"}], 
             "&"}], "/@", 
            RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
       ")"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
       "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "parameters", 
       " ", "that", " ", "are", " ", "all", " ", "in", " ", "context", " ", 
       "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{
          "#", ",", "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
          "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"Flatten", "@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"wc", "[", "t", "]"}], "//.", 
                RowBox[{"Normal", "@", 
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{"var_Symbol", "?", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                  ")"}]}], ":>", 
                RowBox[{"Context", "@", "var"}]}], ",", "Infinity"}], "]"}], 
             "&"}], "/@", 
            RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
       ")"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
       "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "shocks", " ", 
       "that", " ", "are", " ", "all", " ", "in", " ", "context", " ", 
       "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{
          "#", ",", "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], 
          "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"Flatten", "@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"wc", "[", "t", "]"}], "//.", 
                RowBox[{"Normal", "@", 
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"var_Symbol", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                 "[", "__", "]"}], ":>", 
                RowBox[{"Context", "@", "var"}]}], ",", "Infinity"}], "]"}], 
             "&"}], "/@", 
            RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
       ")"}]}]}], "\[IndentingNewLine]", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.893013644050221*^9, 3.8930136594716587`*^9}, {
  3.893013788159135*^9, 3.8930139106431017`*^9}, {3.89301401209753*^9, 
  3.893014103933299*^9}, {3.893014148442313*^9, 3.8930142719501123`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"9228741c-bdf9-4027-a094-b007a53b75d5"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575506809*^9, 3.905953487702745*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"45a3d78c-cda7-4a50-92f7-dd09ec1db251"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
    "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "no", " ", 
    "endogenous", " ", "variables"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"And", "@@", 
      RowBox[{"(", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{
           RowBox[{"{", "}"}], ",", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"bondexcret", "[", 
               RowBox[{"t", ",", "i"}], "]"}], "//.", 
              RowBox[{"Normal", "@", 
               RowBox[{
                RowBox[{"modelsP", "[", "#", "]"}], "[", 
                "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"var_Symbol", "?", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"MemberQ", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`EndogenousEq`$\
endogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                 ")"}]}], "[", "__", "]"}], ":>", "var"}], ",", "Infinity"}], 
            "]"}], "&"}], "/@", 
          RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], 
       "\[IndentingNewLine]", ")"}]}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
       "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "exogenous", 
       " ", "variables", " ", "that", " ", "are", " ", "all", " ", "in", " ", 
       "context", " ", 
       "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{
          "#", ",", 
           "\"\<FernandoDuarte`LongRunRisk`Model`ExogenousEq`Private`\>\""}], 
          "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"Flatten", "@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"bondexcret", "[", 
                 RowBox[{"t", ",", "i"}], "]"}], "//.", 
                RowBox[{"Normal", "@", 
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"var_Symbol", "?", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", 
                    "FernandoDuarte`LongRunRisk`Model`ExogenousEq`$\
exogenousVars"}], ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                   ")"}]}], "[", "__", "]"}], ":>", 
                RowBox[{"Context", "@", "var"}]}], ",", "Infinity"}], "]"}], 
             "&"}], "/@", 
            RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
       ")"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
       "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "parameters", 
       " ", "that", " ", "are", " ", "all", " ", "in", " ", "context", " ", 
       "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{
          "#", ",", "\"\<FernandoDuarte`LongRunRisk`Model`Parameters`\>\""}], 
          "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"Flatten", "@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"bondexcret", "[", 
                 RowBox[{"t", ",", "i"}], "]"}], "//.", 
                RowBox[{"Normal", "@", 
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{"var_Symbol", "?", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "FernandoDuarte`LongRunRisk`Model`Parameters`$parameters",
                     ",", 
                    RowBox[{"SymbolName", "[", "#", "]"}]}], "]"}], "&"}], 
                  ")"}]}], ":>", 
                RowBox[{"Context", "@", "var"}]}], ",", "Infinity"}], "]"}], 
             "&"}], "/@", 
            RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
       ")"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "endogenous", " ", "variables", " ", "mapped", " ", "repeatedly", " ", 
       "using", " ", "\"\<endogenousEq\>\"", " ", "has", " ", "shocks", " ", 
       "that", " ", "are", " ", "all", " ", "in", " ", "context", " ", 
       "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{
          "#", ",", "\"\<FernandoDuarte`LongRunRisk`Model`Shocks`\>\""}], 
          "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"Flatten", "@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"bondexcret", "[", 
                 RowBox[{"t", ",", "i"}], "]"}], "//.", 
                RowBox[{"Normal", "@", 
                 RowBox[{
                  RowBox[{"modelsP", "[", "#", "]"}], "[", 
                  "\"\<endogenousEq\>\"", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"var_Symbol", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#", "]"}], ",", 
                    "\"\<eps\>\""}], "]"}], "&"}], ")"}]}], "[", "__", "]"}], 
                 "[", "__", "]"}], ":>", 
                RowBox[{"Context", "@", "var"}]}], ",", "Infinity"}], "]"}], 
             "&"}], "/@", 
            RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], 
       ")"}]}]}], "\[IndentingNewLine]", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.893013644050221*^9, 3.8930136594716587`*^9}, {
  3.893013788159135*^9, 3.8930139106431017`*^9}, {3.89301401209753*^9, 
  3.893014103933299*^9}, {3.893014148442313*^9, 3.893014235255294*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"f26d2032-c2da-40bd-bfb1-8e2c7187a48f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575543051*^9, 3.905953487796034*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"d17135f0-f40c-4adb-ab4b-159fd2b13ac4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"AllTrue", "[", 
  RowBox[{
   RowBox[{"Head", "/@", 
    RowBox[{"(", 
     RowBox[{"Keys", "@", 
      RowBox[{
       RowBox[{"modelsP", "[", "\"\<BKY\>\"", "]"}], "[", 
       "\"\<exogenousEq\>\"", "]"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"MatchQ", "[", 
     RowBox[{"#", ",", "PatternTest"}], "]"}], "&"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"AllTrue", "[", 
  RowBox[{
   RowBox[{"Head", "/@", 
    RowBox[{"(", 
     RowBox[{"Keys", "@", 
      RowBox[{
       RowBox[{"modelsP", "[", "\"\<BKY\>\"", "]"}], "[", 
       "\"\<endogenousEq\>\"", "]"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"MatchQ", "[", 
     RowBox[{"#", ",", "PatternTest"}], "]"}], "&"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.891157496969887*^9, 3.891157544107942*^9}, {
  3.8929829100824947`*^9, 3.89298291390197*^9}, {3.892982949507678*^9, 
  3.8929829531624527`*^9}, {3.893016267044709*^9, 3.8930162995723467`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"cd8b1760-536a-488f-9246-597cbd161a39"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575547143*^9, 3.905953487800913*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"27f5d565-d787-42ad-a194-2bd844b648f8"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.905826575547143*^9, 3.905953487801683*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"0f91733e-3251-4c7f-8904-89e29d4548f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "exogenousEq", " ", "and", " ", "endogenousEq", " ", "evaluate", " ", 
    "expressions", " ", "that", " ", "are", " ", "exogenous", " ", "or", " ", 
    "endogenous", " ", "variables"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{"Not", "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{"dc", "[", "t", "]"}], "]"}], "===", 
             RowBox[{"Head", "[", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"dc", "[", "t", "]"}], "/.", 
                RowBox[{"Normal", "[", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<exogenousEq\>\"", "]"}], ",", 
                   RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<endogenousEq\>\"", "]"}]}], "]"}], "]"}]}], ")"}], 
              "]"}]}], ")"}], "&"}], "/@", 
          RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{"Not", "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{"dd", "[", 
               RowBox[{"t", ",", "i"}], "]"}], "]"}], "===", 
             RowBox[{"Head", "[", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"dd", "[", 
                 RowBox[{"t", ",", "i"}], "]"}], "/.", 
                RowBox[{"Normal", "[", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<exogenousEq\>\"", "]"}], ",", 
                   RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<endogenousEq\>\"", "]"}]}], "]"}], "]"}]}], ")"}], 
              "]"}]}], ")"}], "&"}], "/@", 
          RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{"Not", "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{"wc", "[", "t", "]"}], "]"}], "===", 
             RowBox[{"Head", "[", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"wc", "[", "t", "]"}], "/.", 
                RowBox[{"Normal", "[", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<exogenousEq\>\"", "]"}], ",", 
                   RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<endogenousEq\>\"", "]"}]}], "]"}], "]"}]}], ")"}], 
              "]"}]}], ")"}], "&"}], "/@", 
          RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{"Not", "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{"sdf", "[", "t", "]"}], "]"}], "===", 
             RowBox[{"Head", "[", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"sdf", "[", "t", "]"}], "/.", 
                RowBox[{"Normal", "[", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<exogenousEq\>\"", "]"}], ",", 
                   RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<endogenousEq\>\"", "]"}]}], "]"}], "]"}]}], ")"}], 
              "]"}]}], ")"}], "&"}], "/@", 
          RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{"Not", "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{"bondyield", "[", "t", "]"}], "]"}], "===", 
             RowBox[{"Head", "[", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"bondyield", "[", "t", "]"}], "/.", 
                RowBox[{"Normal", "[", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<exogenousEq\>\"", "]"}], ",", 
                   RowBox[{
                    RowBox[{"modelsP", "[", "#", "]"}], "[", 
                    "\"\<endogenousEq\>\"", "]"}]}], "]"}], "]"}]}], ")"}], 
              "]"}]}], ")"}], "&"}], "/@", 
          RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], ")"}]}]}], 
    "\[IndentingNewLine]", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.89301559217407*^9, 3.893015822830755*^9}, {
   3.89301600860408*^9, 3.893016031968368*^9}, 3.893016149396062*^9, 
   3.8931449612563457`*^9},
 CellLabel->"In[40]:=",ExpressionUUID->"b0ba81ee-3f3e-4642-a9d2-b012835fd8f5"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9058265755600157`*^9, 3.905953487813985*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"44142228-1a3c-4a7c-8aec-f3d8599a3866"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "exogenousEq", " ", "and", " ", "endogenousEq", " ", "do", " ", "not", " ",
     "evaluate", " ", "expressions", " ", "that", " ", "are", " ", "neither", 
    " ", "exogenous", " ", "nor", " ", "endogenous", " ", "variables"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"And", "@@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Head", "[", 
           RowBox[{"notVar", "[", "t", "]"}], "]"}], "===", 
          RowBox[{"Head", "[", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"notVar", "[", "t", "]"}], "/.", 
             RowBox[{"Normal", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"modelsP", "[", "#", "]"}], "[", 
                 "\"\<exogenousEq\>\"", "]"}], ",", 
                RowBox[{
                 RowBox[{"modelsP", "[", "#", "]"}], "[", 
                 "\"\<endogenousEq\>\"", "]"}]}], "]"}], "]"}]}], ")"}], 
           "]"}]}], ")"}], "&"}], "/@", 
       RowBox[{"Keys", "[", "modelsP", "]"}]}], ")"}]}], 
    "\[IndentingNewLine]", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.893015849081943*^9, 3.8930158504172277`*^9}, 
   3.893016091706109*^9},
 CellLabel->"In[41]:=",ExpressionUUID->"9400811d-ec42-4264-98c2-5f9d866e0a9d"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.90582657556355*^9, 3.905953487819466*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"2cb80629-921b-4ecf-b2be-b172cb87ca76"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "shortname", " ", "different", " ", "from", " ", "model", " ", "key"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"modelBY", "=", 
     RowBox[{"models", "[", "\"\<BY\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modelBKY", "=", 
     RowBox[{"models", "[", "\"\<BKY\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modelBKYP", "=", 
     RowBox[{"processModels", "[", 
      RowBox[{"<|", 
       RowBox[{"\"\<BKY\>\"", "->", "modelBKY"}], "|>"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modelBYP", "=", 
     RowBox[{"processModels", "[", 
      RowBox[{"<|", 
       RowBox[{"\"\<BY\>\"", "->", "modelBY"}], "|>"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"newModels", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<myModel\>\"", "->", "modelBKY"}], ",", 
       RowBox[{"\"\<BY\>\"", "->", "modelBY"}]}], "|>"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"newModelsSameName", "=", 
     RowBox[{"<|", 
      RowBox[{"\"\<BY\>\"", "->", "modelBY"}], "|>"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"newModelsRename", "=", 
     RowBox[{"<|", 
      RowBox[{"\"\<myModel\>\"", "->", "modelBY"}], "|>"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"newModelsP", "=", 
     RowBox[{"processModels", "[", "newModels", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"newModelsSameNameP", "=", 
     RowBox[{"processModels", "[", "newModelsSameName", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"newModelsRenameP", "=", 
     RowBox[{"processModels", "[", "newModelsRename", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"And", "@@", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"KeyDrop", "[", 
            RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}], "&"}], "@", 
          RowBox[{"newModelsP", "[", "\"\<myModel\>\"", "]"}]}], "===", 
         RowBox[{"KeyDrop", "[", 
          RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}]}], "&"}], "@", 
       RowBox[{"modelBKYP", "[", "\"\<BKY\>\"", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"KeyDrop", "[", 
            RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}], "&"}], "@", 
          RowBox[{"newModelsP", "[", "\"\<BY\>\"", "]"}]}], "===", 
         RowBox[{"KeyDrop", "[", 
          RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}]}], "&"}], "@", 
       RowBox[{"modelBYP", "[", "\"\<BY\>\"", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"KeyDrop", "[", 
            RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}], "&"}], "@", 
          RowBox[{"newModelsSameNameP", "[", "\"\<BY\>\"", "]"}]}], "===", 
         RowBox[{"KeyDrop", "[", 
          RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}]}], "&"}], "@", 
       RowBox[{"modelBYP", "[", "\"\<BY\>\"", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"KeyDrop", "[", 
            RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}], "&"}], "@", 
          RowBox[{"newModelsRenameP", "[", "\"\<myModel\>\"", "]"}]}], "===", 
         
         RowBox[{"KeyDrop", "[", 
          RowBox[{"#", ",", "\"\<coeffsSolution\>\""}], "]"}]}], "&"}], "@", 
       RowBox[{"modelBYP", "[", "\"\<BY\>\"", "]"}]}]}], 
     "\[IndentingNewLine]", "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8912512942103243`*^9, 3.8912513055502443`*^9}, {
   3.8912513517340593`*^9, 3.891251461543272*^9}, {3.891251500422112*^9, 
   3.891251525384585*^9}, 3.891251633145433*^9, {3.891251727184629*^9, 
   3.8912517398515368`*^9}, {3.89125184158985*^9, 3.891251848736774*^9}, {
   3.891252152348381*^9, 3.891252165553775*^9}, 3.892982996244417*^9, 
   3.893016163280417*^9, 3.893145167358938*^9, 3.893145254752489*^9, 
   3.89480217485483*^9, {3.8948027745066357`*^9, 3.894802832466658*^9}, {
   3.8948029030451307`*^9, 3.8948029093631897`*^9}, {3.894803218803307*^9, 
   3.8948032260346603`*^9}, {3.8948032639753523`*^9, 3.894803269943624*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"876ead52-65a8-42a3-aa99-574711040d84"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9058265919078503`*^9, 3.905953503617415*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"f9ccfc2d-e45d-4eeb-abdb-2d25a8f22483"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "numeric", " ", "solution", " ", "for", " ", "coefficients", " ", "only", 
    " ", "has", " ", "numbers"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"Flatten", "@", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"And", "@@", 
         RowBox[{"(", 
          RowBox[{"NumberQ", "/@", 
           RowBox[{"(", 
            RowBox[{"Values", "@", 
             RowBox[{
              RowBox[{"modelsP", "[", "#", "]"}], "[", 
              "\"\<coeffsSolutionN\>\"", "]"}]}], ")"}]}], ")"}]}], ")"}], 
       "&"}], "/@", 
      RowBox[{"Keys", "[", "modelsP", "]"}]}], "\[IndentingNewLine]", 
     "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9059441975944653`*^9, 3.905944203055931*^9}, {
  3.905951953505707*^9, 3.905951989493725*^9}, {3.905953457264773*^9, 
  3.905953459094884*^9}, {3.905953644719407*^9, 3.9059536464374743`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"dd8b6b29-022c-49cd-bdf4-0d71b1e1179a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.905953503672558*^9, {3.905953638211501*^9, 3.905953647022832*^9}},
 CellLabel->"Out[56]=",ExpressionUUID->"92e01920-4709-42b1-a011-d32f108b2e22"]
}, Closed]]
},
CellGrouping->Manual,
WindowSize->{958, 942},
WindowMargins->{{Automatic, 438}, {Automatic, 0}},
WindowStatusArea->"",
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.25 Inherited,
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"8c85f702-113c-487a-8dec-6eaf60825603"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 215, 4, 37, "Input",ExpressionUUID->"2d530782-807c-4677-ac15-0a1524d3eb66"],
Cell[776, 26, 1924, 41, 194, "Input",ExpressionUUID->"0360f784-d335-43f3-8e4d-2bba830763e2"],
Cell[CellGroupData[{
Cell[2725, 71, 255, 4, 67, "Subsection",ExpressionUUID->"31e1b2df-6c38-4738-ae7d-157759dc5a90"],
Cell[2983, 77, 341, 9, 37, "Input",ExpressionUUID->"464119fe-5b46-4abb-930f-1de6d0c0c7ec"],
Cell[CellGroupData[{
Cell[3349, 90, 895, 15, 64, "Input",ExpressionUUID->"c66ba99e-d8d1-4f03-a4ff-e02a4a612fbe"],
Cell[4247, 107, 320, 5, 42, "Output",ExpressionUUID->"417eb9a6-a68f-41a0-89d1-556ad3fbbbd3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4604, 117, 278, 4, 37, "Input",ExpressionUUID->"e0c56802-23a4-4683-930d-2f72f95927a4"],
Cell[4885, 123, 295, 4, 42, "Output",ExpressionUUID->"4d64f0a6-ad1d-4c62-9ebb-f9f80b83bb31"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5217, 132, 700, 14, 142, "Input",ExpressionUUID->"f63dce30-27eb-49ce-8e70-e4b45708bdbc"],
Cell[5920, 148, 472, 10, 29, "Print",ExpressionUUID->"0d7ecb34-fd99-4597-b07f-ebbe4aa68d87"],
Cell[6395, 160, 363, 6, 29, "Print",ExpressionUUID->"eb67c5f1-4ae5-43b2-9bc4-2e9d4b025461"],
Cell[6761, 168, 4928, 88, 69, "Output",ExpressionUUID->"69b957b7-844a-438d-baf9-62b2dc054c3c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11726, 261, 2119, 35, 142, "Input",ExpressionUUID->"df3441c2-82a3-4dc6-ae55-72fe028a7826"],
Cell[13848, 298, 495, 11, 29, "Print",ExpressionUUID->"20427e19-5c88-4028-834f-d229d0d9d657"],
Cell[14346, 311, 388, 7, 29, "Print",ExpressionUUID->"910c0641-2785-4f64-8cbc-510de59abe0c"],
Cell[14737, 320, 5448, 98, 69, "Output",ExpressionUUID->"d20afb39-4389-498f-95c9-8b775fd1dc1a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20222, 423, 1480, 30, 116, "Input",ExpressionUUID->"37a69960-4a4b-47f2-bed8-e68905e00bd9"],
Cell[21705, 455, 497, 11, 29, "Print",ExpressionUUID->"36ff8f2d-7105-4f28-ad32-b7af14e609b3"],
Cell[22205, 468, 386, 7, 29, "Print",ExpressionUUID->"9f39a39e-8d5c-4177-8550-a7fa4b47a83c"],
Cell[22594, 477, 5835, 104, 69, "Output",ExpressionUUID->"7040fbd4-464c-4b42-9563-78866ee61fc1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28466, 586, 1313, 29, 116, "Input",ExpressionUUID->"78efcfa0-e9fa-47a2-9b51-782cbea2e41b"],
Cell[29782, 617, 499, 11, 29, "Print",ExpressionUUID->"2c5d2f68-48eb-42ba-9b1c-a4a72ef15d21"],
Cell[30284, 630, 390, 7, 29, "Print",ExpressionUUID->"3745a0a4-1e28-4c8b-8b06-0949b12fe8fc"],
Cell[30677, 639, 5887, 104, 69, "Output",ExpressionUUID->"45ac0427-2c54-49d4-9cd4-210107e863f0"]
}, Open  ]],
Cell[36579, 746, 447, 12, 37, "Input",ExpressionUUID->"cb607e00-5967-477a-8aac-14f80aff48c4"],
Cell[CellGroupData[{
Cell[37051, 762, 2046, 43, 324, "Input",ExpressionUUID->"0c1d9ae2-0329-4b69-96aa-5f6aff9fa9f6"],
Cell[39100, 807, 497, 11, 29, "Print",ExpressionUUID->"2969b507-414d-41f7-b765-1060cb6a4ef6"],
Cell[39600, 820, 385, 7, 29, "Print",ExpressionUUID->"4ad110a6-cbd0-4cc3-82ad-106178fce2af"],
Cell[39988, 829, 7711, 135, 69, "Output",ExpressionUUID->"d1c4d165-b92b-4ecd-bbb1-f9b99db75fc6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47736, 969, 849, 19, 116, "Input",ExpressionUUID->"d64570f0-6c89-4079-b190-d3b7918e15ff"],
Cell[48588, 990, 491, 11, 29, "Print",ExpressionUUID->"f52abf31-62e5-47b1-afac-9d8300b826a8"],
Cell[49082, 1003, 384, 7, 29, "Print",ExpressionUUID->"99b61837-9353-47cd-8a64-dada383f1430"],
Cell[49469, 1012, 6516, 114, 69, "Output",ExpressionUUID->"aa2b7d10-3383-4e3e-b75e-fdf51766abd3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56022, 1131, 1794, 42, 246, "Input",ExpressionUUID->"2c5d8084-fdbc-4107-ac9f-d8d95c9c2236"],
Cell[57819, 1175, 494, 11, 29, "Print",ExpressionUUID->"67198422-6d31-42b7-ab71-726b7f29fec0"],
Cell[58316, 1188, 387, 7, 29, "Print",ExpressionUUID->"7e0416be-e07b-4cb1-bc70-5d3964ff93d0"],
Cell[58706, 1197, 8517, 146, 69, "Output",ExpressionUUID->"e1535d47-076d-46a6-8ce5-6f0f35552279"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67260, 1348, 2506, 57, 402, "Input",ExpressionUUID->"ce8ab224-5505-4d6e-9748-27f603f00530"],
Cell[69769, 1407, 499, 11, 29, "Print",ExpressionUUID->"0824f9de-2f06-4106-bcfe-bac70ec52051"],
Cell[70271, 1420, 390, 7, 29, "Print",ExpressionUUID->"68da11d0-7164-4136-bd72-f7714d512161"],
Cell[70664, 1429, 10805, 182, 69, "Output",ExpressionUUID->"482399b3-f53a-4275-afbb-7b1d5e2ccf7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81506, 1616, 1583, 37, 194, "Input",ExpressionUUID->"2b15a034-f304-4f7e-9d25-63e3f1ab5487"],
Cell[83092, 1655, 503, 11, 29, "Print",ExpressionUUID->"d74320cb-2533-4422-906f-6958508285e6"],
Cell[83598, 1668, 394, 7, 29, "Print",ExpressionUUID->"4817ca8a-ea04-4581-b699-da67214e14a3"],
Cell[83995, 1677, 9245, 158, 69, "Output",ExpressionUUID->"25226de4-56ea-4a55-b1df-652392d83acc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93277, 1840, 2000, 46, 272, "Input",ExpressionUUID->"19926fe5-c4d1-4650-9995-919a3c44044f"],
Cell[95280, 1888, 499, 11, 29, "Print",ExpressionUUID->"e92eb7e7-79ce-4048-8c6a-7715bf95b5ac"],
Cell[95782, 1901, 390, 7, 29, "Print",ExpressionUUID->"f61947d7-afdf-454c-8a5a-5315b19c318e"],
Cell[96175, 1910, 10299, 173, 69, "Output",ExpressionUUID->"cd8fd47d-9456-4bdd-8d0a-a0d8ad493457"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106511, 2088, 8222, 193, 1078, "Input",ExpressionUUID->"1e140797-a692-49c2-9b2b-5f4c15874357"],
Cell[114736, 2283, 494, 11, 29, "Print",ExpressionUUID->"b0e356e7-da1d-418f-ab8e-718727b439a3"],
Cell[115233, 2296, 387, 7, 29, "Print",ExpressionUUID->"16e930b0-6582-4502-b883-5a829d552e01"],
Cell[115623, 2305, 25971, 417, 69, "Output",ExpressionUUID->"3c2ce1d3-d252-4e18-aa67-08612ad6486e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141631, 2727, 7144, 170, 948, "Input",ExpressionUUID->"87988790-43a9-4e61-8178-c645affb741e"],
Cell[148778, 2899, 499, 11, 29, "Print",ExpressionUUID->"a00add14-180b-444c-a2d0-80ae823e1f4f"],
Cell[149280, 2912, 392, 7, 29, "Print",ExpressionUUID->"939b063c-ebfd-44b4-bbdc-ce47eb9d19c9"],
Cell[149675, 2921, 26139, 407, 69, "Output",ExpressionUUID->"c401d533-fbeb-426c-ad86-c2876d06f325"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175851, 3333, 8563, 202, 1286, "Input",ExpressionUUID->"5ba1a080-37af-4559-8675-5356610aa871"],
Cell[184417, 3537, 497, 11, 29, "Print",ExpressionUUID->"590c37d8-1be7-497b-8440-c6dd75f41655"],
Cell[184917, 3550, 388, 7, 29, "Print",ExpressionUUID->"d6c50a0b-144b-4aef-81d6-5077c13d1fef"],
Cell[185308, 3559, 33276, 509, 69, "Output",ExpressionUUID->"b20bf22f-e772-470e-b3fe-5181617bbfe1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218621, 4073, 4616, 107, 740, "Input",ExpressionUUID->"ef80abef-2c56-4f05-b149-7ef948f31da2"],
Cell[223240, 4182, 498, 11, 29, "Print",ExpressionUUID->"b818bc86-56e5-4a8d-ae12-c7f8b2dc01b9"],
Cell[223741, 4195, 389, 7, 29, "Print",ExpressionUUID->"3261d793-9aec-4a58-8d1c-8315d019cc03"],
Cell[224133, 4204, 30437, 461, 69, "Output",ExpressionUUID->"7cea4cfc-fed8-4c20-8a9b-d8538035e007"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254607, 4670, 3275, 79, 585, "Input",ExpressionUUID->"81f0314f-983a-4f35-94ac-9304a10f36a3"],
Cell[257885, 4751, 496, 11, 29, "Print",ExpressionUUID->"a0965ca6-749e-4743-9b4f-dcae5aef293f"],
Cell[258384, 4764, 387, 7, 29, "Print",ExpressionUUID->"6b93948a-c2ae-4644-b13c-31087d7996eb"],
Cell[258774, 4773, 29331, 444, 69, "Output",ExpressionUUID->"e1dbab9d-0866-4403-a3cc-377eed061d23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[288142, 5222, 3830, 90, 584, "Input",ExpressionUUID->"725929c0-e672-42a1-adf0-1f1427f6f63b"],
Cell[291975, 5314, 494, 11, 29, "Print",ExpressionUUID->"49885db3-5a3d-4273-bf8b-eb430e2fe5f6"],
Cell[292472, 5327, 388, 7, 29, "Print",ExpressionUUID->"d49983bd-cc4f-4995-9433-0215d9cb50c8"],
Cell[292863, 5336, 31696, 474, 69, "Output",ExpressionUUID->"a453d259-dcf5-4834-9460-3e9235bd579c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324596, 5815, 1429, 35, 246, "Input",ExpressionUUID->"a20999be-298b-4767-9b2b-66ebc0f4bed8"],
Cell[326028, 5852, 498, 11, 29, "Print",ExpressionUUID->"e46886c7-ebfa-488d-a748-a43ae37bb660"],
Cell[326529, 5865, 387, 7, 29, "Print",ExpressionUUID->"801e6472-f88d-42c2-a1da-e070e20c539d"],
Cell[326919, 5874, 29054, 434, 69, "Output",ExpressionUUID->"e35d67d0-0cd3-45f1-8123-4535ebf8842d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[356010, 6313, 4582, 117, 584, "Input",ExpressionUUID->"a3f64af9-a0ab-44c4-b3b2-109b0dd55536"],
Cell[360595, 6432, 494, 11, 29, "Print",ExpressionUUID->"4545b2f0-b476-403d-974c-091e54d3d641"],
Cell[361092, 6445, 385, 7, 29, "Print",ExpressionUUID->"2ae393c2-2d64-4040-ad50-f457622bd077"],
Cell[361480, 6454, 32691, 496, 69, "Output",ExpressionUUID->"10814923-324a-4b20-9531-5ac4f430385b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[394208, 6955, 916, 23, 116, "Input",ExpressionUUID->"d936375e-497e-40de-957c-ccbe13fec420"],
Cell[395127, 6980, 500, 11, 29, "Print",ExpressionUUID->"f4456e43-3cd9-4c42-aded-85cc42789514"],
Cell[395630, 6993, 389, 7, 29, "Print",ExpressionUUID->"dd7d00b8-8e3c-4712-b846-2e224eb5c0b9"],
Cell[396022, 7002, 29751, 443, 69, "Output",ExpressionUUID->"ca2ad491-a6f3-4985-b80a-f5d56a018f31"]
}, Open  ]],
Cell[CellGroupData[{
Cell[425810, 7450, 12807, 321, 2323, "Input",ExpressionUUID->"140d7fd9-ef09-440e-be4b-3d323ff6adc5"],
Cell[438620, 7773, 498, 11, 29, "Print",ExpressionUUID->"93cffe6d-09db-4807-a653-86807712526e"],
Cell[439121, 7786, 389, 7, 29, "Print",ExpressionUUID->"ddc619b3-1cbc-4622-8f22-85f5c189af93"],
Cell[439513, 7795, 54690, 841, 69, "Output",ExpressionUUID->"1dc8f6da-3e44-473a-9e16-32a1434563d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[494240, 8641, 8003, 191, 1130, "Input",ExpressionUUID->"48b7a866-608c-4752-acf2-21754b711ce9"],
Cell[502246, 8834, 497, 11, 29, "Print",ExpressionUUID->"62213b02-5478-40b2-b5db-02dc3e291cb3"],
Cell[502746, 8847, 388, 7, 29, "Print",ExpressionUUID->"8a7c2406-e81a-4800-8b1a-de5109e0aecb"],
Cell[503137, 8856, 48661, 735, 69, "Output",ExpressionUUID->"d0e673f8-898b-49cf-8a6d-07db6894d07c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[551835, 9596, 8189, 195, 1130, "Input",ExpressionUUID->"3974f54a-f4f6-42cb-a52a-c3f69fc48e4c"],
Cell[560027, 9793, 499, 11, 29, "Print",ExpressionUUID->"40375ef2-14d2-4cff-a2d6-ea794657a8b7"],
Cell[560529, 9806, 390, 7, 29, "Print",ExpressionUUID->"d6aaade7-4ffd-42c2-bd2b-92c6501d06e4"],
Cell[560922, 9815, 52726, 794, 69, "Output",ExpressionUUID->"76328271-5976-46a8-b21e-35a2e9a27789"]
}, Open  ]],
Cell[CellGroupData[{
Cell[613685, 10614, 1644, 38, 194, "Input",ExpressionUUID->"41b1f503-97ce-4425-bb64-d6b2f0385419"],
Cell[615332, 10654, 499, 11, 29, "Print",ExpressionUUID->"6243f1ce-c38a-4a80-9122-b9e50ecec407"],
Cell[615834, 10667, 390, 7, 29, "Print",ExpressionUUID->"c5cad65a-81c7-4d7a-bf1f-31b845299420"],
Cell[616227, 10676, 44134, 654, 69, "Output",ExpressionUUID->"a396dfab-e478-477d-acdd-793b0a83cc68"]
}, Open  ]],
Cell[CellGroupData[{
Cell[660398, 11335, 6154, 150, 948, "Input",ExpressionUUID->"30c4d933-59ab-4c6f-ac91-fbe51a928bb5"],
Cell[666555, 11487, 497, 11, 29, "Print",ExpressionUUID->"92ebe965-9c55-4eb6-8829-ad53c45737f7"],
Cell[667055, 11500, 388, 7, 29, "Print",ExpressionUUID->"445a6b02-fff6-443d-a7da-232fabf519c5"],
Cell[667446, 11509, 54891, 821, 69, "Output",ExpressionUUID->"692962c2-2784-4cde-bb89-e656fa482c46"]
}, Open  ]],
Cell[CellGroupData[{
Cell[722374, 12335, 1741, 40, 272, "Input",ExpressionUUID->"5c1e30d2-8195-4e5b-9a64-378acb156acd"],
Cell[724118, 12377, 499, 11, 29, "Print",ExpressionUUID->"da15bc4c-5c64-44d6-8991-3d04966bb7d5"],
Cell[724620, 12390, 390, 7, 29, "Print",ExpressionUUID->"d0b188f7-9033-476d-9cab-57d8726bf830"],
Cell[725013, 12399, 48622, 713, 69, "Output",ExpressionUUID->"b067ff5c-ad11-450d-aa95-4a2f75426d9e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[773672, 13117, 5095, 121, 766, "Input",ExpressionUUID->"623eb9c8-8fa8-49b6-8326-e888251e5b62"],
Cell[778770, 13240, 497, 11, 29, "Print",ExpressionUUID->"946bfab7-bdfd-45de-8cb8-1cf3a62b6f70"],
Cell[779270, 13253, 390, 7, 29, "Print",ExpressionUUID->"2141fc08-1b05-4faf-b93c-4c34fe2c5d33"],
Cell[779663, 13262, 56438, 838, 69, "Output",ExpressionUUID->"8b40d4bf-2424-4bb0-bebe-588979defb84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[836138, 14105, 1328, 31, 168, "Input",ExpressionUUID->"1170fbd9-84e6-49e0-82bf-8b5391a03642"],
Cell[837469, 14138, 427, 10, 29, "Print",ExpressionUUID->"4eade6ce-bb7c-4a7b-a0a3-05e266352278"],
Cell[837899, 14150, 318, 6, 29, "Print",ExpressionUUID->"3d526723-4c03-464d-90fb-a7017e8b5f8a"],
Cell[838220, 14158, 50597, 743, 69, "Output",ExpressionUUID->"e29b2b4a-6781-42fe-9ea9-ebd0ee23447b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[888854, 14906, 195, 3, 37, "Input",ExpressionUUID->"33ebf65e-6034-462e-bfb9-1324117a5073"],
Cell[889052, 14911, 293, 4, 42, "Output",ExpressionUUID->"fb1bd7bc-4129-45cb-93ae-2a84acf43bb5"]
}, Open  ]],
Cell[889360, 14918, 1583, 36, 428, "Input",ExpressionUUID->"54483af6-5a40-4f54-bac7-293214472e69"],
Cell[890946, 14956, 2235, 52, 532, "Input",ExpressionUUID->"ddca3c8e-dcd8-4cb0-9a56-cdb0739c327c"],
Cell[CellGroupData[{
Cell[893206, 15012, 1509, 36, 246, "Input",ExpressionUUID->"3c36af82-53b5-4d00-b969-206189441059"],
Cell[894718, 15050, 513, 10, 121, "Output",ExpressionUUID->"3069c0f8-2bb0-4a08-8117-028c1c55974c"],
Cell[895234, 15062, 270, 4, 42, "Output",ExpressionUUID->"3f1b51df-36ab-403e-b00f-3c4e43b5836d"],
Cell[895507, 15068, 515, 10, 121, "Output",ExpressionUUID->"c6603595-3d83-4aa8-b398-03e436f63872"]
}, Open  ]],
Cell[CellGroupData[{
Cell[896059, 15083, 177, 3, 37, "Input",ExpressionUUID->"d8857335-0154-41ab-83b2-80a64e05c7ed"],
Cell[896239, 15088, 72700, 1406, 76, "Output",ExpressionUUID->"ff369f86-7c2c-44fa-b62e-db75071d9bfb"]
}, Open  ]],
Cell[968954, 16497, 3727, 94, 532, "Input",ExpressionUUID->"9ff6cbc9-039e-4dab-acd6-edafbf0c33ff"],
Cell[972684, 16593, 296, 4, 40, "Output",ExpressionUUID->"02fb2a1f-8aa0-4203-b1ec-b5d2751a103e"],
Cell[972983, 16599, 296, 4, 42, "Output",ExpressionUUID->"ab629cbe-da7b-478f-8035-90305fa125aa"]
}, Closed]],
Cell[CellGroupData[{
Cell[973316, 16608, 214, 4, 67, "Subsection",ExpressionUUID->"2c4a83cf-8af5-4d19-89ae-a864a258310f"],
Cell[CellGroupData[{
Cell[973555, 16616, 1142, 25, 168, "Input",ExpressionUUID->"f275bdc7-d1c5-4b14-9c2f-42b3fa65a747"],
Cell[974700, 16643, 276, 4, 69, "Output",ExpressionUUID->"11e83dc2-fe03-43fa-88c4-39b6efdde0ed"]
}, Open  ]],
Cell[974991, 16650, 1041, 27, 142, "Input",ExpressionUUID->"65d4b552-0021-4f46-bb34-71f4f20940b0"],
Cell[CellGroupData[{
Cell[976057, 16681, 559, 13, 64, "Input",ExpressionUUID->"78177850-499e-456b-b442-fad780dafdf0"],
Cell[976619, 16696, 174, 2, 42, "Output",ExpressionUUID->"ce1f4414-8a53-4820-9a5c-e00c2f66c6a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[976830, 16703, 1463, 37, 194, "Input",ExpressionUUID->"a17059c2-5416-45b1-b84e-0c2f842f7fb5"],
Cell[978296, 16742, 174, 2, 42, "Output",ExpressionUUID->"fe6a8504-fdb2-42fa-8b58-bf1a51df8065"]
}, Open  ]],
Cell[CellGroupData[{
Cell[978507, 16749, 1952, 50, 298, "Input",ExpressionUUID->"61202b86-4708-4e03-aa51-3fcb0e388f46"],
Cell[980462, 16801, 174, 2, 42, "Output",ExpressionUUID->"b889ec67-fec7-4191-bcfd-5858dba4f84a"],
Cell[980639, 16805, 174, 2, 42, "Output",ExpressionUUID->"9f12fda1-c152-4d8b-b3b0-a6c9779e7486"]
}, Open  ]],
Cell[CellGroupData[{
Cell[980850, 16812, 1104, 29, 90, "Input",ExpressionUUID->"78983d07-8f42-43d9-a50f-d26a03b2ee5c"],
Cell[981957, 16843, 174, 2, 42, "Output",ExpressionUUID->"70071a4f-93fa-410b-8f64-711e0876017b"],
Cell[982134, 16847, 174, 2, 42, "Output",ExpressionUUID->"aadd89bf-9012-4274-9937-02a32514c56f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[982345, 16854, 1475, 36, 168, "Input",ExpressionUUID->"33533fdf-b808-460b-a76c-9a554476db8f"],
Cell[983823, 16892, 174, 2, 42, "Output",ExpressionUUID->"beb494c2-8ea8-4231-8154-6e4ff5c9ee2b"],
Cell[984000, 16896, 176, 2, 42, "Output",ExpressionUUID->"61aad7a6-01d2-4856-8294-4666d8918577"],
Cell[984179, 16900, 176, 2, 42, "Output",ExpressionUUID->"7a25cb4f-a82a-483c-8f8e-0cc8d19ad4ad"],
Cell[984358, 16904, 174, 2, 42, "Output",ExpressionUUID->"90d108c0-f178-4ca5-8597-59d9f3bf23b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[984569, 16911, 7397, 187, 922, "Input",ExpressionUUID->"534ec6f3-3445-4373-873f-bcdfb93d1e96"],
Cell[991969, 17100, 173, 2, 42, "Output",ExpressionUUID->"8a5f20bf-6558-4646-81b3-4aaa19ec7bdc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[992179, 17107, 6293, 161, 792, "Input",ExpressionUUID->"0345d276-1ede-4d49-bc84-8f6ffb7b45d1"],
Cell[998475, 17270, 178, 2, 42, "Output",ExpressionUUID->"4ecb4727-db57-4485-9d67-f2af98456d40"]
}, Open  ]],
Cell[CellGroupData[{
Cell[998690, 17277, 7644, 193, 1104, "Input",ExpressionUUID->"c15b2752-0fa5-4e0d-b1ab-0c8175dd4505"],
Cell[1006337, 17472, 176, 2, 42, "Output",ExpressionUUID->"0fd34fac-4430-4a8f-854c-ae74ad9c82af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1006550, 17479, 3942, 99, 532, "Input",ExpressionUUID->"7b9a7110-6fcf-4036-b444-4addeb8c2186"],
Cell[1010495, 17580, 176, 2, 42, "Output",ExpressionUUID->"692cfbe5-a80f-42a0-a27a-ce91200b7b74"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1010708, 17587, 2652, 72, 429, "Input",ExpressionUUID->"1ab266c5-0090-45e7-9943-52d59a261191"],
Cell[1013363, 17661, 174, 2, 42, "Output",ExpressionUUID->"bbd06c3d-f7b8-421d-aad7-00345985c14e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1013574, 17668, 3494, 85, 532, "Input",ExpressionUUID->"15557545-9517-4d8e-be17-18fad593c1c8"],
Cell[1017071, 17755, 176, 2, 42, "Output",ExpressionUUID->"43e3e1cb-8585-419c-a120-5758d394406e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1017284, 17762, 1154, 31, 194, "Input",ExpressionUUID->"cd064082-f805-44ec-a045-aa1fa3aceeba"],
Cell[1018441, 17795, 176, 2, 42, "Output",ExpressionUUID->"4e82be8d-f2a6-427e-9606-5969ebfe1f46"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1018654, 17802, 4206, 114, 506, "Input",ExpressionUUID->"5ef11f51-f78f-4db1-8add-279c869573f2"],
Cell[1022863, 17918, 174, 2, 42, "Output",ExpressionUUID->"d3c27b62-caa4-4ced-9d54-d2c8cdecee1d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1023074, 17925, 628, 18, 64, "Input",ExpressionUUID->"488002c0-cddc-467b-bc55-ab11b4063392"],
Cell[1023705, 17945, 174, 2, 42, "Output",ExpressionUUID->"75dc6f57-0950-4179-90bb-b417ea1b638e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1023916, 17952, 12224, 315, 2253, "Input",ExpressionUUID->"1e137b4c-2ecb-4bf4-991e-502dc176baf0"],
Cell[1036143, 18269, 176, 2, 42, "Output",ExpressionUUID->"7241634c-e1dd-4dac-9872-c72d58cc9338"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1036356, 18276, 7572, 186, 1078, "Input",ExpressionUUID->"9228741c-bdf9-4027-a094-b007a53b75d5"],
Cell[1043931, 18464, 174, 2, 42, "Output",ExpressionUUID->"45a3d78c-cda7-4a50-92f7-dd09ec1db251"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1044142, 18471, 7752, 190, 1078, "Input",ExpressionUUID->"f26d2032-c2da-40bd-bfb1-8e2c7187a48f"],
Cell[1051897, 18663, 174, 2, 42, "Output",ExpressionUUID->"d17135f0-f40c-4adb-ab4b-159fd2b13ac4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1052108, 18670, 1025, 27, 64, "Input",ExpressionUUID->"cd8b1760-536a-488f-9246-597cbd161a39"],
Cell[1053136, 18699, 174, 2, 42, "Output",ExpressionUUID->"27f5d565-d787-42ad-a194-2bd844b648f8"],
Cell[1053313, 18703, 174, 2, 42, "Output",ExpressionUUID->"0f91733e-3251-4c7f-8904-89e29d4548f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1053524, 18710, 5736, 145, 896, "Input",ExpressionUUID->"b0ba81ee-3f3e-4642-a9d2-b012835fd8f5"],
Cell[1059263, 18857, 176, 2, 42, "Output",ExpressionUUID->"44142228-1a3c-4a7c-8aec-f3d8599a3866"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1059476, 18864, 1437, 36, 246, "Input",ExpressionUUID->"9400811d-ec42-4264-98c2-5f9d866e0a9d"],
Cell[1060916, 18902, 173, 2, 42, "Output",ExpressionUUID->"2cb80629-921b-4ecf-b2be-b172cb87ca76"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1061126, 18909, 4628, 117, 610, "Input",ExpressionUUID->"876ead52-65a8-42a3-aa99-574711040d84"],
Cell[1065757, 19028, 176, 2, 42, "Output",ExpressionUUID->"f9ccfc2d-e45d-4eeb-abdb-2d25a8f22483"]
}, Open  ]],
Cell[1065948, 19033, 1056, 26, 116, "Input",ExpressionUUID->"dd8b6b29-022c-49cd-bdf4-0d71b1e1179a"],
Cell[1067007, 19061, 201, 3, 40, "Output",ExpressionUUID->"92e01920-4709-42b1-a011-d32f108b2e22"]
}, Closed]]
}
]
*)

